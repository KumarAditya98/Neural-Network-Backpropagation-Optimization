2023-04-12 14:30:06,268 [21472] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-04-12 14:30:06,268 [21472] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-04-12 14:30:06,269 [21472] INFO     root:247: [JupyterRequire] Initializing comms.
2023-04-12 14:30:06,271 [21472] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-04-12 14:30:06,271 [21472] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-04-12 14:30:06,271 [21472] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-04-12 14:30:09,734 [21472] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-04-12 14:30:09,734 [21472] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-04-12 14:30:09,735 [21472] INFO     root:247: [JupyterRequire] Initializing comms.
2023-04-12 14:30:09,736 [21472] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-04-12 14:30:09,737 [21472] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-04-12 14:30:09,737 [21472] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-04-12 14:32:43,919 [21472] INFO     numexpr.utils:147: [JupyterRequire] Note: NumExpr detected 12 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
2023-04-12 14:32:43,920 [21472] INFO     numexpr.utils:159: [JupyterRequire] NumExpr defaulting to 8 threads.
2023-04-12 14:32:44,487 [21472] DEBUG    matplotlib:275: [JupyterRequire] matplotlib data path: C:\Users\adity\anaconda3\lib\site-packages\matplotlib\mpl-data
2023-04-12 14:32:44,491 [21472] DEBUG    matplotlib:275: [JupyterRequire] CONFIGDIR=C:\Users\adity\.matplotlib
2023-04-12 14:32:44,493 [21472] DEBUG    matplotlib:1445: [JupyterRequire] interactive is False
2023-04-12 14:32:44,494 [21472] DEBUG    matplotlib:1446: [JupyterRequire] platform is win32
2023-04-12 14:32:44,494 [21472] DEBUG    matplotlib:1447: [JupyterRequire] loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', '_io', 'marshal', 'nt', 'winreg', '_frozen_importlib_external', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', 'encodings.cp1252', '_signal', 'encodings.latin_1', '_abc', 'abc', 'io', '__main__', '_stat', 'stat', '_collections_abc', 'genericpath', 'ntpath', 'os.path', 'os', '_sitebuiltins', '_locale', '_bootlocale', '_distutils_hack', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib.machinery', '_heapq', 'heapq', 'itertools', 'keyword', '_operator', 'operator', 'reprlib', '_collections', 'collections', 'collections.abc', '_functools', 'functools', 'contextlib', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', 'copyreg', 're', 'typing.io', 'typing.re', 'typing', 'importlib.abc', 'importlib.util', 'google', 'google.cloud', 'google.logging', 'mpl_toolkits', 'sphinxcontrib', 'zope', 'site', '_weakrefset', 'weakref', 'pkgutil', 'runpy', 'ipykernel._version', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'errno', 'signal', 'threading', 'msvcrt', '_winapi', 'subprocess', 'jupyter_client._version', 'posixpath', 'fnmatch', 'glob', '_socket', 'math', 'select', 'selectors', 'socket', 'zlib', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', '_bisect', 'bisect', '_random', '_sha512', 'random', 'tempfile', 'getpass', 'platform', 'zmq.libzmq', 'zmq.backend.select', 'cython_runtime', 'zmq.backend.cython.constants', '_cython_0_29_24', 'zmq.backend.cython.error', 'zmq.error', 'zmq.backend.cython.message', 'zmq.backend.cython.context', 'copy', '_struct', 'struct', '_compat_pickle', '_pickle', 'pickle', 'zmq.backend.cython.socket', 'zmq.backend.cython.utils', 'zmq.backend.cython._poll', 'zmq.backend.cython._version', 'zmq.backend.cython._device', 'zmq.backend.cython._proxy_steerable', 'zmq.backend.cython', 'zmq.backend', 'zmq.utils', 'zmq.utils.constant_names', 'zmq.sugar.constants', 'atexit', 'zmq.sugar.attrsettr', 'zmq.sugar.poll', 'zmq.utils.jsonapi', 'zmq.utils.strtypes', 'zmq.sugar.socket', 'zmq.sugar.context', 'zmq.sugar.frame', 'zmq.sugar.tracker', 'zmq.sugar.version', 'zmq.sugar.stopwatch', 'zmq.sugar', 'zmq', '_ast', 'ast', '_opcode', 'opcode', 'dis', 'token', 'tokenize', 'linecache', 'inspect', 'traitlets.utils', 'traitlets.utils.getargspec', 'traitlets.utils.importstring', 'traitlets.utils.sentinel', 'traitlets.utils.bunch', 'traitlets.utils.descriptions', 'traitlets.traitlets', 'traitlets.utils.decorators', 'traitlets._version', 'traitlets', 'traceback', '_string', 'string', 'logging', 'pprint', 'gettext', 'argparse', 'traitlets.config.loader', 'textwrap', 'traitlets.utils.text', 'traitlets.config.configurable', 'traitlets.config.application', 'traitlets.config', 'jupyter_client.localinterfaces', 'jupyter_core.version', 'jupyter_core', 'urllib', 'urllib.parse', 'pathlib', 'jupyter_core.paths', 'jupyter_client.utils', 'jupyter_client.connect', 'traitlets.log', 'jupyter_client.launcher', 'concurrent', 'concurrent.futures._base', 'concurrent.futures', '_ssl', 'binascii', 'base64', 'ssl', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', '_contextvars', 'contextvars', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.threads', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'asyncio.windows_events', 'asyncio', 'jupyter_client.channelsabc', 'jupyter_client.channels', 'jupyter_client.clientabc', 'jupyter_client.client', 'jupyter_client.kernelspec', 'jupyter_client.managerabc', 'jupyter_client.manager', '_queue', 'queue', 'jupyter_client.blocking.channels', 'jupyter_client.blocking.client', 'jupyter_client.blocking', 'zmq._future', 'zmq.asyncio', 'jupyter_client.asynchronous.channels', 'jupyter_client.asynchronous.client', 'jupyter_client.asynchronous', '_uuid', 'uuid', 'jupyter_client.multikernelmanager', 'jupyter_client', 'ipykernel.connect', 'ipykernel', 'tornado', '_datetime', 'datetime', 'numbers', 'logging.handlers', 'html.entities', 'html', 'array', 'tornado.speedups', 'tornado.util', 'tornado.escape', 'colorama.ansi', '_ctypes', 'ctypes._endian', 'ctypes', 'ctypes.wintypes', 'colorama.win32', 'colorama.winterm', 'colorama.ansitowin32', 'colorama.initialise', 'colorama', 'tornado.log', 'tornado.concurrent', 'tornado.ioloop', '__future__', 'tornado.platform', 'tornado.gen', 'tornado.platform.asyncio', 'zmq.eventloop.ioloop', 'zmq.eventloop', 'zmq.eventloop.zmqstream', 'IPython.core', 'IPython.core.getipython', 'IPython.core.release', 'sysconfig', 'pydoc', 'executing.executing', 'executing.version', 'executing', 'asttokens.line_numbers', 'six', 'six.moves', 'asttokens.util', 'asttokens.mark_tokens', 'asttokens.asttokens', 'asttokens', '_decimal', 'decimal', 'fractions', 'pure_eval.utils', 'pure_eval.my_getattr_static', 'pure_eval.core', 'pure_eval.version', 'pure_eval', 'stack_data.utils', 'stack_data.core', 'stack_data.formatting', 'stack_data.version', 'stack_data', 'pygments', 'pygments.formatters._mapping', 'pygments.plugin', 'pygments.util', 'pygments.formatters', 'pygments.styles', 'pygments.formatter', 'pygments.console', 'pygments.token', 'pygments.style', 'pygments.formatters.terminal256', 'bdb', 'IPython.utils', 'IPython.utils.ipstruct', 'IPython.utils.coloransi', 'IPython.utils.colorable', 'IPython.utils.PyColorize', 'locale', 'IPython.utils.encoding', 'IPython.utils.py3compat', 'IPython.core.excolors', 'cmd', 'codeop', 'code', 'pdb', 'IPython.core.debugger', 'IPython.core.display_trap', 'shlex', 'IPython.utils._process_common', 'IPython.utils._process_win32', 'IPython.utils.process', 'IPython.utils.decorators', 'IPython.utils.path', 'IPython.utils.terminal', 'IPython.core.ultratb', 'IPython.utils._sysinfo', 'IPython.utils.sysinfo', 'IPython.core.crashhandler', 'IPython.utils.importstring', 'IPython.paths', 'IPython.core.profiledir', 'IPython.core.application', 'IPython.terminal', '_hashlib', '_blake2', 'hashlib', 'IPython.core.compilerop', 'IPython.core.error', 'IPython.utils.text', 'IPython.core.magic_arguments', 'getopt', 'IPython.core.display_functions', 'mimetypes', 'IPython.testing', 'IPython.testing.skipdoctest', 'IPython.core.display', 'IPython.lib', 'IPython.lib.display', 'IPython.display', 'IPython.utils.data', 'IPython.core.page', 'IPython.lib.pretty', 'IPython.utils.openpy', 'IPython.utils.dir2', 'IPython.utils.wildcard', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.lexers', 'pygments.filter', 'pygments.filters', 'pygments.regexopt', 'pygments.lexer', 'pygments.unistring', 'pygments.lexers.python', 'pygments.formatters.html', 'IPython.core.oinspect', 'IPython.core.inputtransformer2', 'IPython.core.magic', 'pickleshare', 'IPython.core.hooks', 'IPython.core.autocall', 'IPython.core.macro', 'IPython.core.splitinput', 'IPython.core.prefilter', 'IPython.core.alias', 'IPython.core.builtin_trap', 'IPython.core.displayhook', 'IPython.core.displaypub', 'backcall.backcall', 'backcall', 'IPython.core.events', 'IPython.core.extensions', 'decorator', 'IPython.utils.sentinel', 'IPython.core.formatters', '_sqlite3', 'sqlite3.dbapi2', 'sqlite3', 'IPython.core.history', 'IPython.core.logger', 'IPython.core.payload', 'IPython.core.usage', 'IPython.utils.capture', 'IPython.utils.io', 'IPython.utils.strdispatch', 'IPython.utils.syspathcontext', 'IPython.core.async_helpers', 'IPython.core.interactiveshell', 'prompt_toolkit.application.current', 'prompt_toolkit.eventloop.utils', 'prompt_toolkit.eventloop.async_generator', 'wcwidth.table_wide', 'wcwidth.table_zero', 'wcwidth.unicode_versions', 'wcwidth.wcwidth', 'wcwidth', 'prompt_toolkit.utils', 'prompt_toolkit.eventloop.inputhook', 'prompt_toolkit.eventloop', 'prompt_toolkit.application.run_in_terminal', 'prompt_toolkit.selection', 'prompt_toolkit.clipboard.base', 'prompt_toolkit.clipboard.in_memory', 'prompt_toolkit.clipboard', 'prompt_toolkit.cache', 'prompt_toolkit.enums', 'prompt_toolkit.filters.base', 'prompt_toolkit.filters.app', 'prompt_toolkit.filters.cli', 'prompt_toolkit.filters.utils', 'prompt_toolkit.filters', 'prompt_toolkit.document', 'prompt_toolkit.auto_suggest', 'prompt_toolkit.data_structures', 'prompt_toolkit.styles.base', 'prompt_toolkit.styles.named_colors', 'prompt_toolkit.styles.style', 'prompt_toolkit.styles.defaults', 'prompt_toolkit.styles.pygments', 'colorsys', 'prompt_toolkit.styles.style_transformation', 'prompt_toolkit.styles', 'prompt_toolkit.output.color_depth', 'prompt_toolkit.output.base', 'prompt_toolkit.output.defaults', 'prompt_toolkit.output', 'prompt_toolkit.output.vt100', 'prompt_toolkit.mouse_events', 'prompt_toolkit.formatted_text.base', 'prompt_toolkit.formatted_text.ansi', 'xml', 'xml.dom.domreg', 'xml.dom', 'xml.dom.minicompat', 'xml.dom.NodeFilter', 'xml.dom.xmlbuilder', 'xml.dom.minidom', 'prompt_toolkit.formatted_text.html', 'prompt_toolkit.formatted_text.pygments', 'prompt_toolkit.formatted_text.utils', 'prompt_toolkit.formatted_text', 'prompt_toolkit.completion.base', 'prompt_toolkit.completion.deduplicate', 'prompt_toolkit.completion.filesystem', 'prompt_toolkit.completion.word_completer', 'prompt_toolkit.completion.fuzzy_completer', 'prompt_toolkit.completion.nested', 'prompt_toolkit.completion', 'prompt_toolkit.history', 'prompt_toolkit.keys', 'prompt_toolkit.key_binding.key_bindings', 'prompt_toolkit.key_binding.key_processor', 'prompt_toolkit.key_binding', 'prompt_toolkit.key_binding.vi_state', 'prompt_toolkit.search', 'prompt_toolkit.validation', 'prompt_toolkit.buffer', 'prompt_toolkit.input.base', 'prompt_toolkit.input.defaults', 'prompt_toolkit.input', 'prompt_toolkit.input.typeahead', 'prompt_toolkit.key_binding.bindings', 'prompt_toolkit.key_binding.bindings.scroll', 'prompt_toolkit.key_binding.bindings.page_navigation', 'prompt_toolkit.lexers.base', 'prompt_toolkit.lexers.pygments', 'prompt_toolkit.lexers', 'prompt_toolkit.layout.utils', 'prompt_toolkit.layout.processors', 'prompt_toolkit.layout.controls', 'prompt_toolkit.layout.dimension', 'prompt_toolkit.layout.margins', 'prompt_toolkit.layout.mouse_handlers', 'prompt_toolkit.layout.screen', 'prompt_toolkit.layout.containers', 'prompt_toolkit.layout.layout', 'prompt_toolkit.layout.menus', 'prompt_toolkit.layout.scrollable_pane', 'prompt_toolkit.layout', 'prompt_toolkit.key_binding.bindings.completion', 'prompt_toolkit.key_binding.bindings.named_commands', 'prompt_toolkit.key_binding.bindings.basic', 'prompt_toolkit.key_binding.bindings.cpr', 'prompt_toolkit.key_binding.bindings.emacs', 'prompt_toolkit.key_binding.bindings.mouse', 'prompt_toolkit.input.ansi_escape_sequences', 'prompt_toolkit.input.vt100_parser', 'prompt_toolkit.key_binding.digraphs', 'prompt_toolkit.key_binding.bindings.vi', 'prompt_toolkit.key_binding.defaults', 'prompt_toolkit.key_binding.emacs_state', 'prompt_toolkit.layout.dummy', 'prompt_toolkit.renderer', 'prompt_toolkit.application.application', 'prompt_toolkit.application.dummy', 'prompt_toolkit.application', 'prompt_toolkit.key_binding.bindings.focus', 'prompt_toolkit.widgets.toolbars', 'prompt_toolkit.widgets.base', 'prompt_toolkit.widgets.dialogs', 'prompt_toolkit.widgets.menus', 'prompt_toolkit.widgets', 'prompt_toolkit.shortcuts.dialogs', 'prompt_toolkit.shortcuts.progress_bar.formatters', 'prompt_toolkit.shortcuts.progress_bar.base', 'prompt_toolkit.shortcuts.progress_bar', 'prompt_toolkit.key_binding.bindings.auto_suggest', 'prompt_toolkit.key_binding.bindings.open_in_editor', 'prompt_toolkit.shortcuts.prompt', 'prompt_toolkit.shortcuts.utils', 'prompt_toolkit.shortcuts', 'prompt_toolkit', 'prompt_toolkit.patch_stdout', 'unicodedata', 'IPython.core.latex_symbols', 'IPython.utils.generics', 'parso.utils', 'parso.tree', 'parso.python', 'parso.python.token', 'parso.python.tokenize', 'parso.pgen2.grammar_parser', 'parso.pgen2.generator', 'parso.pgen2', 'parso.parser', 'parso._compatibility', 'difflib', 'parso.python.prefix', 'parso.python.tree', 'parso.python.parser', 'parso.python.diff', 'gc', 'parso.cache', 'parso.normalizer', 'parso.python.errors', 'parso.python.pep8', 'parso.file_io', 'parso.grammar', 'parso', 'jedi.parser_utils', 'jedi.debug', 'jedi.settings', 'jedi.cache', 'jedi.file_io', 'jedi.inference.cache', 'jedi.inference.helpers', 'jedi.inference.utils', 'jedi.inference.base_value', 'jedi.inference.sys_path', 'jedi.inference.recursion', 'jedi.inference.flow_analysis', 'jedi.common', 'jedi.inference.lazy_value', 'jedi.inference.docstrings', 'jedi.plugins', 'jedi.inference.names', 'jedi.inference.filters', 'jedi.inference.compiled.getattr_static', 'jedi.inference.compiled.access', 'jedi.inference.signature', 'jedi.inference.context', 'jedi.inference.compiled.value', 'jedi.inference.compiled', 'jedi.inference.analysis', 'jedi.inference.gradual', 'jedi.inference.value.module', 'jedi.inference.value.dynamic_arrays', 'jedi.inference.value.iterable', 'jedi.inference.arguments', 'jedi.inference.parser_cache', 'jedi.inference.gradual.generics', 'jedi.inference.value.function', 'jedi.inference.value.klass', 'jedi.inference.value.instance', 'jedi.inference.value', 'jedi.inference.gradual.base', 'jedi.inference.gradual.type_var', 'jedi.inference.gradual.typing', 'jedi.inference.gradual.stub_value', 'jedi.inference.gradual.typeshed', 'jedi._compatibility', 'zipfile', 'jedi.inference.compiled.subprocess.functions', 'jedi.api.exceptions', 'jedi.inference.compiled.subprocess', 'jedi.inference.imports', 'jedi.inference.param', 'jedi.inference.gradual.annotation', 'jedi.inference.value.decorator', 'jedi.inference.syntax_tree', 'jedi.inference', 'jedi.inference.gradual.conversion', 'jedi.inference.compiled.mixed', 'pydoc_data', 'pydoc_data.topics', 'jedi.api.keywords', 'jedi.api.completion_cache', 'jedi.api.helpers', 'jedi.api.classes', 'jedi.api.interpreter', 'jedi.api.strings', 'jedi.api.file_name', 'jedi.inference.docstring_utils', 'jedi.api.completion', 'filecmp', 'jedi.api.environment', 'jedi.inference.references', 'jedi.api.project', 'jedi.api.errors', 'jedi.api.refactoring', 'jedi.api.refactoring.extract', 'jedi.inference.gradual.utils', 'jedi.api', 'jedi.plugins.stdlib', 'jedi.plugins.flask', 'jedi.plugins.pytest', 'jedi.plugins.django', 'jedi.plugins.registry', 'jedi', 'IPython.core.completer', 'IPython.terminal.ptutils', 'IPython.lib.clipboard', 'IPython.terminal.shortcuts', 'concurrent.futures.thread', 'IPython.terminal.debugger', 'IPython.terminal.magics', 'IPython.terminal.pt_inputhooks', 'IPython.terminal.prompts', 'IPython.terminal.interactiveshell', 'IPython.core.magics.auto', 'IPython.core.magics.basic', 'email', 'http', 'email.errors', 'email.quoprimime', 'email.base64mime', 'quopri', 'email.encoders', 'email.charset', 'email.header', 'calendar', 'email._parseaddr', 'email.utils', 'email._policybase', 'email.feedparser', 'email.parser', 'uu', 'email._encoded_words', 'email.iterators', 'email.message', 'http.client', 'urllib.response', 'urllib.error', 'nturl2path', 'urllib.request', 'IPython.utils.contexts', 'IPython.core.magics.code', 'IPython.core.magics.config', 'IPython.core.magics.display', '_lsprof', 'profile', 'cProfile', 'dataclasses', 'pstats', 'timeit', 'IPython.utils.module_paths', 'IPython.utils.timing', 'IPython.core.magics.execution', 'IPython.core.magics.extension', 'IPython.core.magics.history', 'IPython.core.magics.logging', 'IPython.core.magics.namespace', 'IPython.core.magics.osm', 'IPython.core.magics.packaging', 'IPython.core.pylabtools', 'IPython.core.magics.pylab', 'IPython.core.magics.script', 'IPython.core.magics', 'IPython.core.shellapp', 'IPython.extensions', 'IPython.extensions.storemagic', 'IPython.terminal.ipapp', 'IPython.terminal.embed', 'IPython.utils.frame', 'IPython', 'imp', 'hmac', 'dateutil._version', 'dateutil', 'dateutil._common', 'dateutil.relativedelta', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.win', 'dateutil.tz.tz', 'dateutil.tz', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', '_strptime', 'jupyter_client.jsonutil', 'jupyter_client.adapter', 'jupyter_client.session', 'ipykernel.iostream', 'ipykernel.control', 'ipykernel.heartbeat', 'IPython.utils.tokenutil', 'psutil._common', 'psutil._compat', 'psutil._psutil_windows', 'psutil._pswindows', 'psutil', 'tornado.locks', 'tornado.queues', 'ipykernel.jsonutil', 'ipykernel.kernelbase', 'ipykernel.comm.comm', 'ipykernel.comm.manager', 'ipykernel.comm', 'IPython.core.payloadpage', 'ipykernel.displayhook', 'ipykernel.zmqshell', 'setuptools._distutils', 'distutils.debug', 'distutils.errors', 'distutils.fancy_getopt', 'distutils.dep_util', 'distutils.log', 'distutils.spawn', 'distutils.py35compat', 'distutils.util', 'distutils.dist', 'distutils.dir_util', 'distutils.file_util', 'distutils.archive_util', 'distutils.cmd', 'configparser', 'distutils.config', 'distutils.extension', 'distutils.core', '_distutils_hack.override', 'setuptools._deprecation_warning', 'xml.parsers', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'xml.parsers.expat', 'plistlib', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources._vendor.jaraco', 'pkg_resources.extern.jaraco', 'importlib._common', 'importlib.resources', 'pkg_resources._vendor.more_itertools.recipes', 'pkg_resources._vendor.more_itertools.more', 'pkg_resources._vendor.more_itertools', 'pkg_resources.extern.more_itertools', 'pkg_resources.extern.jaraco.functools', 'pkg_resources.extern.jaraco.context', 'pkg_resources.extern.jaraco.text', 'win32api', '_win32sysloader', 'pywintypes', 'pythoncom', 'win32com.gen_py', 'win32com', 'win32com.shell', 'pkg_resources._vendor.appdirs', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources._vendor.packaging', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.version', 'pkg_resources._vendor.packaging._manylinux', 'pkg_resources._vendor.packaging._musllinux', 'pkg_resources.extern.packaging.tags', 'pkg_resources.extern.packaging.utils', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources._vendor.pyparsing', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.packaging.markers', 'pkg_resources.extern.packaging.requirements', 'pkg_resources', 'setuptools.version', 'distutils.filelist', 'setuptools.monkey', 'setuptools.extension', 'distutils.command', 'setuptools.extern', 'setuptools._vendor', 'setuptools._vendor.packaging.__about__', 'setuptools._vendor.packaging', 'setuptools.extern.packaging', 'setuptools._vendor.ordered_set', 'setuptools.extern.ordered_set', 'setuptools._vendor.more_itertools.recipes', 'setuptools._vendor.more_itertools.more', 'setuptools._vendor.more_itertools', 'setuptools.extern.more_itertools', 'setuptools._vendor.pyparsing', 'setuptools.extern.pyparsing', 'setuptools._vendor.packaging._manylinux', 'setuptools._vendor.packaging._musllinux', 'setuptools.extern.packaging.tags', 'setuptools.extern.packaging._structures', 'setuptools.extern.packaging.version', 'setuptools.extern.packaging.utils', 'setuptools.extern.packaging.specifiers', 'setuptools.extern.packaging.markers', 'setuptools.extern.packaging.requirements', 'setuptools._vendor.jaraco', 'setuptools.extern.jaraco', 'setuptools.extern.jaraco.context', 'setuptools.extern.jaraco.functools', '_csv', 'csv', 'setuptools._vendor.zipp', 'setuptools._vendor.importlib_metadata._functools', 'setuptools._vendor.importlib_metadata._text', 'setuptools._vendor.importlib_metadata._adapters', 'setuptools._vendor.importlib_metadata._compat', 'setuptools._vendor.importlib_metadata._meta', 'setuptools._vendor.importlib_metadata._collections', 'setuptools._vendor.importlib_metadata._itertools', 'setuptools._vendor.importlib_metadata', 'setuptools.extern.importlib_metadata', 'setuptools._vendor.nspektr._compat', 'setuptools._vendor.nspektr', 'setuptools.extern.nspektr', 'zipp', 'importlib_metadata._functools', 'importlib_metadata._text', 'importlib_metadata._adapters', 'importlib_metadata._compat', 'importlib_metadata._meta', 'importlib_metadata._collections', 'importlib_metadata._itertools', 'importlib_metadata', 'setuptools._importlib', 'distutils.command.bdist', 'setuptools.command', 'setuptools.windows_support', 'setuptools.config.expand', 'setuptools.config.setupcfg', 'setuptools.config', 'setuptools.errors', 'email._header_value_parser', 'email.headerregistry', 'setuptools.config._apply_pyprojecttoml', 'setuptools.config.pyprojecttoml', 'setuptools.discovery', 'setuptools.extern.jaraco.text', 'setuptools._reqs', 'setuptools._itertools', 'setuptools._entry_points', 'setuptools.dist', 'setuptools.py34compat', 'setuptools._imp', 'setuptools.depends', 'setuptools.logging', 'distutils.ccompiler', 'distutils.msvc9compiler', 'setuptools.msvc', 'unittest.util', 'unittest.result', 'unittest.case', 'unittest.suite', 'unittest.loader', 'unittest.signals', 'unittest.runner', 'unittest.main', 'unittest', 'unittest.mock', 'distutils._msvccompiler', 'setuptools', 'distutils', 'distutils.version', 'ipykernel.eventloops', 'ipykernel.compiler', 'debugpy._version', 'debugpy.common', 'debugpy.common.json', 'debugpy.common.fmt', 'debugpy.common.compat', 'debugpy', 'debugpy._vendored._util', 'debugpy._vendored', '_pydevd_bundle', 'encodings.ascii', 'stringprep', 'encodings.idna', '_pydevd_bundle.pydevd_vm_type', '_pydev_imps', 'xmlrpc', 'gzip', 'xmlrpc.client', 'socketserver', 'http.server', 'xmlrpc.server', '_pydev_imps._pydev_saved_modules', '_pydevd_bundle.pydevd_constants', '_pydev_bundle', '_pydev_runfiles', '_pydevd_frame_eval', 'pydev_ipython', 'pydevd_concurrency_analyser', 'pydevd_plugins', '_pydev_bundle.pydev_log', '_pydev_bundle._pydev_filesystem_encoding', '_pydevd_bundle.pydevd_comm_constants', 'pydevd_file_utils', '_pydev_imps._pydev_execfile', '_pydevd_bundle.pydevd_exec2', '_pydev_bundle.pydev_imports', '_pydev_bundle.pydev_is_thread_alive', '_pydev_bundle.pydev_override', 'pydevd_plugins.extensions', '_pydevd_bundle.pydevd_extension_utils', '_pydevd_bundle.pydevd_frame_utils', '_pydevd_bundle.pydevd_filtering', '_pydevd_bundle.pydevd_io', '_pydevd_bundle.pydevd_utils', '_pydev_bundle._pydev_tipper_common', '_pydev_bundle._pydev_imports_tipper', '_pydev_bundle._pydev_calltip_util', '_pydevd_bundle.pydevd_safe_repr', '_pydevd_bundle.pydevd_resolver', '_pydevd_bundle.pydevd_extension_api', '_pydevd_bundle.pydevd_xml', '_pydevd_bundle.pydevd_dont_trace', '_pydevd_frame_eval.vendored', '_pydevd_frame_eval.vendored.bytecode.flags', '_pydevd_frame_eval.vendored.bytecode.instr', '_pydevd_frame_eval.vendored.bytecode.bytecode', '_pydevd_frame_eval.vendored.bytecode.concrete', '_pydevd_frame_eval.vendored.bytecode.cfg', '_pydevd_frame_eval.vendored.bytecode', '_pydevd_bundle.pydevd_bytecode_utils', '_pydevd_bundle.pydevd_cython', '_pydevd_bundle.pydevd_cython_wrapper', '_pydevd_bundle.pydevd_additional_thread_info', '_pydevd_bundle.pydevd_thread_lifecycle', '_pydevd_bundle.pydevd_save_locals', '_pydevd_bundle.pydevd_defaults', '_pydev_bundle.pydev_monkey', 'pydevd_tracing', '_pydevd_bundle.pydevd_daemon_thread', '_pydevd_bundle.pydevd_timeout', '_pydevd_bundle.pydevd_vars', '_pydev_bundle.pydev_console_utils', '_pydevd_bundle.pydevd_import_class', '_pydevd_bundle.pydevd_breakpoints', '_pydevd_bundle.pydevd_custom_frames', '_pydevd_bundle.pydevd_dont_trace_files', '_pydevd_bundle.pydevd_net_command', '_pydev_bundle.pydev_umd', 'pydevconsole', '_pydev_bundle._pydev_completer', '_pydevd_bundle.pydevd_net_command_factory_xml', '_pydevd_bundle.pydevd_frame', '_pydevd_bundle.pydevd_additional_thread_info_regular', '_pydevd_bundle.pydevd_trace_dispatch', '_pydevd_frame_eval.pydevd_frame_eval_main', '_pydevd_bundle.pydevd_source_mapping', 'pydevd_concurrency_analyser.pydevd_thread_wrappers', 'pydevd_concurrency_analyser.pydevd_concurrency_logger', '_pydevd_bundle._debug_adapter', '_pydevd_bundle._debug_adapter.pydevd_schema_log', '_pydevd_bundle._debug_adapter.pydevd_base_schema', '_pydevd_bundle._debug_adapter.pydevd_schema', '_pydevd_bundle.pydevd_reload', '_pydev_bundle.fsnotify', '_pydevd_bundle.pydevd_console', '_pydevd_bundle.pydevd_comm', '_pydevd_bundle.pydevd_net_command_factory_json', '_pydevd_bundle.pydevd_collect_bytecode_info', '_pydevd_bundle.pydevd_api', '_pydevd_bundle.pydevd_json_debug_options', '_pydevd_bundle.pydevd_process_net_command_json', '_pydevd_bundle.pydevd_traceproperty', '_pydevd_bundle.pydevd_process_net_command', '_pydevd_bundle.pydevd_suspended_frames', '_pydevd_bundle.pydevd_trace_api', 'pydevd_plugins.django_debug', 'pydevd_plugins.jinja2_debug', '_pydevd_bundle.pydevd_plugin_utils', 'pydevd_plugins.extensions.types', 'pydevd_plugins.extensions.types.pydevd_helpers', 'pydevd_plugins.extensions.types.pydevd_plugin_numpy_types', 'pydevd_plugins.extensions.types.pydevd_plugins_django_form_str', 'pydevd', 'debugpy._vendored.force_pydevd', 'debugpy.server', 'debugpy.adapter', 'debugpy.common.timestamp', 'debugpy.common.util', 'debugpy.common.log', 'debugpy.common.sockets', 'debugpy.server.api', 'ipykernel.debugger', 'ipykernel.ipkernel', 'ipykernel.parentpoller', 'ipykernel.kernelapp', 'win32security', 'ntsecuritycon', 'faulthandler', 'IPython.core.completerlib', 'logging.config', 'pythonjsonlogger', 'pythonjsonlogger.jsonlogger', 'daiquiri.types', 'daiquiri.formatter', 'daiquiri.handlers', 'daiquiri.output', 'daiquiri', 'jupyter_require.__about__', 'csscompressor', 'jupyter_require.core', 'jupyter_require.notebook', 'jupyter_nbutils.__about__', 'jupyter_nbutils.config', 'jupyter_nbutils.utils', 'jupyter_nbutils', 'jupyter_require.magic', 'jupyter_require', 'numpy._globals', 'numpy.__config__', 'numpy._distributor_init', 'numpy._version', 'numpy.version', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core._asarray', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core._machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.stride_tricks', 'numpy.lib.twodim_base', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', '_cython_0_29_30', 'numpy.random._common', 'secrets', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'pytz', 'pandas._typing', '_cython_0_29_28', 'pandas._libs.tslibs.dtypes', 'pandas._libs.tslibs.base', 'pandas._libs.tslibs.np_datetime', 'pandas._libs.tslibs.nattype', 'pandas._libs.tslibs.timezones', 'pandas._libs.tslibs.ccalendar', 'pandas._libs.tslibs.tzconversion', 'pandas._config.config', 'pandas._config.dates', 'pandas._config.display', 'pandas._config', 'pandas._config.localization', 'pandas._libs.tslibs.strptime', 'pandas._libs.tslibs.fields', 'pandas._libs.tslibs.timedeltas', 'pandas._libs.tslibs.timestamps', 'dateutil.easter', 'pandas._libs.properties', 'pandas._libs.tslibs.offsets', 'pandas._libs.tslibs.parsing', 'pandas._libs.tslibs.conversion', 'pandas._libs.tslibs.period', 'pandas._libs.tslibs.vectorized', 'pandas._libs.tslibs', 'pandas._libs.ops_dispatch', 'pandas._libs.missing', 'pandas._libs.hashtable', 'pandas._libs.algos', 'pandas._libs.interval', 'pandas._libs', 'pandas.util._decorators', 'pandas.core', 'pandas.core.util', 'pandas._libs.tslib', 'pandas._libs.lib', 'pandas._libs.hashing', 'pandas.core.dtypes', 'pandas.util._exceptions', 'pandas.errors', 'pandas.core.dtypes.generic', 'pandas.core.dtypes.base', 'pandas.core.dtypes.inference', 'pandas.core.dtypes.dtypes', 'pandas.core.dtypes.common', 'pandas.core.util.hashing', 'pandas.util', 'pandas.util.version', 'pandas.compat.numpy', 'pandas.compat.pyarrow', 'pandas.compat', 'pandas.core.config_init', 'pandas.core.dtypes.missing', 'pandas.util._validators', 'pandas.core.dtypes.cast', 'pandas.core.dtypes.concat', 'pandas.core.array_algos', 'pandas.core.common', 'pandas.core.construction', 'pandas.core.array_algos.take', 'pandas.core.indexers.utils', 'pandas.core.indexers', 'pandas.core.algorithms', 'pandas.compat.numpy.function', 'pandas.core.roperator', 'pandas._libs.ops', 'pandas.core.computation', 'pandas.compat._optional', 'numexpr.interpreter', 'packaging.__about__', 'packaging', 'packaging._structures', 'packaging.version', 'numexpr.expressions', 'numexpr.utils', 'numexpr.necompiler', 'numexpr.version', 'numexpr', 'pandas.core.computation.check', 'pandas.core.computation.expressions', 'pandas.core.ops.missing', 'pandas.core.ops.dispatch', 'pandas.core.ops.invalid', 'pandas.core.ops.array_ops', 'pandas.core.ops.common', 'pandas.core.ops.docstrings', 'pandas.core.ops.mask_ops', 'pandas.core.ops.methods', 'pandas.core.ops', 'pandas.core.arraylike', 'pandas.core.missing', 'pandas.core.array_algos.quantile', 'pandas.core.sorting', 'pandas.core.arrays.base', 'bottleneck.benchmark', 'bottleneck.benchmark.autotimeit', 'bottleneck.benchmark.bench', 'bottleneck.benchmark.bench_detailed', 'bottleneck.tests', 'bottleneck.tests.util', 'bottleneck.slow.reduce', 'bottleneck.slow.nonreduce', 'bottleneck.slow.nonreduce_axis', 'bottleneck.slow.move', 'bottleneck.slow', 'bottleneck._pytesttester', 'bottleneck.move', 'bottleneck.nonreduce', 'bottleneck.nonreduce_axis', 'bottleneck.reduce', 'bottleneck._version', 'bottleneck', 'pandas.core.nanops', 'pandas.core.array_algos.masked_reductions', 'pandas.core.arrays.masked', 'pandas.core.arrays.boolean', 'pandas._libs.arrays', 'pandas.core.accessor', 'pandas.core.array_algos.transforms', 'pandas.core.arrays._mixins', 'pandas.core.base', 'pandas.core.strings.accessor', 'pandas.core.strings.base', 'pandas.core.strings', 'pandas.core.strings.object_array', 'pandas.io', 'pandas.io.formats', 'pandas.io.formats.console', 'pandas.core.arrays.categorical', 'pandas.tseries', 'pandas.tseries.frequencies', 'pandas.core.arrays.datetimelike', 'pandas.core.arrays._ranges', 'pandas.core.arrays.numeric', 'pandas.core.tools', 'pandas.core.tools.numeric', 'pandas.core.arrays.integer', 'pandas.tseries.offsets', 'pandas.core.arrays.datetimes', 'pandas.core.arrays.floating', 'pandas.core.indexes', 'pandas._libs.index', 'pandas._libs.join', 'pandas.core.array_algos.putmask', 'pandas._libs.sparse', 'pandas.core.arrays.sparse.dtype', 'pandas.io.formats.printing', 'pandas.core.arrays.sparse.array', 'pandas.core.arrays.sparse.accessor', 'pandas.core.arrays.sparse', 'pandas.core.indexes.frozen', 'pandas.core.indexes.base', 'pandas.core.arrays.interval', 'pandas.core.arrays.numpy_', 'pandas.core.arrays.period', 'pandas.core.arrays.string_', 'pandas.core.arrays.string_arrow', 'pandas.core.arrays.timedeltas', 'pandas.core.arrays', 'pandas.core.flags', 'pandas._libs.reduction', 'pandas.core.apply', 'pandas._libs.indexing', 'pandas.core.indexes.extension', 'pandas.core.indexes.category', 'pandas.core.indexes.numeric', 'pandas.core.indexes.range', 'pandas.core.tools.timedeltas', 'pandas.core.indexes.datetimelike', 'pandas.core.tools.times', 'pandas.core.indexes.datetimes', 'pandas.core.indexes.multi', 'pandas.core.indexes.timedeltas', 'pandas.core.indexes.interval', 'pandas.core.indexes.period', 'pandas.core.indexes.api', 'pandas.core.indexing', 'pandas.core.array_algos.replace', 'pandas.core.reshape', 'pandas._libs.internals', 'pandas._libs.writers', 'pandas.core.internals.blocks', 'pandas.core.internals.api', 'pandas.core.internals.base', 'pandas.core.internals.array_manager', 'pandas.core.internals.ops', 'pandas.core.internals.managers', 'pandas.core.internals.concat', 'pandas.core.internals', 'pandas.core.reshape.concat', 'mmap', 'pandas.core.shared_docs', 'pandas.io.common', 'pandas.io.formats.format', 'pandas.core.describe', 'pandas.core.internals.construction', 'pandas.core.sample', 'pandas._libs.window', 'pandas._libs.window.aggregations', 'pandas._libs.window.indexers', 'pandas.core.indexers.objects', 'pandas.core.util.numba_', 'pandas.core.window.common', 'pandas.core.window.doc', 'pandas.core.window.numba_', 'pandas.core.window.online', 'pandas.core._numba', 'pandas.core._numba.executor', 'pandas.core.window.rolling', 'pandas.core.window.ewm', 'pandas.core.window.expanding', 'pandas.core.window', 'pandas.core.generic', 'pandas.core.reshape.util', 'pandas.core.reshape.melt', 'pandas._libs.reshape', 'pandas.core.indexes.accessors', 'pandas.arrays', 'pandas.core.tools.datetimes', 'pandas.io.formats.info', 'pandas.plotting._core', 'pandas.plotting._misc', 'pandas.plotting', 'pandas.core.series', 'pandas.core.frame', 'pandas.core.groupby.base', 'pandas._libs.groupby', 'pandas.core.groupby.numba_', 'pandas.core.groupby.categorical', 'pandas.core.groupby.grouper', 'pandas.core.groupby.ops', 'pandas.core.groupby.indexing', 'pandas.core.groupby.groupby', 'pandas.core.groupby.generic', 'pandas.core.groupby', 'pandas.core.api', 'pandas.tseries.api', 'pandas.core.computation.common', 'pandas.core.computation.align', 'pandas.compat.chainmap', 'pandas.core.computation.scope', 'pandas.core.computation.ops', 'pandas.core.computation.parsing', 'pandas.core.computation.expr', 'pandas.core.computation.engines', 'pandas.core.computation.eval', 'pandas.core.computation.api', 'pandas.core.reshape.merge', 'pandas.core.reshape.pivot', 'pandas.core.reshape.reshape', 'pandas.core.reshape.tile', 'pandas.core.reshape.api', 'pandas.api.extensions', 'pandas.api.indexers', 'pandas.core.dtypes.api', 'pandas.api.types', 'pandas.api', 'pandas._testing._random', 'pandas._testing.contexts', 'pandas._testing._io', 'pandas._testing._warnings', 'cmath', 'pandas._libs.testing', 'pandas._testing.asserters', 'pandas._testing.compat', 'pandas._testing', 'pandas.testing', 'pandas.util._print_versions', 'pandas.io.clipboards', 'pandas._libs.parsers', 'pandas.io.excel._util', 'pandas.io.date_converters', 'pandas.io.parsers.base_parser', 'pandas.io.parsers.arrow_parser_wrapper', 'pandas.io.parsers.c_parser_wrapper', 'pandas.io.parsers.python_parser', 'pandas.io.parsers.readers', 'pandas.io.parsers', 'pandas.io.excel._odfreader', 'pandas.io.excel._openpyxl', 'pandas.io.excel._pyxlsb', 'pandas.io.excel._xlrd', 'pandas.io.excel._base', 'pandas._libs.json', 'pandas.io.formats._color_data', 'pandas.io.formats.css', 'pandas.io.formats.excel', 'pandas.io.excel._odswriter', 'pandas.io.excel._xlsxwriter', 'pandas.io.excel._xlwt', 'pandas.io.excel', 'pandas.io.feather_format', 'pandas.io.gbq', 'pandas.io.html', 'pandas.io.json._normalize', 'pandas.io.json._table_schema', 'pandas.io.json._json', 'pandas.io.json', 'pandas.io.orc', 'pandas.io.parquet', 'pandas.compat.pickle_compat', 'pandas.io.pickle', 'pandas.core.computation.pytables', 'pandas.io.pytables', 'pandas.io.sas.sasreader', 'pandas.io.sas', 'pandas.io.spss', 'pandas.io.sql', 'pandas.io.stata', 'pandas.io.xml', 'pandas.io.api', 'pandas.util._tester', 'pandas._version', 'pandas', 'summarytools', 'summarytools.htmlwidgets', 'summarytools.summarytools', 'matplotlib', 'matplotlib._api.deprecation', 'matplotlib._api', 'matplotlib._version', 'matplotlib._c_internal_utils', 'matplotlib.cbook', 'matplotlib.docstring', 'PIL._version', 'PIL', 'defusedxml.common', 'defusedxml', 'xml.etree', 'xml.etree.ElementPath', '_elementtree', 'xml.etree.ElementTree', 'defusedxml.ElementTree', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._util', 'PIL._imaging', 'cffi.lock', 'cffi.error', 'cffi.model', 'cffi.api', 'cffi', 'PIL.Image', 'PIL.ImageChops', 'PIL.ImageFile', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'PIL.ImagePalette', 'PIL.ImageSequence', 'PIL.PngImagePlugin', 'matplotlib._path', 'matplotlib.bezier', 'matplotlib.path', 'matplotlib.transforms', 'matplotlib.ticker', 'matplotlib.scale', 'matplotlib._color_data', 'matplotlib.colors', 'pyparsing.util', 'pyparsing.unicode', 'pyparsing.exceptions', 'pyparsing.actions', 'pyparsing.results', 'pyparsing.core', 'pyparsing.helpers', 'pyparsing.testing', 'pyparsing.common', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib._enums', 'cycler', 'matplotlib.rcsetup', 'matplotlib.ft2font', 'kiwisolver']
2023-04-12 14:32:44,589 [21472] DEBUG    matplotlib:275: [JupyterRequire] CACHEDIR=C:\Users\adity\.matplotlib
2023-04-12 14:32:44,598 [21472] DEBUG    matplotlib.font_manager:1439: [JupyterRequire] Using fontManager instance from C:\Users\adity\.matplotlib\fontlist-v330.json
2023-04-12 14:32:44,987 [21472] DEBUG    matplotlib.pyplot:280: [JupyterRequire] Loaded backend module://matplotlib_inline.backend_inline version unknown.
2023-04-12 14:32:44,991 [21472] DEBUG    matplotlib.pyplot:280: [JupyterRequire] Loaded backend module://matplotlib_inline.backend_inline version unknown.
2023-04-12 14:33:19,403 [21472] DEBUG    matplotlib.font_manager:1329: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2023-04-12 14:33:19,403 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-12 14:33:19,403 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-12 14:33:19,403 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,404 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2023-04-12 14:33:19,404 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2023-04-12 14:33:19,404 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 14:33:19,404 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 14:33:19,404 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 14:33:19,404 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,404 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-12 14:33:19,406 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,406 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 14:33:19,406 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,406 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,406 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,407 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 14:33:19,407 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 14:33:19,407 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,407 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,407 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2023-04-12 14:33:19,408 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,408 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,408 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-12 14:33:19,408 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 14:33:19,408 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 14:33:19,409 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,409 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,409 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 14:33:19,409 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 14:33:19,409 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,409 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,409 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,411 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 14:33:19,411 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,411 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 14:33:19,411 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,411 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,411 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2023-04-12 14:33:19,411 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLSNECB.TTF', name='Gill Sans MT Ext Condensed Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-12 14:33:19,412 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanz.ttf', name='Constantia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-12 14:33:19,412 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LEELAWAD.TTF', name='Leelawadee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,413 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\monbaiti.ttf', name='Mongolian Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,413 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-MEDIUM.TTF', name='Dubai', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-04-12 14:33:19,413 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-04-12 14:33:19,413 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FTLTLT.TTF', name='Footlight MT Light', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-12 14:33:19,413 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibril.ttf', name='Calibri', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-12 14:33:19,414 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSI.TTF', name='Goudy Old Style', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 14:33:19,414 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisbi.ttf', name='Segoe UI', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-12 14:33:19,414 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCCB___.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-04-12 14:33:19,414 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXD.TTF', name='Lucida Fax', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-12 14:33:19,414 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2023-04-12 14:33:19,415 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BSSYM7.TTF', name='Bookshelf Symbol 7', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,415 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAMDCN.TTF', name='Franklin Gothic Medium Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-12 14:33:19,415 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framdit.ttf', name='Franklin Gothic Medium', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 14:33:19,415 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSB.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 14:33:19,415 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-LIGHT.TTF', name='Dubai', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-12 14:33:19,416 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCC____.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-12 14:33:19,416 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_B.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 14:33:19,416 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COOPBL.TTF', name='Cooper Black', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,416 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNI.TTF', name='Arial', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 7.613636363636363
2023-04-12 14:33:19,416 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\INFROMAN.TTF', name='Informal Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,417 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSB.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-12 14:33:19,417 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BERNHC.TTF', name='Bernard MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-12 14:33:19,417 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEB.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-12 14:33:19,417 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCEDSCR.TTF', name='Edwardian Script ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,418 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consola.ttf', name='Consolas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,418 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,418 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\holomdl2.ttf', name='HoloLens MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,418 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COLONNA.TTF', name='Colonna MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,418 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYR.TTF', name='Agency FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,419 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRITANIC.TTF', name='Britannic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,419 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiai.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 14:33:19,419 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 14:33:19,419 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaS.ttf', name='Nirmala UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2023-04-12 14:33:19,419 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CHILLER.TTF', name='Chiller', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,420 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,420 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAB.TTF', name='Book Antiqua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 14:33:19,420 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothM.ttc', name='Yu Gothic', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-04-12 14:33:19,420 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG2.TTF', name='Wingdings 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,420 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Nirmala.ttf', name='Nirmala UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,420 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelUIsl.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2023-04-12 14:33:19,420 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriai.ttf', name='Cambria', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 14:33:19,421 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariali.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
2023-04-12 14:33:19,421 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARA.TTF', name='Garamond', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,421 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSPCL.TTF', name='MS Reference Specialty', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,421 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-REGULAR.TTF', name='Dubai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,421 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LHANDW.TTF', name='Lucida Handwriting', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 14:33:19,422 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 14:33:19,422 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comici.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 14:33:19,422 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTAUR.TTF', name='Centaur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,422 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEBO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-12 14:33:19,422 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ONYX.TTF', name='Onyx', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,424 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrima.ttf', name='Ebrima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,424 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFI.TTF', name='Californian FB', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 14:33:19,424 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERBI___.TTF', name='Perpetua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-12 14:33:19,424 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbell.ttf', name='Corbel', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-12 14:33:19,424 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILI____.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 14:33:19,424 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segmdl2.ttf', name='Segoe MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,425 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-BOLD.TTF', name='Dubai', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 14:33:19,425 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FELIXTI.TTF', name='Felix Titling', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,425 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbd.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
2023-04-12 14:33:19,425 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taileb.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 14:33:19,425 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeprb.ttf', name='Segoe Print', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 14:33:19,425 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoescb.ttf', name='Segoe Script', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 14:33:19,426 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITE.TTF', name='Lucida Bright', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,426 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhbd.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 14:33:19,426 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\times.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,426 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisb.ttf', name='Segoe UI', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-12 14:33:19,426 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSDB.TTF', name='Berlin Sans FB Demi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 14:33:19,427 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbi.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
2023-04-12 14:33:19,427 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesi.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 14:33:19,427 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADM.TTF', name='Franklin Gothic Demi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,427 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERTI.TTF', name='High Tower Text', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 14:33:19,428 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF-Italic.ttf', name='Sitka', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 14:33:19,428 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsun.ttc', name='SimSun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,428 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTI.TTF', name='Calisto MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 14:33:19,428 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCMI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 14:33:19,428 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaral.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,429 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\lucon.ttf', name='Lucida Console', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,429 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_I.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 14:33:19,429 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mvboli.ttf', name='MV Boli', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,429 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiab.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 14:33:19,429 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\l_10646.ttf', name='Lucida Sans Unicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,430 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTIBD.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 14:33:19,430 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNT.TTF', name='Elephant', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,430 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASMD.TTF', name='Eras Medium ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,430 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MSUIGHUR.TTF', name='Microsoft Uighur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,430 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYB.TTF', name='Agency FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 14:33:19,430 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MSUIGHUB.TTF', name='Microsoft Uighur', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 14:33:19,430 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicbd.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 14:33:19,430 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMIT.TTF', name='Franklin Gothic Demi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 14:33:19,432 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKEB.TTF', name='Rockwell Extra Bold', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
2023-04-12 14:33:19,432 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PER_____.TTF', name='Perpetua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,432 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VINERITC.TTF', name='Viner Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,432 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\marlett.ttf', name='Marlett', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-04-12 14:33:19,432 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrili.ttf', name='Calibri', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-04-12 14:33:19,433 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICBI.TTF', name='Century Gothic', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-12 14:33:19,433 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ALGER.TTF', name='Algerian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,433 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOS.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,433 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelz.ttf', name='Corbel', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-12 14:33:19,433 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILB____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 14:33:19,433 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUABI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-12 14:33:19,433 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\sylfaen.ttf', name='Sylfaen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,434 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriaz.ttf', name='Cambria', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-12 14:33:19,434 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanaz.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
2023-04-12 14:33:19,434 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constan.ttf', name='Constantia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,434 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTILI.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-12 14:33:19,434 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCM_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,434 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhl.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2023-04-12 14:33:19,434 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOS.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-12 14:33:19,434 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HATTEN.TTF', name='Haettenschweiler', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,436 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JOKERMAN.TTF', name='Jokerman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,436 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ENGR.TTF', name='Engravers MT', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-04-12 14:33:19,436 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARAIT.TTF', name='Garamond', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 14:33:19,436 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,436 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelli.ttf', name='Corbel', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-04-12 14:33:19,436 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constani.ttf', name='Constantia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 14:33:19,436 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIST.TTF', name='Calisto MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,437 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PARCHM.TTF', name='Parchment', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,437 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\himalaya.ttf', name='Microsoft Himalaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,437 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRADHITC.TTF', name='Bradley Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,437 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\wingding.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,437 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtextb.ttf', name='Myanmar Text', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 14:33:19,437 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG3.TTF', name='Wingdings 3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,437 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGSOL.TTF', name='Niagara Solid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,437 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarali.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 14:33:19,438 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKI.TTF', name='Rockwell', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 14:33:19,438 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolab.ttf', name='Consolas', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 14:33:19,438 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXDI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-12 14:33:19,438 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BAUHS93.TTF', name='Bauhaus 93', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,438 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisli.ttf', name='Segoe UI', style='italic', variant='normal', weight=350, stretch='normal', size='scalable')) = 11.0975
2023-04-12 14:33:19,438 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELL.TTF', name='Bell MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,438 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2023-04-12 14:33:19,439 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyi.ttf', name='Microsoft Yi Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,439 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSR.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,439 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHVIT.TTF', name='Franklin Gothic Heavy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 14:33:19,439 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OLDENGL.TTF', name='Old English Text MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,439 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbel.ttf', name='Corbel', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,439 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLB.TTF', name='Bell MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 14:33:19,441 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelaUIb.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 14:33:19,441 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHV.TTF', name='Franklin Gothic Heavy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,441 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OUTLOOK.TTF', name='MS Outlook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,441 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PRISTINA.TTF', name='Pristina', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,441 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERI____.TTF', name='Perpetua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 14:33:19,441 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtext.ttf', name='Myanmar Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,441 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSAN.TTF', name='MS Reference Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,442 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERB____.TTF', name='Perpetua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 14:33:19,442 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTEXTRA.TTF', name='MT Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,442 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKB.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 14:33:19,442 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARABD.TTF', name='Garamond', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 14:33:19,442 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cour.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,442 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mingliub.ttc', name='MingLiU-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,442 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICB.TTF', name='Century Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 14:33:19,443 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspa.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,443 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VIVALDII.TTF', name='Vivaldi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 14:33:19,443 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAGE.TTF', name='Rage Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 14:33:19,443 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-12 14:33:19,443 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2023-04-12 14:33:19,443 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MATURASC.TTF', name='Matura MT Script Capitals', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,443 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comic.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,444 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbi.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-12 14:33:19,444 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothR.ttc', name='Yu Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,444 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palai.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 14:33:19,444 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MOD20.TTF', name='Modern No. 20', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,444 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMCN.TTF', name='Franklin Gothic Demi Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-12 14:33:19,444 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrimabd.ttf', name='Ebrima', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 14:33:19,444 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\javatext.ttf', name='Javanese Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,444 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CASTELAR.TTF', name='Castellar', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,444 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSDI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-12 14:33:19,446 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelawUI.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,446 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAX.TTF', name='Lucida Fax', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,446 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunbd.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 14:33:19,446 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF.ttf', name='Sitka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,446 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTL.TTF', name='Copperplate Gothic Light', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,446 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
2023-04-12 14:33:19,447 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeui.ttf', name='Segoe UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,447 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Gabriola.ttf', name='Gabriola', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,447 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTBI.TTF', name='Calisto MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-12 14:33:19,447 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicz.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-12 14:33:19,447 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALN.TTF', name='Arial', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 6.613636363636363
2023-04-12 14:33:19,447 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKBI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-12 14:33:19,447 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FREESCPT.TTF', name='Freestyle Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,447 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTURY.TTF', name='Century', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,448 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaB.ttf', name='Nirmala UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 14:33:19,448 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSB.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 14:33:19,448 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSD.TTF', name='Lucida Sans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-12 14:33:19,448 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuisl.ttf', name='Segoe UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2023-04-12 14:33:19,448 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 14:33:19,448 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-12 14:33:19,449 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguihis.ttf', name='Segoe UI Historic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,449 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCB____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-04-12 14:33:19,449 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambria.ttc', name='Cambria', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,450 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKBI.TTF', name='Rockwell', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-12 14:33:19,450 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGENG.TTF', name='Niagara Engraved', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,450 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisym.ttf', name='Segoe UI Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,450 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inkfree.ttf', name='Ink Free', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,450 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASBD.TTF', name='Eras Bold ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,450 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILC____.TTF', name='Gill Sans MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-12 14:33:19,450 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candara.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,451 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\bahnschrift.ttf', name='Bahnschrift', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,451 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BROADW.TTF', name='Broadway', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,451 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolaz.ttf', name='Consolas', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-12 14:33:19,451 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CBI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2023-04-12 14:33:19,451 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuii.ttf', name='Segoe UI', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 14:33:19,452 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibli.ttf', name='Segoe UI', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2023-04-12 14:33:19,452 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEDI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-12 14:33:19,452 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucit.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 14:33:19,452 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BKANT.TTF', name='Book Antiqua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,452 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothL.ttc', name='Yu Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-12 14:33:19,452 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrii.ttf', name='Calibri', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 14:33:19,452 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CURLZ___.TTF', name='Curlz MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,453 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelb.ttf', name='Corbel', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 14:33:19,453 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARLRDBD.TTF', name='Arial Rounded MT Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,453 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothB.ttc', name='Yu Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 14:33:19,453 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASDEMI.TTF', name='Eras Demi ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,453 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
2023-04-12 14:33:19,453 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANS.TTF', name='Lucida Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,453 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariblk.ttf', name='Arial', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 6.888636363636364
2023-04-12 14:33:19,454 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCKRIST.TTF', name='Kristen ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,454 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\KUNSTLER.TTF', name='Kunstler Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,454 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanb.ttf', name='Constantia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 14:33:19,454 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PAPYRUS.TTF', name='Papyrus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,454 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JUICE___.TTF', name='Juice ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,454 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguili.ttf', name='Segoe UI', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-04-12 14:33:19,454 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 14:33:19,456 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarab.ttf', name='Candara', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 14:33:19,456 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\IMPRISHA.TTF', name='Imprint MT Shadow', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,456 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailu.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,456 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbi.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-12 14:33:19,456 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuil.ttf', name='Segoe UI', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-12 14:33:19,456 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanai.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
2023-04-12 14:33:19,456 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoepr.ttf', name='Segoe Print', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,456 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaraz.ttf', name='Candara', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-12 14:33:19,457 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNB.TTF', name='Arial', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 6.8986363636363635
2023-04-12 14:33:19,457 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspab.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 14:33:19,457 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,457 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCM____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-12 14:33:19,457 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARNGTON.TTF', name='Harrington', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,457 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbd.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 14:33:19,457 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 14:33:19,458 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILSANUB.TTF', name='Gill Sans Ultra Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,458 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibri.ttf', name='Calibri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,458 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiaz.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-12 14:33:19,458 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegoeIcons.ttf', name='Segoe Fluent Icons', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,458 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAGNETOB.TTF', name='Magneto', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 14:33:19,458 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICI.TTF', name='Century Gothic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 14:33:19,458 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCBLKAD.TTF', name='Blackadder ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,459 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahomabd.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 14:33:19,459 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugi.ttf', name='Gadugi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,459 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LCALLIG.TTF', name='Lucida Calligraphy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 14:33:19,459 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyh.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,459 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsunb.ttf', name='SimSun-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,459 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgun.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,459 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIL_____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,460 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VLADIMIR.TTF', name='Vladimir Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,460 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,460 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msgothic.ttc', name='MS Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,460 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRSCRIPT.TTF', name='French Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,460 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILBI___.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-12 14:33:19,460 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASLGHT.TTF', name='Eras Light ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,460 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTB.TTF', name='Calisto MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 14:33:19,460 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunsl.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-12 14:33:19,462 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRUSHSCI.TTF', name='Brush Script MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 14:33:19,462 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SNAP____.TTF', name='Snap ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,462 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuib.ttf', name='Segoe UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 14:33:19,462 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCBI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-12 14:33:19,462 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailub.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 14:33:19,462 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framd.ttf', name='Franklin Gothic Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,463 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolai.ttf', name='Consolas', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 14:33:19,463 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCEB.TTF', name='Tw Cen MT Condensed Extra Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-12 14:33:19,463 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\POORICH.TTF', name='Poor Richard', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,463 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDYSTO.TTF', name='Goudy Stout', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,463 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKB.TTF', name='Rockwell', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 14:33:19,463 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PALSCRI.TTF', name='Palace Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,463 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarai.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 14:33:19,463 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\micross.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,464 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LEELAWDB.TTF', name='Leelawadee', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 14:33:19,464 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABK.TTF', name='Franklin Gothic Book', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,464 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjh.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,464 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palabi.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-12 14:33:19,464 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAVIE.TTF', name='Ravie', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,465 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCK.TTF', name='Rockwell', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,465 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\pala.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,465 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibriz.ttf', name='Calibri', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-12 14:33:19,465 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugib.ttf', name='Gadugi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 14:33:19,465 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_PSTC.TTF', name='Bodoni MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-12 14:33:19,465 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENSCBK.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,465 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanab.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
2023-04-12 14:33:19,466 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LATINWD.TTF', name='Wide Latin', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
2023-04-12 14:33:19,466 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbeli.ttf', name='Corbel', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 14:33:19,466 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIGI.TTF', name='Gigi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,466 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITED.TTF', name='Lucida Bright', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-12 14:33:19,466 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbi.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-12 14:33:19,466 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhl.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2023-04-12 14:33:19,466 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguiemj.ttf', name='Segoe UI Emoji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,466 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OCRAEXT.TTF', name='OCR A Extended', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
2023-04-12 14:33:19,468 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebuc.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,468 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SHOWG.TTF', name='Showcard Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,468 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BASKVILL.TTF', name='Baskerville Old Face', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,468 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriab.ttf', name='Cambria', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 14:33:19,468 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAIAN.TTF', name='Maiandra GD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,468 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCRIPTBL.TTF', name='Script MT Bold', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 14:33:19,469 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLECB.TTF', name='Gloucester MT Extra Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-12 14:33:19,469 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNTI.TTF', name='Elephant', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 14:33:19,469 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFR.TTF', name='Californian FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,469 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHIC.TTF', name='Century Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,469 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PLAYBILL.TTF', name='Playbill', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,469 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABKIT.TTF', name='Franklin Gothic Book', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 14:33:19,469 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARLOWSI.TTF', name='Harlow Solid Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 14:33:19,469 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPE.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,469 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taile.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,469 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibl.ttf', name='Segoe UI', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2023-04-12 14:33:19,471 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNBI.TTF', name='Arial', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 7.8986363636363635
2023-04-12 14:33:19,471 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuiz.ttf', name='Segoe UI', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-12 14:33:19,471 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSBI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-12 14:33:19,471 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palab.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 14:33:19,471 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLI.TTF', name='Bell MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 14:33:19,471 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILLUBCD.TTF', name='Gill Sans Ultra Bold Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-12 14:33:19,471 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbd.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 14:33:19,471 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhbd.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 14:33:19,472 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoesc.ttf', name='Segoe Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,472 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\couri.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 14:33:19,472 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegUIVar.ttf', name='Segoe UI Variable', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,472 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_R.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,472 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTB.TTF', name='Copperplate Gothic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,472 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 14:33:19,473 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCB_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 14:33:19,473 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TEMPSITC.TTF', name='Tempus Sans ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,473 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MISTRAL.TTF', name='Mistral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,473 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FORTE.TTF', name='Forte', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,473 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CB.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-04-12 14:33:19,473 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbd.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 14:33:19,474 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STENCIL.TTF', name='Stencil', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,474 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrib.ttf', name='Calibri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 14:33:19,474 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERT.TTF', name='High Tower Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,474 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTCORSVA.TTF', name='Monotype Corsiva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:33:19,474 [21472] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFB.TTF', name='Californian FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 14:33:19,474 [21472] DEBUG    matplotlib.font_manager:1367: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
2023-04-12 14:41:51,185 [21472] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-04-12 14:41:51,185 [21472] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-04-12 14:41:51,186 [21472] INFO     root:247: [JupyterRequire] Initializing comms.
2023-04-12 14:41:51,189 [21472] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-04-12 14:41:51,189 [21472] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-04-12 14:41:51,189 [21472] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-04-12 14:43:07,836 [11324] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-04-12 14:43:07,836 [11324] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-04-12 14:43:07,837 [11324] INFO     root:247: [JupyterRequire] Initializing comms.
2023-04-12 14:43:07,838 [11324] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-04-12 14:43:07,839 [11324] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-04-12 14:43:07,839 [11324] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-04-12 14:45:13,262 [11324] DEBUG    matplotlib.colorbar:847: [JupyterRequire] locator: <matplotlib.ticker.AutoLocator object at 0x00000274231231F0>
2023-04-12 14:45:13,282 [11324] DEBUG    matplotlib.font_manager:1329: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2023-04-12 14:45:13,283 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-12 14:45:13,284 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-12 14:45:13,284 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,284 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2023-04-12 14:45:13,286 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2023-04-12 14:45:13,286 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 14:45:13,286 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 14:45:13,286 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 14:45:13,286 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,286 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-12 14:45:13,287 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,287 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 14:45:13,288 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,288 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,288 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,288 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 14:45:13,288 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 14:45:13,289 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,289 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,289 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2023-04-12 14:45:13,289 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,290 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,290 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-12 14:45:13,290 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 14:45:13,290 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 14:45:13,290 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,290 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,291 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 14:45:13,291 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 14:45:13,291 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,291 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,291 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,292 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 14:45:13,292 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,292 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 14:45:13,292 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,292 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,293 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2023-04-12 14:45:13,293 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLSNECB.TTF', name='Gill Sans MT Ext Condensed Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-12 14:45:13,293 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanz.ttf', name='Constantia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-12 14:45:13,293 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LEELAWAD.TTF', name='Leelawadee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,293 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\monbaiti.ttf', name='Mongolian Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,293 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-MEDIUM.TTF', name='Dubai', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-04-12 14:45:13,293 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-04-12 14:45:13,294 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FTLTLT.TTF', name='Footlight MT Light', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-12 14:45:13,294 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibril.ttf', name='Calibri', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-12 14:45:13,294 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSI.TTF', name='Goudy Old Style', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 14:45:13,294 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisbi.ttf', name='Segoe UI', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-12 14:45:13,294 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCCB___.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-04-12 14:45:13,295 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXD.TTF', name='Lucida Fax', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-12 14:45:13,295 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2023-04-12 14:45:13,295 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BSSYM7.TTF', name='Bookshelf Symbol 7', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,295 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAMDCN.TTF', name='Franklin Gothic Medium Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-12 14:45:13,296 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framdit.ttf', name='Franklin Gothic Medium', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 14:45:13,296 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSB.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 14:45:13,296 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-LIGHT.TTF', name='Dubai', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-12 14:45:13,296 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCC____.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-12 14:45:13,296 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_B.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 14:45:13,296 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COOPBL.TTF', name='Cooper Black', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,296 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNI.TTF', name='Arial', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 7.613636363636363
2023-04-12 14:45:13,296 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\INFROMAN.TTF', name='Informal Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,297 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSB.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-12 14:45:13,297 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BERNHC.TTF', name='Bernard MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-12 14:45:13,297 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEB.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-12 14:45:13,297 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCEDSCR.TTF', name='Edwardian Script ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,297 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consola.ttf', name='Consolas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,298 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,298 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\holomdl2.ttf', name='HoloLens MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,298 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COLONNA.TTF', name='Colonna MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,298 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYR.TTF', name='Agency FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,299 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRITANIC.TTF', name='Britannic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,299 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiai.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 14:45:13,299 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 14:45:13,299 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaS.ttf', name='Nirmala UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2023-04-12 14:45:13,299 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CHILLER.TTF', name='Chiller', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,300 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,300 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAB.TTF', name='Book Antiqua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 14:45:13,300 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothM.ttc', name='Yu Gothic', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-04-12 14:45:13,300 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG2.TTF', name='Wingdings 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,301 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Nirmala.ttf', name='Nirmala UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,301 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelUIsl.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2023-04-12 14:45:13,301 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriai.ttf', name='Cambria', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 14:45:13,301 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariali.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
2023-04-12 14:45:13,302 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARA.TTF', name='Garamond', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,302 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSPCL.TTF', name='MS Reference Specialty', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,302 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-REGULAR.TTF', name='Dubai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,302 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LHANDW.TTF', name='Lucida Handwriting', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 14:45:13,302 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 14:45:13,302 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comici.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 14:45:13,304 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTAUR.TTF', name='Centaur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,304 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEBO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-12 14:45:13,304 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ONYX.TTF', name='Onyx', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,304 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrima.ttf', name='Ebrima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,304 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFI.TTF', name='Californian FB', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 14:45:13,305 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERBI___.TTF', name='Perpetua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-12 14:45:13,305 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbell.ttf', name='Corbel', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-12 14:45:13,305 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILI____.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 14:45:13,305 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segmdl2.ttf', name='Segoe MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,305 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-BOLD.TTF', name='Dubai', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 14:45:13,306 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FELIXTI.TTF', name='Felix Titling', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,306 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbd.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
2023-04-12 14:45:13,306 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taileb.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 14:45:13,306 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeprb.ttf', name='Segoe Print', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 14:45:13,307 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoescb.ttf', name='Segoe Script', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 14:45:13,307 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITE.TTF', name='Lucida Bright', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,307 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhbd.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 14:45:13,307 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\times.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,308 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisb.ttf', name='Segoe UI', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-12 14:45:13,308 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSDB.TTF', name='Berlin Sans FB Demi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 14:45:13,308 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbi.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
2023-04-12 14:45:13,308 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesi.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 14:45:13,308 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADM.TTF', name='Franklin Gothic Demi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,309 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERTI.TTF', name='High Tower Text', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 14:45:13,309 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF-Italic.ttf', name='Sitka', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 14:45:13,309 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsun.ttc', name='SimSun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,309 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTI.TTF', name='Calisto MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 14:45:13,310 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCMI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 14:45:13,310 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaral.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,310 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\lucon.ttf', name='Lucida Console', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,310 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_I.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 14:45:13,311 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mvboli.ttf', name='MV Boli', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,311 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiab.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 14:45:13,311 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\l_10646.ttf', name='Lucida Sans Unicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,311 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTIBD.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 14:45:13,311 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNT.TTF', name='Elephant', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,312 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASMD.TTF', name='Eras Medium ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,312 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MSUIGHUR.TTF', name='Microsoft Uighur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,312 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYB.TTF', name='Agency FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 14:45:13,312 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MSUIGHUB.TTF', name='Microsoft Uighur', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 14:45:13,313 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicbd.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 14:45:13,313 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMIT.TTF', name='Franklin Gothic Demi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 14:45:13,313 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKEB.TTF', name='Rockwell Extra Bold', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
2023-04-12 14:45:13,313 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PER_____.TTF', name='Perpetua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,313 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VINERITC.TTF', name='Viner Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,314 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\marlett.ttf', name='Marlett', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-04-12 14:45:13,314 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrili.ttf', name='Calibri', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-04-12 14:45:13,314 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICBI.TTF', name='Century Gothic', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-12 14:45:13,314 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ALGER.TTF', name='Algerian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,315 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOS.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,315 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelz.ttf', name='Corbel', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-12 14:45:13,315 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILB____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 14:45:13,315 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUABI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-12 14:45:13,315 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\sylfaen.ttf', name='Sylfaen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,315 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriaz.ttf', name='Cambria', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-12 14:45:13,315 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanaz.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
2023-04-12 14:45:13,315 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constan.ttf', name='Constantia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,316 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTILI.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-12 14:45:13,316 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCM_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,316 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhl.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2023-04-12 14:45:13,316 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOS.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-12 14:45:13,316 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HATTEN.TTF', name='Haettenschweiler', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,317 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JOKERMAN.TTF', name='Jokerman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,317 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ENGR.TTF', name='Engravers MT', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-04-12 14:45:13,317 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARAIT.TTF', name='Garamond', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 14:45:13,317 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,317 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelli.ttf', name='Corbel', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-04-12 14:45:13,318 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constani.ttf', name='Constantia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 14:45:13,318 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIST.TTF', name='Calisto MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,318 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PARCHM.TTF', name='Parchment', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,318 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\himalaya.ttf', name='Microsoft Himalaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,318 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRADHITC.TTF', name='Bradley Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,318 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\wingding.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,319 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtextb.ttf', name='Myanmar Text', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 14:45:13,319 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG3.TTF', name='Wingdings 3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,319 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGSOL.TTF', name='Niagara Solid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,319 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarali.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 14:45:13,319 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKI.TTF', name='Rockwell', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 14:45:13,319 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolab.ttf', name='Consolas', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 14:45:13,319 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXDI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-12 14:45:13,321 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BAUHS93.TTF', name='Bauhaus 93', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,321 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisli.ttf', name='Segoe UI', style='italic', variant='normal', weight=350, stretch='normal', size='scalable')) = 11.0975
2023-04-12 14:45:13,321 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELL.TTF', name='Bell MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,321 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2023-04-12 14:45:13,321 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyi.ttf', name='Microsoft Yi Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,321 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSR.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,321 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHVIT.TTF', name='Franklin Gothic Heavy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 14:45:13,321 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OLDENGL.TTF', name='Old English Text MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,321 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbel.ttf', name='Corbel', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,322 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLB.TTF', name='Bell MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 14:45:13,322 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelaUIb.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 14:45:13,323 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHV.TTF', name='Franklin Gothic Heavy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,323 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OUTLOOK.TTF', name='MS Outlook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,323 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PRISTINA.TTF', name='Pristina', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,323 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERI____.TTF', name='Perpetua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 14:45:13,323 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtext.ttf', name='Myanmar Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,323 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSAN.TTF', name='MS Reference Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,324 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERB____.TTF', name='Perpetua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 14:45:13,324 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTEXTRA.TTF', name='MT Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,324 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKB.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 14:45:13,324 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARABD.TTF', name='Garamond', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 14:45:13,324 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cour.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,325 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mingliub.ttc', name='MingLiU-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,325 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICB.TTF', name='Century Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 14:45:13,325 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspa.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,325 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VIVALDII.TTF', name='Vivaldi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 14:45:13,325 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAGE.TTF', name='Rage Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 14:45:13,325 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-12 14:45:13,325 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2023-04-12 14:45:13,325 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MATURASC.TTF', name='Matura MT Script Capitals', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,326 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comic.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,326 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbi.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-12 14:45:13,326 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothR.ttc', name='Yu Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,326 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palai.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 14:45:13,326 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MOD20.TTF', name='Modern No. 20', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,326 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMCN.TTF', name='Franklin Gothic Demi Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-12 14:45:13,327 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrimabd.ttf', name='Ebrima', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 14:45:13,327 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\javatext.ttf', name='Javanese Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,327 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CASTELAR.TTF', name='Castellar', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,327 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSDI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-12 14:45:13,327 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelawUI.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,328 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAX.TTF', name='Lucida Fax', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,328 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunbd.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 14:45:13,328 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF.ttf', name='Sitka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,328 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTL.TTF', name='Copperplate Gothic Light', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,328 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
2023-04-12 14:45:13,329 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeui.ttf', name='Segoe UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,329 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Gabriola.ttf', name='Gabriola', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,329 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTBI.TTF', name='Calisto MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-12 14:45:13,329 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicz.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-12 14:45:13,329 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALN.TTF', name='Arial', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 6.613636363636363
2023-04-12 14:45:13,329 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKBI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-12 14:45:13,330 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FREESCPT.TTF', name='Freestyle Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,330 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTURY.TTF', name='Century', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,330 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaB.ttf', name='Nirmala UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 14:45:13,330 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSB.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 14:45:13,330 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSD.TTF', name='Lucida Sans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-12 14:45:13,331 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuisl.ttf', name='Segoe UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2023-04-12 14:45:13,331 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 14:45:13,331 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-12 14:45:13,331 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguihis.ttf', name='Segoe UI Historic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,331 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCB____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-04-12 14:45:13,331 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambria.ttc', name='Cambria', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,332 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKBI.TTF', name='Rockwell', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-12 14:45:13,332 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGENG.TTF', name='Niagara Engraved', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,332 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisym.ttf', name='Segoe UI Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,332 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inkfree.ttf', name='Ink Free', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,332 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASBD.TTF', name='Eras Bold ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,332 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILC____.TTF', name='Gill Sans MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-12 14:45:13,334 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candara.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,334 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\bahnschrift.ttf', name='Bahnschrift', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,334 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BROADW.TTF', name='Broadway', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,334 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolaz.ttf', name='Consolas', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-12 14:45:13,334 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CBI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2023-04-12 14:45:13,335 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuii.ttf', name='Segoe UI', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 14:45:13,335 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibli.ttf', name='Segoe UI', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2023-04-12 14:45:13,335 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEDI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-12 14:45:13,335 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucit.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 14:45:13,335 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BKANT.TTF', name='Book Antiqua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,335 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothL.ttc', name='Yu Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-12 14:45:13,335 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrii.ttf', name='Calibri', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 14:45:13,335 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CURLZ___.TTF', name='Curlz MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,335 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelb.ttf', name='Corbel', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 14:45:13,335 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARLRDBD.TTF', name='Arial Rounded MT Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,335 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothB.ttc', name='Yu Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 14:45:13,337 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASDEMI.TTF', name='Eras Demi ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,337 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
2023-04-12 14:45:13,337 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANS.TTF', name='Lucida Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,337 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariblk.ttf', name='Arial', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 6.888636363636364
2023-04-12 14:45:13,337 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCKRIST.TTF', name='Kristen ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,338 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\KUNSTLER.TTF', name='Kunstler Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,338 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanb.ttf', name='Constantia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 14:45:13,338 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PAPYRUS.TTF', name='Papyrus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,338 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JUICE___.TTF', name='Juice ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,338 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguili.ttf', name='Segoe UI', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-04-12 14:45:13,338 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 14:45:13,338 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarab.ttf', name='Candara', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 14:45:13,339 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\IMPRISHA.TTF', name='Imprint MT Shadow', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,339 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailu.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,339 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbi.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-12 14:45:13,339 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuil.ttf', name='Segoe UI', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-12 14:45:13,339 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanai.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
2023-04-12 14:45:13,340 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoepr.ttf', name='Segoe Print', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,340 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaraz.ttf', name='Candara', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-12 14:45:13,340 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNB.TTF', name='Arial', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 6.8986363636363635
2023-04-12 14:45:13,340 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspab.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 14:45:13,340 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,340 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCM____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-12 14:45:13,341 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARNGTON.TTF', name='Harrington', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,341 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbd.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 14:45:13,341 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 14:45:13,341 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILSANUB.TTF', name='Gill Sans Ultra Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,341 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibri.ttf', name='Calibri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,342 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiaz.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-12 14:45:13,342 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegoeIcons.ttf', name='Segoe Fluent Icons', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,342 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAGNETOB.TTF', name='Magneto', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 14:45:13,342 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICI.TTF', name='Century Gothic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 14:45:13,342 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCBLKAD.TTF', name='Blackadder ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,343 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahomabd.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 14:45:13,343 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugi.ttf', name='Gadugi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,343 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LCALLIG.TTF', name='Lucida Calligraphy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 14:45:13,343 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyh.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,343 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsunb.ttf', name='SimSun-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,344 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgun.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,344 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIL_____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,344 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VLADIMIR.TTF', name='Vladimir Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,344 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,344 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msgothic.ttc', name='MS Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,344 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRSCRIPT.TTF', name='French Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,345 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILBI___.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-12 14:45:13,345 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASLGHT.TTF', name='Eras Light ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,345 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTB.TTF', name='Calisto MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 14:45:13,345 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunsl.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-12 14:45:13,345 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRUSHSCI.TTF', name='Brush Script MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 14:45:13,346 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SNAP____.TTF', name='Snap ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,346 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuib.ttf', name='Segoe UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 14:45:13,346 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCBI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-12 14:45:13,346 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailub.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 14:45:13,346 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framd.ttf', name='Franklin Gothic Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,347 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolai.ttf', name='Consolas', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 14:45:13,347 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCEB.TTF', name='Tw Cen MT Condensed Extra Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-12 14:45:13,348 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\POORICH.TTF', name='Poor Richard', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,348 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDYSTO.TTF', name='Goudy Stout', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,348 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKB.TTF', name='Rockwell', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 14:45:13,348 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PALSCRI.TTF', name='Palace Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,348 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarai.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 14:45:13,349 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\micross.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,349 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LEELAWDB.TTF', name='Leelawadee', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 14:45:13,349 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABK.TTF', name='Franklin Gothic Book', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,349 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjh.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,349 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palabi.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-12 14:45:13,350 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAVIE.TTF', name='Ravie', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,350 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCK.TTF', name='Rockwell', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,350 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\pala.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,350 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibriz.ttf', name='Calibri', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-12 14:45:13,350 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugib.ttf', name='Gadugi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 14:45:13,351 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_PSTC.TTF', name='Bodoni MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-12 14:45:13,351 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENSCBK.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,351 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanab.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
2023-04-12 14:45:13,351 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LATINWD.TTF', name='Wide Latin', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
2023-04-12 14:45:13,351 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbeli.ttf', name='Corbel', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 14:45:13,351 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIGI.TTF', name='Gigi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,352 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITED.TTF', name='Lucida Bright', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-12 14:45:13,352 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbi.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-12 14:45:13,352 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhl.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2023-04-12 14:45:13,352 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguiemj.ttf', name='Segoe UI Emoji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,353 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OCRAEXT.TTF', name='OCR A Extended', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
2023-04-12 14:45:13,353 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebuc.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,353 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SHOWG.TTF', name='Showcard Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,353 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BASKVILL.TTF', name='Baskerville Old Face', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,353 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriab.ttf', name='Cambria', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 14:45:13,354 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAIAN.TTF', name='Maiandra GD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,354 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCRIPTBL.TTF', name='Script MT Bold', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 14:45:13,354 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLECB.TTF', name='Gloucester MT Extra Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-12 14:45:13,354 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNTI.TTF', name='Elephant', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 14:45:13,354 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFR.TTF', name='Californian FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,354 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHIC.TTF', name='Century Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,354 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PLAYBILL.TTF', name='Playbill', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,355 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABKIT.TTF', name='Franklin Gothic Book', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 14:45:13,355 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARLOWSI.TTF', name='Harlow Solid Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 14:45:13,355 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPE.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,355 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taile.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,355 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibl.ttf', name='Segoe UI', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2023-04-12 14:45:13,356 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNBI.TTF', name='Arial', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 7.8986363636363635
2023-04-12 14:45:13,356 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuiz.ttf', name='Segoe UI', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-12 14:45:13,356 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSBI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-12 14:45:13,356 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palab.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 14:45:13,356 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLI.TTF', name='Bell MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 14:45:13,357 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILLUBCD.TTF', name='Gill Sans Ultra Bold Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-12 14:45:13,357 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbd.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 14:45:13,357 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhbd.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 14:45:13,358 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoesc.ttf', name='Segoe Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,358 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\couri.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 14:45:13,358 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegUIVar.ttf', name='Segoe UI Variable', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,358 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_R.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,358 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTB.TTF', name='Copperplate Gothic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,359 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 14:45:13,359 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCB_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 14:45:13,359 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TEMPSITC.TTF', name='Tempus Sans ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,359 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MISTRAL.TTF', name='Mistral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,359 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FORTE.TTF', name='Forte', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,360 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CB.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-04-12 14:45:13,360 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbd.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 14:45:13,360 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STENCIL.TTF', name='Stencil', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,360 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrib.ttf', name='Calibri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 14:45:13,360 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERT.TTF', name='High Tower Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,360 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTCORSVA.TTF', name='Monotype Corsiva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 14:45:13,361 [11324] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFB.TTF', name='Californian FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 14:45:13,361 [11324] DEBUG    matplotlib.font_manager:1367: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
2023-04-12 14:45:34,458 [11324] DEBUG    matplotlib.colorbar:847: [JupyterRequire] locator: <matplotlib.ticker.AutoLocator object at 0x000002742347B400>
2023-04-12 14:48:21,250 [11324] DEBUG    matplotlib.colorbar:847: [JupyterRequire] locator: <matplotlib.ticker.AutoLocator object at 0x000002742376FE20>
2023-04-12 14:54:15,690 [11324] DEBUG    matplotlib.colorbar:847: [JupyterRequire] locator: <matplotlib.ticker.AutoLocator object at 0x0000027423BCE250>
2023-04-12 15:14:28,745 [11324] DEBUG    matplotlib.colorbar:847: [JupyterRequire] locator: <matplotlib.ticker.AutoLocator object at 0x0000027424F19C10>
2023-04-12 15:26:08,290 [11324] DEBUG    matplotlib.colorbar:847: [JupyterRequire] locator: <matplotlib.ticker.AutoLocator object at 0x0000027424AA7250>
2023-04-12 15:26:28,350 [11324] DEBUG    matplotlib.colorbar:847: [JupyterRequire] locator: <matplotlib.ticker.AutoLocator object at 0x000002742642E340>
2023-04-12 15:26:42,079 [11324] DEBUG    matplotlib.colorbar:847: [JupyterRequire] locator: <matplotlib.ticker.AutoLocator object at 0x00000274250662E0>
2023-04-12 15:29:30,512 [33708] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-04-12 15:29:30,512 [33708] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-04-12 15:29:30,513 [33708] INFO     root:247: [JupyterRequire] Initializing comms.
2023-04-12 15:29:30,515 [33708] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-04-12 15:29:30,515 [33708] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-04-12 15:29:30,515 [33708] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-04-12 16:04:36,115 [33708] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-04-12 16:04:36,115 [33708] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-04-12 16:04:36,115 [33708] INFO     root:247: [JupyterRequire] Initializing comms.
2023-04-12 16:04:36,123 [33708] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-04-12 16:04:36,123 [33708] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-04-12 16:04:36,123 [33708] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-04-12 16:53:44,577 [44984] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-04-12 16:53:44,578 [44984] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-04-12 16:53:44,578 [44984] INFO     root:247: [JupyterRequire] Initializing comms.
2023-04-12 16:53:44,583 [44984] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-04-12 16:53:44,584 [44984] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-04-12 16:53:44,584 [44984] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-04-12 16:57:16,990 [44984] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-04-12 16:57:16,991 [44984] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-04-12 16:57:16,992 [44984] INFO     root:247: [JupyterRequire] Initializing comms.
2023-04-12 16:57:16,996 [44984] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-04-12 16:57:16,998 [44984] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-04-12 16:57:16,999 [44984] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-04-12 17:27:06,680 [41120] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-04-12 17:27:06,682 [41120] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-04-12 17:27:06,682 [41120] INFO     root:247: [JupyterRequire] Initializing comms.
2023-04-12 17:27:06,685 [41120] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-04-12 17:27:06,686 [41120] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-04-12 17:27:06,686 [41120] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-04-12 17:27:38,204 [9940] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-04-12 17:27:38,206 [9940] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-04-12 17:27:38,207 [9940] INFO     root:247: [JupyterRequire] Initializing comms.
2023-04-12 17:27:38,211 [9940] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-04-12 17:27:38,212 [9940] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-04-12 17:27:38,212 [9940] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-04-12 17:31:42,569 [9940] DEBUG    matplotlib.font_manager:1329: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
2023-04-12 17:31:42,570 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-12 17:31:42,570 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-12 17:31:42,570 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,570 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2023-04-12 17:31:42,572 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2023-04-12 17:31:42,572 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 17:31:42,572 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 17:31:42,573 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 17:31:42,573 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,573 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-12 17:31:42,574 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,574 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 17:31:42,574 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,574 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,574 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,575 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 17:31:42,575 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 17:31:42,575 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,575 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,575 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2023-04-12 17:31:42,575 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,575 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,576 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-12 17:31:42,576 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 17:31:42,576 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 17:31:42,576 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,577 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,577 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 17:31:42,577 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 17:31:42,577 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,577 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,578 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,578 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 17:31:42,578 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,578 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 17:31:42,579 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,579 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,579 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2023-04-12 17:31:42,579 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLSNECB.TTF', name='Gill Sans MT Ext Condensed Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-12 17:31:42,580 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanz.ttf', name='Constantia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-12 17:31:42,580 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LEELAWAD.TTF', name='Leelawadee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,580 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\monbaiti.ttf', name='Mongolian Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,580 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-MEDIUM.TTF', name='Dubai', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-04-12 17:31:42,580 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-04-12 17:31:42,580 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FTLTLT.TTF', name='Footlight MT Light', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-12 17:31:42,582 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibril.ttf', name='Calibri', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-12 17:31:42,582 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSI.TTF', name='Goudy Old Style', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 17:31:42,582 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisbi.ttf', name='Segoe UI', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-12 17:31:42,582 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCCB___.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-04-12 17:31:42,583 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXD.TTF', name='Lucida Fax', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-12 17:31:42,583 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2023-04-12 17:31:42,583 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BSSYM7.TTF', name='Bookshelf Symbol 7', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,583 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAMDCN.TTF', name='Franklin Gothic Medium Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-12 17:31:42,583 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framdit.ttf', name='Franklin Gothic Medium', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 17:31:42,584 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSB.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 17:31:42,584 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-LIGHT.TTF', name='Dubai', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-12 17:31:42,584 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCC____.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-12 17:31:42,584 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_B.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 17:31:42,584 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COOPBL.TTF', name='Cooper Black', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,584 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNI.TTF', name='Arial', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 7.613636363636363
2023-04-12 17:31:42,585 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\INFROMAN.TTF', name='Informal Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,585 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSB.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-12 17:31:42,585 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BERNHC.TTF', name='Bernard MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-12 17:31:42,586 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEB.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-12 17:31:42,586 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCEDSCR.TTF', name='Edwardian Script ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,586 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consola.ttf', name='Consolas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,586 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,586 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\holomdl2.ttf', name='HoloLens MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,587 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COLONNA.TTF', name='Colonna MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,587 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYR.TTF', name='Agency FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,587 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRITANIC.TTF', name='Britannic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,587 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiai.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 17:31:42,587 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 17:31:42,588 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaS.ttf', name='Nirmala UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2023-04-12 17:31:42,588 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CHILLER.TTF', name='Chiller', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,588 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,588 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAB.TTF', name='Book Antiqua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 17:31:42,589 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothM.ttc', name='Yu Gothic', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-04-12 17:31:42,589 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG2.TTF', name='Wingdings 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,589 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Nirmala.ttf', name='Nirmala UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,589 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelUIsl.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2023-04-12 17:31:42,589 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriai.ttf', name='Cambria', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 17:31:42,591 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariali.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
2023-04-12 17:31:42,591 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARA.TTF', name='Garamond', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,591 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSPCL.TTF', name='MS Reference Specialty', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,591 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-REGULAR.TTF', name='Dubai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,591 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LHANDW.TTF', name='Lucida Handwriting', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 17:31:42,591 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 17:31:42,592 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comici.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 17:31:42,592 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTAUR.TTF', name='Centaur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,592 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEBO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-12 17:31:42,592 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ONYX.TTF', name='Onyx', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,592 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrima.ttf', name='Ebrima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,592 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFI.TTF', name='Californian FB', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 17:31:42,593 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERBI___.TTF', name='Perpetua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-12 17:31:42,593 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbell.ttf', name='Corbel', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-12 17:31:42,593 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILI____.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 17:31:42,593 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segmdl2.ttf', name='Segoe MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,594 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-BOLD.TTF', name='Dubai', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 17:31:42,594 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FELIXTI.TTF', name='Felix Titling', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,594 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbd.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
2023-04-12 17:31:42,594 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taileb.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 17:31:42,594 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeprb.ttf', name='Segoe Print', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 17:31:42,595 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoescb.ttf', name='Segoe Script', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 17:31:42,595 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITE.TTF', name='Lucida Bright', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,595 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhbd.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 17:31:42,595 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\times.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,596 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisb.ttf', name='Segoe UI', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-12 17:31:42,596 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSDB.TTF', name='Berlin Sans FB Demi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 17:31:42,596 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbi.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
2023-04-12 17:31:42,596 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesi.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 17:31:42,596 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADM.TTF', name='Franklin Gothic Demi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,598 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERTI.TTF', name='High Tower Text', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 17:31:42,598 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF-Italic.ttf', name='Sitka', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 17:31:42,598 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsun.ttc', name='SimSun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,598 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTI.TTF', name='Calisto MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 17:31:42,599 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCMI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 17:31:42,599 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaral.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,599 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\lucon.ttf', name='Lucida Console', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,599 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_I.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 17:31:42,599 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mvboli.ttf', name='MV Boli', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,600 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiab.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 17:31:42,600 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\l_10646.ttf', name='Lucida Sans Unicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,600 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTIBD.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 17:31:42,600 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNT.TTF', name='Elephant', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,600 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASMD.TTF', name='Eras Medium ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,600 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MSUIGHUR.TTF', name='Microsoft Uighur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,601 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYB.TTF', name='Agency FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 17:31:42,601 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MSUIGHUB.TTF', name='Microsoft Uighur', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 17:31:42,601 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicbd.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 17:31:42,601 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMIT.TTF', name='Franklin Gothic Demi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 17:31:42,601 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKEB.TTF', name='Rockwell Extra Bold', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
2023-04-12 17:31:42,601 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PER_____.TTF', name='Perpetua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,601 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VINERITC.TTF', name='Viner Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,603 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\marlett.ttf', name='Marlett', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-04-12 17:31:42,603 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrili.ttf', name='Calibri', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-04-12 17:31:42,603 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICBI.TTF', name='Century Gothic', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-12 17:31:42,603 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ALGER.TTF', name='Algerian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,603 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOS.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,604 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelz.ttf', name='Corbel', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-12 17:31:42,604 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILB____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 17:31:42,604 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUABI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-12 17:31:42,604 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\sylfaen.ttf', name='Sylfaen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,604 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriaz.ttf', name='Cambria', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-12 17:31:42,604 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanaz.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
2023-04-12 17:31:42,605 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constan.ttf', name='Constantia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,605 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTILI.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-12 17:31:42,605 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCM_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,605 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhl.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2023-04-12 17:31:42,605 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOS.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-12 17:31:42,605 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HATTEN.TTF', name='Haettenschweiler', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,606 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JOKERMAN.TTF', name='Jokerman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,606 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ENGR.TTF', name='Engravers MT', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-04-12 17:31:42,606 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARAIT.TTF', name='Garamond', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 17:31:42,606 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,606 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelli.ttf', name='Corbel', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-04-12 17:31:42,606 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constani.ttf', name='Constantia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 17:31:42,607 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIST.TTF', name='Calisto MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,607 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PARCHM.TTF', name='Parchment', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,607 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\himalaya.ttf', name='Microsoft Himalaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,607 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRADHITC.TTF', name='Bradley Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,607 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\wingding.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,607 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtextb.ttf', name='Myanmar Text', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 17:31:42,607 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG3.TTF', name='Wingdings 3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,609 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGSOL.TTF', name='Niagara Solid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,609 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarali.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 17:31:42,609 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKI.TTF', name='Rockwell', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 17:31:42,609 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolab.ttf', name='Consolas', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 17:31:42,609 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXDI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-12 17:31:42,609 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BAUHS93.TTF', name='Bauhaus 93', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,610 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisli.ttf', name='Segoe UI', style='italic', variant='normal', weight=350, stretch='normal', size='scalable')) = 11.0975
2023-04-12 17:31:42,610 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELL.TTF', name='Bell MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,610 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2023-04-12 17:31:42,610 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyi.ttf', name='Microsoft Yi Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,610 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSR.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,611 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHVIT.TTF', name='Franklin Gothic Heavy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 17:31:42,611 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OLDENGL.TTF', name='Old English Text MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,611 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbel.ttf', name='Corbel', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,611 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLB.TTF', name='Bell MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 17:31:42,611 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelaUIb.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 17:31:42,612 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHV.TTF', name='Franklin Gothic Heavy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,612 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OUTLOOK.TTF', name='MS Outlook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,612 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PRISTINA.TTF', name='Pristina', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,612 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERI____.TTF', name='Perpetua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 17:31:42,612 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtext.ttf', name='Myanmar Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,613 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSAN.TTF', name='MS Reference Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,613 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERB____.TTF', name='Perpetua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 17:31:42,613 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTEXTRA.TTF', name='MT Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,613 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKB.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 17:31:42,613 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARABD.TTF', name='Garamond', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 17:31:42,613 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cour.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,613 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mingliub.ttc', name='MingLiU-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,614 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICB.TTF', name='Century Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 17:31:42,614 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspa.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,614 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VIVALDII.TTF', name='Vivaldi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 17:31:42,614 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAGE.TTF', name='Rage Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 17:31:42,614 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-12 17:31:42,615 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2023-04-12 17:31:42,615 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MATURASC.TTF', name='Matura MT Script Capitals', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,615 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comic.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,615 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbi.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-12 17:31:42,615 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothR.ttc', name='Yu Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,616 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palai.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 17:31:42,616 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MOD20.TTF', name='Modern No. 20', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,616 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMCN.TTF', name='Franklin Gothic Demi Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-12 17:31:42,616 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrimabd.ttf', name='Ebrima', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 17:31:42,616 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\javatext.ttf', name='Javanese Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,617 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CASTELAR.TTF', name='Castellar', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,617 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSDI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-12 17:31:42,617 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelawUI.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,617 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAX.TTF', name='Lucida Fax', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,617 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunbd.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 17:31:42,618 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF.ttf', name='Sitka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,618 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTL.TTF', name='Copperplate Gothic Light', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,618 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
2023-04-12 17:31:42,618 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeui.ttf', name='Segoe UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,618 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Gabriola.ttf', name='Gabriola', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,619 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTBI.TTF', name='Calisto MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-12 17:31:42,619 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicz.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-12 17:31:42,619 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALN.TTF', name='Arial', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 6.613636363636363
2023-04-12 17:31:42,619 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKBI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-12 17:31:42,619 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FREESCPT.TTF', name='Freestyle Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,620 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTURY.TTF', name='Century', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,620 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaB.ttf', name='Nirmala UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 17:31:42,620 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSB.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 17:31:42,620 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSD.TTF', name='Lucida Sans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-12 17:31:42,620 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuisl.ttf', name='Segoe UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2023-04-12 17:31:42,621 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 17:31:42,621 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-12 17:31:42,621 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguihis.ttf', name='Segoe UI Historic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,621 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCB____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-04-12 17:31:42,621 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambria.ttc', name='Cambria', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,622 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKBI.TTF', name='Rockwell', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-12 17:31:42,622 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGENG.TTF', name='Niagara Engraved', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,622 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisym.ttf', name='Segoe UI Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,622 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inkfree.ttf', name='Ink Free', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,622 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASBD.TTF', name='Eras Bold ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,623 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILC____.TTF', name='Gill Sans MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-12 17:31:42,623 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candara.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,623 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\bahnschrift.ttf', name='Bahnschrift', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,623 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BROADW.TTF', name='Broadway', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,623 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolaz.ttf', name='Consolas', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-12 17:31:42,624 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CBI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2023-04-12 17:31:42,624 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuii.ttf', name='Segoe UI', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 17:31:42,624 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibli.ttf', name='Segoe UI', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2023-04-12 17:31:42,624 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEDI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-12 17:31:42,624 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucit.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 17:31:42,625 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BKANT.TTF', name='Book Antiqua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,625 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothL.ttc', name='Yu Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-12 17:31:42,625 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrii.ttf', name='Calibri', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 17:31:42,625 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CURLZ___.TTF', name='Curlz MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,625 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelb.ttf', name='Corbel', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 17:31:42,625 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARLRDBD.TTF', name='Arial Rounded MT Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,626 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothB.ttc', name='Yu Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 17:31:42,626 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASDEMI.TTF', name='Eras Demi ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,626 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
2023-04-12 17:31:42,626 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANS.TTF', name='Lucida Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,626 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariblk.ttf', name='Arial', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 6.888636363636364
2023-04-12 17:31:42,627 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCKRIST.TTF', name='Kristen ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,627 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\KUNSTLER.TTF', name='Kunstler Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,627 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanb.ttf', name='Constantia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 17:31:42,627 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PAPYRUS.TTF', name='Papyrus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,628 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JUICE___.TTF', name='Juice ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,628 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguili.ttf', name='Segoe UI', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-04-12 17:31:42,628 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 17:31:42,628 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarab.ttf', name='Candara', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 17:31:42,628 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\IMPRISHA.TTF', name='Imprint MT Shadow', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,628 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailu.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,629 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbi.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-12 17:31:42,629 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuil.ttf', name='Segoe UI', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-12 17:31:42,629 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanai.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
2023-04-12 17:31:42,629 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoepr.ttf', name='Segoe Print', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,629 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaraz.ttf', name='Candara', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-12 17:31:42,629 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNB.TTF', name='Arial', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 6.8986363636363635
2023-04-12 17:31:42,629 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspab.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 17:31:42,631 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,631 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCM____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-12 17:31:42,631 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARNGTON.TTF', name='Harrington', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,631 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbd.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 17:31:42,631 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 17:31:42,632 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILSANUB.TTF', name='Gill Sans Ultra Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,632 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibri.ttf', name='Calibri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,632 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiaz.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-12 17:31:42,632 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegoeIcons.ttf', name='Segoe Fluent Icons', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,632 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAGNETOB.TTF', name='Magneto', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 17:31:42,632 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICI.TTF', name='Century Gothic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 17:31:42,633 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCBLKAD.TTF', name='Blackadder ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,633 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahomabd.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 17:31:42,633 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugi.ttf', name='Gadugi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,633 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LCALLIG.TTF', name='Lucida Calligraphy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 17:31:42,633 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyh.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,633 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsunb.ttf', name='SimSun-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,634 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgun.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,634 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIL_____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,634 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VLADIMIR.TTF', name='Vladimir Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,634 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,634 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msgothic.ttc', name='MS Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,635 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRSCRIPT.TTF', name='French Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,635 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILBI___.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-12 17:31:42,635 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASLGHT.TTF', name='Eras Light ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,635 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTB.TTF', name='Calisto MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 17:31:42,635 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunsl.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-12 17:31:42,636 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRUSHSCI.TTF', name='Brush Script MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 17:31:42,636 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SNAP____.TTF', name='Snap ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,636 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuib.ttf', name='Segoe UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 17:31:42,636 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCBI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-12 17:31:42,636 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailub.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 17:31:42,636 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framd.ttf', name='Franklin Gothic Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,637 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolai.ttf', name='Consolas', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 17:31:42,637 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCEB.TTF', name='Tw Cen MT Condensed Extra Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-12 17:31:42,637 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\POORICH.TTF', name='Poor Richard', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,637 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDYSTO.TTF', name='Goudy Stout', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,637 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKB.TTF', name='Rockwell', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 17:31:42,637 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PALSCRI.TTF', name='Palace Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,638 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarai.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 17:31:42,638 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\micross.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,638 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LEELAWDB.TTF', name='Leelawadee', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 17:31:42,638 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABK.TTF', name='Franklin Gothic Book', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,638 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjh.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,640 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palabi.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-12 17:31:42,640 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAVIE.TTF', name='Ravie', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,640 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCK.TTF', name='Rockwell', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,640 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\pala.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,640 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibriz.ttf', name='Calibri', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-12 17:31:42,641 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugib.ttf', name='Gadugi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 17:31:42,641 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_PSTC.TTF', name='Bodoni MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-12 17:31:42,641 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENSCBK.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,641 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanab.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
2023-04-12 17:31:42,641 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LATINWD.TTF', name='Wide Latin', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
2023-04-12 17:31:42,642 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbeli.ttf', name='Corbel', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 17:31:42,642 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIGI.TTF', name='Gigi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,642 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITED.TTF', name='Lucida Bright', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-12 17:31:42,642 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbi.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-12 17:31:42,642 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhl.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2023-04-12 17:31:42,643 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguiemj.ttf', name='Segoe UI Emoji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,643 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OCRAEXT.TTF', name='OCR A Extended', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
2023-04-12 17:31:42,643 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebuc.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,643 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SHOWG.TTF', name='Showcard Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,643 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BASKVILL.TTF', name='Baskerville Old Face', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,644 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriab.ttf', name='Cambria', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 17:31:42,644 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAIAN.TTF', name='Maiandra GD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,644 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCRIPTBL.TTF', name='Script MT Bold', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 17:31:42,644 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLECB.TTF', name='Gloucester MT Extra Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-12 17:31:42,644 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNTI.TTF', name='Elephant', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 17:31:42,644 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFR.TTF', name='Californian FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,645 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHIC.TTF', name='Century Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,645 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PLAYBILL.TTF', name='Playbill', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,645 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABKIT.TTF', name='Franklin Gothic Book', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 17:31:42,645 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARLOWSI.TTF', name='Harlow Solid Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 17:31:42,645 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPE.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,646 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taile.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,646 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibl.ttf', name='Segoe UI', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2023-04-12 17:31:42,646 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNBI.TTF', name='Arial', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 7.8986363636363635
2023-04-12 17:31:42,646 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuiz.ttf', name='Segoe UI', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-12 17:31:42,646 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSBI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-12 17:31:42,646 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palab.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 17:31:42,646 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLI.TTF', name='Bell MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 17:31:42,647 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILLUBCD.TTF', name='Gill Sans Ultra Bold Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-12 17:31:42,647 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbd.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 17:31:42,647 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhbd.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 17:31:42,647 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoesc.ttf', name='Segoe Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,647 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\couri.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 17:31:42,648 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegUIVar.ttf', name='Segoe UI Variable', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,648 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_R.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,648 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTB.TTF', name='Copperplate Gothic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,648 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 17:31:42,648 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCB_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 17:31:42,649 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TEMPSITC.TTF', name='Tempus Sans ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,649 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MISTRAL.TTF', name='Mistral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,649 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FORTE.TTF', name='Forte', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,649 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CB.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-04-12 17:31:42,649 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbd.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 17:31:42,650 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STENCIL.TTF', name='Stencil', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,650 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrib.ttf', name='Calibri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 17:31:42,650 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERT.TTF', name='High Tower Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,650 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTCORSVA.TTF', name='Monotype Corsiva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,650 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFB.TTF', name='Californian FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 17:31:42,651 [9940] DEBUG    matplotlib.font_manager:1367: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to DejaVu Sans ('C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
2023-04-12 17:31:42,657 [9940] DEBUG    matplotlib.font_manager:1329: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2023-04-12 17:31:42,657 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-12 17:31:42,658 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-12 17:31:42,658 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,658 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2023-04-12 17:31:42,658 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2023-04-12 17:31:42,658 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 17:31:42,659 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 17:31:42,659 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 17:31:42,659 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,659 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-12 17:31:42,659 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,659 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 17:31:42,660 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,660 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,660 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,660 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 17:31:42,660 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 17:31:42,660 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,660 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,661 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2023-04-12 17:31:42,661 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,661 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,661 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-12 17:31:42,661 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 17:31:42,662 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 17:31:42,662 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,662 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,663 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 17:31:42,663 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 17:31:42,663 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,663 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,663 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,664 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 17:31:42,664 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,664 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 17:31:42,664 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,664 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,665 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2023-04-12 17:31:42,665 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLSNECB.TTF', name='Gill Sans MT Ext Condensed Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-12 17:31:42,665 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanz.ttf', name='Constantia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-12 17:31:42,665 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LEELAWAD.TTF', name='Leelawadee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,665 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\monbaiti.ttf', name='Mongolian Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,665 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-MEDIUM.TTF', name='Dubai', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-04-12 17:31:42,666 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-04-12 17:31:42,666 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FTLTLT.TTF', name='Footlight MT Light', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-12 17:31:42,666 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibril.ttf', name='Calibri', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-12 17:31:42,666 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSI.TTF', name='Goudy Old Style', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 17:31:42,666 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisbi.ttf', name='Segoe UI', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-12 17:31:42,667 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCCB___.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-04-12 17:31:42,667 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXD.TTF', name='Lucida Fax', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-12 17:31:42,667 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2023-04-12 17:31:42,667 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BSSYM7.TTF', name='Bookshelf Symbol 7', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,667 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAMDCN.TTF', name='Franklin Gothic Medium Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-12 17:31:42,668 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framdit.ttf', name='Franklin Gothic Medium', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 17:31:42,668 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSB.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 17:31:42,668 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-LIGHT.TTF', name='Dubai', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-12 17:31:42,668 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCC____.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-12 17:31:42,669 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_B.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 17:31:42,669 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COOPBL.TTF', name='Cooper Black', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,669 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNI.TTF', name='Arial', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 7.613636363636363
2023-04-12 17:31:42,669 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\INFROMAN.TTF', name='Informal Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,669 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSB.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-12 17:31:42,669 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BERNHC.TTF', name='Bernard MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-12 17:31:42,670 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEB.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-12 17:31:42,670 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCEDSCR.TTF', name='Edwardian Script ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,670 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consola.ttf', name='Consolas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,670 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,670 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\holomdl2.ttf', name='HoloLens MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,670 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COLONNA.TTF', name='Colonna MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,671 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYR.TTF', name='Agency FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,671 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRITANIC.TTF', name='Britannic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,671 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiai.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 17:31:42,671 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 17:31:42,671 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaS.ttf', name='Nirmala UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2023-04-12 17:31:42,672 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CHILLER.TTF', name='Chiller', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,672 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,672 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAB.TTF', name='Book Antiqua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 17:31:42,672 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothM.ttc', name='Yu Gothic', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-04-12 17:31:42,672 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG2.TTF', name='Wingdings 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,672 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Nirmala.ttf', name='Nirmala UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,673 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelUIsl.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2023-04-12 17:31:42,673 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriai.ttf', name='Cambria', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 17:31:42,673 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariali.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
2023-04-12 17:31:42,673 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARA.TTF', name='Garamond', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,673 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSPCL.TTF', name='MS Reference Specialty', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,674 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-REGULAR.TTF', name='Dubai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,674 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LHANDW.TTF', name='Lucida Handwriting', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 17:31:42,674 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 17:31:42,674 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comici.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 17:31:42,674 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTAUR.TTF', name='Centaur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,675 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEBO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-12 17:31:42,675 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ONYX.TTF', name='Onyx', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,675 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrima.ttf', name='Ebrima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,675 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFI.TTF', name='Californian FB', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 17:31:42,675 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERBI___.TTF', name='Perpetua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-12 17:31:42,676 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbell.ttf', name='Corbel', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-12 17:31:42,676 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILI____.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 17:31:42,676 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segmdl2.ttf', name='Segoe MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,676 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-BOLD.TTF', name='Dubai', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 17:31:42,676 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FELIXTI.TTF', name='Felix Titling', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,677 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbd.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
2023-04-12 17:31:42,677 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taileb.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 17:31:42,677 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeprb.ttf', name='Segoe Print', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 17:31:42,677 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoescb.ttf', name='Segoe Script', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 17:31:42,677 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITE.TTF', name='Lucida Bright', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,678 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhbd.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 17:31:42,678 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\times.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,678 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisb.ttf', name='Segoe UI', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-12 17:31:42,678 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSDB.TTF', name='Berlin Sans FB Demi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 17:31:42,678 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbi.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
2023-04-12 17:31:42,679 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesi.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 17:31:42,679 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADM.TTF', name='Franklin Gothic Demi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,679 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERTI.TTF', name='High Tower Text', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 17:31:42,679 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF-Italic.ttf', name='Sitka', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 17:31:42,679 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsun.ttc', name='SimSun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,679 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTI.TTF', name='Calisto MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 17:31:42,680 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCMI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 17:31:42,680 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaral.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,680 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\lucon.ttf', name='Lucida Console', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,680 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_I.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 17:31:42,681 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mvboli.ttf', name='MV Boli', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,681 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiab.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 17:31:42,681 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\l_10646.ttf', name='Lucida Sans Unicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,681 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTIBD.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 17:31:42,681 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNT.TTF', name='Elephant', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,682 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASMD.TTF', name='Eras Medium ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,682 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MSUIGHUR.TTF', name='Microsoft Uighur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,682 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYB.TTF', name='Agency FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 17:31:42,682 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MSUIGHUB.TTF', name='Microsoft Uighur', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 17:31:42,682 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicbd.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 17:31:42,682 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMIT.TTF', name='Franklin Gothic Demi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 17:31:42,683 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKEB.TTF', name='Rockwell Extra Bold', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
2023-04-12 17:31:42,683 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PER_____.TTF', name='Perpetua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,683 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VINERITC.TTF', name='Viner Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,683 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\marlett.ttf', name='Marlett', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-04-12 17:31:42,683 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrili.ttf', name='Calibri', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-04-12 17:31:42,684 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICBI.TTF', name='Century Gothic', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-12 17:31:42,684 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ALGER.TTF', name='Algerian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,684 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOS.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,684 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelz.ttf', name='Corbel', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-12 17:31:42,684 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILB____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 17:31:42,685 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUABI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-12 17:31:42,685 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\sylfaen.ttf', name='Sylfaen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,685 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriaz.ttf', name='Cambria', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-12 17:31:42,685 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanaz.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
2023-04-12 17:31:42,685 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constan.ttf', name='Constantia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,686 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTILI.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-12 17:31:42,686 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCM_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,686 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhl.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2023-04-12 17:31:42,686 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOS.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-12 17:31:42,687 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HATTEN.TTF', name='Haettenschweiler', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,687 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JOKERMAN.TTF', name='Jokerman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,687 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ENGR.TTF', name='Engravers MT', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-04-12 17:31:42,687 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARAIT.TTF', name='Garamond', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 17:31:42,687 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,687 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelli.ttf', name='Corbel', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-04-12 17:31:42,688 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constani.ttf', name='Constantia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 17:31:42,688 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIST.TTF', name='Calisto MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,688 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PARCHM.TTF', name='Parchment', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,688 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\himalaya.ttf', name='Microsoft Himalaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,688 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRADHITC.TTF', name='Bradley Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,689 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\wingding.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,689 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtextb.ttf', name='Myanmar Text', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 17:31:42,689 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG3.TTF', name='Wingdings 3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,689 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGSOL.TTF', name='Niagara Solid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,689 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarali.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 17:31:42,689 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKI.TTF', name='Rockwell', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 17:31:42,691 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolab.ttf', name='Consolas', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 17:31:42,691 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXDI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-12 17:31:42,691 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BAUHS93.TTF', name='Bauhaus 93', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,691 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisli.ttf', name='Segoe UI', style='italic', variant='normal', weight=350, stretch='normal', size='scalable')) = 11.0975
2023-04-12 17:31:42,691 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELL.TTF', name='Bell MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,691 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2023-04-12 17:31:42,692 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyi.ttf', name='Microsoft Yi Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,692 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSR.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,692 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHVIT.TTF', name='Franklin Gothic Heavy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 17:31:42,692 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OLDENGL.TTF', name='Old English Text MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,692 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbel.ttf', name='Corbel', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,693 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLB.TTF', name='Bell MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 17:31:42,693 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelaUIb.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 17:31:42,693 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHV.TTF', name='Franklin Gothic Heavy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,693 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OUTLOOK.TTF', name='MS Outlook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,693 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PRISTINA.TTF', name='Pristina', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,694 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERI____.TTF', name='Perpetua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 17:31:42,694 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtext.ttf', name='Myanmar Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,694 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSAN.TTF', name='MS Reference Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,694 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERB____.TTF', name='Perpetua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 17:31:42,694 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTEXTRA.TTF', name='MT Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,695 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKB.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 17:31:42,695 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARABD.TTF', name='Garamond', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 17:31:42,695 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cour.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,695 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mingliub.ttc', name='MingLiU-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,695 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICB.TTF', name='Century Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 17:31:42,696 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspa.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,696 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VIVALDII.TTF', name='Vivaldi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 17:31:42,696 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAGE.TTF', name='Rage Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 17:31:42,696 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-12 17:31:42,696 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2023-04-12 17:31:42,696 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MATURASC.TTF', name='Matura MT Script Capitals', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,697 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comic.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,697 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbi.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-12 17:31:42,697 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothR.ttc', name='Yu Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,697 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palai.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 17:31:42,697 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MOD20.TTF', name='Modern No. 20', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,697 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMCN.TTF', name='Franklin Gothic Demi Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-12 17:31:42,698 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrimabd.ttf', name='Ebrima', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 17:31:42,698 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\javatext.ttf', name='Javanese Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,698 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CASTELAR.TTF', name='Castellar', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,698 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSDI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-12 17:31:42,698 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelawUI.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,698 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAX.TTF', name='Lucida Fax', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,699 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunbd.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 17:31:42,699 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF.ttf', name='Sitka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,700 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTL.TTF', name='Copperplate Gothic Light', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,700 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
2023-04-12 17:31:42,700 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeui.ttf', name='Segoe UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,700 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Gabriola.ttf', name='Gabriola', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,701 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTBI.TTF', name='Calisto MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-12 17:31:42,701 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicz.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-12 17:31:42,701 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALN.TTF', name='Arial', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 6.613636363636363
2023-04-12 17:31:42,701 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKBI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-12 17:31:42,701 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FREESCPT.TTF', name='Freestyle Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,702 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTURY.TTF', name='Century', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,702 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaB.ttf', name='Nirmala UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 17:31:42,702 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSB.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 17:31:42,702 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSD.TTF', name='Lucida Sans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-12 17:31:42,702 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuisl.ttf', name='Segoe UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2023-04-12 17:31:42,702 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 17:31:42,703 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-12 17:31:42,703 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguihis.ttf', name='Segoe UI Historic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,703 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCB____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-04-12 17:31:42,703 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambria.ttc', name='Cambria', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,703 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKBI.TTF', name='Rockwell', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-12 17:31:42,704 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGENG.TTF', name='Niagara Engraved', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,704 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisym.ttf', name='Segoe UI Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,704 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inkfree.ttf', name='Ink Free', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,704 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASBD.TTF', name='Eras Bold ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,704 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILC____.TTF', name='Gill Sans MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-12 17:31:42,704 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candara.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,705 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\bahnschrift.ttf', name='Bahnschrift', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,705 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BROADW.TTF', name='Broadway', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,705 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolaz.ttf', name='Consolas', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-12 17:31:42,705 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CBI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2023-04-12 17:31:42,705 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuii.ttf', name='Segoe UI', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 17:31:42,705 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibli.ttf', name='Segoe UI', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2023-04-12 17:31:42,706 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEDI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-12 17:31:42,706 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucit.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 17:31:42,706 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BKANT.TTF', name='Book Antiqua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,706 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothL.ttc', name='Yu Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-12 17:31:42,706 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrii.ttf', name='Calibri', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 17:31:42,706 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CURLZ___.TTF', name='Curlz MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,708 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelb.ttf', name='Corbel', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 17:31:42,708 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARLRDBD.TTF', name='Arial Rounded MT Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,708 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothB.ttc', name='Yu Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 17:31:42,708 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASDEMI.TTF', name='Eras Demi ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,708 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
2023-04-12 17:31:42,708 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANS.TTF', name='Lucida Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,709 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariblk.ttf', name='Arial', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 6.888636363636364
2023-04-12 17:31:42,709 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCKRIST.TTF', name='Kristen ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,709 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\KUNSTLER.TTF', name='Kunstler Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,709 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanb.ttf', name='Constantia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 17:31:42,709 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PAPYRUS.TTF', name='Papyrus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,709 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JUICE___.TTF', name='Juice ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,710 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguili.ttf', name='Segoe UI', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-04-12 17:31:42,710 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 17:31:42,710 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarab.ttf', name='Candara', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 17:31:42,710 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\IMPRISHA.TTF', name='Imprint MT Shadow', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,710 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailu.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,710 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbi.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-12 17:31:42,711 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuil.ttf', name='Segoe UI', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-12 17:31:42,711 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanai.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
2023-04-12 17:31:42,711 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoepr.ttf', name='Segoe Print', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,711 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaraz.ttf', name='Candara', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-12 17:31:42,711 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNB.TTF', name='Arial', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 6.8986363636363635
2023-04-12 17:31:42,711 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspab.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 17:31:42,712 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,712 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCM____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-12 17:31:42,712 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARNGTON.TTF', name='Harrington', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,712 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbd.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 17:31:42,712 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 17:31:42,712 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILSANUB.TTF', name='Gill Sans Ultra Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,713 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibri.ttf', name='Calibri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,713 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiaz.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-12 17:31:42,713 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegoeIcons.ttf', name='Segoe Fluent Icons', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,713 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAGNETOB.TTF', name='Magneto', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 17:31:42,713 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICI.TTF', name='Century Gothic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 17:31:42,714 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCBLKAD.TTF', name='Blackadder ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,714 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahomabd.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 17:31:42,714 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugi.ttf', name='Gadugi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,714 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LCALLIG.TTF', name='Lucida Calligraphy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 17:31:42,714 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyh.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,715 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsunb.ttf', name='SimSun-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,715 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgun.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,715 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIL_____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,715 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VLADIMIR.TTF', name='Vladimir Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,715 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,716 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msgothic.ttc', name='MS Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,716 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRSCRIPT.TTF', name='French Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,716 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILBI___.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-12 17:31:42,716 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASLGHT.TTF', name='Eras Light ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,716 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTB.TTF', name='Calisto MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 17:31:42,716 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunsl.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-12 17:31:42,717 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRUSHSCI.TTF', name='Brush Script MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 17:31:42,717 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SNAP____.TTF', name='Snap ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,717 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuib.ttf', name='Segoe UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 17:31:42,717 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCBI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-12 17:31:42,717 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailub.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 17:31:42,718 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framd.ttf', name='Franklin Gothic Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,718 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolai.ttf', name='Consolas', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 17:31:42,718 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCEB.TTF', name='Tw Cen MT Condensed Extra Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-12 17:31:42,718 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\POORICH.TTF', name='Poor Richard', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,718 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDYSTO.TTF', name='Goudy Stout', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,719 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKB.TTF', name='Rockwell', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 17:31:42,719 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PALSCRI.TTF', name='Palace Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,719 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarai.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 17:31:42,719 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\micross.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,719 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LEELAWDB.TTF', name='Leelawadee', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 17:31:42,720 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABK.TTF', name='Franklin Gothic Book', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,720 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjh.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,720 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palabi.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-12 17:31:42,720 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAVIE.TTF', name='Ravie', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,720 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCK.TTF', name='Rockwell', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,721 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\pala.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,721 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibriz.ttf', name='Calibri', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-12 17:31:42,721 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugib.ttf', name='Gadugi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 17:31:42,721 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_PSTC.TTF', name='Bodoni MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-12 17:31:42,721 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENSCBK.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,722 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanab.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
2023-04-12 17:31:42,722 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LATINWD.TTF', name='Wide Latin', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
2023-04-12 17:31:42,722 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbeli.ttf', name='Corbel', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 17:31:42,722 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIGI.TTF', name='Gigi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,722 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITED.TTF', name='Lucida Bright', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-12 17:31:42,723 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbi.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-12 17:31:42,723 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhl.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2023-04-12 17:31:42,723 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguiemj.ttf', name='Segoe UI Emoji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,723 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OCRAEXT.TTF', name='OCR A Extended', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
2023-04-12 17:31:42,723 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebuc.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,724 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SHOWG.TTF', name='Showcard Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,724 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BASKVILL.TTF', name='Baskerville Old Face', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,724 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriab.ttf', name='Cambria', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 17:31:42,724 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAIAN.TTF', name='Maiandra GD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,724 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCRIPTBL.TTF', name='Script MT Bold', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 17:31:42,724 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLECB.TTF', name='Gloucester MT Extra Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-12 17:31:42,725 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNTI.TTF', name='Elephant', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 17:31:42,725 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFR.TTF', name='Californian FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,725 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHIC.TTF', name='Century Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,725 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PLAYBILL.TTF', name='Playbill', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,725 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABKIT.TTF', name='Franklin Gothic Book', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 17:31:42,726 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARLOWSI.TTF', name='Harlow Solid Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 17:31:42,726 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPE.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,726 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taile.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,726 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibl.ttf', name='Segoe UI', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2023-04-12 17:31:42,726 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNBI.TTF', name='Arial', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 7.8986363636363635
2023-04-12 17:31:42,727 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuiz.ttf', name='Segoe UI', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-12 17:31:42,727 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSBI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-12 17:31:42,727 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palab.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 17:31:42,727 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLI.TTF', name='Bell MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 17:31:42,727 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILLUBCD.TTF', name='Gill Sans Ultra Bold Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-12 17:31:42,728 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbd.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 17:31:42,728 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhbd.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 17:31:42,728 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoesc.ttf', name='Segoe Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,728 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\couri.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 17:31:42,728 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegUIVar.ttf', name='Segoe UI Variable', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,729 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_R.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,729 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTB.TTF', name='Copperplate Gothic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,729 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-12 17:31:42,729 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCB_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 17:31:42,729 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TEMPSITC.TTF', name='Tempus Sans ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,730 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MISTRAL.TTF', name='Mistral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,730 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FORTE.TTF', name='Forte', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,730 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CB.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-04-12 17:31:42,730 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbd.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 17:31:42,730 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STENCIL.TTF', name='Stencil', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,730 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrib.ttf', name='Calibri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 17:31:42,730 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERT.TTF', name='High Tower Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,732 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTCORSVA.TTF', name='Monotype Corsiva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-12 17:31:42,732 [9940] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFB.TTF', name='Californian FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-12 17:31:42,732 [9940] DEBUG    matplotlib.font_manager:1367: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
2023-04-12 17:34:17,751 [9940] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-04-12 17:34:17,751 [9940] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-04-12 17:34:17,751 [9940] INFO     root:247: [JupyterRequire] Initializing comms.
2023-04-12 17:34:17,755 [9940] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-04-12 17:34:17,755 [9940] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-04-12 17:34:17,759 [9940] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-04-12 18:00:37,757 [9940] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-04-12 18:00:37,757 [9940] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-04-12 18:00:37,757 [9940] INFO     root:247: [JupyterRequire] Initializing comms.
2023-04-12 18:00:37,761 [9940] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-04-12 18:00:37,765 [9940] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-04-12 18:00:37,765 [9940] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-04-12 19:10:59,542 [9940] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-04-12 19:10:59,543 [9940] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-04-12 19:10:59,543 [9940] INFO     root:247: [JupyterRequire] Initializing comms.
2023-04-12 19:10:59,548 [9940] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-04-12 19:10:59,549 [9940] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-04-12 19:10:59,549 [9940] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-04-12 19:38:27,543 [9940] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-04-12 19:38:27,543 [9940] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-04-12 19:38:27,544 [9940] INFO     root:247: [JupyterRequire] Initializing comms.
2023-04-12 19:38:27,548 [9940] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-04-12 19:38:27,549 [9940] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-04-12 19:38:27,550 [9940] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-04-12 20:13:36,712 [9940] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-04-12 20:13:36,713 [9940] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-04-12 20:13:36,714 [9940] INFO     root:247: [JupyterRequire] Initializing comms.
2023-04-12 20:13:36,720 [9940] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-04-12 20:13:36,722 [9940] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-04-12 20:13:36,723 [9940] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-04-12 20:54:47,506 [9940] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-04-12 20:54:47,507 [9940] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-04-12 20:54:47,508 [9940] INFO     root:247: [JupyterRequire] Initializing comms.
2023-04-12 20:54:47,512 [9940] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-04-12 20:54:47,513 [9940] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-04-12 20:54:47,514 [9940] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-04-12 21:00:40,202 [9940] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-04-12 21:00:40,203 [9940] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-04-12 21:00:40,204 [9940] INFO     root:247: [JupyterRequire] Initializing comms.
2023-04-12 21:00:40,210 [9940] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-04-12 21:00:40,212 [9940] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-04-12 21:00:40,213 [9940] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-04-12 21:25:56,499 [9940] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-04-12 21:25:56,500 [9940] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-04-12 21:25:56,500 [9940] INFO     root:247: [JupyterRequire] Initializing comms.
2023-04-12 21:25:56,503 [9940] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-04-12 21:25:56,504 [9940] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-04-12 21:25:56,504 [9940] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-04-12 21:57:08,550 [9940] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-04-12 21:57:08,550 [9940] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-04-12 21:57:08,550 [9940] INFO     root:247: [JupyterRequire] Initializing comms.
2023-04-12 21:57:08,554 [9940] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-04-12 21:57:08,554 [9940] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-04-12 21:57:08,554 [9940] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-04-13 09:18:18,591 [9940] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-04-13 09:18:18,592 [9940] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-04-13 09:18:18,592 [9940] INFO     root:247: [JupyterRequire] Initializing comms.
2023-04-13 09:18:18,600 [9940] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-04-13 09:18:18,602 [9940] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-04-13 09:18:18,602 [9940] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-04-13 12:16:47,393 [9940] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-04-13 12:16:47,396 [9940] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-04-13 12:16:47,396 [9940] INFO     root:247: [JupyterRequire] Initializing comms.
2023-04-13 12:16:47,401 [9940] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-04-13 12:16:47,405 [9940] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-04-13 12:16:47,405 [9940] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-04-13 13:29:26,403 [9940] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-04-13 13:29:26,404 [9940] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-04-13 13:29:26,405 [9940] INFO     root:247: [JupyterRequire] Initializing comms.
2023-04-13 13:29:26,409 [9940] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-04-13 13:29:26,411 [9940] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-04-13 13:29:26,413 [9940] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-04-13 15:10:18,131 [9940] DEBUG    matplotlib.colorbar:847: [JupyterRequire] locator: <matplotlib.ticker.AutoLocator object at 0x0000022604657C70>
2023-04-13 15:37:20,835 [9940] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-04-13 15:37:20,836 [9940] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-04-13 15:37:20,836 [9940] INFO     root:247: [JupyterRequire] Initializing comms.
2023-04-13 15:37:20,839 [9940] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-04-13 15:37:20,840 [9940] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-04-13 15:37:20,841 [9940] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-04-13 16:01:24,921 [45784] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-04-13 16:01:24,921 [45784] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-04-13 16:01:24,922 [45784] INFO     root:247: [JupyterRequire] Initializing comms.
2023-04-13 16:01:24,924 [45784] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-04-13 16:01:24,924 [45784] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-04-13 16:01:24,925 [45784] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-04-13 16:14:39,500 [45784] DEBUG    matplotlib.colorbar:847: [JupyterRequire] locator: <matplotlib.ticker.AutoLocator object at 0x0000021FA11047C0>
2023-04-13 16:14:50,994 [45784] DEBUG    matplotlib.colorbar:847: [JupyterRequire] locator: <matplotlib.ticker.AutoLocator object at 0x0000021F9E866B80>
2023-04-13 16:30:59,722 [45784] DEBUG    matplotlib.colorbar:847: [JupyterRequire] locator: <matplotlib.ticker.AutoLocator object at 0x0000021FA84A95E0>
2023-04-13 16:31:27,594 [45784] DEBUG    matplotlib.colorbar:847: [JupyterRequire] locator: <matplotlib.ticker.AutoLocator object at 0x0000021FA2E2E7F0>
2023-04-13 16:32:01,624 [45808] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-04-13 16:32:01,624 [45808] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-04-13 16:32:01,625 [45808] INFO     root:247: [JupyterRequire] Initializing comms.
2023-04-13 16:32:01,629 [45808] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-04-13 16:32:01,629 [45808] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-04-13 16:32:01,629 [45808] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-04-13 16:33:51,400 [45808] DEBUG    matplotlib.colorbar:847: [JupyterRequire] locator: <matplotlib.ticker.AutoLocator object at 0x0000024A51858B50>
2023-04-13 16:34:35,775 [45808] DEBUG    matplotlib.colorbar:847: [JupyterRequire] locator: <matplotlib.ticker.AutoLocator object at 0x0000024A51234A90>
2023-04-13 16:46:33,220 [45808] DEBUG    matplotlib.colorbar:847: [JupyterRequire] locator: <matplotlib.ticker.AutoLocator object at 0x0000024A509A3DF0>
2023-04-13 17:01:50,108 [45808] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-04-13 17:01:50,109 [45808] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-04-13 17:01:50,109 [45808] INFO     root:247: [JupyterRequire] Initializing comms.
2023-04-13 17:01:50,113 [45808] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-04-13 17:01:50,114 [45808] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-04-13 17:01:50,115 [45808] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-04-13 17:25:46,557 [45808] DEBUG    matplotlib.colorbar:847: [JupyterRequire] locator: <matplotlib.ticker.AutoLocator object at 0x0000024A5154F2B0>
2023-04-13 17:32:50,659 [45808] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-04-13 17:32:50,660 [45808] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-04-13 17:32:50,660 [45808] INFO     root:247: [JupyterRequire] Initializing comms.
2023-04-13 17:32:50,664 [45808] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-04-13 17:32:50,665 [45808] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-04-13 17:32:50,665 [45808] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-04-13 18:16:33,728 [45808] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-04-13 18:16:33,729 [45808] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-04-13 18:16:33,730 [45808] INFO     root:247: [JupyterRequire] Initializing comms.
2023-04-13 18:16:33,732 [45808] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-04-13 18:16:33,733 [45808] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-04-13 18:16:33,734 [45808] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-04-13 18:22:56,212 [45808] DEBUG    matplotlib.colorbar:847: [JupyterRequire] locator: <matplotlib.ticker.AutoLocator object at 0x0000024A5A463820>
2023-04-13 18:23:56,357 [14356] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-04-13 18:23:56,358 [14356] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-04-13 18:23:56,358 [14356] INFO     root:247: [JupyterRequire] Initializing comms.
2023-04-13 18:23:56,362 [14356] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-04-13 18:23:56,363 [14356] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-04-13 18:23:56,363 [14356] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-04-13 18:37:32,342 [14356] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-04-13 18:37:32,346 [14356] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-04-13 18:37:32,347 [14356] INFO     root:247: [JupyterRequire] Initializing comms.
2023-04-13 18:37:32,351 [14356] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-04-13 18:37:32,353 [14356] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-04-13 18:37:32,353 [14356] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-04-13 18:37:51,286 [14356] DEBUG    matplotlib.colorbar:847: [JupyterRequire] locator: <matplotlib.ticker.AutoLocator object at 0x0000021A6ACDF580>
2023-04-13 18:37:57,360 [14356] DEBUG    matplotlib.colorbar:847: [JupyterRequire] locator: <matplotlib.ticker.AutoLocator object at 0x0000021A6D12AA00>
2023-04-13 18:38:08,789 [14356] DEBUG    matplotlib.colorbar:847: [JupyterRequire] locator: <matplotlib.ticker.AutoLocator object at 0x0000021A6EF1C550>
2023-04-13 19:53:45,661 [14356] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-04-13 19:53:45,665 [14356] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-04-13 19:53:45,669 [14356] INFO     root:247: [JupyterRequire] Initializing comms.
2023-04-13 19:53:45,680 [14356] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-04-13 19:53:45,683 [14356] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-04-13 19:53:45,684 [14356] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-04-14 05:59:02,279 [14356] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-04-14 05:59:02,303 [14356] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-04-14 05:59:02,304 [14356] INFO     root:247: [JupyterRequire] Initializing comms.
2023-04-14 05:59:02,310 [14356] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-04-14 05:59:02,312 [14356] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-04-14 05:59:02,313 [14356] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-04-14 12:10:19,710 [10756] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-04-14 12:10:19,711 [10756] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-04-14 12:10:19,712 [10756] INFO     root:247: [JupyterRequire] Initializing comms.
2023-04-14 12:10:19,716 [10756] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-04-14 12:10:19,716 [10756] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-04-14 12:10:19,717 [10756] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-04-14 12:10:20,828 [10756] INFO     numexpr.utils:147: [JupyterRequire] Note: NumExpr detected 12 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
2023-04-14 12:10:20,830 [10756] INFO     numexpr.utils:159: [JupyterRequire] NumExpr defaulting to 8 threads.
2023-04-14 12:10:21,776 [10756] DEBUG    matplotlib:275: [JupyterRequire] matplotlib data path: C:\Users\adity\anaconda3\lib\site-packages\matplotlib\mpl-data
2023-04-14 12:10:21,783 [10756] DEBUG    matplotlib:275: [JupyterRequire] CONFIGDIR=C:\Users\adity\.matplotlib
2023-04-14 12:10:21,787 [10756] DEBUG    matplotlib:1445: [JupyterRequire] interactive is False
2023-04-14 12:10:21,787 [10756] DEBUG    matplotlib:1446: [JupyterRequire] platform is win32
2023-04-14 12:10:21,787 [10756] DEBUG    matplotlib:1447: [JupyterRequire] loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', '_io', 'marshal', 'nt', 'winreg', '_frozen_importlib_external', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', 'encodings.cp1252', '_signal', 'encodings.latin_1', '_abc', 'abc', 'io', '__main__', '_stat', 'stat', '_collections_abc', 'genericpath', 'ntpath', 'os.path', 'os', '_sitebuiltins', '_locale', '_bootlocale', '_distutils_hack', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib.machinery', '_heapq', 'heapq', 'itertools', 'keyword', '_operator', 'operator', 'reprlib', '_collections', 'collections', 'collections.abc', '_functools', 'functools', 'contextlib', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', 'copyreg', 're', 'typing.io', 'typing.re', 'typing', 'importlib.abc', 'importlib.util', 'google', 'google.cloud', 'google.logging', 'mpl_toolkits', 'sphinxcontrib', 'zope', 'site', '_weakrefset', 'weakref', 'pkgutil', 'runpy', 'ipykernel._version', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'errno', 'signal', 'threading', 'msvcrt', '_winapi', 'subprocess', 'jupyter_client._version', 'posixpath', 'fnmatch', 'glob', '_socket', 'math', 'select', 'selectors', 'socket', 'zlib', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', '_bisect', 'bisect', '_random', '_sha512', 'random', 'tempfile', 'getpass', 'platform', 'zmq.libzmq', 'zmq.backend.select', 'cython_runtime', 'zmq.backend.cython.constants', '_cython_0_29_24', 'zmq.backend.cython.error', 'zmq.error', 'zmq.backend.cython.message', 'zmq.backend.cython.context', 'copy', '_struct', 'struct', '_compat_pickle', '_pickle', 'pickle', 'zmq.backend.cython.socket', 'zmq.backend.cython.utils', 'zmq.backend.cython._poll', 'zmq.backend.cython._version', 'zmq.backend.cython._device', 'zmq.backend.cython._proxy_steerable', 'zmq.backend.cython', 'zmq.backend', 'zmq.utils', 'zmq.utils.constant_names', 'zmq.sugar.constants', 'atexit', 'zmq.sugar.attrsettr', 'zmq.sugar.poll', 'zmq.utils.jsonapi', 'zmq.utils.strtypes', 'zmq.sugar.socket', 'zmq.sugar.context', 'zmq.sugar.frame', 'zmq.sugar.tracker', 'zmq.sugar.version', 'zmq.sugar.stopwatch', 'zmq.sugar', 'zmq', '_ast', 'ast', '_opcode', 'opcode', 'dis', 'token', 'tokenize', 'linecache', 'inspect', 'traitlets.utils', 'traitlets.utils.getargspec', 'traitlets.utils.importstring', 'traitlets.utils.sentinel', 'traitlets.utils.bunch', 'traitlets.utils.descriptions', 'traitlets.traitlets', 'traitlets.utils.decorators', 'traitlets._version', 'traitlets', 'traceback', '_string', 'string', 'logging', 'pprint', 'gettext', 'argparse', 'traitlets.config.loader', 'textwrap', 'traitlets.utils.text', 'traitlets.config.configurable', 'traitlets.config.application', 'traitlets.config', 'jupyter_client.localinterfaces', 'jupyter_core.version', 'jupyter_core', 'urllib', 'urllib.parse', 'pathlib', 'jupyter_core.paths', 'jupyter_client.utils', 'jupyter_client.connect', 'traitlets.log', 'jupyter_client.launcher', 'concurrent', 'concurrent.futures._base', 'concurrent.futures', '_ssl', 'binascii', 'base64', 'ssl', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', '_contextvars', 'contextvars', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.threads', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'asyncio.windows_events', 'asyncio', 'jupyter_client.channelsabc', 'jupyter_client.channels', 'jupyter_client.clientabc', 'jupyter_client.client', 'jupyter_client.kernelspec', 'jupyter_client.managerabc', 'jupyter_client.manager', '_queue', 'queue', 'jupyter_client.blocking.channels', 'jupyter_client.blocking.client', 'jupyter_client.blocking', 'zmq._future', 'zmq.asyncio', 'jupyter_client.asynchronous.channels', 'jupyter_client.asynchronous.client', 'jupyter_client.asynchronous', '_uuid', 'uuid', 'jupyter_client.multikernelmanager', 'jupyter_client', 'ipykernel.connect', 'ipykernel', 'tornado', '_datetime', 'datetime', 'numbers', 'logging.handlers', 'html.entities', 'html', 'array', 'tornado.speedups', 'tornado.util', 'tornado.escape', 'colorama.ansi', '_ctypes', 'ctypes._endian', 'ctypes', 'ctypes.wintypes', 'colorama.win32', 'colorama.winterm', 'colorama.ansitowin32', 'colorama.initialise', 'colorama', 'tornado.log', 'tornado.concurrent', 'tornado.ioloop', '__future__', 'tornado.platform', 'tornado.gen', 'tornado.platform.asyncio', 'zmq.eventloop.ioloop', 'zmq.eventloop', 'zmq.eventloop.zmqstream', 'IPython.core', 'IPython.core.getipython', 'IPython.core.release', 'sysconfig', 'pydoc', 'executing.executing', 'executing.version', 'executing', 'asttokens.line_numbers', 'six', 'six.moves', 'asttokens.util', 'asttokens.mark_tokens', 'asttokens.asttokens', 'asttokens', '_decimal', 'decimal', 'fractions', 'pure_eval.utils', 'pure_eval.my_getattr_static', 'pure_eval.core', 'pure_eval.version', 'pure_eval', 'stack_data.utils', 'stack_data.core', 'stack_data.formatting', 'stack_data.version', 'stack_data', 'pygments', 'pygments.formatters._mapping', 'pygments.plugin', 'pygments.util', 'pygments.formatters', 'pygments.styles', 'pygments.formatter', 'pygments.console', 'pygments.token', 'pygments.style', 'pygments.formatters.terminal256', 'bdb', 'IPython.utils', 'IPython.utils.ipstruct', 'IPython.utils.coloransi', 'IPython.utils.colorable', 'IPython.utils.PyColorize', 'locale', 'IPython.utils.encoding', 'IPython.utils.py3compat', 'IPython.core.excolors', 'cmd', 'codeop', 'code', 'pdb', 'IPython.core.debugger', 'IPython.core.display_trap', 'shlex', 'IPython.utils._process_common', 'IPython.utils._process_win32', 'IPython.utils.process', 'IPython.utils.decorators', 'IPython.utils.path', 'IPython.utils.terminal', 'IPython.core.ultratb', 'IPython.utils._sysinfo', 'IPython.utils.sysinfo', 'IPython.core.crashhandler', 'IPython.utils.importstring', 'IPython.paths', 'IPython.core.profiledir', 'IPython.core.application', 'IPython.terminal', '_hashlib', '_blake2', 'hashlib', 'IPython.core.compilerop', 'IPython.core.error', 'IPython.utils.text', 'IPython.core.magic_arguments', 'getopt', 'IPython.core.display_functions', 'mimetypes', 'IPython.testing', 'IPython.testing.skipdoctest', 'IPython.core.display', 'IPython.lib', 'IPython.lib.display', 'IPython.display', 'IPython.utils.data', 'IPython.core.page', 'IPython.lib.pretty', 'IPython.utils.openpy', 'IPython.utils.dir2', 'IPython.utils.wildcard', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.lexers', 'pygments.filter', 'pygments.filters', 'pygments.regexopt', 'pygments.lexer', 'pygments.unistring', 'pygments.lexers.python', 'pygments.formatters.html', 'IPython.core.oinspect', 'IPython.core.inputtransformer2', 'IPython.core.magic', 'pickleshare', 'IPython.core.hooks', 'IPython.core.autocall', 'IPython.core.macro', 'IPython.core.splitinput', 'IPython.core.prefilter', 'IPython.core.alias', 'IPython.core.builtin_trap', 'IPython.core.displayhook', 'IPython.core.displaypub', 'backcall.backcall', 'backcall', 'IPython.core.events', 'IPython.core.extensions', 'decorator', 'IPython.utils.sentinel', 'IPython.core.formatters', '_sqlite3', 'sqlite3.dbapi2', 'sqlite3', 'IPython.core.history', 'IPython.core.logger', 'IPython.core.payload', 'IPython.core.usage', 'IPython.utils.capture', 'IPython.utils.io', 'IPython.utils.strdispatch', 'IPython.utils.syspathcontext', 'IPython.core.async_helpers', 'IPython.core.interactiveshell', 'prompt_toolkit.application.current', 'prompt_toolkit.eventloop.utils', 'prompt_toolkit.eventloop.async_generator', 'wcwidth.table_wide', 'wcwidth.table_zero', 'wcwidth.unicode_versions', 'wcwidth.wcwidth', 'wcwidth', 'prompt_toolkit.utils', 'prompt_toolkit.eventloop.inputhook', 'prompt_toolkit.eventloop', 'prompt_toolkit.application.run_in_terminal', 'prompt_toolkit.selection', 'prompt_toolkit.clipboard.base', 'prompt_toolkit.clipboard.in_memory', 'prompt_toolkit.clipboard', 'prompt_toolkit.cache', 'prompt_toolkit.enums', 'prompt_toolkit.filters.base', 'prompt_toolkit.filters.app', 'prompt_toolkit.filters.cli', 'prompt_toolkit.filters.utils', 'prompt_toolkit.filters', 'prompt_toolkit.document', 'prompt_toolkit.auto_suggest', 'prompt_toolkit.data_structures', 'prompt_toolkit.styles.base', 'prompt_toolkit.styles.named_colors', 'prompt_toolkit.styles.style', 'prompt_toolkit.styles.defaults', 'prompt_toolkit.styles.pygments', 'colorsys', 'prompt_toolkit.styles.style_transformation', 'prompt_toolkit.styles', 'prompt_toolkit.output.color_depth', 'prompt_toolkit.output.base', 'prompt_toolkit.output.defaults', 'prompt_toolkit.output', 'prompt_toolkit.output.vt100', 'prompt_toolkit.mouse_events', 'prompt_toolkit.formatted_text.base', 'prompt_toolkit.formatted_text.ansi', 'xml', 'xml.dom.domreg', 'xml.dom', 'xml.dom.minicompat', 'xml.dom.NodeFilter', 'xml.dom.xmlbuilder', 'xml.dom.minidom', 'prompt_toolkit.formatted_text.html', 'prompt_toolkit.formatted_text.pygments', 'prompt_toolkit.formatted_text.utils', 'prompt_toolkit.formatted_text', 'prompt_toolkit.completion.base', 'prompt_toolkit.completion.deduplicate', 'prompt_toolkit.completion.filesystem', 'prompt_toolkit.completion.word_completer', 'prompt_toolkit.completion.fuzzy_completer', 'prompt_toolkit.completion.nested', 'prompt_toolkit.completion', 'prompt_toolkit.history', 'prompt_toolkit.keys', 'prompt_toolkit.key_binding.key_bindings', 'prompt_toolkit.key_binding.key_processor', 'prompt_toolkit.key_binding', 'prompt_toolkit.key_binding.vi_state', 'prompt_toolkit.search', 'prompt_toolkit.validation', 'prompt_toolkit.buffer', 'prompt_toolkit.input.base', 'prompt_toolkit.input.defaults', 'prompt_toolkit.input', 'prompt_toolkit.input.typeahead', 'prompt_toolkit.key_binding.bindings', 'prompt_toolkit.key_binding.bindings.scroll', 'prompt_toolkit.key_binding.bindings.page_navigation', 'prompt_toolkit.lexers.base', 'prompt_toolkit.lexers.pygments', 'prompt_toolkit.lexers', 'prompt_toolkit.layout.utils', 'prompt_toolkit.layout.processors', 'prompt_toolkit.layout.controls', 'prompt_toolkit.layout.dimension', 'prompt_toolkit.layout.margins', 'prompt_toolkit.layout.mouse_handlers', 'prompt_toolkit.layout.screen', 'prompt_toolkit.layout.containers', 'prompt_toolkit.layout.layout', 'prompt_toolkit.layout.menus', 'prompt_toolkit.layout.scrollable_pane', 'prompt_toolkit.layout', 'prompt_toolkit.key_binding.bindings.completion', 'prompt_toolkit.key_binding.bindings.named_commands', 'prompt_toolkit.key_binding.bindings.basic', 'prompt_toolkit.key_binding.bindings.cpr', 'prompt_toolkit.key_binding.bindings.emacs', 'prompt_toolkit.key_binding.bindings.mouse', 'prompt_toolkit.input.ansi_escape_sequences', 'prompt_toolkit.input.vt100_parser', 'prompt_toolkit.key_binding.digraphs', 'prompt_toolkit.key_binding.bindings.vi', 'prompt_toolkit.key_binding.defaults', 'prompt_toolkit.key_binding.emacs_state', 'prompt_toolkit.layout.dummy', 'prompt_toolkit.renderer', 'prompt_toolkit.application.application', 'prompt_toolkit.application.dummy', 'prompt_toolkit.application', 'prompt_toolkit.key_binding.bindings.focus', 'prompt_toolkit.widgets.toolbars', 'prompt_toolkit.widgets.base', 'prompt_toolkit.widgets.dialogs', 'prompt_toolkit.widgets.menus', 'prompt_toolkit.widgets', 'prompt_toolkit.shortcuts.dialogs', 'prompt_toolkit.shortcuts.progress_bar.formatters', 'prompt_toolkit.shortcuts.progress_bar.base', 'prompt_toolkit.shortcuts.progress_bar', 'prompt_toolkit.key_binding.bindings.auto_suggest', 'prompt_toolkit.key_binding.bindings.open_in_editor', 'prompt_toolkit.shortcuts.prompt', 'prompt_toolkit.shortcuts.utils', 'prompt_toolkit.shortcuts', 'prompt_toolkit', 'prompt_toolkit.patch_stdout', 'unicodedata', 'IPython.core.latex_symbols', 'IPython.utils.generics', 'parso.utils', 'parso.tree', 'parso.python', 'parso.python.token', 'parso.python.tokenize', 'parso.pgen2.grammar_parser', 'parso.pgen2.generator', 'parso.pgen2', 'parso.parser', 'parso._compatibility', 'difflib', 'parso.python.prefix', 'parso.python.tree', 'parso.python.parser', 'parso.python.diff', 'gc', 'parso.cache', 'parso.normalizer', 'parso.python.errors', 'parso.python.pep8', 'parso.file_io', 'parso.grammar', 'parso', 'jedi.parser_utils', 'jedi.debug', 'jedi.settings', 'jedi.cache', 'jedi.file_io', 'jedi.inference.cache', 'jedi.inference.helpers', 'jedi.inference.utils', 'jedi.inference.base_value', 'jedi.inference.sys_path', 'jedi.inference.recursion', 'jedi.inference.flow_analysis', 'jedi.common', 'jedi.inference.lazy_value', 'jedi.inference.docstrings', 'jedi.plugins', 'jedi.inference.names', 'jedi.inference.filters', 'jedi.inference.compiled.getattr_static', 'jedi.inference.compiled.access', 'jedi.inference.signature', 'jedi.inference.context', 'jedi.inference.compiled.value', 'jedi.inference.compiled', 'jedi.inference.analysis', 'jedi.inference.gradual', 'jedi.inference.value.module', 'jedi.inference.value.dynamic_arrays', 'jedi.inference.value.iterable', 'jedi.inference.arguments', 'jedi.inference.parser_cache', 'jedi.inference.gradual.generics', 'jedi.inference.value.function', 'jedi.inference.value.klass', 'jedi.inference.value.instance', 'jedi.inference.value', 'jedi.inference.gradual.base', 'jedi.inference.gradual.type_var', 'jedi.inference.gradual.typing', 'jedi.inference.gradual.stub_value', 'jedi.inference.gradual.typeshed', 'jedi._compatibility', 'zipfile', 'jedi.inference.compiled.subprocess.functions', 'jedi.api.exceptions', 'jedi.inference.compiled.subprocess', 'jedi.inference.imports', 'jedi.inference.param', 'jedi.inference.gradual.annotation', 'jedi.inference.value.decorator', 'jedi.inference.syntax_tree', 'jedi.inference', 'jedi.inference.gradual.conversion', 'jedi.inference.compiled.mixed', 'pydoc_data', 'pydoc_data.topics', 'jedi.api.keywords', 'jedi.api.completion_cache', 'jedi.api.helpers', 'jedi.api.classes', 'jedi.api.interpreter', 'jedi.api.strings', 'jedi.api.file_name', 'jedi.inference.docstring_utils', 'jedi.api.completion', 'filecmp', 'jedi.api.environment', 'jedi.inference.references', 'jedi.api.project', 'jedi.api.errors', 'jedi.api.refactoring', 'jedi.api.refactoring.extract', 'jedi.inference.gradual.utils', 'jedi.api', 'jedi.plugins.stdlib', 'jedi.plugins.flask', 'jedi.plugins.pytest', 'jedi.plugins.django', 'jedi.plugins.registry', 'jedi', 'IPython.core.completer', 'IPython.terminal.ptutils', 'IPython.lib.clipboard', 'IPython.terminal.shortcuts', 'concurrent.futures.thread', 'IPython.terminal.debugger', 'IPython.terminal.magics', 'IPython.terminal.pt_inputhooks', 'IPython.terminal.prompts', 'IPython.terminal.interactiveshell', 'IPython.core.magics.auto', 'IPython.core.magics.basic', 'email', 'http', 'email.errors', 'email.quoprimime', 'email.base64mime', 'quopri', 'email.encoders', 'email.charset', 'email.header', 'calendar', 'email._parseaddr', 'email.utils', 'email._policybase', 'email.feedparser', 'email.parser', 'uu', 'email._encoded_words', 'email.iterators', 'email.message', 'http.client', 'urllib.response', 'urllib.error', 'nturl2path', 'urllib.request', 'IPython.utils.contexts', 'IPython.core.magics.code', 'IPython.core.magics.config', 'IPython.core.magics.display', '_lsprof', 'profile', 'cProfile', 'dataclasses', 'pstats', 'timeit', 'IPython.utils.module_paths', 'IPython.utils.timing', 'IPython.core.magics.execution', 'IPython.core.magics.extension', 'IPython.core.magics.history', 'IPython.core.magics.logging', 'IPython.core.magics.namespace', 'IPython.core.magics.osm', 'IPython.core.magics.packaging', 'IPython.core.pylabtools', 'IPython.core.magics.pylab', 'IPython.core.magics.script', 'IPython.core.magics', 'IPython.core.shellapp', 'IPython.extensions', 'IPython.extensions.storemagic', 'IPython.terminal.ipapp', 'IPython.terminal.embed', 'IPython.utils.frame', 'IPython', 'imp', 'hmac', 'dateutil._version', 'dateutil', 'dateutil._common', 'dateutil.relativedelta', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.win', 'dateutil.tz.tz', 'dateutil.tz', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', '_strptime', 'jupyter_client.jsonutil', 'jupyter_client.adapter', 'jupyter_client.session', 'ipykernel.iostream', 'ipykernel.control', 'ipykernel.heartbeat', 'IPython.utils.tokenutil', 'psutil._common', 'psutil._compat', 'psutil._psutil_windows', 'psutil._pswindows', 'psutil', 'tornado.locks', 'tornado.queues', 'ipykernel.jsonutil', 'ipykernel.kernelbase', 'ipykernel.comm.comm', 'ipykernel.comm.manager', 'ipykernel.comm', 'IPython.core.payloadpage', 'ipykernel.displayhook', 'ipykernel.zmqshell', 'setuptools._distutils', 'distutils.debug', 'distutils.errors', 'distutils.fancy_getopt', 'distutils.dep_util', 'distutils.log', 'distutils.spawn', 'distutils.py35compat', 'distutils.util', 'distutils.dist', 'distutils.dir_util', 'distutils.file_util', 'distutils.archive_util', 'distutils.cmd', 'configparser', 'distutils.config', 'distutils.extension', 'distutils.core', '_distutils_hack.override', 'setuptools._deprecation_warning', 'xml.parsers', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'xml.parsers.expat', 'plistlib', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources._vendor.jaraco', 'pkg_resources.extern.jaraco', 'importlib._common', 'importlib.resources', 'pkg_resources._vendor.more_itertools.recipes', 'pkg_resources._vendor.more_itertools.more', 'pkg_resources._vendor.more_itertools', 'pkg_resources.extern.more_itertools', 'pkg_resources.extern.jaraco.functools', 'pkg_resources.extern.jaraco.context', 'pkg_resources.extern.jaraco.text', 'win32api', '_win32sysloader', 'pywintypes', 'pythoncom', 'win32com.gen_py', 'win32com', 'win32com.shell', 'pkg_resources._vendor.appdirs', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources._vendor.packaging', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.version', 'pkg_resources._vendor.packaging._manylinux', 'pkg_resources._vendor.packaging._musllinux', 'pkg_resources.extern.packaging.tags', 'pkg_resources.extern.packaging.utils', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources._vendor.pyparsing', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.packaging.markers', 'pkg_resources.extern.packaging.requirements', 'pkg_resources', 'setuptools.version', 'distutils.filelist', 'setuptools.monkey', 'setuptools.extension', 'distutils.command', 'setuptools.extern', 'setuptools._vendor', 'setuptools._vendor.packaging.__about__', 'setuptools._vendor.packaging', 'setuptools.extern.packaging', 'setuptools._vendor.ordered_set', 'setuptools.extern.ordered_set', 'setuptools._vendor.more_itertools.recipes', 'setuptools._vendor.more_itertools.more', 'setuptools._vendor.more_itertools', 'setuptools.extern.more_itertools', 'setuptools._vendor.pyparsing', 'setuptools.extern.pyparsing', 'setuptools._vendor.packaging._manylinux', 'setuptools._vendor.packaging._musllinux', 'setuptools.extern.packaging.tags', 'setuptools.extern.packaging._structures', 'setuptools.extern.packaging.version', 'setuptools.extern.packaging.utils', 'setuptools.extern.packaging.specifiers', 'setuptools.extern.packaging.markers', 'setuptools.extern.packaging.requirements', 'setuptools._vendor.jaraco', 'setuptools.extern.jaraco', 'setuptools.extern.jaraco.context', 'setuptools.extern.jaraco.functools', '_csv', 'csv', 'setuptools._vendor.zipp', 'setuptools._vendor.importlib_metadata._functools', 'setuptools._vendor.importlib_metadata._text', 'setuptools._vendor.importlib_metadata._adapters', 'setuptools._vendor.importlib_metadata._compat', 'setuptools._vendor.importlib_metadata._meta', 'setuptools._vendor.importlib_metadata._collections', 'setuptools._vendor.importlib_metadata._itertools', 'setuptools._vendor.importlib_metadata', 'setuptools.extern.importlib_metadata', 'setuptools._vendor.nspektr._compat', 'setuptools._vendor.nspektr', 'setuptools.extern.nspektr', 'zipp', 'importlib_metadata._functools', 'importlib_metadata._text', 'importlib_metadata._adapters', 'importlib_metadata._compat', 'importlib_metadata._meta', 'importlib_metadata._collections', 'importlib_metadata._itertools', 'importlib_metadata', 'setuptools._importlib', 'distutils.command.bdist', 'setuptools.command', 'setuptools.windows_support', 'setuptools.config.expand', 'setuptools.config.setupcfg', 'setuptools.config', 'setuptools.errors', 'email._header_value_parser', 'email.headerregistry', 'setuptools.config._apply_pyprojecttoml', 'setuptools.config.pyprojecttoml', 'setuptools.discovery', 'setuptools.extern.jaraco.text', 'setuptools._reqs', 'setuptools._itertools', 'setuptools._entry_points', 'setuptools.dist', 'setuptools.py34compat', 'setuptools._imp', 'setuptools.depends', 'setuptools.logging', 'distutils.ccompiler', 'distutils.msvc9compiler', 'setuptools.msvc', 'unittest.util', 'unittest.result', 'unittest.case', 'unittest.suite', 'unittest.loader', 'unittest.signals', 'unittest.runner', 'unittest.main', 'unittest', 'unittest.mock', 'distutils._msvccompiler', 'setuptools', 'distutils', 'distutils.version', 'ipykernel.eventloops', 'ipykernel.compiler', 'debugpy._version', 'debugpy.common', 'debugpy.common.json', 'debugpy.common.fmt', 'debugpy.common.compat', 'debugpy', 'debugpy._vendored._util', 'debugpy._vendored', '_pydevd_bundle', 'encodings.ascii', 'stringprep', 'encodings.idna', '_pydevd_bundle.pydevd_vm_type', '_pydev_imps', 'xmlrpc', 'gzip', 'xmlrpc.client', 'socketserver', 'http.server', 'xmlrpc.server', '_pydev_imps._pydev_saved_modules', '_pydevd_bundle.pydevd_constants', '_pydev_bundle', '_pydev_runfiles', '_pydevd_frame_eval', 'pydev_ipython', 'pydevd_concurrency_analyser', 'pydevd_plugins', '_pydev_bundle.pydev_log', '_pydev_bundle._pydev_filesystem_encoding', '_pydevd_bundle.pydevd_comm_constants', 'pydevd_file_utils', '_pydev_imps._pydev_execfile', '_pydevd_bundle.pydevd_exec2', '_pydev_bundle.pydev_imports', '_pydev_bundle.pydev_is_thread_alive', '_pydev_bundle.pydev_override', 'pydevd_plugins.extensions', '_pydevd_bundle.pydevd_extension_utils', '_pydevd_bundle.pydevd_frame_utils', '_pydevd_bundle.pydevd_filtering', '_pydevd_bundle.pydevd_io', '_pydevd_bundle.pydevd_utils', '_pydev_bundle._pydev_tipper_common', '_pydev_bundle._pydev_imports_tipper', '_pydev_bundle._pydev_calltip_util', '_pydevd_bundle.pydevd_safe_repr', '_pydevd_bundle.pydevd_resolver', '_pydevd_bundle.pydevd_extension_api', '_pydevd_bundle.pydevd_xml', '_pydevd_bundle.pydevd_dont_trace', '_pydevd_frame_eval.vendored', '_pydevd_frame_eval.vendored.bytecode.flags', '_pydevd_frame_eval.vendored.bytecode.instr', '_pydevd_frame_eval.vendored.bytecode.bytecode', '_pydevd_frame_eval.vendored.bytecode.concrete', '_pydevd_frame_eval.vendored.bytecode.cfg', '_pydevd_frame_eval.vendored.bytecode', '_pydevd_bundle.pydevd_bytecode_utils', '_pydevd_bundle.pydevd_cython', '_pydevd_bundle.pydevd_cython_wrapper', '_pydevd_bundle.pydevd_additional_thread_info', '_pydevd_bundle.pydevd_thread_lifecycle', '_pydevd_bundle.pydevd_save_locals', '_pydevd_bundle.pydevd_defaults', '_pydev_bundle.pydev_monkey', 'pydevd_tracing', '_pydevd_bundle.pydevd_daemon_thread', '_pydevd_bundle.pydevd_timeout', '_pydevd_bundle.pydevd_vars', '_pydev_bundle.pydev_console_utils', '_pydevd_bundle.pydevd_import_class', '_pydevd_bundle.pydevd_breakpoints', '_pydevd_bundle.pydevd_custom_frames', '_pydevd_bundle.pydevd_dont_trace_files', '_pydevd_bundle.pydevd_net_command', '_pydev_bundle.pydev_umd', 'pydevconsole', '_pydev_bundle._pydev_completer', '_pydevd_bundle.pydevd_net_command_factory_xml', '_pydevd_bundle.pydevd_frame', '_pydevd_bundle.pydevd_additional_thread_info_regular', '_pydevd_bundle.pydevd_trace_dispatch', '_pydevd_frame_eval.pydevd_frame_eval_main', '_pydevd_bundle.pydevd_source_mapping', 'pydevd_concurrency_analyser.pydevd_thread_wrappers', 'pydevd_concurrency_analyser.pydevd_concurrency_logger', '_pydevd_bundle._debug_adapter', '_pydevd_bundle._debug_adapter.pydevd_schema_log', '_pydevd_bundle._debug_adapter.pydevd_base_schema', '_pydevd_bundle._debug_adapter.pydevd_schema', '_pydevd_bundle.pydevd_reload', '_pydev_bundle.fsnotify', '_pydevd_bundle.pydevd_console', '_pydevd_bundle.pydevd_comm', '_pydevd_bundle.pydevd_net_command_factory_json', '_pydevd_bundle.pydevd_collect_bytecode_info', '_pydevd_bundle.pydevd_api', '_pydevd_bundle.pydevd_json_debug_options', '_pydevd_bundle.pydevd_process_net_command_json', '_pydevd_bundle.pydevd_traceproperty', '_pydevd_bundle.pydevd_process_net_command', '_pydevd_bundle.pydevd_suspended_frames', '_pydevd_bundle.pydevd_trace_api', 'pydevd_plugins.django_debug', 'pydevd_plugins.jinja2_debug', '_pydevd_bundle.pydevd_plugin_utils', 'pydevd_plugins.extensions.types', 'pydevd_plugins.extensions.types.pydevd_helpers', 'pydevd_plugins.extensions.types.pydevd_plugin_numpy_types', 'pydevd_plugins.extensions.types.pydevd_plugins_django_form_str', 'pydevd', 'debugpy._vendored.force_pydevd', 'debugpy.server', 'debugpy.adapter', 'debugpy.common.timestamp', 'debugpy.common.util', 'debugpy.common.log', 'debugpy.common.sockets', 'debugpy.server.api', 'ipykernel.debugger', 'ipykernel.ipkernel', 'ipykernel.parentpoller', 'ipykernel.kernelapp', 'win32security', 'ntsecuritycon', 'faulthandler', 'IPython.core.completerlib', 'logging.config', 'pythonjsonlogger', 'pythonjsonlogger.jsonlogger', 'daiquiri.types', 'daiquiri.formatter', 'daiquiri.handlers', 'daiquiri.output', 'daiquiri', 'jupyter_require.__about__', 'csscompressor', 'jupyter_require.core', 'jupyter_require.notebook', 'jupyter_require', 'jupyter_nbutils.__about__', 'jupyter_nbutils.config', 'jupyter_nbutils.utils', 'jupyter_nbutils', 'jupyter_require.magic', 'numpy._globals', 'numpy.__config__', 'numpy._distributor_init', 'numpy._version', 'numpy.version', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core._asarray', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core._machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.stride_tricks', 'numpy.lib.twodim_base', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', '_cython_0_29_30', 'numpy.random._common', 'secrets', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'pytz', 'pandas._typing', '_cython_0_29_28', 'pandas._libs.tslibs.dtypes', 'pandas._libs.tslibs.base', 'pandas._libs.tslibs.np_datetime', 'pandas._libs.tslibs.nattype', 'pandas._libs.tslibs.timezones', 'pandas._libs.tslibs.ccalendar', 'pandas._libs.tslibs.tzconversion', 'pandas._config.config', 'pandas._config.dates', 'pandas._config.display', 'pandas._config', 'pandas._config.localization', 'pandas._libs.tslibs.strptime', 'pandas._libs.tslibs.fields', 'pandas._libs.tslibs.timedeltas', 'pandas._libs.tslibs.timestamps', 'dateutil.easter', 'pandas._libs.properties', 'pandas._libs.tslibs.offsets', 'pandas._libs.tslibs.parsing', 'pandas._libs.tslibs.conversion', 'pandas._libs.tslibs.period', 'pandas._libs.tslibs.vectorized', 'pandas._libs.tslibs', 'pandas._libs.ops_dispatch', 'pandas._libs.missing', 'pandas._libs.hashtable', 'pandas._libs.algos', 'pandas._libs.interval', 'pandas._libs', 'pandas.util._decorators', 'pandas.core', 'pandas.core.util', 'pandas._libs.tslib', 'pandas._libs.lib', 'pandas._libs.hashing', 'pandas.core.dtypes', 'pandas.util._exceptions', 'pandas.errors', 'pandas.core.dtypes.generic', 'pandas.core.dtypes.base', 'pandas.core.dtypes.inference', 'pandas.core.dtypes.dtypes', 'pandas.core.dtypes.common', 'pandas.core.util.hashing', 'pandas.util', 'pandas.util.version', 'pandas.compat.numpy', 'pandas.compat.pyarrow', 'pandas.compat', 'pandas.core.config_init', 'pandas.core.dtypes.missing', 'pandas.util._validators', 'pandas.core.dtypes.cast', 'pandas.core.dtypes.concat', 'pandas.core.array_algos', 'pandas.core.common', 'pandas.core.construction', 'pandas.core.array_algos.take', 'pandas.core.indexers.utils', 'pandas.core.indexers', 'pandas.core.algorithms', 'pandas.compat.numpy.function', 'pandas.core.roperator', 'pandas._libs.ops', 'pandas.core.computation', 'pandas.compat._optional', 'numexpr.interpreter', 'packaging.__about__', 'packaging', 'packaging._structures', 'packaging.version', 'numexpr.expressions', 'numexpr.utils', 'numexpr.necompiler', 'numexpr.version', 'numexpr', 'pandas.core.computation.check', 'pandas.core.computation.expressions', 'pandas.core.ops.missing', 'pandas.core.ops.dispatch', 'pandas.core.ops.invalid', 'pandas.core.ops.array_ops', 'pandas.core.ops.common', 'pandas.core.ops.docstrings', 'pandas.core.ops.mask_ops', 'pandas.core.ops.methods', 'pandas.core.ops', 'pandas.core.arraylike', 'pandas.core.missing', 'pandas.core.array_algos.quantile', 'pandas.core.sorting', 'pandas.core.arrays.base', 'bottleneck.benchmark', 'bottleneck.benchmark.autotimeit', 'bottleneck.benchmark.bench', 'bottleneck.benchmark.bench_detailed', 'bottleneck.tests', 'bottleneck.tests.util', 'bottleneck.slow.reduce', 'bottleneck.slow.nonreduce', 'bottleneck.slow.nonreduce_axis', 'bottleneck.slow.move', 'bottleneck.slow', 'bottleneck._pytesttester', 'bottleneck.move', 'bottleneck.nonreduce', 'bottleneck.nonreduce_axis', 'bottleneck.reduce', 'bottleneck._version', 'bottleneck', 'pandas.core.nanops', 'pandas.core.array_algos.masked_reductions', 'pandas.core.arrays.masked', 'pandas.core.arrays.boolean', 'pandas._libs.arrays', 'pandas.core.accessor', 'pandas.core.array_algos.transforms', 'pandas.core.arrays._mixins', 'pandas.core.base', 'pandas.core.strings.accessor', 'pandas.core.strings.base', 'pandas.core.strings', 'pandas.core.strings.object_array', 'pandas.io', 'pandas.io.formats', 'pandas.io.formats.console', 'pandas.core.arrays.categorical', 'pandas.tseries', 'pandas.tseries.frequencies', 'pandas.core.arrays.datetimelike', 'pandas.core.arrays._ranges', 'pandas.core.arrays.numeric', 'pandas.core.tools', 'pandas.core.tools.numeric', 'pandas.core.arrays.integer', 'pandas.tseries.offsets', 'pandas.core.arrays.datetimes', 'pandas.core.arrays.floating', 'pandas.core.indexes', 'pandas._libs.index', 'pandas._libs.join', 'pandas.core.array_algos.putmask', 'pandas._libs.sparse', 'pandas.core.arrays.sparse.dtype', 'pandas.io.formats.printing', 'pandas.core.arrays.sparse.array', 'pandas.core.arrays.sparse.accessor', 'pandas.core.arrays.sparse', 'pandas.core.indexes.frozen', 'pandas.core.indexes.base', 'pandas.core.arrays.interval', 'pandas.core.arrays.numpy_', 'pandas.core.arrays.period', 'pandas.core.arrays.string_', 'pandas.core.arrays.string_arrow', 'pandas.core.arrays.timedeltas', 'pandas.core.arrays', 'pandas.core.flags', 'pandas._libs.reduction', 'pandas.core.apply', 'pandas._libs.indexing', 'pandas.core.indexes.extension', 'pandas.core.indexes.category', 'pandas.core.indexes.numeric', 'pandas.core.indexes.range', 'pandas.core.tools.timedeltas', 'pandas.core.indexes.datetimelike', 'pandas.core.tools.times', 'pandas.core.indexes.datetimes', 'pandas.core.indexes.multi', 'pandas.core.indexes.timedeltas', 'pandas.core.indexes.interval', 'pandas.core.indexes.period', 'pandas.core.indexes.api', 'pandas.core.indexing', 'pandas.core.array_algos.replace', 'pandas.core.reshape', 'pandas._libs.internals', 'pandas._libs.writers', 'pandas.core.internals.blocks', 'pandas.core.internals.api', 'pandas.core.internals.base', 'pandas.core.internals.array_manager', 'pandas.core.internals.ops', 'pandas.core.internals.managers', 'pandas.core.internals.concat', 'pandas.core.internals', 'pandas.core.reshape.concat', 'mmap', 'pandas.core.shared_docs', 'pandas.io.common', 'pandas.io.formats.format', 'pandas.core.describe', 'pandas.core.internals.construction', 'pandas.core.sample', 'pandas._libs.window', 'pandas._libs.window.aggregations', 'pandas._libs.window.indexers', 'pandas.core.indexers.objects', 'pandas.core.util.numba_', 'pandas.core.window.common', 'pandas.core.window.doc', 'pandas.core.window.numba_', 'pandas.core.window.online', 'pandas.core._numba', 'pandas.core._numba.executor', 'pandas.core.window.rolling', 'pandas.core.window.ewm', 'pandas.core.window.expanding', 'pandas.core.window', 'pandas.core.generic', 'pandas.core.reshape.util', 'pandas.core.reshape.melt', 'pandas._libs.reshape', 'pandas.core.indexes.accessors', 'pandas.arrays', 'pandas.core.tools.datetimes', 'pandas.io.formats.info', 'pandas.plotting._core', 'pandas.plotting._misc', 'pandas.plotting', 'pandas.core.series', 'pandas.core.frame', 'pandas.core.groupby.base', 'pandas._libs.groupby', 'pandas.core.groupby.numba_', 'pandas.core.groupby.categorical', 'pandas.core.groupby.grouper', 'pandas.core.groupby.ops', 'pandas.core.groupby.indexing', 'pandas.core.groupby.groupby', 'pandas.core.groupby.generic', 'pandas.core.groupby', 'pandas.core.api', 'pandas.tseries.api', 'pandas.core.computation.common', 'pandas.core.computation.align', 'pandas.compat.chainmap', 'pandas.core.computation.scope', 'pandas.core.computation.ops', 'pandas.core.computation.parsing', 'pandas.core.computation.expr', 'pandas.core.computation.engines', 'pandas.core.computation.eval', 'pandas.core.computation.api', 'pandas.core.reshape.merge', 'pandas.core.reshape.pivot', 'pandas.core.reshape.reshape', 'pandas.core.reshape.tile', 'pandas.core.reshape.api', 'pandas.api.extensions', 'pandas.api.indexers', 'pandas.core.dtypes.api', 'pandas.api.types', 'pandas.api', 'pandas._testing._random', 'pandas._testing.contexts', 'pandas._testing._io', 'pandas._testing._warnings', 'cmath', 'pandas._libs.testing', 'pandas._testing.asserters', 'pandas._testing.compat', 'pandas._testing', 'pandas.testing', 'pandas.util._print_versions', 'pandas.io.clipboards', 'pandas._libs.parsers', 'pandas.io.excel._util', 'pandas.io.date_converters', 'pandas.io.parsers.base_parser', 'pandas.io.parsers.arrow_parser_wrapper', 'pandas.io.parsers.c_parser_wrapper', 'pandas.io.parsers.python_parser', 'pandas.io.parsers.readers', 'pandas.io.parsers', 'pandas.io.excel._odfreader', 'pandas.io.excel._openpyxl', 'pandas.io.excel._pyxlsb', 'pandas.io.excel._xlrd', 'pandas.io.excel._base', 'pandas._libs.json', 'pandas.io.formats._color_data', 'pandas.io.formats.css', 'pandas.io.formats.excel', 'pandas.io.excel._odswriter', 'pandas.io.excel._xlsxwriter', 'pandas.io.excel._xlwt', 'pandas.io.excel', 'pandas.io.feather_format', 'pandas.io.gbq', 'pandas.io.html', 'pandas.io.json._normalize', 'pandas.io.json._table_schema', 'pandas.io.json._json', 'pandas.io.json', 'pandas.io.orc', 'pandas.io.parquet', 'pandas.compat.pickle_compat', 'pandas.io.pickle', 'pandas.core.computation.pytables', 'pandas.io.pytables', 'pandas.io.sas.sasreader', 'pandas.io.sas', 'pandas.io.spss', 'pandas.io.sql', 'pandas.io.stata', 'pandas.io.xml', 'pandas.io.api', 'pandas.util._tester', 'pandas._version', 'pandas', 'summarytools', 'summarytools.htmlwidgets', 'summarytools.summarytools', 'matplotlib', 'matplotlib._api.deprecation', 'matplotlib._api', 'matplotlib._version', 'matplotlib._c_internal_utils', 'matplotlib.cbook', 'matplotlib.docstring', 'PIL._version', 'PIL', 'defusedxml.common', 'defusedxml', 'xml.etree', 'xml.etree.ElementPath', '_elementtree', 'xml.etree.ElementTree', 'defusedxml.ElementTree', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._util', 'PIL._imaging', 'cffi.lock', 'cffi.error', 'cffi.model', 'cffi.api', 'cffi', 'PIL.Image', 'PIL.ImageChops', 'PIL.ImageFile', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'PIL.ImagePalette', 'PIL.ImageSequence', 'PIL.PngImagePlugin', 'matplotlib._path', 'matplotlib.bezier', 'matplotlib.path', 'matplotlib.transforms', 'matplotlib.ticker', 'matplotlib.scale', 'matplotlib._color_data', 'matplotlib.colors', 'pyparsing.util', 'pyparsing.unicode', 'pyparsing.exceptions', 'pyparsing.actions', 'pyparsing.results', 'pyparsing.core', 'pyparsing.helpers', 'pyparsing.testing', 'pyparsing.common', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib._enums', 'cycler', 'matplotlib.rcsetup', 'matplotlib.ft2font', 'kiwisolver']
2023-04-14 12:10:21,961 [10756] DEBUG    matplotlib:275: [JupyterRequire] CACHEDIR=C:\Users\adity\.matplotlib
2023-04-14 12:10:21,973 [10756] DEBUG    matplotlib.font_manager:1439: [JupyterRequire] Using fontManager instance from C:\Users\adity\.matplotlib\fontlist-v330.json
2023-04-14 12:10:22,794 [10756] DEBUG    matplotlib.pyplot:280: [JupyterRequire] Loaded backend module://matplotlib_inline.backend_inline version unknown.
2023-04-14 12:10:22,799 [10756] DEBUG    matplotlib.pyplot:280: [JupyterRequire] Loaded backend module://matplotlib_inline.backend_inline version unknown.
2023-04-14 12:10:24,280 [10756] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-04-14 12:10:24,282 [10756] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-04-14 12:10:24,282 [10756] INFO     root:247: [JupyterRequire] Initializing comms.
2023-04-14 12:10:24,287 [10756] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-04-14 12:10:24,288 [10756] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-04-14 12:10:24,289 [10756] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-04-14 12:10:45,181 [19600] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-04-14 12:10:45,182 [19600] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-04-14 12:10:45,182 [19600] INFO     root:247: [JupyterRequire] Initializing comms.
2023-04-14 12:10:45,184 [19600] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-04-14 12:10:45,185 [19600] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-04-14 12:10:45,186 [19600] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-04-14 12:10:48,526 [19600] INFO     numexpr.utils:147: [JupyterRequire] Note: NumExpr detected 12 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
2023-04-14 12:10:48,527 [19600] INFO     numexpr.utils:159: [JupyterRequire] NumExpr defaulting to 8 threads.
2023-04-14 12:10:49,224 [19600] DEBUG    matplotlib:275: [JupyterRequire] matplotlib data path: C:\Users\adity\anaconda3\lib\site-packages\matplotlib\mpl-data
2023-04-14 12:10:49,231 [19600] DEBUG    matplotlib:275: [JupyterRequire] CONFIGDIR=C:\Users\adity\.matplotlib
2023-04-14 12:10:49,234 [19600] DEBUG    matplotlib:1445: [JupyterRequire] interactive is False
2023-04-14 12:10:49,234 [19600] DEBUG    matplotlib:1446: [JupyterRequire] platform is win32
2023-04-14 12:10:49,235 [19600] DEBUG    matplotlib:1447: [JupyterRequire] loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', '_io', 'marshal', 'nt', 'winreg', '_frozen_importlib_external', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', 'encodings.cp1252', '_signal', 'encodings.latin_1', '_abc', 'abc', 'io', '__main__', '_stat', 'stat', '_collections_abc', 'genericpath', 'ntpath', 'os.path', 'os', '_sitebuiltins', '_locale', '_bootlocale', '_distutils_hack', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib.machinery', '_heapq', 'heapq', 'itertools', 'keyword', '_operator', 'operator', 'reprlib', '_collections', 'collections', 'collections.abc', '_functools', 'functools', 'contextlib', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', 'copyreg', 're', 'typing.io', 'typing.re', 'typing', 'importlib.abc', 'importlib.util', 'google', 'google.cloud', 'google.logging', 'mpl_toolkits', 'sphinxcontrib', 'zope', 'site', '_weakrefset', 'weakref', 'pkgutil', 'runpy', 'ipykernel._version', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'errno', 'signal', 'threading', 'msvcrt', '_winapi', 'subprocess', 'jupyter_client._version', 'posixpath', 'fnmatch', 'glob', '_socket', 'math', 'select', 'selectors', 'socket', 'zlib', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', '_bisect', 'bisect', '_random', '_sha512', 'random', 'tempfile', 'getpass', 'platform', 'zmq.libzmq', 'zmq.backend.select', 'cython_runtime', 'zmq.backend.cython.constants', '_cython_0_29_24', 'zmq.backend.cython.error', 'zmq.error', 'zmq.backend.cython.message', 'zmq.backend.cython.context', 'copy', '_struct', 'struct', '_compat_pickle', '_pickle', 'pickle', 'zmq.backend.cython.socket', 'zmq.backend.cython.utils', 'zmq.backend.cython._poll', 'zmq.backend.cython._version', 'zmq.backend.cython._device', 'zmq.backend.cython._proxy_steerable', 'zmq.backend.cython', 'zmq.backend', 'zmq.utils', 'zmq.utils.constant_names', 'zmq.sugar.constants', 'atexit', 'zmq.sugar.attrsettr', 'zmq.sugar.poll', 'zmq.utils.jsonapi', 'zmq.utils.strtypes', 'zmq.sugar.socket', 'zmq.sugar.context', 'zmq.sugar.frame', 'zmq.sugar.tracker', 'zmq.sugar.version', 'zmq.sugar.stopwatch', 'zmq.sugar', 'zmq', '_ast', 'ast', '_opcode', 'opcode', 'dis', 'token', 'tokenize', 'linecache', 'inspect', 'traitlets.utils', 'traitlets.utils.getargspec', 'traitlets.utils.importstring', 'traitlets.utils.sentinel', 'traitlets.utils.bunch', 'traitlets.utils.descriptions', 'traitlets.traitlets', 'traitlets.utils.decorators', 'traitlets._version', 'traitlets', 'traceback', '_string', 'string', 'logging', 'pprint', 'gettext', 'argparse', 'traitlets.config.loader', 'textwrap', 'traitlets.utils.text', 'traitlets.config.configurable', 'traitlets.config.application', 'traitlets.config', 'jupyter_client.localinterfaces', 'jupyter_core.version', 'jupyter_core', 'urllib', 'urllib.parse', 'pathlib', 'jupyter_core.paths', 'jupyter_client.utils', 'jupyter_client.connect', 'traitlets.log', 'jupyter_client.launcher', 'concurrent', 'concurrent.futures._base', 'concurrent.futures', '_ssl', 'binascii', 'base64', 'ssl', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', '_contextvars', 'contextvars', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.threads', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'asyncio.windows_events', 'asyncio', 'jupyter_client.channelsabc', 'jupyter_client.channels', 'jupyter_client.clientabc', 'jupyter_client.client', 'jupyter_client.kernelspec', 'jupyter_client.managerabc', 'jupyter_client.manager', '_queue', 'queue', 'jupyter_client.blocking.channels', 'jupyter_client.blocking.client', 'jupyter_client.blocking', 'zmq._future', 'zmq.asyncio', 'jupyter_client.asynchronous.channels', 'jupyter_client.asynchronous.client', 'jupyter_client.asynchronous', '_uuid', 'uuid', 'jupyter_client.multikernelmanager', 'jupyter_client', 'ipykernel.connect', 'ipykernel', 'tornado', '_datetime', 'datetime', 'numbers', 'logging.handlers', 'html.entities', 'html', 'array', 'tornado.speedups', 'tornado.util', 'tornado.escape', 'colorama.ansi', '_ctypes', 'ctypes._endian', 'ctypes', 'ctypes.wintypes', 'colorama.win32', 'colorama.winterm', 'colorama.ansitowin32', 'colorama.initialise', 'colorama', 'tornado.log', 'tornado.concurrent', 'tornado.ioloop', '__future__', 'tornado.platform', 'tornado.gen', 'tornado.platform.asyncio', 'zmq.eventloop.ioloop', 'zmq.eventloop', 'zmq.eventloop.zmqstream', 'IPython.core', 'IPython.core.getipython', 'IPython.core.release', 'sysconfig', 'pydoc', 'executing.executing', 'executing.version', 'executing', 'asttokens.line_numbers', 'six', 'six.moves', 'asttokens.util', 'asttokens.mark_tokens', 'asttokens.asttokens', 'asttokens', '_decimal', 'decimal', 'fractions', 'pure_eval.utils', 'pure_eval.my_getattr_static', 'pure_eval.core', 'pure_eval.version', 'pure_eval', 'stack_data.utils', 'stack_data.core', 'stack_data.formatting', 'stack_data.version', 'stack_data', 'pygments', 'pygments.formatters._mapping', 'pygments.plugin', 'pygments.util', 'pygments.formatters', 'pygments.styles', 'pygments.formatter', 'pygments.console', 'pygments.token', 'pygments.style', 'pygments.formatters.terminal256', 'bdb', 'IPython.utils', 'IPython.utils.ipstruct', 'IPython.utils.coloransi', 'IPython.utils.colorable', 'IPython.utils.PyColorize', 'locale', 'IPython.utils.encoding', 'IPython.utils.py3compat', 'IPython.core.excolors', 'cmd', 'codeop', 'code', 'pdb', 'IPython.core.debugger', 'IPython.core.display_trap', 'shlex', 'IPython.utils._process_common', 'IPython.utils._process_win32', 'IPython.utils.process', 'IPython.utils.decorators', 'IPython.utils.path', 'IPython.utils.terminal', 'IPython.core.ultratb', 'IPython.utils._sysinfo', 'IPython.utils.sysinfo', 'IPython.core.crashhandler', 'IPython.utils.importstring', 'IPython.paths', 'IPython.core.profiledir', 'IPython.core.application', 'IPython.terminal', '_hashlib', '_blake2', 'hashlib', 'IPython.core.compilerop', 'IPython.core.error', 'IPython.utils.text', 'IPython.core.magic_arguments', 'getopt', 'IPython.core.display_functions', 'mimetypes', 'IPython.testing', 'IPython.testing.skipdoctest', 'IPython.core.display', 'IPython.lib', 'IPython.lib.display', 'IPython.display', 'IPython.utils.data', 'IPython.core.page', 'IPython.lib.pretty', 'IPython.utils.openpy', 'IPython.utils.dir2', 'IPython.utils.wildcard', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.lexers', 'pygments.filter', 'pygments.filters', 'pygments.regexopt', 'pygments.lexer', 'pygments.unistring', 'pygments.lexers.python', 'pygments.formatters.html', 'IPython.core.oinspect', 'IPython.core.inputtransformer2', 'IPython.core.magic', 'pickleshare', 'IPython.core.hooks', 'IPython.core.autocall', 'IPython.core.macro', 'IPython.core.splitinput', 'IPython.core.prefilter', 'IPython.core.alias', 'IPython.core.builtin_trap', 'IPython.core.displayhook', 'IPython.core.displaypub', 'backcall.backcall', 'backcall', 'IPython.core.events', 'IPython.core.extensions', 'decorator', 'IPython.utils.sentinel', 'IPython.core.formatters', '_sqlite3', 'sqlite3.dbapi2', 'sqlite3', 'IPython.core.history', 'IPython.core.logger', 'IPython.core.payload', 'IPython.core.usage', 'IPython.utils.capture', 'IPython.utils.io', 'IPython.utils.strdispatch', 'IPython.utils.syspathcontext', 'IPython.core.async_helpers', 'IPython.core.interactiveshell', 'prompt_toolkit.application.current', 'prompt_toolkit.eventloop.utils', 'prompt_toolkit.eventloop.async_generator', 'wcwidth.table_wide', 'wcwidth.table_zero', 'wcwidth.unicode_versions', 'wcwidth.wcwidth', 'wcwidth', 'prompt_toolkit.utils', 'prompt_toolkit.eventloop.inputhook', 'prompt_toolkit.eventloop', 'prompt_toolkit.application.run_in_terminal', 'prompt_toolkit.selection', 'prompt_toolkit.clipboard.base', 'prompt_toolkit.clipboard.in_memory', 'prompt_toolkit.clipboard', 'prompt_toolkit.cache', 'prompt_toolkit.enums', 'prompt_toolkit.filters.base', 'prompt_toolkit.filters.app', 'prompt_toolkit.filters.cli', 'prompt_toolkit.filters.utils', 'prompt_toolkit.filters', 'prompt_toolkit.document', 'prompt_toolkit.auto_suggest', 'prompt_toolkit.data_structures', 'prompt_toolkit.styles.base', 'prompt_toolkit.styles.named_colors', 'prompt_toolkit.styles.style', 'prompt_toolkit.styles.defaults', 'prompt_toolkit.styles.pygments', 'colorsys', 'prompt_toolkit.styles.style_transformation', 'prompt_toolkit.styles', 'prompt_toolkit.output.color_depth', 'prompt_toolkit.output.base', 'prompt_toolkit.output.defaults', 'prompt_toolkit.output', 'prompt_toolkit.output.vt100', 'prompt_toolkit.mouse_events', 'prompt_toolkit.formatted_text.base', 'prompt_toolkit.formatted_text.ansi', 'xml', 'xml.dom.domreg', 'xml.dom', 'xml.dom.minicompat', 'xml.dom.NodeFilter', 'xml.dom.xmlbuilder', 'xml.dom.minidom', 'prompt_toolkit.formatted_text.html', 'prompt_toolkit.formatted_text.pygments', 'prompt_toolkit.formatted_text.utils', 'prompt_toolkit.formatted_text', 'prompt_toolkit.completion.base', 'prompt_toolkit.completion.deduplicate', 'prompt_toolkit.completion.filesystem', 'prompt_toolkit.completion.word_completer', 'prompt_toolkit.completion.fuzzy_completer', 'prompt_toolkit.completion.nested', 'prompt_toolkit.completion', 'prompt_toolkit.history', 'prompt_toolkit.keys', 'prompt_toolkit.key_binding.key_bindings', 'prompt_toolkit.key_binding.key_processor', 'prompt_toolkit.key_binding', 'prompt_toolkit.key_binding.vi_state', 'prompt_toolkit.search', 'prompt_toolkit.validation', 'prompt_toolkit.buffer', 'prompt_toolkit.input.base', 'prompt_toolkit.input.defaults', 'prompt_toolkit.input', 'prompt_toolkit.input.typeahead', 'prompt_toolkit.key_binding.bindings', 'prompt_toolkit.key_binding.bindings.scroll', 'prompt_toolkit.key_binding.bindings.page_navigation', 'prompt_toolkit.lexers.base', 'prompt_toolkit.lexers.pygments', 'prompt_toolkit.lexers', 'prompt_toolkit.layout.utils', 'prompt_toolkit.layout.processors', 'prompt_toolkit.layout.controls', 'prompt_toolkit.layout.dimension', 'prompt_toolkit.layout.margins', 'prompt_toolkit.layout.mouse_handlers', 'prompt_toolkit.layout.screen', 'prompt_toolkit.layout.containers', 'prompt_toolkit.layout.layout', 'prompt_toolkit.layout.menus', 'prompt_toolkit.layout.scrollable_pane', 'prompt_toolkit.layout', 'prompt_toolkit.key_binding.bindings.completion', 'prompt_toolkit.key_binding.bindings.named_commands', 'prompt_toolkit.key_binding.bindings.basic', 'prompt_toolkit.key_binding.bindings.cpr', 'prompt_toolkit.key_binding.bindings.emacs', 'prompt_toolkit.key_binding.bindings.mouse', 'prompt_toolkit.input.ansi_escape_sequences', 'prompt_toolkit.input.vt100_parser', 'prompt_toolkit.key_binding.digraphs', 'prompt_toolkit.key_binding.bindings.vi', 'prompt_toolkit.key_binding.defaults', 'prompt_toolkit.key_binding.emacs_state', 'prompt_toolkit.layout.dummy', 'prompt_toolkit.renderer', 'prompt_toolkit.application.application', 'prompt_toolkit.application.dummy', 'prompt_toolkit.application', 'prompt_toolkit.key_binding.bindings.focus', 'prompt_toolkit.widgets.toolbars', 'prompt_toolkit.widgets.base', 'prompt_toolkit.widgets.dialogs', 'prompt_toolkit.widgets.menus', 'prompt_toolkit.widgets', 'prompt_toolkit.shortcuts.dialogs', 'prompt_toolkit.shortcuts.progress_bar.formatters', 'prompt_toolkit.shortcuts.progress_bar.base', 'prompt_toolkit.shortcuts.progress_bar', 'prompt_toolkit.key_binding.bindings.auto_suggest', 'prompt_toolkit.key_binding.bindings.open_in_editor', 'prompt_toolkit.shortcuts.prompt', 'prompt_toolkit.shortcuts.utils', 'prompt_toolkit.shortcuts', 'prompt_toolkit', 'prompt_toolkit.patch_stdout', 'unicodedata', 'IPython.core.latex_symbols', 'IPython.utils.generics', 'parso.utils', 'parso.tree', 'parso.python', 'parso.python.token', 'parso.python.tokenize', 'parso.pgen2.grammar_parser', 'parso.pgen2.generator', 'parso.pgen2', 'parso.parser', 'parso._compatibility', 'difflib', 'parso.python.prefix', 'parso.python.tree', 'parso.python.parser', 'parso.python.diff', 'gc', 'parso.cache', 'parso.normalizer', 'parso.python.errors', 'parso.python.pep8', 'parso.file_io', 'parso.grammar', 'parso', 'jedi.parser_utils', 'jedi.debug', 'jedi.settings', 'jedi.cache', 'jedi.file_io', 'jedi.inference.cache', 'jedi.inference.helpers', 'jedi.inference.utils', 'jedi.inference.base_value', 'jedi.inference.sys_path', 'jedi.inference.recursion', 'jedi.inference.flow_analysis', 'jedi.common', 'jedi.inference.lazy_value', 'jedi.inference.docstrings', 'jedi.plugins', 'jedi.inference.names', 'jedi.inference.filters', 'jedi.inference.compiled.getattr_static', 'jedi.inference.compiled.access', 'jedi.inference.signature', 'jedi.inference.context', 'jedi.inference.compiled.value', 'jedi.inference.compiled', 'jedi.inference.analysis', 'jedi.inference.gradual', 'jedi.inference.value.module', 'jedi.inference.value.dynamic_arrays', 'jedi.inference.value.iterable', 'jedi.inference.arguments', 'jedi.inference.parser_cache', 'jedi.inference.gradual.generics', 'jedi.inference.value.function', 'jedi.inference.value.klass', 'jedi.inference.value.instance', 'jedi.inference.value', 'jedi.inference.gradual.base', 'jedi.inference.gradual.type_var', 'jedi.inference.gradual.typing', 'jedi.inference.gradual.stub_value', 'jedi.inference.gradual.typeshed', 'jedi._compatibility', 'zipfile', 'jedi.inference.compiled.subprocess.functions', 'jedi.api.exceptions', 'jedi.inference.compiled.subprocess', 'jedi.inference.imports', 'jedi.inference.param', 'jedi.inference.gradual.annotation', 'jedi.inference.value.decorator', 'jedi.inference.syntax_tree', 'jedi.inference', 'jedi.inference.gradual.conversion', 'jedi.inference.compiled.mixed', 'pydoc_data', 'pydoc_data.topics', 'jedi.api.keywords', 'jedi.api.completion_cache', 'jedi.api.helpers', 'jedi.api.classes', 'jedi.api.interpreter', 'jedi.api.strings', 'jedi.api.file_name', 'jedi.inference.docstring_utils', 'jedi.api.completion', 'filecmp', 'jedi.api.environment', 'jedi.inference.references', 'jedi.api.project', 'jedi.api.errors', 'jedi.api.refactoring', 'jedi.api.refactoring.extract', 'jedi.inference.gradual.utils', 'jedi.api', 'jedi.plugins.stdlib', 'jedi.plugins.flask', 'jedi.plugins.pytest', 'jedi.plugins.django', 'jedi.plugins.registry', 'jedi', 'IPython.core.completer', 'IPython.terminal.ptutils', 'IPython.lib.clipboard', 'IPython.terminal.shortcuts', 'concurrent.futures.thread', 'IPython.terminal.debugger', 'IPython.terminal.magics', 'IPython.terminal.pt_inputhooks', 'IPython.terminal.prompts', 'IPython.terminal.interactiveshell', 'IPython.core.magics.auto', 'IPython.core.magics.basic', 'email', 'http', 'email.errors', 'email.quoprimime', 'email.base64mime', 'quopri', 'email.encoders', 'email.charset', 'email.header', 'calendar', 'email._parseaddr', 'email.utils', 'email._policybase', 'email.feedparser', 'email.parser', 'uu', 'email._encoded_words', 'email.iterators', 'email.message', 'http.client', 'urllib.response', 'urllib.error', 'nturl2path', 'urllib.request', 'IPython.utils.contexts', 'IPython.core.magics.code', 'IPython.core.magics.config', 'IPython.core.magics.display', '_lsprof', 'profile', 'cProfile', 'dataclasses', 'pstats', 'timeit', 'IPython.utils.module_paths', 'IPython.utils.timing', 'IPython.core.magics.execution', 'IPython.core.magics.extension', 'IPython.core.magics.history', 'IPython.core.magics.logging', 'IPython.core.magics.namespace', 'IPython.core.magics.osm', 'IPython.core.magics.packaging', 'IPython.core.pylabtools', 'IPython.core.magics.pylab', 'IPython.core.magics.script', 'IPython.core.magics', 'IPython.core.shellapp', 'IPython.extensions', 'IPython.extensions.storemagic', 'IPython.terminal.ipapp', 'IPython.terminal.embed', 'IPython.utils.frame', 'IPython', 'imp', 'hmac', 'dateutil._version', 'dateutil', 'dateutil._common', 'dateutil.relativedelta', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.win', 'dateutil.tz.tz', 'dateutil.tz', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', '_strptime', 'jupyter_client.jsonutil', 'jupyter_client.adapter', 'jupyter_client.session', 'ipykernel.iostream', 'ipykernel.control', 'ipykernel.heartbeat', 'IPython.utils.tokenutil', 'psutil._common', 'psutil._compat', 'psutil._psutil_windows', 'psutil._pswindows', 'psutil', 'tornado.locks', 'tornado.queues', 'ipykernel.jsonutil', 'ipykernel.kernelbase', 'ipykernel.comm.comm', 'ipykernel.comm.manager', 'ipykernel.comm', 'IPython.core.payloadpage', 'ipykernel.displayhook', 'ipykernel.zmqshell', 'setuptools._distutils', 'distutils.debug', 'distutils.errors', 'distutils.fancy_getopt', 'distutils.dep_util', 'distutils.log', 'distutils.spawn', 'distutils.py35compat', 'distutils.util', 'distutils.dist', 'distutils.dir_util', 'distutils.file_util', 'distutils.archive_util', 'distutils.cmd', 'configparser', 'distutils.config', 'distutils.extension', 'distutils.core', '_distutils_hack.override', 'setuptools._deprecation_warning', 'xml.parsers', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'xml.parsers.expat', 'plistlib', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources._vendor.jaraco', 'pkg_resources.extern.jaraco', 'importlib._common', 'importlib.resources', 'pkg_resources._vendor.more_itertools.recipes', 'pkg_resources._vendor.more_itertools.more', 'pkg_resources._vendor.more_itertools', 'pkg_resources.extern.more_itertools', 'pkg_resources.extern.jaraco.functools', 'pkg_resources.extern.jaraco.context', 'pkg_resources.extern.jaraco.text', 'win32api', '_win32sysloader', 'pywintypes', 'pythoncom', 'win32com.gen_py', 'win32com', 'win32com.shell', 'pkg_resources._vendor.appdirs', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources._vendor.packaging', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.version', 'pkg_resources._vendor.packaging._manylinux', 'pkg_resources._vendor.packaging._musllinux', 'pkg_resources.extern.packaging.tags', 'pkg_resources.extern.packaging.utils', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources._vendor.pyparsing', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.packaging.markers', 'pkg_resources.extern.packaging.requirements', 'pkg_resources', 'setuptools.version', 'distutils.filelist', 'setuptools.monkey', 'setuptools.extension', 'distutils.command', 'setuptools.extern', 'setuptools._vendor', 'setuptools._vendor.packaging.__about__', 'setuptools._vendor.packaging', 'setuptools.extern.packaging', 'setuptools._vendor.ordered_set', 'setuptools.extern.ordered_set', 'setuptools._vendor.more_itertools.recipes', 'setuptools._vendor.more_itertools.more', 'setuptools._vendor.more_itertools', 'setuptools.extern.more_itertools', 'setuptools._vendor.pyparsing', 'setuptools.extern.pyparsing', 'setuptools._vendor.packaging._manylinux', 'setuptools._vendor.packaging._musllinux', 'setuptools.extern.packaging.tags', 'setuptools.extern.packaging._structures', 'setuptools.extern.packaging.version', 'setuptools.extern.packaging.utils', 'setuptools.extern.packaging.specifiers', 'setuptools.extern.packaging.markers', 'setuptools.extern.packaging.requirements', 'setuptools._vendor.jaraco', 'setuptools.extern.jaraco', 'setuptools.extern.jaraco.context', 'setuptools.extern.jaraco.functools', '_csv', 'csv', 'setuptools._vendor.zipp', 'setuptools._vendor.importlib_metadata._functools', 'setuptools._vendor.importlib_metadata._text', 'setuptools._vendor.importlib_metadata._adapters', 'setuptools._vendor.importlib_metadata._compat', 'setuptools._vendor.importlib_metadata._meta', 'setuptools._vendor.importlib_metadata._collections', 'setuptools._vendor.importlib_metadata._itertools', 'setuptools._vendor.importlib_metadata', 'setuptools.extern.importlib_metadata', 'setuptools._vendor.nspektr._compat', 'setuptools._vendor.nspektr', 'setuptools.extern.nspektr', 'zipp', 'importlib_metadata._functools', 'importlib_metadata._text', 'importlib_metadata._adapters', 'importlib_metadata._compat', 'importlib_metadata._meta', 'importlib_metadata._collections', 'importlib_metadata._itertools', 'importlib_metadata', 'setuptools._importlib', 'distutils.command.bdist', 'setuptools.command', 'setuptools.windows_support', 'setuptools.config.expand', 'setuptools.config.setupcfg', 'setuptools.config', 'setuptools.errors', 'email._header_value_parser', 'email.headerregistry', 'setuptools.config._apply_pyprojecttoml', 'setuptools.config.pyprojecttoml', 'setuptools.discovery', 'setuptools.extern.jaraco.text', 'setuptools._reqs', 'setuptools._itertools', 'setuptools._entry_points', 'setuptools.dist', 'setuptools.py34compat', 'setuptools._imp', 'setuptools.depends', 'setuptools.logging', 'distutils.ccompiler', 'distutils.msvc9compiler', 'setuptools.msvc', 'unittest.util', 'unittest.result', 'unittest.case', 'unittest.suite', 'unittest.loader', 'unittest.signals', 'unittest.runner', 'unittest.main', 'unittest', 'unittest.mock', 'distutils._msvccompiler', 'setuptools', 'distutils', 'distutils.version', 'ipykernel.eventloops', 'ipykernel.compiler', 'debugpy._version', 'debugpy.common', 'debugpy.common.json', 'debugpy.common.fmt', 'debugpy.common.compat', 'debugpy', 'debugpy._vendored._util', 'debugpy._vendored', '_pydevd_bundle', 'encodings.ascii', 'stringprep', 'encodings.idna', '_pydevd_bundle.pydevd_vm_type', '_pydev_imps', 'xmlrpc', 'gzip', 'xmlrpc.client', 'socketserver', 'http.server', 'xmlrpc.server', '_pydev_imps._pydev_saved_modules', '_pydevd_bundle.pydevd_constants', '_pydev_bundle', '_pydev_runfiles', '_pydevd_frame_eval', 'pydev_ipython', 'pydevd_concurrency_analyser', 'pydevd_plugins', '_pydev_bundle.pydev_log', '_pydev_bundle._pydev_filesystem_encoding', '_pydevd_bundle.pydevd_comm_constants', 'pydevd_file_utils', '_pydev_imps._pydev_execfile', '_pydevd_bundle.pydevd_exec2', '_pydev_bundle.pydev_imports', '_pydev_bundle.pydev_is_thread_alive', '_pydev_bundle.pydev_override', 'pydevd_plugins.extensions', '_pydevd_bundle.pydevd_extension_utils', '_pydevd_bundle.pydevd_frame_utils', '_pydevd_bundle.pydevd_filtering', '_pydevd_bundle.pydevd_io', '_pydevd_bundle.pydevd_utils', '_pydev_bundle._pydev_tipper_common', '_pydev_bundle._pydev_imports_tipper', '_pydev_bundle._pydev_calltip_util', '_pydevd_bundle.pydevd_safe_repr', '_pydevd_bundle.pydevd_resolver', '_pydevd_bundle.pydevd_extension_api', '_pydevd_bundle.pydevd_xml', '_pydevd_bundle.pydevd_dont_trace', '_pydevd_frame_eval.vendored', '_pydevd_frame_eval.vendored.bytecode.flags', '_pydevd_frame_eval.vendored.bytecode.instr', '_pydevd_frame_eval.vendored.bytecode.bytecode', '_pydevd_frame_eval.vendored.bytecode.concrete', '_pydevd_frame_eval.vendored.bytecode.cfg', '_pydevd_frame_eval.vendored.bytecode', '_pydevd_bundle.pydevd_bytecode_utils', '_pydevd_bundle.pydevd_cython', '_pydevd_bundle.pydevd_cython_wrapper', '_pydevd_bundle.pydevd_additional_thread_info', '_pydevd_bundle.pydevd_thread_lifecycle', '_pydevd_bundle.pydevd_save_locals', '_pydevd_bundle.pydevd_defaults', '_pydev_bundle.pydev_monkey', 'pydevd_tracing', '_pydevd_bundle.pydevd_daemon_thread', '_pydevd_bundle.pydevd_timeout', '_pydevd_bundle.pydevd_vars', '_pydev_bundle.pydev_console_utils', '_pydevd_bundle.pydevd_import_class', '_pydevd_bundle.pydevd_breakpoints', '_pydevd_bundle.pydevd_custom_frames', '_pydevd_bundle.pydevd_dont_trace_files', '_pydevd_bundle.pydevd_net_command', '_pydev_bundle.pydev_umd', 'pydevconsole', '_pydev_bundle._pydev_completer', '_pydevd_bundle.pydevd_net_command_factory_xml', '_pydevd_bundle.pydevd_frame', '_pydevd_bundle.pydevd_additional_thread_info_regular', '_pydevd_bundle.pydevd_trace_dispatch', '_pydevd_frame_eval.pydevd_frame_eval_main', '_pydevd_bundle.pydevd_source_mapping', 'pydevd_concurrency_analyser.pydevd_thread_wrappers', 'pydevd_concurrency_analyser.pydevd_concurrency_logger', '_pydevd_bundle._debug_adapter', '_pydevd_bundle._debug_adapter.pydevd_schema_log', '_pydevd_bundle._debug_adapter.pydevd_base_schema', '_pydevd_bundle._debug_adapter.pydevd_schema', '_pydevd_bundle.pydevd_reload', '_pydev_bundle.fsnotify', '_pydevd_bundle.pydevd_console', '_pydevd_bundle.pydevd_comm', '_pydevd_bundle.pydevd_net_command_factory_json', '_pydevd_bundle.pydevd_collect_bytecode_info', '_pydevd_bundle.pydevd_api', '_pydevd_bundle.pydevd_json_debug_options', '_pydevd_bundle.pydevd_process_net_command_json', '_pydevd_bundle.pydevd_traceproperty', '_pydevd_bundle.pydevd_process_net_command', '_pydevd_bundle.pydevd_suspended_frames', '_pydevd_bundle.pydevd_trace_api', 'pydevd_plugins.django_debug', 'pydevd_plugins.jinja2_debug', '_pydevd_bundle.pydevd_plugin_utils', 'pydevd_plugins.extensions.types', 'pydevd_plugins.extensions.types.pydevd_helpers', 'pydevd_plugins.extensions.types.pydevd_plugin_numpy_types', 'pydevd_plugins.extensions.types.pydevd_plugins_django_form_str', 'pydevd', 'debugpy._vendored.force_pydevd', 'debugpy.server', 'debugpy.adapter', 'debugpy.common.timestamp', 'debugpy.common.util', 'debugpy.common.log', 'debugpy.common.sockets', 'debugpy.server.api', 'ipykernel.debugger', 'ipykernel.ipkernel', 'ipykernel.parentpoller', 'ipykernel.kernelapp', 'win32security', 'ntsecuritycon', 'faulthandler', 'IPython.core.completerlib', 'logging.config', 'pythonjsonlogger', 'pythonjsonlogger.jsonlogger', 'daiquiri.types', 'daiquiri.formatter', 'daiquiri.handlers', 'daiquiri.output', 'daiquiri', 'jupyter_require.__about__', 'csscompressor', 'jupyter_require.core', 'jupyter_require.notebook', 'jupyter_require', 'jupyter_nbutils.__about__', 'jupyter_nbutils.config', 'jupyter_nbutils.utils', 'jupyter_nbutils', 'jupyter_require.magic', 'numpy._globals', 'numpy.__config__', 'numpy._distributor_init', 'numpy._version', 'numpy.version', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core._asarray', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core._machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.stride_tricks', 'numpy.lib.twodim_base', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', '_cython_0_29_30', 'numpy.random._common', 'secrets', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'pytz', 'pandas._typing', '_cython_0_29_28', 'pandas._libs.tslibs.dtypes', 'pandas._libs.tslibs.base', 'pandas._libs.tslibs.np_datetime', 'pandas._libs.tslibs.nattype', 'pandas._libs.tslibs.timezones', 'pandas._libs.tslibs.ccalendar', 'pandas._libs.tslibs.tzconversion', 'pandas._config.config', 'pandas._config.dates', 'pandas._config.display', 'pandas._config', 'pandas._config.localization', 'pandas._libs.tslibs.strptime', 'pandas._libs.tslibs.fields', 'pandas._libs.tslibs.timedeltas', 'pandas._libs.tslibs.timestamps', 'dateutil.easter', 'pandas._libs.properties', 'pandas._libs.tslibs.offsets', 'pandas._libs.tslibs.parsing', 'pandas._libs.tslibs.conversion', 'pandas._libs.tslibs.period', 'pandas._libs.tslibs.vectorized', 'pandas._libs.tslibs', 'pandas._libs.ops_dispatch', 'pandas._libs.missing', 'pandas._libs.hashtable', 'pandas._libs.algos', 'pandas._libs.interval', 'pandas._libs', 'pandas.util._decorators', 'pandas.core', 'pandas.core.util', 'pandas._libs.tslib', 'pandas._libs.lib', 'pandas._libs.hashing', 'pandas.core.dtypes', 'pandas.util._exceptions', 'pandas.errors', 'pandas.core.dtypes.generic', 'pandas.core.dtypes.base', 'pandas.core.dtypes.inference', 'pandas.core.dtypes.dtypes', 'pandas.core.dtypes.common', 'pandas.core.util.hashing', 'pandas.util', 'pandas.util.version', 'pandas.compat.numpy', 'pandas.compat.pyarrow', 'pandas.compat', 'pandas.core.config_init', 'pandas.core.dtypes.missing', 'pandas.util._validators', 'pandas.core.dtypes.cast', 'pandas.core.dtypes.concat', 'pandas.core.array_algos', 'pandas.core.common', 'pandas.core.construction', 'pandas.core.array_algos.take', 'pandas.core.indexers.utils', 'pandas.core.indexers', 'pandas.core.algorithms', 'pandas.compat.numpy.function', 'pandas.core.roperator', 'pandas._libs.ops', 'pandas.core.computation', 'pandas.compat._optional', 'numexpr.interpreter', 'packaging.__about__', 'packaging', 'packaging._structures', 'packaging.version', 'numexpr.expressions', 'numexpr.utils', 'numexpr.necompiler', 'numexpr.version', 'numexpr', 'pandas.core.computation.check', 'pandas.core.computation.expressions', 'pandas.core.ops.missing', 'pandas.core.ops.dispatch', 'pandas.core.ops.invalid', 'pandas.core.ops.array_ops', 'pandas.core.ops.common', 'pandas.core.ops.docstrings', 'pandas.core.ops.mask_ops', 'pandas.core.ops.methods', 'pandas.core.ops', 'pandas.core.arraylike', 'pandas.core.missing', 'pandas.core.array_algos.quantile', 'pandas.core.sorting', 'pandas.core.arrays.base', 'bottleneck.benchmark', 'bottleneck.benchmark.autotimeit', 'bottleneck.benchmark.bench', 'bottleneck.benchmark.bench_detailed', 'bottleneck.tests', 'bottleneck.tests.util', 'bottleneck.slow.reduce', 'bottleneck.slow.nonreduce', 'bottleneck.slow.nonreduce_axis', 'bottleneck.slow.move', 'bottleneck.slow', 'bottleneck._pytesttester', 'bottleneck.move', 'bottleneck.nonreduce', 'bottleneck.nonreduce_axis', 'bottleneck.reduce', 'bottleneck._version', 'bottleneck', 'pandas.core.nanops', 'pandas.core.array_algos.masked_reductions', 'pandas.core.arrays.masked', 'pandas.core.arrays.boolean', 'pandas._libs.arrays', 'pandas.core.accessor', 'pandas.core.array_algos.transforms', 'pandas.core.arrays._mixins', 'pandas.core.base', 'pandas.core.strings.accessor', 'pandas.core.strings.base', 'pandas.core.strings', 'pandas.core.strings.object_array', 'pandas.io', 'pandas.io.formats', 'pandas.io.formats.console', 'pandas.core.arrays.categorical', 'pandas.tseries', 'pandas.tseries.frequencies', 'pandas.core.arrays.datetimelike', 'pandas.core.arrays._ranges', 'pandas.core.arrays.numeric', 'pandas.core.tools', 'pandas.core.tools.numeric', 'pandas.core.arrays.integer', 'pandas.tseries.offsets', 'pandas.core.arrays.datetimes', 'pandas.core.arrays.floating', 'pandas.core.indexes', 'pandas._libs.index', 'pandas._libs.join', 'pandas.core.array_algos.putmask', 'pandas._libs.sparse', 'pandas.core.arrays.sparse.dtype', 'pandas.io.formats.printing', 'pandas.core.arrays.sparse.array', 'pandas.core.arrays.sparse.accessor', 'pandas.core.arrays.sparse', 'pandas.core.indexes.frozen', 'pandas.core.indexes.base', 'pandas.core.arrays.interval', 'pandas.core.arrays.numpy_', 'pandas.core.arrays.period', 'pandas.core.arrays.string_', 'pandas.core.arrays.string_arrow', 'pandas.core.arrays.timedeltas', 'pandas.core.arrays', 'pandas.core.flags', 'pandas._libs.reduction', 'pandas.core.apply', 'pandas._libs.indexing', 'pandas.core.indexes.extension', 'pandas.core.indexes.category', 'pandas.core.indexes.numeric', 'pandas.core.indexes.range', 'pandas.core.tools.timedeltas', 'pandas.core.indexes.datetimelike', 'pandas.core.tools.times', 'pandas.core.indexes.datetimes', 'pandas.core.indexes.multi', 'pandas.core.indexes.timedeltas', 'pandas.core.indexes.interval', 'pandas.core.indexes.period', 'pandas.core.indexes.api', 'pandas.core.indexing', 'pandas.core.array_algos.replace', 'pandas.core.reshape', 'pandas._libs.internals', 'pandas._libs.writers', 'pandas.core.internals.blocks', 'pandas.core.internals.api', 'pandas.core.internals.base', 'pandas.core.internals.array_manager', 'pandas.core.internals.ops', 'pandas.core.internals.managers', 'pandas.core.internals.concat', 'pandas.core.internals', 'pandas.core.reshape.concat', 'mmap', 'pandas.core.shared_docs', 'pandas.io.common', 'pandas.io.formats.format', 'pandas.core.describe', 'pandas.core.internals.construction', 'pandas.core.sample', 'pandas._libs.window', 'pandas._libs.window.aggregations', 'pandas._libs.window.indexers', 'pandas.core.indexers.objects', 'pandas.core.util.numba_', 'pandas.core.window.common', 'pandas.core.window.doc', 'pandas.core.window.numba_', 'pandas.core.window.online', 'pandas.core._numba', 'pandas.core._numba.executor', 'pandas.core.window.rolling', 'pandas.core.window.ewm', 'pandas.core.window.expanding', 'pandas.core.window', 'pandas.core.generic', 'pandas.core.reshape.util', 'pandas.core.reshape.melt', 'pandas._libs.reshape', 'pandas.core.indexes.accessors', 'pandas.arrays', 'pandas.core.tools.datetimes', 'pandas.io.formats.info', 'pandas.plotting._core', 'pandas.plotting._misc', 'pandas.plotting', 'pandas.core.series', 'pandas.core.frame', 'pandas.core.groupby.base', 'pandas._libs.groupby', 'pandas.core.groupby.numba_', 'pandas.core.groupby.categorical', 'pandas.core.groupby.grouper', 'pandas.core.groupby.ops', 'pandas.core.groupby.indexing', 'pandas.core.groupby.groupby', 'pandas.core.groupby.generic', 'pandas.core.groupby', 'pandas.core.api', 'pandas.tseries.api', 'pandas.core.computation.common', 'pandas.core.computation.align', 'pandas.compat.chainmap', 'pandas.core.computation.scope', 'pandas.core.computation.ops', 'pandas.core.computation.parsing', 'pandas.core.computation.expr', 'pandas.core.computation.engines', 'pandas.core.computation.eval', 'pandas.core.computation.api', 'pandas.core.reshape.merge', 'pandas.core.reshape.pivot', 'pandas.core.reshape.reshape', 'pandas.core.reshape.tile', 'pandas.core.reshape.api', 'pandas.api.extensions', 'pandas.api.indexers', 'pandas.core.dtypes.api', 'pandas.api.types', 'pandas.api', 'pandas._testing._random', 'pandas._testing.contexts', 'pandas._testing._io', 'pandas._testing._warnings', 'cmath', 'pandas._libs.testing', 'pandas._testing.asserters', 'pandas._testing.compat', 'pandas._testing', 'pandas.testing', 'pandas.util._print_versions', 'pandas.io.clipboards', 'pandas._libs.parsers', 'pandas.io.excel._util', 'pandas.io.date_converters', 'pandas.io.parsers.base_parser', 'pandas.io.parsers.arrow_parser_wrapper', 'pandas.io.parsers.c_parser_wrapper', 'pandas.io.parsers.python_parser', 'pandas.io.parsers.readers', 'pandas.io.parsers', 'pandas.io.excel._odfreader', 'pandas.io.excel._openpyxl', 'pandas.io.excel._pyxlsb', 'pandas.io.excel._xlrd', 'pandas.io.excel._base', 'pandas._libs.json', 'pandas.io.formats._color_data', 'pandas.io.formats.css', 'pandas.io.formats.excel', 'pandas.io.excel._odswriter', 'pandas.io.excel._xlsxwriter', 'pandas.io.excel._xlwt', 'pandas.io.excel', 'pandas.io.feather_format', 'pandas.io.gbq', 'pandas.io.html', 'pandas.io.json._normalize', 'pandas.io.json._table_schema', 'pandas.io.json._json', 'pandas.io.json', 'pandas.io.orc', 'pandas.io.parquet', 'pandas.compat.pickle_compat', 'pandas.io.pickle', 'pandas.core.computation.pytables', 'pandas.io.pytables', 'pandas.io.sas.sasreader', 'pandas.io.sas', 'pandas.io.spss', 'pandas.io.sql', 'pandas.io.stata', 'pandas.io.xml', 'pandas.io.api', 'pandas.util._tester', 'pandas._version', 'pandas', 'summarytools', 'summarytools.htmlwidgets', 'summarytools.summarytools', 'matplotlib', 'matplotlib._api.deprecation', 'matplotlib._api', 'matplotlib._version', 'matplotlib._c_internal_utils', 'matplotlib.cbook', 'matplotlib.docstring', 'PIL._version', 'PIL', 'defusedxml.common', 'defusedxml', 'xml.etree', 'xml.etree.ElementPath', '_elementtree', 'xml.etree.ElementTree', 'defusedxml.ElementTree', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._util', 'PIL._imaging', 'cffi.lock', 'cffi.error', 'cffi.model', 'cffi.api', 'cffi', 'PIL.Image', 'PIL.ImageChops', 'PIL.ImageFile', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'PIL.ImagePalette', 'PIL.ImageSequence', 'PIL.PngImagePlugin', 'matplotlib._path', 'matplotlib.bezier', 'matplotlib.path', 'matplotlib.transforms', 'matplotlib.ticker', 'matplotlib.scale', 'matplotlib._color_data', 'matplotlib.colors', 'pyparsing.util', 'pyparsing.unicode', 'pyparsing.exceptions', 'pyparsing.actions', 'pyparsing.results', 'pyparsing.core', 'pyparsing.helpers', 'pyparsing.testing', 'pyparsing.common', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib._enums', 'cycler', 'matplotlib.rcsetup', 'matplotlib.ft2font', 'kiwisolver']
2023-04-14 12:10:49,379 [19600] DEBUG    matplotlib:275: [JupyterRequire] CACHEDIR=C:\Users\adity\.matplotlib
2023-04-14 12:10:49,383 [19600] DEBUG    matplotlib.font_manager:1439: [JupyterRequire] Using fontManager instance from C:\Users\adity\.matplotlib\fontlist-v330.json
2023-04-14 12:10:49,958 [19600] DEBUG    matplotlib.pyplot:280: [JupyterRequire] Loaded backend module://matplotlib_inline.backend_inline version unknown.
2023-04-14 12:10:49,969 [19600] DEBUG    matplotlib.pyplot:280: [JupyterRequire] Loaded backend module://matplotlib_inline.backend_inline version unknown.
2023-04-14 12:11:00,143 [19600] DEBUG    matplotlib.font_manager:1329: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2023-04-14 12:11:00,145 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-14 12:11:00,145 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-14 12:11:00,145 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,145 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2023-04-14 12:11:00,146 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2023-04-14 12:11:00,146 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:00,147 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:00,147 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:00,147 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,148 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-14 12:11:00,148 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,148 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:00,149 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,149 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,149 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,150 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:00,150 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:00,150 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,151 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,151 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2023-04-14 12:11:00,152 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,152 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,152 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-14 12:11:00,152 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:00,154 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:00,154 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,154 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,155 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:00,155 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:00,155 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,156 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,156 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,157 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:00,157 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,157 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:00,158 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,158 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,158 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2023-04-14 12:11:00,159 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLSNECB.TTF', name='Gill Sans MT Ext Condensed Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-14 12:11:00,159 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanz.ttf', name='Constantia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-14 12:11:00,159 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LEELAWAD.TTF', name='Leelawadee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,160 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\monbaiti.ttf', name='Mongolian Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,160 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-MEDIUM.TTF', name='Dubai', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-04-14 12:11:00,161 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-04-14 12:11:00,161 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FTLTLT.TTF', name='Footlight MT Light', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-14 12:11:00,162 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibril.ttf', name='Calibri', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-14 12:11:00,162 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSI.TTF', name='Goudy Old Style', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:00,163 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisbi.ttf', name='Segoe UI', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-14 12:11:00,163 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCCB___.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-04-14 12:11:00,163 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXD.TTF', name='Lucida Fax', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-14 12:11:00,164 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2023-04-14 12:11:00,164 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BSSYM7.TTF', name='Bookshelf Symbol 7', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,164 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAMDCN.TTF', name='Franklin Gothic Medium Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-14 12:11:00,164 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framdit.ttf', name='Franklin Gothic Medium', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:00,164 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSB.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:00,166 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-LIGHT.TTF', name='Dubai', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-14 12:11:00,166 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCC____.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-14 12:11:00,167 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_B.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:00,167 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COOPBL.TTF', name='Cooper Black', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,167 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNI.TTF', name='Arial', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 7.613636363636363
2023-04-14 12:11:00,168 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\INFROMAN.TTF', name='Informal Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,168 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSB.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-14 12:11:00,169 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BERNHC.TTF', name='Bernard MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-14 12:11:00,169 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEB.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-14 12:11:00,170 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCEDSCR.TTF', name='Edwardian Script ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,170 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consola.ttf', name='Consolas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,170 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,170 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\holomdl2.ttf', name='HoloLens MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,171 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COLONNA.TTF', name='Colonna MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,171 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYR.TTF', name='Agency FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,172 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRITANIC.TTF', name='Britannic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,172 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiai.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:00,172 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:00,173 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaS.ttf', name='Nirmala UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2023-04-14 12:11:00,173 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CHILLER.TTF', name='Chiller', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,174 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,174 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAB.TTF', name='Book Antiqua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:00,175 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothM.ttc', name='Yu Gothic', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-04-14 12:11:00,175 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG2.TTF', name='Wingdings 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,176 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Nirmala.ttf', name='Nirmala UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,176 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelUIsl.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2023-04-14 12:11:00,176 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriai.ttf', name='Cambria', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:00,177 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariali.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
2023-04-14 12:11:00,177 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARA.TTF', name='Garamond', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,178 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSPCL.TTF', name='MS Reference Specialty', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,178 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-REGULAR.TTF', name='Dubai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,178 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LHANDW.TTF', name='Lucida Handwriting', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:00,178 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:00,180 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comici.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:00,180 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTAUR.TTF', name='Centaur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,180 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEBO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-14 12:11:00,180 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ONYX.TTF', name='Onyx', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,181 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrima.ttf', name='Ebrima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,181 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFI.TTF', name='Californian FB', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:00,181 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERBI___.TTF', name='Perpetua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-14 12:11:00,182 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbell.ttf', name='Corbel', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-14 12:11:00,182 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILI____.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:00,182 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segmdl2.ttf', name='Segoe MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,182 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-BOLD.TTF', name='Dubai', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:00,183 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FELIXTI.TTF', name='Felix Titling', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,183 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbd.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
2023-04-14 12:11:00,184 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taileb.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:00,184 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeprb.ttf', name='Segoe Print', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:00,184 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoescb.ttf', name='Segoe Script', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:00,186 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITE.TTF', name='Lucida Bright', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,186 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhbd.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:00,187 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\times.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,187 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisb.ttf', name='Segoe UI', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-14 12:11:00,187 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSDB.TTF', name='Berlin Sans FB Demi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:00,188 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbi.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
2023-04-14 12:11:00,188 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesi.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:00,188 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADM.TTF', name='Franklin Gothic Demi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,188 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERTI.TTF', name='High Tower Text', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:00,189 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF-Italic.ttf', name='Sitka', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:00,189 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsun.ttc', name='SimSun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,190 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTI.TTF', name='Calisto MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:00,190 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCMI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:00,190 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaral.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,190 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\lucon.ttf', name='Lucida Console', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,191 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_I.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:00,191 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mvboli.ttf', name='MV Boli', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,191 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiab.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:00,193 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\l_10646.ttf', name='Lucida Sans Unicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,193 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTIBD.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:00,193 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNT.TTF', name='Elephant', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,193 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASMD.TTF', name='Eras Medium ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,194 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MSUIGHUR.TTF', name='Microsoft Uighur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,194 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYB.TTF', name='Agency FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:00,194 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MSUIGHUB.TTF', name='Microsoft Uighur', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:00,194 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicbd.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:00,196 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMIT.TTF', name='Franklin Gothic Demi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:00,196 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKEB.TTF', name='Rockwell Extra Bold', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
2023-04-14 12:11:00,197 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PER_____.TTF', name='Perpetua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,197 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VINERITC.TTF', name='Viner Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,197 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\marlett.ttf', name='Marlett', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-04-14 12:11:00,198 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrili.ttf', name='Calibri', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-04-14 12:11:00,198 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICBI.TTF', name='Century Gothic', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-14 12:11:00,198 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ALGER.TTF', name='Algerian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,198 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOS.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,198 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelz.ttf', name='Corbel', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-14 12:11:00,199 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILB____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:00,199 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUABI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-14 12:11:00,199 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\sylfaen.ttf', name='Sylfaen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,200 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriaz.ttf', name='Cambria', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-14 12:11:00,200 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanaz.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
2023-04-14 12:11:00,200 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constan.ttf', name='Constantia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,200 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTILI.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-14 12:11:00,201 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCM_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,201 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhl.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2023-04-14 12:11:00,201 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOS.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-14 12:11:00,202 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HATTEN.TTF', name='Haettenschweiler', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,202 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JOKERMAN.TTF', name='Jokerman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,202 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ENGR.TTF', name='Engravers MT', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-04-14 12:11:00,202 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARAIT.TTF', name='Garamond', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:00,202 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,204 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelli.ttf', name='Corbel', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-04-14 12:11:00,204 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constani.ttf', name='Constantia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:00,204 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIST.TTF', name='Calisto MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,205 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PARCHM.TTF', name='Parchment', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,205 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\himalaya.ttf', name='Microsoft Himalaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,205 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRADHITC.TTF', name='Bradley Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,205 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\wingding.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,206 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtextb.ttf', name='Myanmar Text', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:00,206 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG3.TTF', name='Wingdings 3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,206 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGSOL.TTF', name='Niagara Solid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,206 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarali.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:00,207 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKI.TTF', name='Rockwell', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:00,207 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolab.ttf', name='Consolas', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:00,207 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXDI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-14 12:11:00,208 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BAUHS93.TTF', name='Bauhaus 93', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,208 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisli.ttf', name='Segoe UI', style='italic', variant='normal', weight=350, stretch='normal', size='scalable')) = 11.0975
2023-04-14 12:11:00,208 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELL.TTF', name='Bell MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,208 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2023-04-14 12:11:00,209 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyi.ttf', name='Microsoft Yi Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,209 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSR.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,209 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHVIT.TTF', name='Franklin Gothic Heavy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:00,209 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OLDENGL.TTF', name='Old English Text MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,210 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbel.ttf', name='Corbel', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,210 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLB.TTF', name='Bell MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:00,210 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelaUIb.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:00,210 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHV.TTF', name='Franklin Gothic Heavy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,210 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OUTLOOK.TTF', name='MS Outlook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,211 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PRISTINA.TTF', name='Pristina', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,211 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERI____.TTF', name='Perpetua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:00,212 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtext.ttf', name='Myanmar Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,212 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSAN.TTF', name='MS Reference Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,212 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERB____.TTF', name='Perpetua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:00,212 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTEXTRA.TTF', name='MT Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,214 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKB.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:00,214 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARABD.TTF', name='Garamond', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:00,214 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cour.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,215 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mingliub.ttc', name='MingLiU-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,215 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICB.TTF', name='Century Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:00,215 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspa.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,216 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VIVALDII.TTF', name='Vivaldi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:00,216 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAGE.TTF', name='Rage Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:00,216 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-14 12:11:00,217 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2023-04-14 12:11:00,217 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MATURASC.TTF', name='Matura MT Script Capitals', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,218 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comic.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,218 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbi.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-14 12:11:00,218 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothR.ttc', name='Yu Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,218 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palai.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:00,218 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MOD20.TTF', name='Modern No. 20', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,219 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMCN.TTF', name='Franklin Gothic Demi Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-14 12:11:00,219 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrimabd.ttf', name='Ebrima', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:00,219 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\javatext.ttf', name='Javanese Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,220 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CASTELAR.TTF', name='Castellar', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,220 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSDI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-14 12:11:00,220 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelawUI.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,220 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAX.TTF', name='Lucida Fax', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,222 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunbd.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:00,222 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF.ttf', name='Sitka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,222 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTL.TTF', name='Copperplate Gothic Light', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,222 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
2023-04-14 12:11:00,223 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeui.ttf', name='Segoe UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,223 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Gabriola.ttf', name='Gabriola', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,223 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTBI.TTF', name='Calisto MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-14 12:11:00,224 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicz.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-14 12:11:00,224 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALN.TTF', name='Arial', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 6.613636363636363
2023-04-14 12:11:00,224 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKBI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-14 12:11:00,225 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FREESCPT.TTF', name='Freestyle Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,225 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTURY.TTF', name='Century', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,225 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaB.ttf', name='Nirmala UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:00,226 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSB.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:00,226 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSD.TTF', name='Lucida Sans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-14 12:11:00,226 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuisl.ttf', name='Segoe UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2023-04-14 12:11:00,227 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:00,227 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-14 12:11:00,227 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguihis.ttf', name='Segoe UI Historic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,228 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCB____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-04-14 12:11:00,228 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambria.ttc', name='Cambria', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,228 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKBI.TTF', name='Rockwell', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-14 12:11:00,229 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGENG.TTF', name='Niagara Engraved', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,229 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisym.ttf', name='Segoe UI Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,229 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inkfree.ttf', name='Ink Free', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,230 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASBD.TTF', name='Eras Bold ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,230 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILC____.TTF', name='Gill Sans MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-14 12:11:00,230 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candara.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,231 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\bahnschrift.ttf', name='Bahnschrift', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,231 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BROADW.TTF', name='Broadway', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,231 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolaz.ttf', name='Consolas', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-14 12:11:00,231 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CBI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2023-04-14 12:11:00,232 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuii.ttf', name='Segoe UI', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:00,232 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibli.ttf', name='Segoe UI', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2023-04-14 12:11:00,232 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEDI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-14 12:11:00,233 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucit.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:00,233 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BKANT.TTF', name='Book Antiqua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,234 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothL.ttc', name='Yu Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-14 12:11:00,234 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrii.ttf', name='Calibri', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:00,234 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CURLZ___.TTF', name='Curlz MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,235 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelb.ttf', name='Corbel', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:00,235 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARLRDBD.TTF', name='Arial Rounded MT Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,235 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothB.ttc', name='Yu Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:00,236 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASDEMI.TTF', name='Eras Demi ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,236 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
2023-04-14 12:11:00,236 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANS.TTF', name='Lucida Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,237 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariblk.ttf', name='Arial', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 6.888636363636364
2023-04-14 12:11:00,237 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCKRIST.TTF', name='Kristen ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,237 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\KUNSTLER.TTF', name='Kunstler Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,237 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanb.ttf', name='Constantia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:00,239 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PAPYRUS.TTF', name='Papyrus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,239 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JUICE___.TTF', name='Juice ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,239 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguili.ttf', name='Segoe UI', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-04-14 12:11:00,239 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:00,240 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarab.ttf', name='Candara', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:00,240 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\IMPRISHA.TTF', name='Imprint MT Shadow', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,240 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailu.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,240 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbi.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-14 12:11:00,240 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuil.ttf', name='Segoe UI', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-14 12:11:00,241 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanai.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
2023-04-14 12:11:00,241 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoepr.ttf', name='Segoe Print', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,241 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaraz.ttf', name='Candara', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-14 12:11:00,241 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNB.TTF', name='Arial', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 6.8986363636363635
2023-04-14 12:11:00,243 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspab.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:00,243 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,243 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCM____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-14 12:11:00,244 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARNGTON.TTF', name='Harrington', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,244 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbd.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:00,244 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:00,244 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILSANUB.TTF', name='Gill Sans Ultra Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,245 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibri.ttf', name='Calibri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,245 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiaz.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-14 12:11:00,245 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegoeIcons.ttf', name='Segoe Fluent Icons', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,246 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAGNETOB.TTF', name='Magneto', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:00,246 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICI.TTF', name='Century Gothic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:00,246 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCBLKAD.TTF', name='Blackadder ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,246 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahomabd.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:00,247 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugi.ttf', name='Gadugi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,247 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LCALLIG.TTF', name='Lucida Calligraphy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:00,247 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyh.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,248 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsunb.ttf', name='SimSun-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,248 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgun.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,248 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIL_____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,249 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VLADIMIR.TTF', name='Vladimir Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,249 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,249 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msgothic.ttc', name='MS Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,250 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRSCRIPT.TTF', name='French Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,250 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILBI___.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-14 12:11:00,250 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASLGHT.TTF', name='Eras Light ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,252 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTB.TTF', name='Calisto MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:00,252 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunsl.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-14 12:11:00,252 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRUSHSCI.TTF', name='Brush Script MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:00,252 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SNAP____.TTF', name='Snap ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,252 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuib.ttf', name='Segoe UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:00,253 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCBI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-14 12:11:00,253 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailub.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:00,253 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framd.ttf', name='Franklin Gothic Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,253 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolai.ttf', name='Consolas', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:00,254 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCEB.TTF', name='Tw Cen MT Condensed Extra Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-14 12:11:00,254 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\POORICH.TTF', name='Poor Richard', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,254 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDYSTO.TTF', name='Goudy Stout', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,254 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKB.TTF', name='Rockwell', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:00,256 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PALSCRI.TTF', name='Palace Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,256 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarai.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:00,256 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\micross.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,257 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LEELAWDB.TTF', name='Leelawadee', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:00,257 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABK.TTF', name='Franklin Gothic Book', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,257 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjh.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,258 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palabi.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-14 12:11:00,258 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAVIE.TTF', name='Ravie', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,258 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCK.TTF', name='Rockwell', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,258 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\pala.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,259 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibriz.ttf', name='Calibri', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-14 12:11:00,259 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugib.ttf', name='Gadugi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:00,259 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_PSTC.TTF', name='Bodoni MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-14 12:11:00,259 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENSCBK.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,260 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanab.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
2023-04-14 12:11:00,260 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LATINWD.TTF', name='Wide Latin', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
2023-04-14 12:11:00,260 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbeli.ttf', name='Corbel', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:00,262 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIGI.TTF', name='Gigi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,262 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITED.TTF', name='Lucida Bright', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-14 12:11:00,262 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbi.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-14 12:11:00,262 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhl.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2023-04-14 12:11:00,263 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguiemj.ttf', name='Segoe UI Emoji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,263 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OCRAEXT.TTF', name='OCR A Extended', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
2023-04-14 12:11:00,263 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebuc.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,263 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SHOWG.TTF', name='Showcard Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,264 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BASKVILL.TTF', name='Baskerville Old Face', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,265 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriab.ttf', name='Cambria', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:00,265 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAIAN.TTF', name='Maiandra GD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,265 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCRIPTBL.TTF', name='Script MT Bold', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:00,266 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLECB.TTF', name='Gloucester MT Extra Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-14 12:11:00,266 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNTI.TTF', name='Elephant', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:00,266 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFR.TTF', name='Californian FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,266 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHIC.TTF', name='Century Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,268 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PLAYBILL.TTF', name='Playbill', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,268 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABKIT.TTF', name='Franklin Gothic Book', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:00,269 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARLOWSI.TTF', name='Harlow Solid Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:00,269 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPE.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,269 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taile.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,269 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibl.ttf', name='Segoe UI', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2023-04-14 12:11:00,270 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNBI.TTF', name='Arial', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 7.8986363636363635
2023-04-14 12:11:00,270 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuiz.ttf', name='Segoe UI', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-14 12:11:00,270 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSBI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-14 12:11:00,271 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palab.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:00,271 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLI.TTF', name='Bell MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:00,271 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILLUBCD.TTF', name='Gill Sans Ultra Bold Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-14 12:11:00,272 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbd.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:00,272 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhbd.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:00,272 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoesc.ttf', name='Segoe Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,273 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\couri.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:00,273 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegUIVar.ttf', name='Segoe UI Variable', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,274 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_R.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,274 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTB.TTF', name='Copperplate Gothic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,274 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:00,274 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCB_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:00,276 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TEMPSITC.TTF', name='Tempus Sans ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,276 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MISTRAL.TTF', name='Mistral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,277 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FORTE.TTF', name='Forte', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,277 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CB.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-04-14 12:11:00,278 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbd.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:00,278 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STENCIL.TTF', name='Stencil', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,278 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrib.ttf', name='Calibri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:00,279 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERT.TTF', name='High Tower Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,279 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTCORSVA.TTF', name='Monotype Corsiva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:00,280 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFB.TTF', name='Californian FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:00,280 [19600] DEBUG    matplotlib.font_manager:1367: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
2023-04-14 12:11:45,863 [19600] DEBUG    matplotlib.font_manager:1329: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
2023-04-14 12:11:45,863 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-14 12:11:45,863 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-14 12:11:45,864 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,864 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2023-04-14 12:11:45,865 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2023-04-14 12:11:45,865 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:45,866 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:45,866 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:45,866 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,867 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-14 12:11:45,867 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,868 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:45,868 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,868 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,869 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,869 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:45,869 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:45,869 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,871 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,871 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2023-04-14 12:11:45,871 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,871 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,872 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-14 12:11:45,872 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:45,872 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:45,873 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,873 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,873 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:45,873 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:45,874 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,874 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,874 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,876 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:45,876 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,876 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:45,877 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,877 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,877 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2023-04-14 12:11:45,877 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLSNECB.TTF', name='Gill Sans MT Ext Condensed Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-14 12:11:45,878 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanz.ttf', name='Constantia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-14 12:11:45,878 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LEELAWAD.TTF', name='Leelawadee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,879 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\monbaiti.ttf', name='Mongolian Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,879 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-MEDIUM.TTF', name='Dubai', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-04-14 12:11:45,879 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-04-14 12:11:45,879 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FTLTLT.TTF', name='Footlight MT Light', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-14 12:11:45,879 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibril.ttf', name='Calibri', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-14 12:11:45,881 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSI.TTF', name='Goudy Old Style', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:45,881 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisbi.ttf', name='Segoe UI', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-14 12:11:45,881 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCCB___.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-04-14 12:11:45,882 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXD.TTF', name='Lucida Fax', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-14 12:11:45,882 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2023-04-14 12:11:45,882 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BSSYM7.TTF', name='Bookshelf Symbol 7', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,882 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAMDCN.TTF', name='Franklin Gothic Medium Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-14 12:11:45,883 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framdit.ttf', name='Franklin Gothic Medium', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:45,884 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSB.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:45,884 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-LIGHT.TTF', name='Dubai', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-14 12:11:45,884 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCC____.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-14 12:11:45,884 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_B.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:45,886 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COOPBL.TTF', name='Cooper Black', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,886 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNI.TTF', name='Arial', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 7.613636363636363
2023-04-14 12:11:45,886 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\INFROMAN.TTF', name='Informal Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,887 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSB.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-14 12:11:45,887 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BERNHC.TTF', name='Bernard MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-14 12:11:45,887 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEB.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-14 12:11:45,888 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCEDSCR.TTF', name='Edwardian Script ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,888 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consola.ttf', name='Consolas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,888 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,889 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\holomdl2.ttf', name='HoloLens MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,889 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COLONNA.TTF', name='Colonna MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,889 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYR.TTF', name='Agency FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,890 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRITANIC.TTF', name='Britannic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,890 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiai.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:45,891 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:45,891 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaS.ttf', name='Nirmala UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2023-04-14 12:11:45,891 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CHILLER.TTF', name='Chiller', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,891 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,893 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAB.TTF', name='Book Antiqua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:45,893 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothM.ttc', name='Yu Gothic', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-04-14 12:11:45,894 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG2.TTF', name='Wingdings 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,894 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Nirmala.ttf', name='Nirmala UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,894 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelUIsl.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2023-04-14 12:11:45,895 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriai.ttf', name='Cambria', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:45,895 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariali.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
2023-04-14 12:11:45,895 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARA.TTF', name='Garamond', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,896 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSPCL.TTF', name='MS Reference Specialty', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,896 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-REGULAR.TTF', name='Dubai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,896 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LHANDW.TTF', name='Lucida Handwriting', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:45,896 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:45,897 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comici.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:45,897 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTAUR.TTF', name='Centaur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,897 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEBO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-14 12:11:45,897 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ONYX.TTF', name='Onyx', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,899 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrima.ttf', name='Ebrima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,899 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFI.TTF', name='Californian FB', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:45,899 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERBI___.TTF', name='Perpetua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-14 12:11:45,899 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbell.ttf', name='Corbel', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-14 12:11:45,901 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILI____.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:45,901 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segmdl2.ttf', name='Segoe MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,901 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-BOLD.TTF', name='Dubai', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:45,901 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FELIXTI.TTF', name='Felix Titling', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,902 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbd.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
2023-04-14 12:11:45,902 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taileb.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:45,902 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeprb.ttf', name='Segoe Print', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:45,903 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoescb.ttf', name='Segoe Script', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:45,903 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITE.TTF', name='Lucida Bright', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,904 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhbd.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:45,904 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\times.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,904 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisb.ttf', name='Segoe UI', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-14 12:11:45,905 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSDB.TTF', name='Berlin Sans FB Demi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:45,906 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbi.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
2023-04-14 12:11:45,906 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesi.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:45,907 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADM.TTF', name='Franklin Gothic Demi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,907 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERTI.TTF', name='High Tower Text', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:45,907 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF-Italic.ttf', name='Sitka', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:45,908 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsun.ttc', name='SimSun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,908 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTI.TTF', name='Calisto MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:45,908 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCMI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:45,909 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaral.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,909 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\lucon.ttf', name='Lucida Console', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,909 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_I.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:45,910 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mvboli.ttf', name='MV Boli', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,910 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiab.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:45,910 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\l_10646.ttf', name='Lucida Sans Unicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,911 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTIBD.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:45,911 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNT.TTF', name='Elephant', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,911 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASMD.TTF', name='Eras Medium ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,913 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MSUIGHUR.TTF', name='Microsoft Uighur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,913 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYB.TTF', name='Agency FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:45,913 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MSUIGHUB.TTF', name='Microsoft Uighur', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:45,913 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicbd.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:45,915 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMIT.TTF', name='Franklin Gothic Demi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:45,915 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKEB.TTF', name='Rockwell Extra Bold', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
2023-04-14 12:11:45,915 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PER_____.TTF', name='Perpetua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,916 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VINERITC.TTF', name='Viner Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,916 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\marlett.ttf', name='Marlett', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-04-14 12:11:45,916 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrili.ttf', name='Calibri', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-04-14 12:11:45,916 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICBI.TTF', name='Century Gothic', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-14 12:11:45,917 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ALGER.TTF', name='Algerian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,917 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOS.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,918 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelz.ttf', name='Corbel', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-14 12:11:45,918 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILB____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:45,919 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUABI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-14 12:11:45,919 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\sylfaen.ttf', name='Sylfaen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,919 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriaz.ttf', name='Cambria', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-14 12:11:45,921 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanaz.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
2023-04-14 12:11:45,921 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constan.ttf', name='Constantia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,921 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTILI.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-14 12:11:45,922 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCM_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,922 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhl.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2023-04-14 12:11:45,922 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOS.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-14 12:11:45,922 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HATTEN.TTF', name='Haettenschweiler', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,923 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JOKERMAN.TTF', name='Jokerman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,923 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ENGR.TTF', name='Engravers MT', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-04-14 12:11:45,923 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARAIT.TTF', name='Garamond', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:45,924 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,924 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelli.ttf', name='Corbel', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-04-14 12:11:45,925 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constani.ttf', name='Constantia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:45,925 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIST.TTF', name='Calisto MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,925 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PARCHM.TTF', name='Parchment', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,925 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\himalaya.ttf', name='Microsoft Himalaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,927 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRADHITC.TTF', name='Bradley Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,927 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\wingding.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,928 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtextb.ttf', name='Myanmar Text', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:45,928 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG3.TTF', name='Wingdings 3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,928 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGSOL.TTF', name='Niagara Solid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,929 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarali.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:45,929 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKI.TTF', name='Rockwell', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:45,929 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolab.ttf', name='Consolas', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:45,930 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXDI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-14 12:11:45,930 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BAUHS93.TTF', name='Bauhaus 93', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,930 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisli.ttf', name='Segoe UI', style='italic', variant='normal', weight=350, stretch='normal', size='scalable')) = 11.0975
2023-04-14 12:11:45,931 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELL.TTF', name='Bell MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,931 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2023-04-14 12:11:45,931 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyi.ttf', name='Microsoft Yi Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,931 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSR.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,933 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHVIT.TTF', name='Franklin Gothic Heavy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:45,933 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OLDENGL.TTF', name='Old English Text MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,933 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbel.ttf', name='Corbel', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,933 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLB.TTF', name='Bell MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:45,934 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelaUIb.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:45,934 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHV.TTF', name='Franklin Gothic Heavy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,934 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OUTLOOK.TTF', name='MS Outlook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,934 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PRISTINA.TTF', name='Pristina', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,934 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERI____.TTF', name='Perpetua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:45,936 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtext.ttf', name='Myanmar Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,936 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSAN.TTF', name='MS Reference Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,936 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERB____.TTF', name='Perpetua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:45,936 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTEXTRA.TTF', name='MT Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,937 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKB.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:45,937 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARABD.TTF', name='Garamond', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:45,937 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cour.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,937 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mingliub.ttc', name='MingLiU-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,939 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICB.TTF', name='Century Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:45,939 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspa.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,939 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VIVALDII.TTF', name='Vivaldi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:45,939 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAGE.TTF', name='Rage Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:45,940 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-14 12:11:45,940 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2023-04-14 12:11:45,940 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MATURASC.TTF', name='Matura MT Script Capitals', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,940 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comic.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,941 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbi.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-14 12:11:45,941 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothR.ttc', name='Yu Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,941 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palai.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:45,942 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MOD20.TTF', name='Modern No. 20', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,942 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMCN.TTF', name='Franklin Gothic Demi Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-14 12:11:45,942 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrimabd.ttf', name='Ebrima', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:45,942 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\javatext.ttf', name='Javanese Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,944 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CASTELAR.TTF', name='Castellar', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,944 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSDI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-14 12:11:45,944 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelawUI.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,945 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAX.TTF', name='Lucida Fax', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,945 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunbd.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:45,945 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF.ttf', name='Sitka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,945 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTL.TTF', name='Copperplate Gothic Light', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,946 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
2023-04-14 12:11:45,946 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeui.ttf', name='Segoe UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,946 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Gabriola.ttf', name='Gabriola', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,948 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTBI.TTF', name='Calisto MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-14 12:11:45,948 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicz.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-14 12:11:45,948 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALN.TTF', name='Arial', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 6.613636363636363
2023-04-14 12:11:45,949 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKBI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-14 12:11:45,949 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FREESCPT.TTF', name='Freestyle Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,949 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTURY.TTF', name='Century', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,949 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaB.ttf', name='Nirmala UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:45,950 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSB.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:45,950 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSD.TTF', name='Lucida Sans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-14 12:11:45,950 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuisl.ttf', name='Segoe UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2023-04-14 12:11:45,951 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:45,951 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-14 12:11:45,951 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguihis.ttf', name='Segoe UI Historic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,952 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCB____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-04-14 12:11:45,952 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambria.ttc', name='Cambria', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,953 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKBI.TTF', name='Rockwell', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-14 12:11:45,953 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGENG.TTF', name='Niagara Engraved', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,953 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisym.ttf', name='Segoe UI Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,954 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inkfree.ttf', name='Ink Free', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,954 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASBD.TTF', name='Eras Bold ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,954 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILC____.TTF', name='Gill Sans MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-14 12:11:45,955 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candara.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,955 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\bahnschrift.ttf', name='Bahnschrift', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,955 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BROADW.TTF', name='Broadway', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,956 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolaz.ttf', name='Consolas', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-14 12:11:45,956 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CBI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2023-04-14 12:11:45,956 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuii.ttf', name='Segoe UI', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:45,957 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibli.ttf', name='Segoe UI', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2023-04-14 12:11:45,957 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEDI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-14 12:11:45,957 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucit.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:45,959 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BKANT.TTF', name='Book Antiqua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,959 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothL.ttc', name='Yu Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-14 12:11:45,959 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrii.ttf', name='Calibri', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:45,959 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CURLZ___.TTF', name='Curlz MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,960 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelb.ttf', name='Corbel', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:45,960 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARLRDBD.TTF', name='Arial Rounded MT Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,960 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothB.ttc', name='Yu Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:45,961 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASDEMI.TTF', name='Eras Demi ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,961 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
2023-04-14 12:11:45,961 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANS.TTF', name='Lucida Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,961 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariblk.ttf', name='Arial', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 6.888636363636364
2023-04-14 12:11:45,963 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCKRIST.TTF', name='Kristen ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,963 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\KUNSTLER.TTF', name='Kunstler Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,963 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanb.ttf', name='Constantia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:45,964 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PAPYRUS.TTF', name='Papyrus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,964 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JUICE___.TTF', name='Juice ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,964 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguili.ttf', name='Segoe UI', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-04-14 12:11:45,965 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:45,965 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarab.ttf', name='Candara', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:45,965 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\IMPRISHA.TTF', name='Imprint MT Shadow', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,965 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailu.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,966 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbi.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-14 12:11:45,966 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuil.ttf', name='Segoe UI', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-14 12:11:45,966 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanai.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
2023-04-14 12:11:45,967 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoepr.ttf', name='Segoe Print', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,967 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaraz.ttf', name='Candara', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-14 12:11:45,967 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNB.TTF', name='Arial', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 6.8986363636363635
2023-04-14 12:11:45,967 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspab.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:45,968 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,968 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCM____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-14 12:11:45,968 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARNGTON.TTF', name='Harrington', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,968 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbd.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:45,970 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:45,970 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILSANUB.TTF', name='Gill Sans Ultra Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,970 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibri.ttf', name='Calibri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,970 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiaz.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-14 12:11:45,971 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegoeIcons.ttf', name='Segoe Fluent Icons', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,971 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAGNETOB.TTF', name='Magneto', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:45,971 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICI.TTF', name='Century Gothic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:45,972 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCBLKAD.TTF', name='Blackadder ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,972 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahomabd.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:45,972 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugi.ttf', name='Gadugi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,972 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LCALLIG.TTF', name='Lucida Calligraphy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:45,974 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyh.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,974 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsunb.ttf', name='SimSun-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,974 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgun.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,975 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIL_____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,975 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VLADIMIR.TTF', name='Vladimir Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,976 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,976 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msgothic.ttc', name='MS Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,976 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRSCRIPT.TTF', name='French Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,977 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILBI___.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-14 12:11:45,977 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASLGHT.TTF', name='Eras Light ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,977 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTB.TTF', name='Calisto MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:45,978 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunsl.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-14 12:11:45,978 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRUSHSCI.TTF', name='Brush Script MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:45,978 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SNAP____.TTF', name='Snap ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,978 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuib.ttf', name='Segoe UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:45,979 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCBI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-14 12:11:45,979 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailub.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:45,979 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framd.ttf', name='Franklin Gothic Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,979 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolai.ttf', name='Consolas', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:45,981 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCEB.TTF', name='Tw Cen MT Condensed Extra Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-14 12:11:45,981 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\POORICH.TTF', name='Poor Richard', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,981 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDYSTO.TTF', name='Goudy Stout', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,981 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKB.TTF', name='Rockwell', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:45,982 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PALSCRI.TTF', name='Palace Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,982 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarai.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:45,982 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\micross.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,983 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LEELAWDB.TTF', name='Leelawadee', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:45,983 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABK.TTF', name='Franklin Gothic Book', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,983 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjh.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,983 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palabi.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-14 12:11:45,985 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAVIE.TTF', name='Ravie', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,985 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCK.TTF', name='Rockwell', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,985 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\pala.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,985 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibriz.ttf', name='Calibri', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-14 12:11:45,986 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugib.ttf', name='Gadugi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:45,986 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_PSTC.TTF', name='Bodoni MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-14 12:11:45,986 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENSCBK.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,987 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanab.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
2023-04-14 12:11:45,987 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LATINWD.TTF', name='Wide Latin', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
2023-04-14 12:11:45,987 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbeli.ttf', name='Corbel', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:45,987 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIGI.TTF', name='Gigi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,988 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITED.TTF', name='Lucida Bright', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-14 12:11:45,988 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbi.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-14 12:11:45,988 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhl.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2023-04-14 12:11:45,988 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguiemj.ttf', name='Segoe UI Emoji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,990 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OCRAEXT.TTF', name='OCR A Extended', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
2023-04-14 12:11:45,990 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebuc.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,990 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SHOWG.TTF', name='Showcard Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,990 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BASKVILL.TTF', name='Baskerville Old Face', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,991 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriab.ttf', name='Cambria', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:45,991 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAIAN.TTF', name='Maiandra GD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,991 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCRIPTBL.TTF', name='Script MT Bold', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:45,991 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLECB.TTF', name='Gloucester MT Extra Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-14 12:11:45,992 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNTI.TTF', name='Elephant', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:45,992 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFR.TTF', name='Californian FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,992 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHIC.TTF', name='Century Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,992 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PLAYBILL.TTF', name='Playbill', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,994 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABKIT.TTF', name='Franklin Gothic Book', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:45,994 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARLOWSI.TTF', name='Harlow Solid Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:45,994 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPE.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,995 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taile.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,995 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibl.ttf', name='Segoe UI', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2023-04-14 12:11:45,995 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNBI.TTF', name='Arial', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 7.8986363636363635
2023-04-14 12:11:45,996 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuiz.ttf', name='Segoe UI', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-14 12:11:45,996 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSBI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-14 12:11:45,996 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palab.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:45,997 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLI.TTF', name='Bell MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:45,997 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILLUBCD.TTF', name='Gill Sans Ultra Bold Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-14 12:11:45,997 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbd.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:45,997 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhbd.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:45,998 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoesc.ttf', name='Segoe Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,998 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\couri.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:45,998 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegUIVar.ttf', name='Segoe UI Variable', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,999 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_R.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,999 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTB.TTF', name='Copperplate Gothic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:45,999 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:45,999 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCB_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:46,001 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TEMPSITC.TTF', name='Tempus Sans ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,001 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MISTRAL.TTF', name='Mistral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,001 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FORTE.TTF', name='Forte', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,001 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CB.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-04-14 12:11:46,002 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbd.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:46,002 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STENCIL.TTF', name='Stencil', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,002 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrib.ttf', name='Calibri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:46,002 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERT.TTF', name='High Tower Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,003 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTCORSVA.TTF', name='Monotype Corsiva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,003 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFB.TTF', name='Californian FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:46,003 [19600] DEBUG    matplotlib.font_manager:1367: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to DejaVu Sans ('C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
2023-04-14 12:11:46,025 [19600] DEBUG    matplotlib.font_manager:1329: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2023-04-14 12:11:46,026 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-14 12:11:46,026 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-14 12:11:46,026 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,028 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2023-04-14 12:11:46,028 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2023-04-14 12:11:46,029 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:46,029 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:46,029 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:46,030 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,030 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-14 12:11:46,030 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,031 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:46,031 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,031 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,032 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,032 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:46,032 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:46,033 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,033 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,034 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2023-04-14 12:11:46,034 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,034 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,035 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-14 12:11:46,035 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:46,035 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:46,036 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,036 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,036 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:46,037 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:46,037 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,037 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,038 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,038 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:46,038 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,039 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:46,039 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,040 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,040 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2023-04-14 12:11:46,040 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLSNECB.TTF', name='Gill Sans MT Ext Condensed Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-14 12:11:46,041 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanz.ttf', name='Constantia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-14 12:11:46,041 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LEELAWAD.TTF', name='Leelawadee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,041 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\monbaiti.ttf', name='Mongolian Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,042 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-MEDIUM.TTF', name='Dubai', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-04-14 12:11:46,042 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-04-14 12:11:46,042 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FTLTLT.TTF', name='Footlight MT Light', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-14 12:11:46,043 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibril.ttf', name='Calibri', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-14 12:11:46,043 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSI.TTF', name='Goudy Old Style', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:46,043 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisbi.ttf', name='Segoe UI', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-14 12:11:46,044 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCCB___.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-04-14 12:11:46,044 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXD.TTF', name='Lucida Fax', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-14 12:11:46,044 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2023-04-14 12:11:46,045 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BSSYM7.TTF', name='Bookshelf Symbol 7', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,045 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAMDCN.TTF', name='Franklin Gothic Medium Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-14 12:11:46,046 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framdit.ttf', name='Franklin Gothic Medium', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:46,046 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSB.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:46,046 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-LIGHT.TTF', name='Dubai', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-14 12:11:46,047 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCC____.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-14 12:11:46,047 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_B.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:46,047 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COOPBL.TTF', name='Cooper Black', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,047 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNI.TTF', name='Arial', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 7.613636363636363
2023-04-14 12:11:46,048 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\INFROMAN.TTF', name='Informal Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,048 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSB.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-14 12:11:46,049 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BERNHC.TTF', name='Bernard MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-14 12:11:46,049 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEB.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-14 12:11:46,049 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCEDSCR.TTF', name='Edwardian Script ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,050 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consola.ttf', name='Consolas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,050 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,050 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\holomdl2.ttf', name='HoloLens MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,051 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COLONNA.TTF', name='Colonna MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,051 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYR.TTF', name='Agency FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,052 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRITANIC.TTF', name='Britannic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,052 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiai.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:46,052 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:46,053 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaS.ttf', name='Nirmala UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2023-04-14 12:11:46,053 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CHILLER.TTF', name='Chiller', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,053 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,054 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAB.TTF', name='Book Antiqua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:46,054 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothM.ttc', name='Yu Gothic', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-04-14 12:11:46,054 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG2.TTF', name='Wingdings 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,054 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Nirmala.ttf', name='Nirmala UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,054 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelUIsl.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2023-04-14 12:11:46,055 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriai.ttf', name='Cambria', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:46,056 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariali.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
2023-04-14 12:11:46,056 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARA.TTF', name='Garamond', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,056 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSPCL.TTF', name='MS Reference Specialty', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,056 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-REGULAR.TTF', name='Dubai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,057 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LHANDW.TTF', name='Lucida Handwriting', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:46,057 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:46,057 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comici.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:46,057 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTAUR.TTF', name='Centaur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,058 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEBO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-14 12:11:46,058 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ONYX.TTF', name='Onyx', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,058 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrima.ttf', name='Ebrima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,058 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFI.TTF', name='Californian FB', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:46,059 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERBI___.TTF', name='Perpetua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-14 12:11:46,059 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbell.ttf', name='Corbel', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-14 12:11:46,059 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILI____.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:46,059 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segmdl2.ttf', name='Segoe MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,060 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-BOLD.TTF', name='Dubai', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:46,060 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FELIXTI.TTF', name='Felix Titling', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,060 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbd.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
2023-04-14 12:11:46,060 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taileb.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:46,061 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeprb.ttf', name='Segoe Print', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:46,061 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoescb.ttf', name='Segoe Script', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:46,061 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITE.TTF', name='Lucida Bright', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,061 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhbd.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:46,062 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\times.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,062 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisb.ttf', name='Segoe UI', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-14 12:11:46,062 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSDB.TTF', name='Berlin Sans FB Demi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:46,063 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbi.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
2023-04-14 12:11:46,063 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesi.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:46,063 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADM.TTF', name='Franklin Gothic Demi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,063 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERTI.TTF', name='High Tower Text', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:46,064 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF-Italic.ttf', name='Sitka', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:46,064 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsun.ttc', name='SimSun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,064 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTI.TTF', name='Calisto MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:46,064 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCMI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:46,065 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaral.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,065 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\lucon.ttf', name='Lucida Console', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,065 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_I.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:46,066 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mvboli.ttf', name='MV Boli', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,066 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiab.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:46,066 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\l_10646.ttf', name='Lucida Sans Unicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,066 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTIBD.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:46,067 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNT.TTF', name='Elephant', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,067 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASMD.TTF', name='Eras Medium ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,067 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MSUIGHUR.TTF', name='Microsoft Uighur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,067 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYB.TTF', name='Agency FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:46,068 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MSUIGHUB.TTF', name='Microsoft Uighur', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:46,068 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicbd.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:46,069 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMIT.TTF', name='Franklin Gothic Demi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:46,069 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKEB.TTF', name='Rockwell Extra Bold', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
2023-04-14 12:11:46,069 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PER_____.TTF', name='Perpetua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,070 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VINERITC.TTF', name='Viner Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,070 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\marlett.ttf', name='Marlett', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-04-14 12:11:46,070 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrili.ttf', name='Calibri', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-04-14 12:11:46,071 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICBI.TTF', name='Century Gothic', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-14 12:11:46,071 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ALGER.TTF', name='Algerian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,071 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOS.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,072 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelz.ttf', name='Corbel', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-14 12:11:46,072 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILB____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:46,072 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUABI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-14 12:11:46,073 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\sylfaen.ttf', name='Sylfaen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,073 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriaz.ttf', name='Cambria', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-14 12:11:46,073 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanaz.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
2023-04-14 12:11:46,074 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constan.ttf', name='Constantia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,074 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTILI.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-14 12:11:46,074 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCM_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,075 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhl.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2023-04-14 12:11:46,075 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOS.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-14 12:11:46,075 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HATTEN.TTF', name='Haettenschweiler', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,076 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JOKERMAN.TTF', name='Jokerman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,076 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ENGR.TTF', name='Engravers MT', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-04-14 12:11:46,077 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARAIT.TTF', name='Garamond', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:46,077 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,077 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelli.ttf', name='Corbel', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-04-14 12:11:46,078 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constani.ttf', name='Constantia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:46,078 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIST.TTF', name='Calisto MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,078 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PARCHM.TTF', name='Parchment', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,079 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\himalaya.ttf', name='Microsoft Himalaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,079 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRADHITC.TTF', name='Bradley Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,079 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\wingding.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,079 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtextb.ttf', name='Myanmar Text', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:46,081 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG3.TTF', name='Wingdings 3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,081 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGSOL.TTF', name='Niagara Solid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,081 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarali.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:46,081 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKI.TTF', name='Rockwell', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:46,082 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolab.ttf', name='Consolas', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:46,083 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXDI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-14 12:11:46,083 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BAUHS93.TTF', name='Bauhaus 93', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,083 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisli.ttf', name='Segoe UI', style='italic', variant='normal', weight=350, stretch='normal', size='scalable')) = 11.0975
2023-04-14 12:11:46,083 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELL.TTF', name='Bell MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,083 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2023-04-14 12:11:46,084 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyi.ttf', name='Microsoft Yi Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,084 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSR.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,084 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHVIT.TTF', name='Franklin Gothic Heavy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:46,085 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OLDENGL.TTF', name='Old English Text MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,085 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbel.ttf', name='Corbel', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,086 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLB.TTF', name='Bell MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:46,086 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelaUIb.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:46,086 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHV.TTF', name='Franklin Gothic Heavy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,087 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OUTLOOK.TTF', name='MS Outlook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,087 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PRISTINA.TTF', name='Pristina', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,087 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERI____.TTF', name='Perpetua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:46,088 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtext.ttf', name='Myanmar Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,088 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSAN.TTF', name='MS Reference Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,088 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERB____.TTF', name='Perpetua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:46,089 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTEXTRA.TTF', name='MT Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,089 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKB.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:46,089 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARABD.TTF', name='Garamond', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:46,090 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cour.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,090 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mingliub.ttc', name='MingLiU-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,091 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICB.TTF', name='Century Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:46,091 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspa.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,091 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VIVALDII.TTF', name='Vivaldi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:46,092 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAGE.TTF', name='Rage Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:46,092 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-14 12:11:46,092 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2023-04-14 12:11:46,093 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MATURASC.TTF', name='Matura MT Script Capitals', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,093 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comic.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,093 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbi.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-14 12:11:46,094 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothR.ttc', name='Yu Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,094 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palai.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:46,094 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MOD20.TTF', name='Modern No. 20', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,095 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMCN.TTF', name='Franklin Gothic Demi Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-14 12:11:46,095 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrimabd.ttf', name='Ebrima', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:46,095 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\javatext.ttf', name='Javanese Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,096 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CASTELAR.TTF', name='Castellar', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,096 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSDI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-14 12:11:46,096 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelawUI.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,097 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAX.TTF', name='Lucida Fax', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,097 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunbd.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:46,097 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF.ttf', name='Sitka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,098 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTL.TTF', name='Copperplate Gothic Light', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,098 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
2023-04-14 12:11:46,098 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeui.ttf', name='Segoe UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,099 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Gabriola.ttf', name='Gabriola', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,099 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTBI.TTF', name='Calisto MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-14 12:11:46,099 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicz.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-14 12:11:46,100 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALN.TTF', name='Arial', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 6.613636363636363
2023-04-14 12:11:46,100 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKBI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-14 12:11:46,100 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FREESCPT.TTF', name='Freestyle Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,101 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTURY.TTF', name='Century', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,101 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaB.ttf', name='Nirmala UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:46,101 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSB.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:46,102 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSD.TTF', name='Lucida Sans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-14 12:11:46,102 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuisl.ttf', name='Segoe UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2023-04-14 12:11:46,102 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:46,103 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-14 12:11:46,103 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguihis.ttf', name='Segoe UI Historic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,103 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCB____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-04-14 12:11:46,103 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambria.ttc', name='Cambria', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,104 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKBI.TTF', name='Rockwell', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-14 12:11:46,104 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGENG.TTF', name='Niagara Engraved', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,104 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisym.ttf', name='Segoe UI Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,105 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inkfree.ttf', name='Ink Free', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,105 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASBD.TTF', name='Eras Bold ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,105 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILC____.TTF', name='Gill Sans MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-14 12:11:46,105 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candara.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,106 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\bahnschrift.ttf', name='Bahnschrift', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,106 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BROADW.TTF', name='Broadway', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,106 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolaz.ttf', name='Consolas', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-14 12:11:46,107 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CBI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2023-04-14 12:11:46,107 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuii.ttf', name='Segoe UI', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:46,107 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibli.ttf', name='Segoe UI', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2023-04-14 12:11:46,107 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEDI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-14 12:11:46,108 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucit.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:46,108 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BKANT.TTF', name='Book Antiqua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,108 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothL.ttc', name='Yu Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-14 12:11:46,109 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrii.ttf', name='Calibri', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:46,109 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CURLZ___.TTF', name='Curlz MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,109 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelb.ttf', name='Corbel', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:46,109 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARLRDBD.TTF', name='Arial Rounded MT Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,110 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothB.ttc', name='Yu Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:46,110 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASDEMI.TTF', name='Eras Demi ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,110 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
2023-04-14 12:11:46,111 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANS.TTF', name='Lucida Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,111 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariblk.ttf', name='Arial', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 6.888636363636364
2023-04-14 12:11:46,111 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCKRIST.TTF', name='Kristen ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,111 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\KUNSTLER.TTF', name='Kunstler Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,112 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanb.ttf', name='Constantia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:46,112 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PAPYRUS.TTF', name='Papyrus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,113 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JUICE___.TTF', name='Juice ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,113 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguili.ttf', name='Segoe UI', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-04-14 12:11:46,113 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:46,114 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarab.ttf', name='Candara', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:46,114 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\IMPRISHA.TTF', name='Imprint MT Shadow', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,114 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailu.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,114 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbi.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-14 12:11:46,115 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuil.ttf', name='Segoe UI', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-14 12:11:46,115 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanai.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
2023-04-14 12:11:46,115 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoepr.ttf', name='Segoe Print', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,116 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaraz.ttf', name='Candara', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-14 12:11:46,116 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNB.TTF', name='Arial', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 6.8986363636363635
2023-04-14 12:11:46,116 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspab.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:46,117 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,117 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCM____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-14 12:11:46,117 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARNGTON.TTF', name='Harrington', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,117 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbd.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:46,118 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:46,118 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILSANUB.TTF', name='Gill Sans Ultra Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,118 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibri.ttf', name='Calibri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,118 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiaz.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-14 12:11:46,119 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegoeIcons.ttf', name='Segoe Fluent Icons', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,119 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAGNETOB.TTF', name='Magneto', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:46,119 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICI.TTF', name='Century Gothic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:46,120 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCBLKAD.TTF', name='Blackadder ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,120 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahomabd.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:46,120 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugi.ttf', name='Gadugi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,120 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LCALLIG.TTF', name='Lucida Calligraphy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:46,121 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyh.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,121 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsunb.ttf', name='SimSun-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,121 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgun.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,121 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIL_____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,122 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VLADIMIR.TTF', name='Vladimir Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,122 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,122 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msgothic.ttc', name='MS Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,122 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRSCRIPT.TTF', name='French Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,123 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILBI___.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-14 12:11:46,123 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASLGHT.TTF', name='Eras Light ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,123 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTB.TTF', name='Calisto MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:46,124 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunsl.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-14 12:11:46,124 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRUSHSCI.TTF', name='Brush Script MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:46,124 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SNAP____.TTF', name='Snap ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,125 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuib.ttf', name='Segoe UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:46,125 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCBI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-14 12:11:46,125 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailub.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:46,126 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framd.ttf', name='Franklin Gothic Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,126 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolai.ttf', name='Consolas', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:46,126 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCEB.TTF', name='Tw Cen MT Condensed Extra Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-14 12:11:46,126 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\POORICH.TTF', name='Poor Richard', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,127 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDYSTO.TTF', name='Goudy Stout', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,127 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKB.TTF', name='Rockwell', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:46,127 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PALSCRI.TTF', name='Palace Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,128 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarai.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:46,128 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\micross.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,128 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LEELAWDB.TTF', name='Leelawadee', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:46,128 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABK.TTF', name='Franklin Gothic Book', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,129 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjh.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,129 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palabi.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-14 12:11:46,129 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAVIE.TTF', name='Ravie', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,130 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCK.TTF', name='Rockwell', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,130 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\pala.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,130 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibriz.ttf', name='Calibri', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-14 12:11:46,131 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugib.ttf', name='Gadugi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:46,131 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_PSTC.TTF', name='Bodoni MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-14 12:11:46,131 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENSCBK.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,132 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanab.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
2023-04-14 12:11:46,132 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LATINWD.TTF', name='Wide Latin', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
2023-04-14 12:11:46,133 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbeli.ttf', name='Corbel', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:46,133 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIGI.TTF', name='Gigi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,133 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITED.TTF', name='Lucida Bright', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-14 12:11:46,134 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbi.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-14 12:11:46,134 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhl.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2023-04-14 12:11:46,134 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguiemj.ttf', name='Segoe UI Emoji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,135 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OCRAEXT.TTF', name='OCR A Extended', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
2023-04-14 12:11:46,135 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebuc.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,135 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SHOWG.TTF', name='Showcard Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,136 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BASKVILL.TTF', name='Baskerville Old Face', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,136 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriab.ttf', name='Cambria', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:46,137 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAIAN.TTF', name='Maiandra GD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,137 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCRIPTBL.TTF', name='Script MT Bold', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:46,137 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLECB.TTF', name='Gloucester MT Extra Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-14 12:11:46,138 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNTI.TTF', name='Elephant', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:46,138 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFR.TTF', name='Californian FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,138 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHIC.TTF', name='Century Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,139 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PLAYBILL.TTF', name='Playbill', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,139 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABKIT.TTF', name='Franklin Gothic Book', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:46,139 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARLOWSI.TTF', name='Harlow Solid Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:46,140 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPE.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,140 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taile.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,140 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibl.ttf', name='Segoe UI', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2023-04-14 12:11:46,141 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNBI.TTF', name='Arial', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 7.8986363636363635
2023-04-14 12:11:46,141 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuiz.ttf', name='Segoe UI', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-14 12:11:46,141 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSBI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-14 12:11:46,142 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palab.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:46,142 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLI.TTF', name='Bell MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:46,142 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILLUBCD.TTF', name='Gill Sans Ultra Bold Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-14 12:11:46,143 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbd.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:46,143 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhbd.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:46,143 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoesc.ttf', name='Segoe Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,144 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\couri.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:46,144 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegUIVar.ttf', name='Segoe UI Variable', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,144 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_R.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,144 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTB.TTF', name='Copperplate Gothic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,145 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-14 12:11:46,145 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCB_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:46,145 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TEMPSITC.TTF', name='Tempus Sans ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,146 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MISTRAL.TTF', name='Mistral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,146 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FORTE.TTF', name='Forte', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,147 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CB.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-04-14 12:11:46,147 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbd.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:46,147 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STENCIL.TTF', name='Stencil', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,147 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrib.ttf', name='Calibri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:46,148 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERT.TTF', name='High Tower Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,148 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTCORSVA.TTF', name='Monotype Corsiva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-14 12:11:46,148 [19600] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFB.TTF', name='Californian FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-14 12:11:46,149 [19600] DEBUG    matplotlib.font_manager:1367: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
2023-04-14 12:12:02,293 [19600] DEBUG    matplotlib.colorbar:847: [JupyterRequire] locator: <matplotlib.ticker.AutoLocator object at 0x0000027340571EE0>
2023-04-14 12:16:21,005 [19600] DEBUG    matplotlib.colorbar:847: [JupyterRequire] locator: <matplotlib.ticker.AutoLocator object at 0x0000027342B535B0>
2023-04-14 13:05:12,904 [24212] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-04-14 13:05:12,904 [24212] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-04-14 13:05:12,905 [24212] INFO     root:247: [JupyterRequire] Initializing comms.
2023-04-14 13:05:12,908 [24212] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-04-14 13:05:12,909 [24212] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-04-14 13:05:12,910 [24212] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-04-14 13:11:55,655 [22456] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-04-14 13:11:55,656 [22456] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-04-14 13:11:55,656 [22456] INFO     root:247: [JupyterRequire] Initializing comms.
2023-04-14 13:11:55,659 [22456] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-04-14 13:11:55,659 [22456] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-04-14 13:11:55,660 [22456] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-04-14 13:13:22,951 [10176] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-04-14 13:13:22,951 [10176] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-04-14 13:13:22,952 [10176] INFO     root:247: [JupyterRequire] Initializing comms.
2023-04-14 13:13:22,955 [10176] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-04-14 13:13:22,955 [10176] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-04-14 13:13:22,957 [10176] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-04-14 13:54:55,260 [10176] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-04-14 13:54:55,260 [10176] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-04-14 13:54:55,260 [10176] INFO     root:247: [JupyterRequire] Initializing comms.
2023-04-14 13:54:55,264 [10176] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-04-14 13:54:55,264 [10176] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-04-14 13:54:55,268 [10176] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-04-20 15:51:43,510 [32240] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-04-20 15:51:43,511 [32240] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-04-20 15:51:43,513 [32240] INFO     root:247: [JupyterRequire] Initializing comms.
2023-04-20 15:51:43,515 [32240] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-04-20 15:51:43,516 [32240] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-04-20 15:51:43,517 [32240] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-04-20 15:51:44,058 [32240] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-04-20 15:51:44,059 [32240] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-04-20 15:51:44,060 [32240] INFO     root:247: [JupyterRequire] Initializing comms.
2023-04-20 15:51:44,063 [32240] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-04-20 15:51:44,063 [32240] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-04-20 15:51:44,068 [32240] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-04-20 15:52:33,700 [31648] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-04-20 15:52:33,701 [31648] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-04-20 15:52:33,701 [31648] INFO     root:247: [JupyterRequire] Initializing comms.
2023-04-20 15:52:33,704 [31648] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-04-20 15:52:33,705 [31648] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-04-20 15:52:33,707 [31648] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-04-20 15:53:47,013 [31648] INFO     numexpr.utils:147: [JupyterRequire] Note: NumExpr detected 12 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
2023-04-20 15:53:47,013 [31648] INFO     numexpr.utils:159: [JupyterRequire] NumExpr defaulting to 8 threads.
2023-04-20 15:53:47,999 [31648] DEBUG    matplotlib:275: [JupyterRequire] matplotlib data path: C:\Users\adity\anaconda3\lib\site-packages\matplotlib\mpl-data
2023-04-20 15:53:48,007 [31648] DEBUG    matplotlib:275: [JupyterRequire] CONFIGDIR=C:\Users\adity\.matplotlib
2023-04-20 15:53:48,011 [31648] DEBUG    matplotlib:1445: [JupyterRequire] interactive is False
2023-04-20 15:53:48,012 [31648] DEBUG    matplotlib:1446: [JupyterRequire] platform is win32
2023-04-20 15:53:48,012 [31648] DEBUG    matplotlib:1447: [JupyterRequire] loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', '_io', 'marshal', 'nt', 'winreg', '_frozen_importlib_external', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', 'encodings.cp1252', '_signal', 'encodings.latin_1', '_abc', 'abc', 'io', '__main__', '_stat', 'stat', '_collections_abc', 'genericpath', 'ntpath', 'os.path', 'os', '_sitebuiltins', '_locale', '_bootlocale', '_distutils_hack', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib.machinery', '_heapq', 'heapq', 'itertools', 'keyword', '_operator', 'operator', 'reprlib', '_collections', 'collections', 'collections.abc', '_functools', 'functools', 'contextlib', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', 'copyreg', 're', 'typing.io', 'typing.re', 'typing', 'importlib.abc', 'importlib.util', 'google', 'google.cloud', 'google.logging', 'mpl_toolkits', 'sphinxcontrib', 'zope', 'site', '_weakrefset', 'weakref', 'pkgutil', 'runpy', 'ipykernel._version', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'errno', 'signal', 'threading', 'msvcrt', '_winapi', 'subprocess', 'jupyter_client._version', 'posixpath', 'fnmatch', 'glob', '_socket', 'math', 'select', 'selectors', 'socket', 'zlib', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', '_bisect', 'bisect', '_random', '_sha512', 'random', 'tempfile', 'getpass', 'platform', 'zmq.libzmq', 'zmq.backend.select', 'cython_runtime', 'zmq.backend.cython.constants', '_cython_0_29_24', 'zmq.backend.cython.error', 'zmq.error', 'zmq.backend.cython.message', 'zmq.backend.cython.context', 'copy', '_struct', 'struct', '_compat_pickle', '_pickle', 'pickle', 'zmq.backend.cython.socket', 'zmq.backend.cython.utils', 'zmq.backend.cython._poll', 'zmq.backend.cython._version', 'zmq.backend.cython._device', 'zmq.backend.cython._proxy_steerable', 'zmq.backend.cython', 'zmq.backend', 'zmq.utils', 'zmq.utils.constant_names', 'zmq.sugar.constants', 'atexit', 'zmq.sugar.attrsettr', 'zmq.sugar.poll', 'zmq.utils.jsonapi', 'zmq.utils.strtypes', 'zmq.sugar.socket', 'zmq.sugar.context', 'zmq.sugar.frame', 'zmq.sugar.tracker', 'zmq.sugar.version', 'zmq.sugar.stopwatch', 'zmq.sugar', 'zmq', '_ast', 'ast', '_opcode', 'opcode', 'dis', 'token', 'tokenize', 'linecache', 'inspect', 'traitlets.utils', 'traitlets.utils.getargspec', 'traitlets.utils.importstring', 'traitlets.utils.sentinel', 'traitlets.utils.bunch', 'traitlets.utils.descriptions', 'traitlets.traitlets', 'traitlets.utils.decorators', 'traitlets._version', 'traitlets', 'traceback', '_string', 'string', 'logging', 'pprint', 'gettext', 'argparse', 'traitlets.config.loader', 'textwrap', 'traitlets.utils.text', 'traitlets.config.configurable', 'traitlets.config.application', 'traitlets.config', 'jupyter_client.localinterfaces', 'jupyter_core.version', 'jupyter_core', 'urllib', 'urllib.parse', 'pathlib', 'jupyter_core.paths', 'jupyter_client.utils', 'jupyter_client.connect', 'traitlets.log', 'jupyter_client.launcher', 'concurrent', 'concurrent.futures._base', 'concurrent.futures', '_ssl', 'binascii', 'base64', 'ssl', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', '_contextvars', 'contextvars', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.threads', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'asyncio.windows_events', 'asyncio', 'jupyter_client.channelsabc', 'jupyter_client.channels', 'jupyter_client.clientabc', 'jupyter_client.client', 'jupyter_client.kernelspec', 'jupyter_client.managerabc', 'jupyter_client.manager', '_queue', 'queue', 'jupyter_client.blocking.channels', 'jupyter_client.blocking.client', 'jupyter_client.blocking', 'zmq._future', 'zmq.asyncio', 'jupyter_client.asynchronous.channels', 'jupyter_client.asynchronous.client', 'jupyter_client.asynchronous', '_uuid', 'uuid', 'jupyter_client.multikernelmanager', 'jupyter_client', 'ipykernel.connect', 'ipykernel', 'tornado', '_datetime', 'datetime', 'numbers', 'logging.handlers', 'html.entities', 'html', 'array', 'tornado.speedups', 'tornado.util', 'tornado.escape', 'colorama.ansi', '_ctypes', 'ctypes._endian', 'ctypes', 'ctypes.wintypes', 'colorama.win32', 'colorama.winterm', 'colorama.ansitowin32', 'colorama.initialise', 'colorama', 'tornado.log', 'tornado.concurrent', 'tornado.ioloop', '__future__', 'tornado.platform', 'tornado.gen', 'tornado.platform.asyncio', 'zmq.eventloop.ioloop', 'zmq.eventloop', 'zmq.eventloop.zmqstream', 'IPython.core', 'IPython.core.getipython', 'IPython.core.release', 'sysconfig', 'pydoc', 'executing.executing', 'executing.version', 'executing', 'asttokens.line_numbers', 'six', 'six.moves', 'asttokens.util', 'asttokens.mark_tokens', 'asttokens.asttokens', 'asttokens', '_decimal', 'decimal', 'fractions', 'pure_eval.utils', 'pure_eval.my_getattr_static', 'pure_eval.core', 'pure_eval.version', 'pure_eval', 'stack_data.utils', 'stack_data.core', 'stack_data.formatting', 'stack_data.version', 'stack_data', 'pygments', 'pygments.formatters._mapping', 'pygments.plugin', 'pygments.util', 'pygments.formatters', 'pygments.styles', 'pygments.formatter', 'pygments.console', 'pygments.token', 'pygments.style', 'pygments.formatters.terminal256', 'bdb', 'IPython.utils', 'IPython.utils.ipstruct', 'IPython.utils.coloransi', 'IPython.utils.colorable', 'IPython.utils.PyColorize', 'locale', 'IPython.utils.encoding', 'IPython.utils.py3compat', 'IPython.core.excolors', 'cmd', 'codeop', 'code', 'pdb', 'IPython.core.debugger', 'IPython.core.display_trap', 'shlex', 'IPython.utils._process_common', 'IPython.utils._process_win32', 'IPython.utils.process', 'IPython.utils.decorators', 'IPython.utils.path', 'IPython.utils.terminal', 'IPython.core.ultratb', 'IPython.utils._sysinfo', 'IPython.utils.sysinfo', 'IPython.core.crashhandler', 'IPython.utils.importstring', 'IPython.paths', 'IPython.core.profiledir', 'IPython.core.application', 'IPython.terminal', '_hashlib', '_blake2', 'hashlib', 'IPython.core.compilerop', 'IPython.core.error', 'IPython.utils.text', 'IPython.core.magic_arguments', 'getopt', 'IPython.core.display_functions', 'mimetypes', 'IPython.testing', 'IPython.testing.skipdoctest', 'IPython.core.display', 'IPython.lib', 'IPython.lib.display', 'IPython.display', 'IPython.utils.data', 'IPython.core.page', 'IPython.lib.pretty', 'IPython.utils.openpy', 'IPython.utils.dir2', 'IPython.utils.wildcard', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.lexers', 'pygments.filter', 'pygments.filters', 'pygments.regexopt', 'pygments.lexer', 'pygments.unistring', 'pygments.lexers.python', 'pygments.formatters.html', 'IPython.core.oinspect', 'IPython.core.inputtransformer2', 'IPython.core.magic', 'pickleshare', 'IPython.core.hooks', 'IPython.core.autocall', 'IPython.core.macro', 'IPython.core.splitinput', 'IPython.core.prefilter', 'IPython.core.alias', 'IPython.core.builtin_trap', 'IPython.core.displayhook', 'IPython.core.displaypub', 'backcall.backcall', 'backcall', 'IPython.core.events', 'IPython.core.extensions', 'decorator', 'IPython.utils.sentinel', 'IPython.core.formatters', '_sqlite3', 'sqlite3.dbapi2', 'sqlite3', 'IPython.core.history', 'IPython.core.logger', 'IPython.core.payload', 'IPython.core.usage', 'IPython.utils.capture', 'IPython.utils.io', 'IPython.utils.strdispatch', 'IPython.utils.syspathcontext', 'IPython.core.async_helpers', 'IPython.core.interactiveshell', 'prompt_toolkit.application.current', 'prompt_toolkit.eventloop.utils', 'prompt_toolkit.eventloop.async_generator', 'wcwidth.table_wide', 'wcwidth.table_zero', 'wcwidth.unicode_versions', 'wcwidth.wcwidth', 'wcwidth', 'prompt_toolkit.utils', 'prompt_toolkit.eventloop.inputhook', 'prompt_toolkit.eventloop', 'prompt_toolkit.application.run_in_terminal', 'prompt_toolkit.selection', 'prompt_toolkit.clipboard.base', 'prompt_toolkit.clipboard.in_memory', 'prompt_toolkit.clipboard', 'prompt_toolkit.cache', 'prompt_toolkit.enums', 'prompt_toolkit.filters.base', 'prompt_toolkit.filters.app', 'prompt_toolkit.filters.cli', 'prompt_toolkit.filters.utils', 'prompt_toolkit.filters', 'prompt_toolkit.document', 'prompt_toolkit.auto_suggest', 'prompt_toolkit.data_structures', 'prompt_toolkit.styles.base', 'prompt_toolkit.styles.named_colors', 'prompt_toolkit.styles.style', 'prompt_toolkit.styles.defaults', 'prompt_toolkit.styles.pygments', 'colorsys', 'prompt_toolkit.styles.style_transformation', 'prompt_toolkit.styles', 'prompt_toolkit.output.color_depth', 'prompt_toolkit.output.base', 'prompt_toolkit.output.defaults', 'prompt_toolkit.output', 'prompt_toolkit.output.vt100', 'prompt_toolkit.mouse_events', 'prompt_toolkit.formatted_text.base', 'prompt_toolkit.formatted_text.ansi', 'xml', 'xml.dom.domreg', 'xml.dom', 'xml.dom.minicompat', 'xml.dom.NodeFilter', 'xml.dom.xmlbuilder', 'xml.dom.minidom', 'prompt_toolkit.formatted_text.html', 'prompt_toolkit.formatted_text.pygments', 'prompt_toolkit.formatted_text.utils', 'prompt_toolkit.formatted_text', 'prompt_toolkit.completion.base', 'prompt_toolkit.completion.deduplicate', 'prompt_toolkit.completion.filesystem', 'prompt_toolkit.completion.word_completer', 'prompt_toolkit.completion.fuzzy_completer', 'prompt_toolkit.completion.nested', 'prompt_toolkit.completion', 'prompt_toolkit.history', 'prompt_toolkit.keys', 'prompt_toolkit.key_binding.key_bindings', 'prompt_toolkit.key_binding.key_processor', 'prompt_toolkit.key_binding', 'prompt_toolkit.key_binding.vi_state', 'prompt_toolkit.search', 'prompt_toolkit.validation', 'prompt_toolkit.buffer', 'prompt_toolkit.input.base', 'prompt_toolkit.input.defaults', 'prompt_toolkit.input', 'prompt_toolkit.input.typeahead', 'prompt_toolkit.key_binding.bindings', 'prompt_toolkit.key_binding.bindings.scroll', 'prompt_toolkit.key_binding.bindings.page_navigation', 'prompt_toolkit.lexers.base', 'prompt_toolkit.lexers.pygments', 'prompt_toolkit.lexers', 'prompt_toolkit.layout.utils', 'prompt_toolkit.layout.processors', 'prompt_toolkit.layout.controls', 'prompt_toolkit.layout.dimension', 'prompt_toolkit.layout.margins', 'prompt_toolkit.layout.mouse_handlers', 'prompt_toolkit.layout.screen', 'prompt_toolkit.layout.containers', 'prompt_toolkit.layout.layout', 'prompt_toolkit.layout.menus', 'prompt_toolkit.layout.scrollable_pane', 'prompt_toolkit.layout', 'prompt_toolkit.key_binding.bindings.completion', 'prompt_toolkit.key_binding.bindings.named_commands', 'prompt_toolkit.key_binding.bindings.basic', 'prompt_toolkit.key_binding.bindings.cpr', 'prompt_toolkit.key_binding.bindings.emacs', 'prompt_toolkit.key_binding.bindings.mouse', 'prompt_toolkit.input.ansi_escape_sequences', 'prompt_toolkit.input.vt100_parser', 'prompt_toolkit.key_binding.digraphs', 'prompt_toolkit.key_binding.bindings.vi', 'prompt_toolkit.key_binding.defaults', 'prompt_toolkit.key_binding.emacs_state', 'prompt_toolkit.layout.dummy', 'prompt_toolkit.renderer', 'prompt_toolkit.application.application', 'prompt_toolkit.application.dummy', 'prompt_toolkit.application', 'prompt_toolkit.key_binding.bindings.focus', 'prompt_toolkit.widgets.toolbars', 'prompt_toolkit.widgets.base', 'prompt_toolkit.widgets.dialogs', 'prompt_toolkit.widgets.menus', 'prompt_toolkit.widgets', 'prompt_toolkit.shortcuts.dialogs', 'prompt_toolkit.shortcuts.progress_bar.formatters', 'prompt_toolkit.shortcuts.progress_bar.base', 'prompt_toolkit.shortcuts.progress_bar', 'prompt_toolkit.key_binding.bindings.auto_suggest', 'prompt_toolkit.key_binding.bindings.open_in_editor', 'prompt_toolkit.shortcuts.prompt', 'prompt_toolkit.shortcuts.utils', 'prompt_toolkit.shortcuts', 'prompt_toolkit', 'prompt_toolkit.patch_stdout', 'unicodedata', 'IPython.core.latex_symbols', 'IPython.utils.generics', 'parso.utils', 'parso.tree', 'parso.python', 'parso.python.token', 'parso.python.tokenize', 'parso.pgen2.grammar_parser', 'parso.pgen2.generator', 'parso.pgen2', 'parso.parser', 'parso._compatibility', 'difflib', 'parso.python.prefix', 'parso.python.tree', 'parso.python.parser', 'parso.python.diff', 'gc', 'parso.cache', 'parso.normalizer', 'parso.python.errors', 'parso.python.pep8', 'parso.file_io', 'parso.grammar', 'parso', 'jedi.parser_utils', 'jedi.debug', 'jedi.settings', 'jedi.cache', 'jedi.file_io', 'jedi.inference.cache', 'jedi.inference.helpers', 'jedi.inference.utils', 'jedi.inference.base_value', 'jedi.inference.sys_path', 'jedi.inference.recursion', 'jedi.inference.flow_analysis', 'jedi.common', 'jedi.inference.lazy_value', 'jedi.inference.docstrings', 'jedi.plugins', 'jedi.inference.names', 'jedi.inference.filters', 'jedi.inference.compiled.getattr_static', 'jedi.inference.compiled.access', 'jedi.inference.signature', 'jedi.inference.context', 'jedi.inference.compiled.value', 'jedi.inference.compiled', 'jedi.inference.analysis', 'jedi.inference.gradual', 'jedi.inference.value.module', 'jedi.inference.value.dynamic_arrays', 'jedi.inference.value.iterable', 'jedi.inference.arguments', 'jedi.inference.parser_cache', 'jedi.inference.gradual.generics', 'jedi.inference.value.function', 'jedi.inference.value.klass', 'jedi.inference.value.instance', 'jedi.inference.value', 'jedi.inference.gradual.base', 'jedi.inference.gradual.type_var', 'jedi.inference.gradual.typing', 'jedi.inference.gradual.stub_value', 'jedi.inference.gradual.typeshed', 'jedi._compatibility', 'zipfile', 'jedi.inference.compiled.subprocess.functions', 'jedi.api.exceptions', 'jedi.inference.compiled.subprocess', 'jedi.inference.imports', 'jedi.inference.param', 'jedi.inference.gradual.annotation', 'jedi.inference.value.decorator', 'jedi.inference.syntax_tree', 'jedi.inference', 'jedi.inference.gradual.conversion', 'jedi.inference.compiled.mixed', 'pydoc_data', 'pydoc_data.topics', 'jedi.api.keywords', 'jedi.api.completion_cache', 'jedi.api.helpers', 'jedi.api.classes', 'jedi.api.interpreter', 'jedi.api.strings', 'jedi.api.file_name', 'jedi.inference.docstring_utils', 'jedi.api.completion', 'filecmp', 'jedi.api.environment', 'jedi.inference.references', 'jedi.api.project', 'jedi.api.errors', 'jedi.api.refactoring', 'jedi.api.refactoring.extract', 'jedi.inference.gradual.utils', 'jedi.api', 'jedi.plugins.stdlib', 'jedi.plugins.flask', 'jedi.plugins.pytest', 'jedi.plugins.django', 'jedi.plugins.registry', 'jedi', 'IPython.core.completer', 'IPython.terminal.ptutils', 'IPython.lib.clipboard', 'IPython.terminal.shortcuts', 'concurrent.futures.thread', 'IPython.terminal.debugger', 'IPython.terminal.magics', 'IPython.terminal.pt_inputhooks', 'IPython.terminal.prompts', 'IPython.terminal.interactiveshell', 'IPython.core.magics.auto', 'IPython.core.magics.basic', 'email', 'http', 'email.errors', 'email.quoprimime', 'email.base64mime', 'quopri', 'email.encoders', 'email.charset', 'email.header', 'calendar', 'email._parseaddr', 'email.utils', 'email._policybase', 'email.feedparser', 'email.parser', 'uu', 'email._encoded_words', 'email.iterators', 'email.message', 'http.client', 'urllib.response', 'urllib.error', 'nturl2path', 'urllib.request', 'IPython.utils.contexts', 'IPython.core.magics.code', 'IPython.core.magics.config', 'IPython.core.magics.display', '_lsprof', 'profile', 'cProfile', 'dataclasses', 'pstats', 'timeit', 'IPython.utils.module_paths', 'IPython.utils.timing', 'IPython.core.magics.execution', 'IPython.core.magics.extension', 'IPython.core.magics.history', 'IPython.core.magics.logging', 'IPython.core.magics.namespace', 'IPython.core.magics.osm', 'IPython.core.magics.packaging', 'IPython.core.pylabtools', 'IPython.core.magics.pylab', 'IPython.core.magics.script', 'IPython.core.magics', 'IPython.core.shellapp', 'IPython.extensions', 'IPython.extensions.storemagic', 'IPython.terminal.ipapp', 'IPython.terminal.embed', 'IPython.utils.frame', 'IPython', 'imp', 'hmac', 'dateutil._version', 'dateutil', 'dateutil._common', 'dateutil.relativedelta', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.win', 'dateutil.tz.tz', 'dateutil.tz', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', '_strptime', 'jupyter_client.jsonutil', 'jupyter_client.adapter', 'jupyter_client.session', 'ipykernel.iostream', 'ipykernel.control', 'ipykernel.heartbeat', 'IPython.utils.tokenutil', 'psutil._common', 'psutil._compat', 'psutil._psutil_windows', 'psutil._pswindows', 'psutil', 'tornado.locks', 'tornado.queues', 'ipykernel.jsonutil', 'ipykernel.kernelbase', 'ipykernel.comm.comm', 'ipykernel.comm.manager', 'ipykernel.comm', 'IPython.core.payloadpage', 'ipykernel.displayhook', 'ipykernel.zmqshell', 'setuptools._distutils', 'distutils.debug', 'distutils.errors', 'distutils.fancy_getopt', 'distutils.dep_util', 'distutils.log', 'distutils.spawn', 'distutils.py35compat', 'distutils.util', 'distutils.dist', 'distutils.dir_util', 'distutils.file_util', 'distutils.archive_util', 'distutils.cmd', 'configparser', 'distutils.config', 'distutils.extension', 'distutils.core', '_distutils_hack.override', 'setuptools._deprecation_warning', 'xml.parsers', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'xml.parsers.expat', 'plistlib', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources._vendor.jaraco', 'pkg_resources.extern.jaraco', 'importlib._common', 'importlib.resources', 'pkg_resources._vendor.more_itertools.recipes', 'pkg_resources._vendor.more_itertools.more', 'pkg_resources._vendor.more_itertools', 'pkg_resources.extern.more_itertools', 'pkg_resources.extern.jaraco.functools', 'pkg_resources.extern.jaraco.context', 'pkg_resources.extern.jaraco.text', 'win32api', '_win32sysloader', 'pywintypes', 'pythoncom', 'win32com.gen_py', 'win32com', 'win32com.shell', 'pkg_resources._vendor.appdirs', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources._vendor.packaging', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.version', 'pkg_resources._vendor.packaging._manylinux', 'pkg_resources._vendor.packaging._musllinux', 'pkg_resources.extern.packaging.tags', 'pkg_resources.extern.packaging.utils', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources._vendor.pyparsing', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.packaging.markers', 'pkg_resources.extern.packaging.requirements', 'pkg_resources', 'setuptools.version', 'distutils.filelist', 'setuptools.monkey', 'setuptools.extension', 'distutils.command', 'setuptools.extern', 'setuptools._vendor', 'setuptools._vendor.packaging.__about__', 'setuptools._vendor.packaging', 'setuptools.extern.packaging', 'setuptools._vendor.ordered_set', 'setuptools.extern.ordered_set', 'setuptools._vendor.more_itertools.recipes', 'setuptools._vendor.more_itertools.more', 'setuptools._vendor.more_itertools', 'setuptools.extern.more_itertools', 'setuptools._vendor.pyparsing', 'setuptools.extern.pyparsing', 'setuptools._vendor.packaging._manylinux', 'setuptools._vendor.packaging._musllinux', 'setuptools.extern.packaging.tags', 'setuptools.extern.packaging._structures', 'setuptools.extern.packaging.version', 'setuptools.extern.packaging.utils', 'setuptools.extern.packaging.specifiers', 'setuptools.extern.packaging.markers', 'setuptools.extern.packaging.requirements', 'setuptools._vendor.jaraco', 'setuptools.extern.jaraco', 'setuptools.extern.jaraco.context', 'setuptools.extern.jaraco.functools', '_csv', 'csv', 'setuptools._vendor.zipp', 'setuptools._vendor.importlib_metadata._functools', 'setuptools._vendor.importlib_metadata._text', 'setuptools._vendor.importlib_metadata._adapters', 'setuptools._vendor.importlib_metadata._compat', 'setuptools._vendor.importlib_metadata._meta', 'setuptools._vendor.importlib_metadata._collections', 'setuptools._vendor.importlib_metadata._itertools', 'setuptools._vendor.importlib_metadata', 'setuptools.extern.importlib_metadata', 'setuptools._vendor.nspektr._compat', 'setuptools._vendor.nspektr', 'setuptools.extern.nspektr', 'zipp', 'importlib_metadata._functools', 'importlib_metadata._text', 'importlib_metadata._adapters', 'importlib_metadata._compat', 'importlib_metadata._meta', 'importlib_metadata._collections', 'importlib_metadata._itertools', 'importlib_metadata', 'setuptools._importlib', 'distutils.command.bdist', 'setuptools.command', 'setuptools.windows_support', 'setuptools.config.expand', 'setuptools.config.setupcfg', 'setuptools.config', 'setuptools.errors', 'email._header_value_parser', 'email.headerregistry', 'setuptools.config._apply_pyprojecttoml', 'setuptools.config.pyprojecttoml', 'setuptools.discovery', 'setuptools.extern.jaraco.text', 'setuptools._reqs', 'setuptools._itertools', 'setuptools._entry_points', 'setuptools.dist', 'setuptools.py34compat', 'setuptools._imp', 'setuptools.depends', 'setuptools.logging', 'distutils.ccompiler', 'distutils.msvc9compiler', 'setuptools.msvc', 'unittest.util', 'unittest.result', 'unittest.case', 'unittest.suite', 'unittest.loader', 'unittest.signals', 'unittest.runner', 'unittest.main', 'unittest', 'unittest.mock', 'distutils._msvccompiler', 'setuptools', 'distutils', 'distutils.version', 'ipykernel.eventloops', 'ipykernel.compiler', 'debugpy._version', 'debugpy.common', 'debugpy.common.json', 'debugpy.common.fmt', 'debugpy.common.compat', 'debugpy', 'debugpy._vendored._util', 'debugpy._vendored', '_pydevd_bundle', 'encodings.ascii', 'stringprep', 'encodings.idna', '_pydevd_bundle.pydevd_vm_type', '_pydev_imps', 'xmlrpc', 'gzip', 'xmlrpc.client', 'socketserver', 'http.server', 'xmlrpc.server', '_pydev_imps._pydev_saved_modules', '_pydevd_bundle.pydevd_constants', '_pydev_bundle', '_pydev_runfiles', '_pydevd_frame_eval', 'pydev_ipython', 'pydevd_concurrency_analyser', 'pydevd_plugins', '_pydev_bundle.pydev_log', '_pydev_bundle._pydev_filesystem_encoding', '_pydevd_bundle.pydevd_comm_constants', 'pydevd_file_utils', '_pydev_imps._pydev_execfile', '_pydevd_bundle.pydevd_exec2', '_pydev_bundle.pydev_imports', '_pydev_bundle.pydev_is_thread_alive', '_pydev_bundle.pydev_override', 'pydevd_plugins.extensions', '_pydevd_bundle.pydevd_extension_utils', '_pydevd_bundle.pydevd_frame_utils', '_pydevd_bundle.pydevd_filtering', '_pydevd_bundle.pydevd_io', '_pydevd_bundle.pydevd_utils', '_pydev_bundle._pydev_tipper_common', '_pydev_bundle._pydev_imports_tipper', '_pydev_bundle._pydev_calltip_util', '_pydevd_bundle.pydevd_safe_repr', '_pydevd_bundle.pydevd_resolver', '_pydevd_bundle.pydevd_extension_api', '_pydevd_bundle.pydevd_xml', '_pydevd_bundle.pydevd_dont_trace', '_pydevd_frame_eval.vendored', '_pydevd_frame_eval.vendored.bytecode.flags', '_pydevd_frame_eval.vendored.bytecode.instr', '_pydevd_frame_eval.vendored.bytecode.bytecode', '_pydevd_frame_eval.vendored.bytecode.concrete', '_pydevd_frame_eval.vendored.bytecode.cfg', '_pydevd_frame_eval.vendored.bytecode', '_pydevd_bundle.pydevd_bytecode_utils', '_pydevd_bundle.pydevd_cython', '_pydevd_bundle.pydevd_cython_wrapper', '_pydevd_bundle.pydevd_additional_thread_info', '_pydevd_bundle.pydevd_thread_lifecycle', '_pydevd_bundle.pydevd_save_locals', '_pydevd_bundle.pydevd_defaults', '_pydev_bundle.pydev_monkey', 'pydevd_tracing', '_pydevd_bundle.pydevd_daemon_thread', '_pydevd_bundle.pydevd_timeout', '_pydevd_bundle.pydevd_vars', '_pydev_bundle.pydev_console_utils', '_pydevd_bundle.pydevd_import_class', '_pydevd_bundle.pydevd_breakpoints', '_pydevd_bundle.pydevd_custom_frames', '_pydevd_bundle.pydevd_dont_trace_files', '_pydevd_bundle.pydevd_net_command', '_pydev_bundle.pydev_umd', 'pydevconsole', '_pydev_bundle._pydev_completer', '_pydevd_bundle.pydevd_net_command_factory_xml', '_pydevd_bundle.pydevd_frame', '_pydevd_bundle.pydevd_additional_thread_info_regular', '_pydevd_bundle.pydevd_trace_dispatch', '_pydevd_frame_eval.pydevd_frame_eval_main', '_pydevd_bundle.pydevd_source_mapping', 'pydevd_concurrency_analyser.pydevd_thread_wrappers', 'pydevd_concurrency_analyser.pydevd_concurrency_logger', '_pydevd_bundle._debug_adapter', '_pydevd_bundle._debug_adapter.pydevd_schema_log', '_pydevd_bundle._debug_adapter.pydevd_base_schema', '_pydevd_bundle._debug_adapter.pydevd_schema', '_pydevd_bundle.pydevd_reload', '_pydev_bundle.fsnotify', '_pydevd_bundle.pydevd_console', '_pydevd_bundle.pydevd_comm', '_pydevd_bundle.pydevd_net_command_factory_json', '_pydevd_bundle.pydevd_collect_bytecode_info', '_pydevd_bundle.pydevd_api', '_pydevd_bundle.pydevd_json_debug_options', '_pydevd_bundle.pydevd_process_net_command_json', '_pydevd_bundle.pydevd_traceproperty', '_pydevd_bundle.pydevd_process_net_command', '_pydevd_bundle.pydevd_suspended_frames', '_pydevd_bundle.pydevd_trace_api', 'pydevd_plugins.django_debug', 'pydevd_plugins.jinja2_debug', '_pydevd_bundle.pydevd_plugin_utils', 'pydevd_plugins.extensions.types', 'pydevd_plugins.extensions.types.pydevd_helpers', 'pydevd_plugins.extensions.types.pydevd_plugin_numpy_types', 'pydevd_plugins.extensions.types.pydevd_plugins_django_form_str', 'pydevd', 'debugpy._vendored.force_pydevd', 'debugpy.server', 'debugpy.adapter', 'debugpy.common.timestamp', 'debugpy.common.util', 'debugpy.common.log', 'debugpy.common.sockets', 'debugpy.server.api', 'ipykernel.debugger', 'ipykernel.ipkernel', 'ipykernel.parentpoller', 'ipykernel.kernelapp', 'win32security', 'ntsecuritycon', 'faulthandler', 'IPython.core.completerlib', 'logging.config', 'pythonjsonlogger', 'pythonjsonlogger.jsonlogger', 'daiquiri.types', 'daiquiri.formatter', 'daiquiri.handlers', 'daiquiri.output', 'daiquiri', 'jupyter_require.__about__', 'csscompressor', 'jupyter_require.core', 'jupyter_require.notebook', 'jupyter_require', 'jupyter_nbutils.__about__', 'jupyter_nbutils.config', 'jupyter_nbutils.utils', 'jupyter_nbutils', 'jupyter_require.magic', 'numpy._globals', 'numpy.__config__', 'numpy._distributor_init', 'numpy._version', 'numpy.version', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core._asarray', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core._machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.stride_tricks', 'numpy.lib.twodim_base', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', '_cython_0_29_30', 'numpy.random._common', 'secrets', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'pytz', 'pandas._typing', '_cython_0_29_28', 'pandas._libs.tslibs.dtypes', 'pandas._libs.tslibs.base', 'pandas._libs.tslibs.np_datetime', 'pandas._libs.tslibs.nattype', 'pandas._libs.tslibs.timezones', 'pandas._libs.tslibs.ccalendar', 'pandas._libs.tslibs.tzconversion', 'pandas._config.config', 'pandas._config.dates', 'pandas._config.display', 'pandas._config', 'pandas._config.localization', 'pandas._libs.tslibs.strptime', 'pandas._libs.tslibs.fields', 'pandas._libs.tslibs.timedeltas', 'pandas._libs.tslibs.timestamps', 'dateutil.easter', 'pandas._libs.properties', 'pandas._libs.tslibs.offsets', 'pandas._libs.tslibs.parsing', 'pandas._libs.tslibs.conversion', 'pandas._libs.tslibs.period', 'pandas._libs.tslibs.vectorized', 'pandas._libs.tslibs', 'pandas._libs.ops_dispatch', 'pandas._libs.missing', 'pandas._libs.hashtable', 'pandas._libs.algos', 'pandas._libs.interval', 'pandas._libs', 'pandas.util._decorators', 'pandas.core', 'pandas.core.util', 'pandas._libs.tslib', 'pandas._libs.lib', 'pandas._libs.hashing', 'pandas.core.dtypes', 'pandas.util._exceptions', 'pandas.errors', 'pandas.core.dtypes.generic', 'pandas.core.dtypes.base', 'pandas.core.dtypes.inference', 'pandas.core.dtypes.dtypes', 'pandas.core.dtypes.common', 'pandas.core.util.hashing', 'pandas.util', 'pandas.util.version', 'pandas.compat.numpy', 'pandas.compat.pyarrow', 'pandas.compat', 'pandas.core.config_init', 'pandas.core.dtypes.missing', 'pandas.util._validators', 'pandas.core.dtypes.cast', 'pandas.core.dtypes.concat', 'pandas.core.array_algos', 'pandas.core.common', 'pandas.core.construction', 'pandas.core.array_algos.take', 'pandas.core.indexers.utils', 'pandas.core.indexers', 'pandas.core.algorithms', 'pandas.compat.numpy.function', 'pandas.core.roperator', 'pandas._libs.ops', 'pandas.core.computation', 'pandas.compat._optional', 'numexpr.interpreter', 'packaging.__about__', 'packaging', 'packaging._structures', 'packaging.version', 'numexpr.expressions', 'numexpr.utils', 'numexpr.necompiler', 'numexpr.version', 'numexpr', 'pandas.core.computation.check', 'pandas.core.computation.expressions', 'pandas.core.ops.missing', 'pandas.core.ops.dispatch', 'pandas.core.ops.invalid', 'pandas.core.ops.array_ops', 'pandas.core.ops.common', 'pandas.core.ops.docstrings', 'pandas.core.ops.mask_ops', 'pandas.core.ops.methods', 'pandas.core.ops', 'pandas.core.arraylike', 'pandas.core.missing', 'pandas.core.array_algos.quantile', 'pandas.core.sorting', 'pandas.core.arrays.base', 'bottleneck.benchmark', 'bottleneck.benchmark.autotimeit', 'bottleneck.benchmark.bench', 'bottleneck.benchmark.bench_detailed', 'bottleneck.tests', 'bottleneck.tests.util', 'bottleneck.slow.reduce', 'bottleneck.slow.nonreduce', 'bottleneck.slow.nonreduce_axis', 'bottleneck.slow.move', 'bottleneck.slow', 'bottleneck._pytesttester', 'bottleneck.move', 'bottleneck.nonreduce', 'bottleneck.nonreduce_axis', 'bottleneck.reduce', 'bottleneck._version', 'bottleneck', 'pandas.core.nanops', 'pandas.core.array_algos.masked_reductions', 'pandas.core.arrays.masked', 'pandas.core.arrays.boolean', 'pandas._libs.arrays', 'pandas.core.accessor', 'pandas.core.array_algos.transforms', 'pandas.core.arrays._mixins', 'pandas.core.base', 'pandas.core.strings.accessor', 'pandas.core.strings.base', 'pandas.core.strings', 'pandas.core.strings.object_array', 'pandas.io', 'pandas.io.formats', 'pandas.io.formats.console', 'pandas.core.arrays.categorical', 'pandas.tseries', 'pandas.tseries.frequencies', 'pandas.core.arrays.datetimelike', 'pandas.core.arrays._ranges', 'pandas.core.arrays.numeric', 'pandas.core.tools', 'pandas.core.tools.numeric', 'pandas.core.arrays.integer', 'pandas.tseries.offsets', 'pandas.core.arrays.datetimes', 'pandas.core.arrays.floating', 'pandas.core.indexes', 'pandas._libs.index', 'pandas._libs.join', 'pandas.core.array_algos.putmask', 'pandas._libs.sparse', 'pandas.core.arrays.sparse.dtype', 'pandas.io.formats.printing', 'pandas.core.arrays.sparse.array', 'pandas.core.arrays.sparse.accessor', 'pandas.core.arrays.sparse', 'pandas.core.indexes.frozen', 'pandas.core.indexes.base', 'pandas.core.arrays.interval', 'pandas.core.arrays.numpy_', 'pandas.core.arrays.period', 'pandas.core.arrays.string_', 'pandas.core.arrays.string_arrow', 'pandas.core.arrays.timedeltas', 'pandas.core.arrays', 'pandas.core.flags', 'pandas._libs.reduction', 'pandas.core.apply', 'pandas._libs.indexing', 'pandas.core.indexes.extension', 'pandas.core.indexes.category', 'pandas.core.indexes.numeric', 'pandas.core.indexes.range', 'pandas.core.tools.timedeltas', 'pandas.core.indexes.datetimelike', 'pandas.core.tools.times', 'pandas.core.indexes.datetimes', 'pandas.core.indexes.multi', 'pandas.core.indexes.timedeltas', 'pandas.core.indexes.interval', 'pandas.core.indexes.period', 'pandas.core.indexes.api', 'pandas.core.indexing', 'pandas.core.array_algos.replace', 'pandas.core.reshape', 'pandas._libs.internals', 'pandas._libs.writers', 'pandas.core.internals.blocks', 'pandas.core.internals.api', 'pandas.core.internals.base', 'pandas.core.internals.array_manager', 'pandas.core.internals.ops', 'pandas.core.internals.managers', 'pandas.core.internals.concat', 'pandas.core.internals', 'pandas.core.reshape.concat', 'mmap', 'pandas.core.shared_docs', 'pandas.io.common', 'pandas.io.formats.format', 'pandas.core.describe', 'pandas.core.internals.construction', 'pandas.core.sample', 'pandas._libs.window', 'pandas._libs.window.aggregations', 'pandas._libs.window.indexers', 'pandas.core.indexers.objects', 'pandas.core.util.numba_', 'pandas.core.window.common', 'pandas.core.window.doc', 'pandas.core.window.numba_', 'pandas.core.window.online', 'pandas.core._numba', 'pandas.core._numba.executor', 'pandas.core.window.rolling', 'pandas.core.window.ewm', 'pandas.core.window.expanding', 'pandas.core.window', 'pandas.core.generic', 'pandas.core.reshape.util', 'pandas.core.reshape.melt', 'pandas._libs.reshape', 'pandas.core.indexes.accessors', 'pandas.arrays', 'pandas.core.tools.datetimes', 'pandas.io.formats.info', 'pandas.plotting._core', 'pandas.plotting._misc', 'pandas.plotting', 'pandas.core.series', 'pandas.core.frame', 'pandas.core.groupby.base', 'pandas._libs.groupby', 'pandas.core.groupby.numba_', 'pandas.core.groupby.categorical', 'pandas.core.groupby.grouper', 'pandas.core.groupby.ops', 'pandas.core.groupby.indexing', 'pandas.core.groupby.groupby', 'pandas.core.groupby.generic', 'pandas.core.groupby', 'pandas.core.api', 'pandas.tseries.api', 'pandas.core.computation.common', 'pandas.core.computation.align', 'pandas.compat.chainmap', 'pandas.core.computation.scope', 'pandas.core.computation.ops', 'pandas.core.computation.parsing', 'pandas.core.computation.expr', 'pandas.core.computation.engines', 'pandas.core.computation.eval', 'pandas.core.computation.api', 'pandas.core.reshape.merge', 'pandas.core.reshape.pivot', 'pandas.core.reshape.reshape', 'pandas.core.reshape.tile', 'pandas.core.reshape.api', 'pandas.api.extensions', 'pandas.api.indexers', 'pandas.core.dtypes.api', 'pandas.api.types', 'pandas.api', 'pandas._testing._random', 'pandas._testing.contexts', 'pandas._testing._io', 'pandas._testing._warnings', 'cmath', 'pandas._libs.testing', 'pandas._testing.asserters', 'pandas._testing.compat', 'pandas._testing', 'pandas.testing', 'pandas.util._print_versions', 'pandas.io.clipboards', 'pandas._libs.parsers', 'pandas.io.excel._util', 'pandas.io.date_converters', 'pandas.io.parsers.base_parser', 'pandas.io.parsers.arrow_parser_wrapper', 'pandas.io.parsers.c_parser_wrapper', 'pandas.io.parsers.python_parser', 'pandas.io.parsers.readers', 'pandas.io.parsers', 'pandas.io.excel._odfreader', 'pandas.io.excel._openpyxl', 'pandas.io.excel._pyxlsb', 'pandas.io.excel._xlrd', 'pandas.io.excel._base', 'pandas._libs.json', 'pandas.io.formats._color_data', 'pandas.io.formats.css', 'pandas.io.formats.excel', 'pandas.io.excel._odswriter', 'pandas.io.excel._xlsxwriter', 'pandas.io.excel._xlwt', 'pandas.io.excel', 'pandas.io.feather_format', 'pandas.io.gbq', 'pandas.io.html', 'pandas.io.json._normalize', 'pandas.io.json._table_schema', 'pandas.io.json._json', 'pandas.io.json', 'pandas.io.orc', 'pandas.io.parquet', 'pandas.compat.pickle_compat', 'pandas.io.pickle', 'pandas.core.computation.pytables', 'pandas.io.pytables', 'pandas.io.sas.sasreader', 'pandas.io.sas', 'pandas.io.spss', 'pandas.io.sql', 'pandas.io.stata', 'pandas.io.xml', 'pandas.io.api', 'pandas.util._tester', 'pandas._version', 'pandas', 'summarytools', 'summarytools.htmlwidgets', 'summarytools.summarytools', 'matplotlib', 'matplotlib._api.deprecation', 'matplotlib._api', 'matplotlib._version', 'matplotlib._c_internal_utils', 'matplotlib.cbook', 'matplotlib.docstring', 'PIL._version', 'PIL', 'defusedxml.common', 'defusedxml', 'xml.etree', 'xml.etree.ElementPath', '_elementtree', 'xml.etree.ElementTree', 'defusedxml.ElementTree', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._util', 'PIL._imaging', 'cffi.lock', 'cffi.error', 'cffi.model', 'cffi.api', 'cffi', 'PIL.Image', 'PIL.ImageChops', 'PIL.ImageFile', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'PIL.ImagePalette', 'PIL.ImageSequence', 'PIL.PngImagePlugin', 'matplotlib._path', 'matplotlib.bezier', 'matplotlib.path', 'matplotlib.transforms', 'matplotlib.ticker', 'matplotlib.scale', 'matplotlib._color_data', 'matplotlib.colors', 'pyparsing.util', 'pyparsing.unicode', 'pyparsing.exceptions', 'pyparsing.actions', 'pyparsing.results', 'pyparsing.core', 'pyparsing.helpers', 'pyparsing.testing', 'pyparsing.common', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib._enums', 'cycler', 'matplotlib.rcsetup', 'matplotlib.ft2font', 'kiwisolver']
2023-04-20 15:53:48,195 [31648] DEBUG    matplotlib:275: [JupyterRequire] CACHEDIR=C:\Users\adity\.matplotlib
2023-04-20 15:53:48,209 [31648] DEBUG    matplotlib.font_manager:1439: [JupyterRequire] Using fontManager instance from C:\Users\adity\.matplotlib\fontlist-v330.json
2023-04-20 15:53:48,937 [31648] DEBUG    matplotlib.pyplot:280: [JupyterRequire] Loaded backend module://matplotlib_inline.backend_inline version unknown.
2023-04-20 15:53:48,941 [31648] DEBUG    matplotlib.pyplot:280: [JupyterRequire] Loaded backend module://matplotlib_inline.backend_inline version unknown.
2023-04-20 15:54:40,602 [35240] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-04-20 15:54:40,602 [35240] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-04-20 15:54:40,603 [35240] INFO     root:247: [JupyterRequire] Initializing comms.
2023-04-20 15:54:40,606 [35240] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-04-20 15:54:40,607 [35240] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-04-20 15:54:40,608 [35240] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-04-20 15:54:41,406 [35240] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-04-20 15:54:41,407 [35240] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-04-20 15:54:41,409 [35240] INFO     root:247: [JupyterRequire] Initializing comms.
2023-04-20 15:54:41,411 [35240] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-04-20 15:54:41,412 [35240] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-04-20 15:54:41,413 [35240] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-04-20 15:54:52,639 [23904] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-04-20 15:54:52,640 [23904] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-04-20 15:54:52,640 [23904] INFO     root:247: [JupyterRequire] Initializing comms.
2023-04-20 15:54:52,643 [23904] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-04-20 15:54:52,644 [23904] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-04-20 15:54:52,646 [23904] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-04-20 15:55:28,505 [23904] INFO     numexpr.utils:147: [JupyterRequire] Note: NumExpr detected 12 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
2023-04-20 15:55:28,506 [23904] INFO     numexpr.utils:159: [JupyterRequire] NumExpr defaulting to 8 threads.
2023-04-20 15:55:29,301 [23904] DEBUG    matplotlib:275: [JupyterRequire] matplotlib data path: C:\Users\adity\anaconda3\lib\site-packages\matplotlib\mpl-data
2023-04-20 15:55:29,309 [23904] DEBUG    matplotlib:275: [JupyterRequire] CONFIGDIR=C:\Users\adity\.matplotlib
2023-04-20 15:55:29,314 [23904] DEBUG    matplotlib:1445: [JupyterRequire] interactive is False
2023-04-20 15:55:29,315 [23904] DEBUG    matplotlib:1446: [JupyterRequire] platform is win32
2023-04-20 15:55:29,315 [23904] DEBUG    matplotlib:1447: [JupyterRequire] loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', '_io', 'marshal', 'nt', 'winreg', '_frozen_importlib_external', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', 'encodings.cp1252', '_signal', 'encodings.latin_1', '_abc', 'abc', 'io', '__main__', '_stat', 'stat', '_collections_abc', 'genericpath', 'ntpath', 'os.path', 'os', '_sitebuiltins', '_locale', '_bootlocale', '_distutils_hack', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib.machinery', '_heapq', 'heapq', 'itertools', 'keyword', '_operator', 'operator', 'reprlib', '_collections', 'collections', 'collections.abc', '_functools', 'functools', 'contextlib', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', 'copyreg', 're', 'typing.io', 'typing.re', 'typing', 'importlib.abc', 'importlib.util', 'google', 'google.cloud', 'google.logging', 'mpl_toolkits', 'sphinxcontrib', 'zope', 'site', '_weakrefset', 'weakref', 'pkgutil', 'runpy', 'ipykernel._version', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'errno', 'signal', 'threading', 'msvcrt', '_winapi', 'subprocess', 'jupyter_client._version', 'posixpath', 'fnmatch', 'glob', '_socket', 'math', 'select', 'selectors', 'socket', 'zlib', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', '_bisect', 'bisect', '_random', '_sha512', 'random', 'tempfile', 'getpass', 'platform', 'zmq.libzmq', 'zmq.backend.select', 'cython_runtime', 'zmq.backend.cython.constants', '_cython_0_29_24', 'zmq.backend.cython.error', 'zmq.error', 'zmq.backend.cython.message', 'zmq.backend.cython.context', 'copy', '_struct', 'struct', '_compat_pickle', '_pickle', 'pickle', 'zmq.backend.cython.socket', 'zmq.backend.cython.utils', 'zmq.backend.cython._poll', 'zmq.backend.cython._version', 'zmq.backend.cython._device', 'zmq.backend.cython._proxy_steerable', 'zmq.backend.cython', 'zmq.backend', 'zmq.utils', 'zmq.utils.constant_names', 'zmq.sugar.constants', 'atexit', 'zmq.sugar.attrsettr', 'zmq.sugar.poll', 'zmq.utils.jsonapi', 'zmq.utils.strtypes', 'zmq.sugar.socket', 'zmq.sugar.context', 'zmq.sugar.frame', 'zmq.sugar.tracker', 'zmq.sugar.version', 'zmq.sugar.stopwatch', 'zmq.sugar', 'zmq', '_ast', 'ast', '_opcode', 'opcode', 'dis', 'token', 'tokenize', 'linecache', 'inspect', 'traitlets.utils', 'traitlets.utils.getargspec', 'traitlets.utils.importstring', 'traitlets.utils.sentinel', 'traitlets.utils.bunch', 'traitlets.utils.descriptions', 'traitlets.traitlets', 'traitlets.utils.decorators', 'traitlets._version', 'traitlets', 'traceback', '_string', 'string', 'logging', 'pprint', 'gettext', 'argparse', 'traitlets.config.loader', 'textwrap', 'traitlets.utils.text', 'traitlets.config.configurable', 'traitlets.config.application', 'traitlets.config', 'jupyter_client.localinterfaces', 'jupyter_core.version', 'jupyter_core', 'urllib', 'urllib.parse', 'pathlib', 'jupyter_core.paths', 'jupyter_client.utils', 'jupyter_client.connect', 'traitlets.log', 'jupyter_client.launcher', 'concurrent', 'concurrent.futures._base', 'concurrent.futures', '_ssl', 'binascii', 'base64', 'ssl', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', '_contextvars', 'contextvars', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.threads', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'asyncio.windows_events', 'asyncio', 'jupyter_client.channelsabc', 'jupyter_client.channels', 'jupyter_client.clientabc', 'jupyter_client.client', 'jupyter_client.kernelspec', 'jupyter_client.managerabc', 'jupyter_client.manager', '_queue', 'queue', 'jupyter_client.blocking.channels', 'jupyter_client.blocking.client', 'jupyter_client.blocking', 'zmq._future', 'zmq.asyncio', 'jupyter_client.asynchronous.channels', 'jupyter_client.asynchronous.client', 'jupyter_client.asynchronous', '_uuid', 'uuid', 'jupyter_client.multikernelmanager', 'jupyter_client', 'ipykernel.connect', 'ipykernel', 'tornado', '_datetime', 'datetime', 'numbers', 'logging.handlers', 'html.entities', 'html', 'array', 'tornado.speedups', 'tornado.util', 'tornado.escape', 'colorama.ansi', '_ctypes', 'ctypes._endian', 'ctypes', 'ctypes.wintypes', 'colorama.win32', 'colorama.winterm', 'colorama.ansitowin32', 'colorama.initialise', 'colorama', 'tornado.log', 'tornado.concurrent', 'tornado.ioloop', '__future__', 'tornado.platform', 'tornado.gen', 'tornado.platform.asyncio', 'zmq.eventloop.ioloop', 'zmq.eventloop', 'zmq.eventloop.zmqstream', 'IPython.core', 'IPython.core.getipython', 'IPython.core.release', 'sysconfig', 'pydoc', 'executing.executing', 'executing.version', 'executing', 'asttokens.line_numbers', 'six', 'six.moves', 'asttokens.util', 'asttokens.mark_tokens', 'asttokens.asttokens', 'asttokens', '_decimal', 'decimal', 'fractions', 'pure_eval.utils', 'pure_eval.my_getattr_static', 'pure_eval.core', 'pure_eval.version', 'pure_eval', 'stack_data.utils', 'stack_data.core', 'stack_data.formatting', 'stack_data.version', 'stack_data', 'pygments', 'pygments.formatters._mapping', 'pygments.plugin', 'pygments.util', 'pygments.formatters', 'pygments.styles', 'pygments.formatter', 'pygments.console', 'pygments.token', 'pygments.style', 'pygments.formatters.terminal256', 'bdb', 'IPython.utils', 'IPython.utils.ipstruct', 'IPython.utils.coloransi', 'IPython.utils.colorable', 'IPython.utils.PyColorize', 'locale', 'IPython.utils.encoding', 'IPython.utils.py3compat', 'IPython.core.excolors', 'cmd', 'codeop', 'code', 'pdb', 'IPython.core.debugger', 'IPython.core.display_trap', 'shlex', 'IPython.utils._process_common', 'IPython.utils._process_win32', 'IPython.utils.process', 'IPython.utils.decorators', 'IPython.utils.path', 'IPython.utils.terminal', 'IPython.core.ultratb', 'IPython.utils._sysinfo', 'IPython.utils.sysinfo', 'IPython.core.crashhandler', 'IPython.utils.importstring', 'IPython.paths', 'IPython.core.profiledir', 'IPython.core.application', 'IPython.terminal', '_hashlib', '_blake2', 'hashlib', 'IPython.core.compilerop', 'IPython.core.error', 'IPython.utils.text', 'IPython.core.magic_arguments', 'getopt', 'IPython.core.display_functions', 'mimetypes', 'IPython.testing', 'IPython.testing.skipdoctest', 'IPython.core.display', 'IPython.lib', 'IPython.lib.display', 'IPython.display', 'IPython.utils.data', 'IPython.core.page', 'IPython.lib.pretty', 'IPython.utils.openpy', 'IPython.utils.dir2', 'IPython.utils.wildcard', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.lexers', 'pygments.filter', 'pygments.filters', 'pygments.regexopt', 'pygments.lexer', 'pygments.unistring', 'pygments.lexers.python', 'pygments.formatters.html', 'IPython.core.oinspect', 'IPython.core.inputtransformer2', 'IPython.core.magic', 'pickleshare', 'IPython.core.hooks', 'IPython.core.autocall', 'IPython.core.macro', 'IPython.core.splitinput', 'IPython.core.prefilter', 'IPython.core.alias', 'IPython.core.builtin_trap', 'IPython.core.displayhook', 'IPython.core.displaypub', 'backcall.backcall', 'backcall', 'IPython.core.events', 'IPython.core.extensions', 'decorator', 'IPython.utils.sentinel', 'IPython.core.formatters', '_sqlite3', 'sqlite3.dbapi2', 'sqlite3', 'IPython.core.history', 'IPython.core.logger', 'IPython.core.payload', 'IPython.core.usage', 'IPython.utils.capture', 'IPython.utils.io', 'IPython.utils.strdispatch', 'IPython.utils.syspathcontext', 'IPython.core.async_helpers', 'IPython.core.interactiveshell', 'prompt_toolkit.application.current', 'prompt_toolkit.eventloop.utils', 'prompt_toolkit.eventloop.async_generator', 'wcwidth.table_wide', 'wcwidth.table_zero', 'wcwidth.unicode_versions', 'wcwidth.wcwidth', 'wcwidth', 'prompt_toolkit.utils', 'prompt_toolkit.eventloop.inputhook', 'prompt_toolkit.eventloop', 'prompt_toolkit.application.run_in_terminal', 'prompt_toolkit.selection', 'prompt_toolkit.clipboard.base', 'prompt_toolkit.clipboard.in_memory', 'prompt_toolkit.clipboard', 'prompt_toolkit.cache', 'prompt_toolkit.enums', 'prompt_toolkit.filters.base', 'prompt_toolkit.filters.app', 'prompt_toolkit.filters.cli', 'prompt_toolkit.filters.utils', 'prompt_toolkit.filters', 'prompt_toolkit.document', 'prompt_toolkit.auto_suggest', 'prompt_toolkit.data_structures', 'prompt_toolkit.styles.base', 'prompt_toolkit.styles.named_colors', 'prompt_toolkit.styles.style', 'prompt_toolkit.styles.defaults', 'prompt_toolkit.styles.pygments', 'colorsys', 'prompt_toolkit.styles.style_transformation', 'prompt_toolkit.styles', 'prompt_toolkit.output.color_depth', 'prompt_toolkit.output.base', 'prompt_toolkit.output.defaults', 'prompt_toolkit.output', 'prompt_toolkit.output.vt100', 'prompt_toolkit.mouse_events', 'prompt_toolkit.formatted_text.base', 'prompt_toolkit.formatted_text.ansi', 'xml', 'xml.dom.domreg', 'xml.dom', 'xml.dom.minicompat', 'xml.dom.NodeFilter', 'xml.dom.xmlbuilder', 'xml.dom.minidom', 'prompt_toolkit.formatted_text.html', 'prompt_toolkit.formatted_text.pygments', 'prompt_toolkit.formatted_text.utils', 'prompt_toolkit.formatted_text', 'prompt_toolkit.completion.base', 'prompt_toolkit.completion.deduplicate', 'prompt_toolkit.completion.filesystem', 'prompt_toolkit.completion.word_completer', 'prompt_toolkit.completion.fuzzy_completer', 'prompt_toolkit.completion.nested', 'prompt_toolkit.completion', 'prompt_toolkit.history', 'prompt_toolkit.keys', 'prompt_toolkit.key_binding.key_bindings', 'prompt_toolkit.key_binding.key_processor', 'prompt_toolkit.key_binding', 'prompt_toolkit.key_binding.vi_state', 'prompt_toolkit.search', 'prompt_toolkit.validation', 'prompt_toolkit.buffer', 'prompt_toolkit.input.base', 'prompt_toolkit.input.defaults', 'prompt_toolkit.input', 'prompt_toolkit.input.typeahead', 'prompt_toolkit.key_binding.bindings', 'prompt_toolkit.key_binding.bindings.scroll', 'prompt_toolkit.key_binding.bindings.page_navigation', 'prompt_toolkit.lexers.base', 'prompt_toolkit.lexers.pygments', 'prompt_toolkit.lexers', 'prompt_toolkit.layout.utils', 'prompt_toolkit.layout.processors', 'prompt_toolkit.layout.controls', 'prompt_toolkit.layout.dimension', 'prompt_toolkit.layout.margins', 'prompt_toolkit.layout.mouse_handlers', 'prompt_toolkit.layout.screen', 'prompt_toolkit.layout.containers', 'prompt_toolkit.layout.layout', 'prompt_toolkit.layout.menus', 'prompt_toolkit.layout.scrollable_pane', 'prompt_toolkit.layout', 'prompt_toolkit.key_binding.bindings.completion', 'prompt_toolkit.key_binding.bindings.named_commands', 'prompt_toolkit.key_binding.bindings.basic', 'prompt_toolkit.key_binding.bindings.cpr', 'prompt_toolkit.key_binding.bindings.emacs', 'prompt_toolkit.key_binding.bindings.mouse', 'prompt_toolkit.input.ansi_escape_sequences', 'prompt_toolkit.input.vt100_parser', 'prompt_toolkit.key_binding.digraphs', 'prompt_toolkit.key_binding.bindings.vi', 'prompt_toolkit.key_binding.defaults', 'prompt_toolkit.key_binding.emacs_state', 'prompt_toolkit.layout.dummy', 'prompt_toolkit.renderer', 'prompt_toolkit.application.application', 'prompt_toolkit.application.dummy', 'prompt_toolkit.application', 'prompt_toolkit.key_binding.bindings.focus', 'prompt_toolkit.widgets.toolbars', 'prompt_toolkit.widgets.base', 'prompt_toolkit.widgets.dialogs', 'prompt_toolkit.widgets.menus', 'prompt_toolkit.widgets', 'prompt_toolkit.shortcuts.dialogs', 'prompt_toolkit.shortcuts.progress_bar.formatters', 'prompt_toolkit.shortcuts.progress_bar.base', 'prompt_toolkit.shortcuts.progress_bar', 'prompt_toolkit.key_binding.bindings.auto_suggest', 'prompt_toolkit.key_binding.bindings.open_in_editor', 'prompt_toolkit.shortcuts.prompt', 'prompt_toolkit.shortcuts.utils', 'prompt_toolkit.shortcuts', 'prompt_toolkit', 'prompt_toolkit.patch_stdout', 'unicodedata', 'IPython.core.latex_symbols', 'IPython.utils.generics', 'parso.utils', 'parso.tree', 'parso.python', 'parso.python.token', 'parso.python.tokenize', 'parso.pgen2.grammar_parser', 'parso.pgen2.generator', 'parso.pgen2', 'parso.parser', 'parso._compatibility', 'difflib', 'parso.python.prefix', 'parso.python.tree', 'parso.python.parser', 'parso.python.diff', 'gc', 'parso.cache', 'parso.normalizer', 'parso.python.errors', 'parso.python.pep8', 'parso.file_io', 'parso.grammar', 'parso', 'jedi.parser_utils', 'jedi.debug', 'jedi.settings', 'jedi.cache', 'jedi.file_io', 'jedi.inference.cache', 'jedi.inference.helpers', 'jedi.inference.utils', 'jedi.inference.base_value', 'jedi.inference.sys_path', 'jedi.inference.recursion', 'jedi.inference.flow_analysis', 'jedi.common', 'jedi.inference.lazy_value', 'jedi.inference.docstrings', 'jedi.plugins', 'jedi.inference.names', 'jedi.inference.filters', 'jedi.inference.compiled.getattr_static', 'jedi.inference.compiled.access', 'jedi.inference.signature', 'jedi.inference.context', 'jedi.inference.compiled.value', 'jedi.inference.compiled', 'jedi.inference.analysis', 'jedi.inference.gradual', 'jedi.inference.value.module', 'jedi.inference.value.dynamic_arrays', 'jedi.inference.value.iterable', 'jedi.inference.arguments', 'jedi.inference.parser_cache', 'jedi.inference.gradual.generics', 'jedi.inference.value.function', 'jedi.inference.value.klass', 'jedi.inference.value.instance', 'jedi.inference.value', 'jedi.inference.gradual.base', 'jedi.inference.gradual.type_var', 'jedi.inference.gradual.typing', 'jedi.inference.gradual.stub_value', 'jedi.inference.gradual.typeshed', 'jedi._compatibility', 'zipfile', 'jedi.inference.compiled.subprocess.functions', 'jedi.api.exceptions', 'jedi.inference.compiled.subprocess', 'jedi.inference.imports', 'jedi.inference.param', 'jedi.inference.gradual.annotation', 'jedi.inference.value.decorator', 'jedi.inference.syntax_tree', 'jedi.inference', 'jedi.inference.gradual.conversion', 'jedi.inference.compiled.mixed', 'pydoc_data', 'pydoc_data.topics', 'jedi.api.keywords', 'jedi.api.completion_cache', 'jedi.api.helpers', 'jedi.api.classes', 'jedi.api.interpreter', 'jedi.api.strings', 'jedi.api.file_name', 'jedi.inference.docstring_utils', 'jedi.api.completion', 'filecmp', 'jedi.api.environment', 'jedi.inference.references', 'jedi.api.project', 'jedi.api.errors', 'jedi.api.refactoring', 'jedi.api.refactoring.extract', 'jedi.inference.gradual.utils', 'jedi.api', 'jedi.plugins.stdlib', 'jedi.plugins.flask', 'jedi.plugins.pytest', 'jedi.plugins.django', 'jedi.plugins.registry', 'jedi', 'IPython.core.completer', 'IPython.terminal.ptutils', 'IPython.lib.clipboard', 'IPython.terminal.shortcuts', 'concurrent.futures.thread', 'IPython.terminal.debugger', 'IPython.terminal.magics', 'IPython.terminal.pt_inputhooks', 'IPython.terminal.prompts', 'IPython.terminal.interactiveshell', 'IPython.core.magics.auto', 'IPython.core.magics.basic', 'email', 'http', 'email.errors', 'email.quoprimime', 'email.base64mime', 'quopri', 'email.encoders', 'email.charset', 'email.header', 'calendar', 'email._parseaddr', 'email.utils', 'email._policybase', 'email.feedparser', 'email.parser', 'uu', 'email._encoded_words', 'email.iterators', 'email.message', 'http.client', 'urllib.response', 'urllib.error', 'nturl2path', 'urllib.request', 'IPython.utils.contexts', 'IPython.core.magics.code', 'IPython.core.magics.config', 'IPython.core.magics.display', '_lsprof', 'profile', 'cProfile', 'dataclasses', 'pstats', 'timeit', 'IPython.utils.module_paths', 'IPython.utils.timing', 'IPython.core.magics.execution', 'IPython.core.magics.extension', 'IPython.core.magics.history', 'IPython.core.magics.logging', 'IPython.core.magics.namespace', 'IPython.core.magics.osm', 'IPython.core.magics.packaging', 'IPython.core.pylabtools', 'IPython.core.magics.pylab', 'IPython.core.magics.script', 'IPython.core.magics', 'IPython.core.shellapp', 'IPython.extensions', 'IPython.extensions.storemagic', 'IPython.terminal.ipapp', 'IPython.terminal.embed', 'IPython.utils.frame', 'IPython', 'imp', 'hmac', 'dateutil._version', 'dateutil', 'dateutil._common', 'dateutil.relativedelta', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.win', 'dateutil.tz.tz', 'dateutil.tz', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', '_strptime', 'jupyter_client.jsonutil', 'jupyter_client.adapter', 'jupyter_client.session', 'ipykernel.iostream', 'ipykernel.control', 'ipykernel.heartbeat', 'IPython.utils.tokenutil', 'psutil._common', 'psutil._compat', 'psutil._psutil_windows', 'psutil._pswindows', 'psutil', 'tornado.locks', 'tornado.queues', 'ipykernel.jsonutil', 'ipykernel.kernelbase', 'ipykernel.comm.comm', 'ipykernel.comm.manager', 'ipykernel.comm', 'IPython.core.payloadpage', 'ipykernel.displayhook', 'ipykernel.zmqshell', 'setuptools._distutils', 'distutils.debug', 'distutils.errors', 'distutils.fancy_getopt', 'distutils.dep_util', 'distutils.log', 'distutils.spawn', 'distutils.py35compat', 'distutils.util', 'distutils.dist', 'distutils.dir_util', 'distutils.file_util', 'distutils.archive_util', 'distutils.cmd', 'configparser', 'distutils.config', 'distutils.extension', 'distutils.core', '_distutils_hack.override', 'setuptools._deprecation_warning', 'xml.parsers', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'xml.parsers.expat', 'plistlib', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources._vendor.jaraco', 'pkg_resources.extern.jaraco', 'importlib._common', 'importlib.resources', 'pkg_resources._vendor.more_itertools.recipes', 'pkg_resources._vendor.more_itertools.more', 'pkg_resources._vendor.more_itertools', 'pkg_resources.extern.more_itertools', 'pkg_resources.extern.jaraco.functools', 'pkg_resources.extern.jaraco.context', 'pkg_resources.extern.jaraco.text', 'win32api', '_win32sysloader', 'pywintypes', 'pythoncom', 'win32com.gen_py', 'win32com', 'win32com.shell', 'pkg_resources._vendor.appdirs', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources._vendor.packaging', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.version', 'pkg_resources._vendor.packaging._manylinux', 'pkg_resources._vendor.packaging._musllinux', 'pkg_resources.extern.packaging.tags', 'pkg_resources.extern.packaging.utils', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources._vendor.pyparsing', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.packaging.markers', 'pkg_resources.extern.packaging.requirements', 'pkg_resources', 'setuptools.version', 'distutils.filelist', 'setuptools.monkey', 'setuptools.extension', 'distutils.command', 'setuptools.extern', 'setuptools._vendor', 'setuptools._vendor.packaging.__about__', 'setuptools._vendor.packaging', 'setuptools.extern.packaging', 'setuptools._vendor.ordered_set', 'setuptools.extern.ordered_set', 'setuptools._vendor.more_itertools.recipes', 'setuptools._vendor.more_itertools.more', 'setuptools._vendor.more_itertools', 'setuptools.extern.more_itertools', 'setuptools._vendor.pyparsing', 'setuptools.extern.pyparsing', 'setuptools._vendor.packaging._manylinux', 'setuptools._vendor.packaging._musllinux', 'setuptools.extern.packaging.tags', 'setuptools.extern.packaging._structures', 'setuptools.extern.packaging.version', 'setuptools.extern.packaging.utils', 'setuptools.extern.packaging.specifiers', 'setuptools.extern.packaging.markers', 'setuptools.extern.packaging.requirements', 'setuptools._vendor.jaraco', 'setuptools.extern.jaraco', 'setuptools.extern.jaraco.context', 'setuptools.extern.jaraco.functools', '_csv', 'csv', 'setuptools._vendor.zipp', 'setuptools._vendor.importlib_metadata._functools', 'setuptools._vendor.importlib_metadata._text', 'setuptools._vendor.importlib_metadata._adapters', 'setuptools._vendor.importlib_metadata._compat', 'setuptools._vendor.importlib_metadata._meta', 'setuptools._vendor.importlib_metadata._collections', 'setuptools._vendor.importlib_metadata._itertools', 'setuptools._vendor.importlib_metadata', 'setuptools.extern.importlib_metadata', 'setuptools._vendor.nspektr._compat', 'setuptools._vendor.nspektr', 'setuptools.extern.nspektr', 'zipp', 'importlib_metadata._functools', 'importlib_metadata._text', 'importlib_metadata._adapters', 'importlib_metadata._compat', 'importlib_metadata._meta', 'importlib_metadata._collections', 'importlib_metadata._itertools', 'importlib_metadata', 'setuptools._importlib', 'distutils.command.bdist', 'setuptools.command', 'setuptools.windows_support', 'setuptools.config.expand', 'setuptools.config.setupcfg', 'setuptools.config', 'setuptools.errors', 'email._header_value_parser', 'email.headerregistry', 'setuptools.config._apply_pyprojecttoml', 'setuptools.config.pyprojecttoml', 'setuptools.discovery', 'setuptools.extern.jaraco.text', 'setuptools._reqs', 'setuptools._itertools', 'setuptools._entry_points', 'setuptools.dist', 'setuptools.py34compat', 'setuptools._imp', 'setuptools.depends', 'setuptools.logging', 'distutils.ccompiler', 'distutils.msvc9compiler', 'setuptools.msvc', 'unittest.util', 'unittest.result', 'unittest.case', 'unittest.suite', 'unittest.loader', 'unittest.signals', 'unittest.runner', 'unittest.main', 'unittest', 'unittest.mock', 'distutils._msvccompiler', 'setuptools', 'distutils', 'distutils.version', 'ipykernel.eventloops', 'ipykernel.compiler', 'debugpy._version', 'debugpy.common', 'debugpy.common.json', 'debugpy.common.fmt', 'debugpy.common.compat', 'debugpy', 'debugpy._vendored._util', 'debugpy._vendored', '_pydevd_bundle', 'encodings.ascii', 'stringprep', 'encodings.idna', '_pydevd_bundle.pydevd_vm_type', '_pydev_imps', 'xmlrpc', 'gzip', 'xmlrpc.client', 'socketserver', 'http.server', 'xmlrpc.server', '_pydev_imps._pydev_saved_modules', '_pydevd_bundle.pydevd_constants', '_pydev_bundle', '_pydev_runfiles', '_pydevd_frame_eval', 'pydev_ipython', 'pydevd_concurrency_analyser', 'pydevd_plugins', '_pydev_bundle.pydev_log', '_pydev_bundle._pydev_filesystem_encoding', '_pydevd_bundle.pydevd_comm_constants', 'pydevd_file_utils', '_pydev_imps._pydev_execfile', '_pydevd_bundle.pydevd_exec2', '_pydev_bundle.pydev_imports', '_pydev_bundle.pydev_is_thread_alive', '_pydev_bundle.pydev_override', 'pydevd_plugins.extensions', '_pydevd_bundle.pydevd_extension_utils', '_pydevd_bundle.pydevd_frame_utils', '_pydevd_bundle.pydevd_filtering', '_pydevd_bundle.pydevd_io', '_pydevd_bundle.pydevd_utils', '_pydev_bundle._pydev_tipper_common', '_pydev_bundle._pydev_imports_tipper', '_pydev_bundle._pydev_calltip_util', '_pydevd_bundle.pydevd_safe_repr', '_pydevd_bundle.pydevd_resolver', '_pydevd_bundle.pydevd_extension_api', '_pydevd_bundle.pydevd_xml', '_pydevd_bundle.pydevd_dont_trace', '_pydevd_frame_eval.vendored', '_pydevd_frame_eval.vendored.bytecode.flags', '_pydevd_frame_eval.vendored.bytecode.instr', '_pydevd_frame_eval.vendored.bytecode.bytecode', '_pydevd_frame_eval.vendored.bytecode.concrete', '_pydevd_frame_eval.vendored.bytecode.cfg', '_pydevd_frame_eval.vendored.bytecode', '_pydevd_bundle.pydevd_bytecode_utils', '_pydevd_bundle.pydevd_cython', '_pydevd_bundle.pydevd_cython_wrapper', '_pydevd_bundle.pydevd_additional_thread_info', '_pydevd_bundle.pydevd_thread_lifecycle', '_pydevd_bundle.pydevd_save_locals', '_pydevd_bundle.pydevd_defaults', '_pydev_bundle.pydev_monkey', 'pydevd_tracing', '_pydevd_bundle.pydevd_daemon_thread', '_pydevd_bundle.pydevd_timeout', '_pydevd_bundle.pydevd_vars', '_pydev_bundle.pydev_console_utils', '_pydevd_bundle.pydevd_import_class', '_pydevd_bundle.pydevd_breakpoints', '_pydevd_bundle.pydevd_custom_frames', '_pydevd_bundle.pydevd_dont_trace_files', '_pydevd_bundle.pydevd_net_command', '_pydev_bundle.pydev_umd', 'pydevconsole', '_pydev_bundle._pydev_completer', '_pydevd_bundle.pydevd_net_command_factory_xml', '_pydevd_bundle.pydevd_frame', '_pydevd_bundle.pydevd_additional_thread_info_regular', '_pydevd_bundle.pydevd_trace_dispatch', '_pydevd_frame_eval.pydevd_frame_eval_main', '_pydevd_bundle.pydevd_source_mapping', 'pydevd_concurrency_analyser.pydevd_thread_wrappers', 'pydevd_concurrency_analyser.pydevd_concurrency_logger', '_pydevd_bundle._debug_adapter', '_pydevd_bundle._debug_adapter.pydevd_schema_log', '_pydevd_bundle._debug_adapter.pydevd_base_schema', '_pydevd_bundle._debug_adapter.pydevd_schema', '_pydevd_bundle.pydevd_reload', '_pydev_bundle.fsnotify', '_pydevd_bundle.pydevd_console', '_pydevd_bundle.pydevd_comm', '_pydevd_bundle.pydevd_net_command_factory_json', '_pydevd_bundle.pydevd_collect_bytecode_info', '_pydevd_bundle.pydevd_api', '_pydevd_bundle.pydevd_json_debug_options', '_pydevd_bundle.pydevd_process_net_command_json', '_pydevd_bundle.pydevd_traceproperty', '_pydevd_bundle.pydevd_process_net_command', '_pydevd_bundle.pydevd_suspended_frames', '_pydevd_bundle.pydevd_trace_api', 'pydevd_plugins.django_debug', 'pydevd_plugins.jinja2_debug', '_pydevd_bundle.pydevd_plugin_utils', 'pydevd_plugins.extensions.types', 'pydevd_plugins.extensions.types.pydevd_helpers', 'pydevd_plugins.extensions.types.pydevd_plugin_numpy_types', 'pydevd_plugins.extensions.types.pydevd_plugins_django_form_str', 'pydevd', 'debugpy._vendored.force_pydevd', 'debugpy.server', 'debugpy.adapter', 'debugpy.common.timestamp', 'debugpy.common.util', 'debugpy.common.log', 'debugpy.common.sockets', 'debugpy.server.api', 'ipykernel.debugger', 'ipykernel.ipkernel', 'ipykernel.parentpoller', 'ipykernel.kernelapp', 'win32security', 'ntsecuritycon', 'faulthandler', 'IPython.core.completerlib', 'logging.config', 'pythonjsonlogger', 'pythonjsonlogger.jsonlogger', 'daiquiri.types', 'daiquiri.formatter', 'daiquiri.handlers', 'daiquiri.output', 'daiquiri', 'jupyter_require.__about__', 'csscompressor', 'jupyter_require.core', 'jupyter_require.notebook', 'jupyter_require', 'jupyter_nbutils.__about__', 'jupyter_nbutils.config', 'jupyter_nbutils.utils', 'jupyter_nbutils', 'jupyter_require.magic', 'numpy._globals', 'numpy.__config__', 'numpy._distributor_init', 'numpy._version', 'numpy.version', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core._asarray', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core._machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.stride_tricks', 'numpy.lib.twodim_base', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', '_cython_0_29_30', 'numpy.random._common', 'secrets', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'pytz', 'pandas._typing', '_cython_0_29_28', 'pandas._libs.tslibs.dtypes', 'pandas._libs.tslibs.base', 'pandas._libs.tslibs.np_datetime', 'pandas._libs.tslibs.nattype', 'pandas._libs.tslibs.timezones', 'pandas._libs.tslibs.ccalendar', 'pandas._libs.tslibs.tzconversion', 'pandas._config.config', 'pandas._config.dates', 'pandas._config.display', 'pandas._config', 'pandas._config.localization', 'pandas._libs.tslibs.strptime', 'pandas._libs.tslibs.fields', 'pandas._libs.tslibs.timedeltas', 'pandas._libs.tslibs.timestamps', 'dateutil.easter', 'pandas._libs.properties', 'pandas._libs.tslibs.offsets', 'pandas._libs.tslibs.parsing', 'pandas._libs.tslibs.conversion', 'pandas._libs.tslibs.period', 'pandas._libs.tslibs.vectorized', 'pandas._libs.tslibs', 'pandas._libs.ops_dispatch', 'pandas._libs.missing', 'pandas._libs.hashtable', 'pandas._libs.algos', 'pandas._libs.interval', 'pandas._libs', 'pandas.util._decorators', 'pandas.core', 'pandas.core.util', 'pandas._libs.tslib', 'pandas._libs.lib', 'pandas._libs.hashing', 'pandas.core.dtypes', 'pandas.util._exceptions', 'pandas.errors', 'pandas.core.dtypes.generic', 'pandas.core.dtypes.base', 'pandas.core.dtypes.inference', 'pandas.core.dtypes.dtypes', 'pandas.core.dtypes.common', 'pandas.core.util.hashing', 'pandas.util', 'pandas.util.version', 'pandas.compat.numpy', 'pandas.compat.pyarrow', 'pandas.compat', 'pandas.core.config_init', 'pandas.core.dtypes.missing', 'pandas.util._validators', 'pandas.core.dtypes.cast', 'pandas.core.dtypes.concat', 'pandas.core.array_algos', 'pandas.core.common', 'pandas.core.construction', 'pandas.core.array_algos.take', 'pandas.core.indexers.utils', 'pandas.core.indexers', 'pandas.core.algorithms', 'pandas.compat.numpy.function', 'pandas.core.roperator', 'pandas._libs.ops', 'pandas.core.computation', 'pandas.compat._optional', 'numexpr.interpreter', 'packaging.__about__', 'packaging', 'packaging._structures', 'packaging.version', 'numexpr.expressions', 'numexpr.utils', 'numexpr.necompiler', 'numexpr.version', 'numexpr', 'pandas.core.computation.check', 'pandas.core.computation.expressions', 'pandas.core.ops.missing', 'pandas.core.ops.dispatch', 'pandas.core.ops.invalid', 'pandas.core.ops.array_ops', 'pandas.core.ops.common', 'pandas.core.ops.docstrings', 'pandas.core.ops.mask_ops', 'pandas.core.ops.methods', 'pandas.core.ops', 'pandas.core.arraylike', 'pandas.core.missing', 'pandas.core.array_algos.quantile', 'pandas.core.sorting', 'pandas.core.arrays.base', 'bottleneck.benchmark', 'bottleneck.benchmark.autotimeit', 'bottleneck.benchmark.bench', 'bottleneck.benchmark.bench_detailed', 'bottleneck.tests', 'bottleneck.tests.util', 'bottleneck.slow.reduce', 'bottleneck.slow.nonreduce', 'bottleneck.slow.nonreduce_axis', 'bottleneck.slow.move', 'bottleneck.slow', 'bottleneck._pytesttester', 'bottleneck.move', 'bottleneck.nonreduce', 'bottleneck.nonreduce_axis', 'bottleneck.reduce', 'bottleneck._version', 'bottleneck', 'pandas.core.nanops', 'pandas.core.array_algos.masked_reductions', 'pandas.core.arrays.masked', 'pandas.core.arrays.boolean', 'pandas._libs.arrays', 'pandas.core.accessor', 'pandas.core.array_algos.transforms', 'pandas.core.arrays._mixins', 'pandas.core.base', 'pandas.core.strings.accessor', 'pandas.core.strings.base', 'pandas.core.strings', 'pandas.core.strings.object_array', 'pandas.io', 'pandas.io.formats', 'pandas.io.formats.console', 'pandas.core.arrays.categorical', 'pandas.tseries', 'pandas.tseries.frequencies', 'pandas.core.arrays.datetimelike', 'pandas.core.arrays._ranges', 'pandas.core.arrays.numeric', 'pandas.core.tools', 'pandas.core.tools.numeric', 'pandas.core.arrays.integer', 'pandas.tseries.offsets', 'pandas.core.arrays.datetimes', 'pandas.core.arrays.floating', 'pandas.core.indexes', 'pandas._libs.index', 'pandas._libs.join', 'pandas.core.array_algos.putmask', 'pandas._libs.sparse', 'pandas.core.arrays.sparse.dtype', 'pandas.io.formats.printing', 'pandas.core.arrays.sparse.array', 'pandas.core.arrays.sparse.accessor', 'pandas.core.arrays.sparse', 'pandas.core.indexes.frozen', 'pandas.core.indexes.base', 'pandas.core.arrays.interval', 'pandas.core.arrays.numpy_', 'pandas.core.arrays.period', 'pandas.core.arrays.string_', 'pandas.core.arrays.string_arrow', 'pandas.core.arrays.timedeltas', 'pandas.core.arrays', 'pandas.core.flags', 'pandas._libs.reduction', 'pandas.core.apply', 'pandas._libs.indexing', 'pandas.core.indexes.extension', 'pandas.core.indexes.category', 'pandas.core.indexes.numeric', 'pandas.core.indexes.range', 'pandas.core.tools.timedeltas', 'pandas.core.indexes.datetimelike', 'pandas.core.tools.times', 'pandas.core.indexes.datetimes', 'pandas.core.indexes.multi', 'pandas.core.indexes.timedeltas', 'pandas.core.indexes.interval', 'pandas.core.indexes.period', 'pandas.core.indexes.api', 'pandas.core.indexing', 'pandas.core.array_algos.replace', 'pandas.core.reshape', 'pandas._libs.internals', 'pandas._libs.writers', 'pandas.core.internals.blocks', 'pandas.core.internals.api', 'pandas.core.internals.base', 'pandas.core.internals.array_manager', 'pandas.core.internals.ops', 'pandas.core.internals.managers', 'pandas.core.internals.concat', 'pandas.core.internals', 'pandas.core.reshape.concat', 'mmap', 'pandas.core.shared_docs', 'pandas.io.common', 'pandas.io.formats.format', 'pandas.core.describe', 'pandas.core.internals.construction', 'pandas.core.sample', 'pandas._libs.window', 'pandas._libs.window.aggregations', 'pandas._libs.window.indexers', 'pandas.core.indexers.objects', 'pandas.core.util.numba_', 'pandas.core.window.common', 'pandas.core.window.doc', 'pandas.core.window.numba_', 'pandas.core.window.online', 'pandas.core._numba', 'pandas.core._numba.executor', 'pandas.core.window.rolling', 'pandas.core.window.ewm', 'pandas.core.window.expanding', 'pandas.core.window', 'pandas.core.generic', 'pandas.core.reshape.util', 'pandas.core.reshape.melt', 'pandas._libs.reshape', 'pandas.core.indexes.accessors', 'pandas.arrays', 'pandas.core.tools.datetimes', 'pandas.io.formats.info', 'pandas.plotting._core', 'pandas.plotting._misc', 'pandas.plotting', 'pandas.core.series', 'pandas.core.frame', 'pandas.core.groupby.base', 'pandas._libs.groupby', 'pandas.core.groupby.numba_', 'pandas.core.groupby.categorical', 'pandas.core.groupby.grouper', 'pandas.core.groupby.ops', 'pandas.core.groupby.indexing', 'pandas.core.groupby.groupby', 'pandas.core.groupby.generic', 'pandas.core.groupby', 'pandas.core.api', 'pandas.tseries.api', 'pandas.core.computation.common', 'pandas.core.computation.align', 'pandas.compat.chainmap', 'pandas.core.computation.scope', 'pandas.core.computation.ops', 'pandas.core.computation.parsing', 'pandas.core.computation.expr', 'pandas.core.computation.engines', 'pandas.core.computation.eval', 'pandas.core.computation.api', 'pandas.core.reshape.merge', 'pandas.core.reshape.pivot', 'pandas.core.reshape.reshape', 'pandas.core.reshape.tile', 'pandas.core.reshape.api', 'pandas.api.extensions', 'pandas.api.indexers', 'pandas.core.dtypes.api', 'pandas.api.types', 'pandas.api', 'pandas._testing._random', 'pandas._testing.contexts', 'pandas._testing._io', 'pandas._testing._warnings', 'cmath', 'pandas._libs.testing', 'pandas._testing.asserters', 'pandas._testing.compat', 'pandas._testing', 'pandas.testing', 'pandas.util._print_versions', 'pandas.io.clipboards', 'pandas._libs.parsers', 'pandas.io.excel._util', 'pandas.io.date_converters', 'pandas.io.parsers.base_parser', 'pandas.io.parsers.arrow_parser_wrapper', 'pandas.io.parsers.c_parser_wrapper', 'pandas.io.parsers.python_parser', 'pandas.io.parsers.readers', 'pandas.io.parsers', 'pandas.io.excel._odfreader', 'pandas.io.excel._openpyxl', 'pandas.io.excel._pyxlsb', 'pandas.io.excel._xlrd', 'pandas.io.excel._base', 'pandas._libs.json', 'pandas.io.formats._color_data', 'pandas.io.formats.css', 'pandas.io.formats.excel', 'pandas.io.excel._odswriter', 'pandas.io.excel._xlsxwriter', 'pandas.io.excel._xlwt', 'pandas.io.excel', 'pandas.io.feather_format', 'pandas.io.gbq', 'pandas.io.html', 'pandas.io.json._normalize', 'pandas.io.json._table_schema', 'pandas.io.json._json', 'pandas.io.json', 'pandas.io.orc', 'pandas.io.parquet', 'pandas.compat.pickle_compat', 'pandas.io.pickle', 'pandas.core.computation.pytables', 'pandas.io.pytables', 'pandas.io.sas.sasreader', 'pandas.io.sas', 'pandas.io.spss', 'pandas.io.sql', 'pandas.io.stata', 'pandas.io.xml', 'pandas.io.api', 'pandas.util._tester', 'pandas._version', 'pandas', 'summarytools', 'summarytools.htmlwidgets', 'summarytools.summarytools', 'matplotlib', 'matplotlib._api.deprecation', 'matplotlib._api', 'matplotlib._version', 'matplotlib._c_internal_utils', 'matplotlib.cbook', 'matplotlib.docstring', 'PIL._version', 'PIL', 'defusedxml.common', 'defusedxml', 'xml.etree', 'xml.etree.ElementPath', '_elementtree', 'xml.etree.ElementTree', 'defusedxml.ElementTree', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._util', 'PIL._imaging', 'cffi.lock', 'cffi.error', 'cffi.model', 'cffi.api', 'cffi', 'PIL.Image', 'PIL.ImageChops', 'PIL.ImageFile', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'PIL.ImagePalette', 'PIL.ImageSequence', 'PIL.PngImagePlugin', 'matplotlib._path', 'matplotlib.bezier', 'matplotlib.path', 'matplotlib.transforms', 'matplotlib.ticker', 'matplotlib.scale', 'matplotlib._color_data', 'matplotlib.colors', 'pyparsing.util', 'pyparsing.unicode', 'pyparsing.exceptions', 'pyparsing.actions', 'pyparsing.results', 'pyparsing.core', 'pyparsing.helpers', 'pyparsing.testing', 'pyparsing.common', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib._enums', 'cycler', 'matplotlib.rcsetup', 'matplotlib.ft2font', 'kiwisolver']
2023-04-20 15:55:29,478 [23904] DEBUG    matplotlib:275: [JupyterRequire] CACHEDIR=C:\Users\adity\.matplotlib
2023-04-20 15:55:29,482 [23904] DEBUG    matplotlib.font_manager:1439: [JupyterRequire] Using fontManager instance from C:\Users\adity\.matplotlib\fontlist-v330.json
2023-04-20 15:55:30,148 [23904] DEBUG    matplotlib.pyplot:280: [JupyterRequire] Loaded backend module://matplotlib_inline.backend_inline version unknown.
2023-04-20 15:55:30,153 [23904] DEBUG    matplotlib.pyplot:280: [JupyterRequire] Loaded backend module://matplotlib_inline.backend_inline version unknown.
2023-04-20 15:58:31,418 [33852] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-04-20 15:58:31,418 [33852] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-04-20 15:58:31,419 [33852] INFO     root:247: [JupyterRequire] Initializing comms.
2023-04-20 15:58:31,423 [33852] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-04-20 15:58:31,424 [33852] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-04-20 15:58:31,425 [33852] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-04-20 15:58:33,620 [33852] INFO     numexpr.utils:147: [JupyterRequire] Note: NumExpr detected 12 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
2023-04-20 15:58:33,621 [33852] INFO     numexpr.utils:159: [JupyterRequire] NumExpr defaulting to 8 threads.
2023-04-20 15:58:34,273 [33852] DEBUG    matplotlib:275: [JupyterRequire] matplotlib data path: C:\Users\adity\anaconda3\lib\site-packages\matplotlib\mpl-data
2023-04-20 15:58:34,280 [33852] DEBUG    matplotlib:275: [JupyterRequire] CONFIGDIR=C:\Users\adity\.matplotlib
2023-04-20 15:58:34,284 [33852] DEBUG    matplotlib:1445: [JupyterRequire] interactive is False
2023-04-20 15:58:34,285 [33852] DEBUG    matplotlib:1446: [JupyterRequire] platform is win32
2023-04-20 15:58:34,285 [33852] DEBUG    matplotlib:1447: [JupyterRequire] loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', '_io', 'marshal', 'nt', 'winreg', '_frozen_importlib_external', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', 'encodings.cp1252', '_signal', 'encodings.latin_1', '_abc', 'abc', 'io', '__main__', '_stat', 'stat', '_collections_abc', 'genericpath', 'ntpath', 'os.path', 'os', '_sitebuiltins', '_locale', '_bootlocale', '_distutils_hack', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib.machinery', '_heapq', 'heapq', 'itertools', 'keyword', '_operator', 'operator', 'reprlib', '_collections', 'collections', 'collections.abc', '_functools', 'functools', 'contextlib', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', 'copyreg', 're', 'typing.io', 'typing.re', 'typing', 'importlib.abc', 'importlib.util', 'google', 'google.cloud', 'google.logging', 'mpl_toolkits', 'sphinxcontrib', 'zope', 'site', '_weakrefset', 'weakref', 'pkgutil', 'runpy', 'ipykernel._version', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'errno', 'signal', 'threading', 'msvcrt', '_winapi', 'subprocess', 'jupyter_client._version', 'posixpath', 'fnmatch', 'glob', '_socket', 'math', 'select', 'selectors', 'socket', 'zlib', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', '_bisect', 'bisect', '_random', '_sha512', 'random', 'tempfile', 'getpass', 'platform', 'zmq.libzmq', 'zmq.backend.select', 'cython_runtime', 'zmq.backend.cython.constants', '_cython_0_29_24', 'zmq.backend.cython.error', 'zmq.error', 'zmq.backend.cython.message', 'zmq.backend.cython.context', 'copy', '_struct', 'struct', '_compat_pickle', '_pickle', 'pickle', 'zmq.backend.cython.socket', 'zmq.backend.cython.utils', 'zmq.backend.cython._poll', 'zmq.backend.cython._version', 'zmq.backend.cython._device', 'zmq.backend.cython._proxy_steerable', 'zmq.backend.cython', 'zmq.backend', 'zmq.utils', 'zmq.utils.constant_names', 'zmq.sugar.constants', 'atexit', 'zmq.sugar.attrsettr', 'zmq.sugar.poll', 'zmq.utils.jsonapi', 'zmq.utils.strtypes', 'zmq.sugar.socket', 'zmq.sugar.context', 'zmq.sugar.frame', 'zmq.sugar.tracker', 'zmq.sugar.version', 'zmq.sugar.stopwatch', 'zmq.sugar', 'zmq', '_ast', 'ast', '_opcode', 'opcode', 'dis', 'token', 'tokenize', 'linecache', 'inspect', 'traitlets.utils', 'traitlets.utils.getargspec', 'traitlets.utils.importstring', 'traitlets.utils.sentinel', 'traitlets.utils.bunch', 'traitlets.utils.descriptions', 'traitlets.traitlets', 'traitlets.utils.decorators', 'traitlets._version', 'traitlets', 'traceback', '_string', 'string', 'logging', 'pprint', 'gettext', 'argparse', 'traitlets.config.loader', 'textwrap', 'traitlets.utils.text', 'traitlets.config.configurable', 'traitlets.config.application', 'traitlets.config', 'jupyter_client.localinterfaces', 'jupyter_core.version', 'jupyter_core', 'urllib', 'urllib.parse', 'pathlib', 'jupyter_core.paths', 'jupyter_client.utils', 'jupyter_client.connect', 'traitlets.log', 'jupyter_client.launcher', 'concurrent', 'concurrent.futures._base', 'concurrent.futures', '_ssl', 'binascii', 'base64', 'ssl', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', '_contextvars', 'contextvars', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.threads', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'asyncio.windows_events', 'asyncio', 'jupyter_client.channelsabc', 'jupyter_client.channels', 'jupyter_client.clientabc', 'jupyter_client.client', 'jupyter_client.kernelspec', 'jupyter_client.managerabc', 'jupyter_client.manager', '_queue', 'queue', 'jupyter_client.blocking.channels', 'jupyter_client.blocking.client', 'jupyter_client.blocking', 'zmq._future', 'zmq.asyncio', 'jupyter_client.asynchronous.channels', 'jupyter_client.asynchronous.client', 'jupyter_client.asynchronous', '_uuid', 'uuid', 'jupyter_client.multikernelmanager', 'jupyter_client', 'ipykernel.connect', 'ipykernel', 'tornado', '_datetime', 'datetime', 'numbers', 'logging.handlers', 'html.entities', 'html', 'array', 'tornado.speedups', 'tornado.util', 'tornado.escape', 'colorama.ansi', '_ctypes', 'ctypes._endian', 'ctypes', 'ctypes.wintypes', 'colorama.win32', 'colorama.winterm', 'colorama.ansitowin32', 'colorama.initialise', 'colorama', 'tornado.log', 'tornado.concurrent', 'tornado.ioloop', '__future__', 'tornado.platform', 'tornado.gen', 'tornado.platform.asyncio', 'zmq.eventloop.ioloop', 'zmq.eventloop', 'zmq.eventloop.zmqstream', 'IPython.core', 'IPython.core.getipython', 'IPython.core.release', 'sysconfig', 'pydoc', 'executing.executing', 'executing.version', 'executing', 'asttokens.line_numbers', 'six', 'six.moves', 'asttokens.util', 'asttokens.mark_tokens', 'asttokens.asttokens', 'asttokens', '_decimal', 'decimal', 'fractions', 'pure_eval.utils', 'pure_eval.my_getattr_static', 'pure_eval.core', 'pure_eval.version', 'pure_eval', 'stack_data.utils', 'stack_data.core', 'stack_data.formatting', 'stack_data.version', 'stack_data', 'pygments', 'pygments.formatters._mapping', 'pygments.plugin', 'pygments.util', 'pygments.formatters', 'pygments.styles', 'pygments.formatter', 'pygments.console', 'pygments.token', 'pygments.style', 'pygments.formatters.terminal256', 'bdb', 'IPython.utils', 'IPython.utils.ipstruct', 'IPython.utils.coloransi', 'IPython.utils.colorable', 'IPython.utils.PyColorize', 'locale', 'IPython.utils.encoding', 'IPython.utils.py3compat', 'IPython.core.excolors', 'cmd', 'codeop', 'code', 'pdb', 'IPython.core.debugger', 'IPython.core.display_trap', 'shlex', 'IPython.utils._process_common', 'IPython.utils._process_win32', 'IPython.utils.process', 'IPython.utils.decorators', 'IPython.utils.path', 'IPython.utils.terminal', 'IPython.core.ultratb', 'IPython.utils._sysinfo', 'IPython.utils.sysinfo', 'IPython.core.crashhandler', 'IPython.utils.importstring', 'IPython.paths', 'IPython.core.profiledir', 'IPython.core.application', 'IPython.terminal', '_hashlib', '_blake2', 'hashlib', 'IPython.core.compilerop', 'IPython.core.error', 'IPython.utils.text', 'IPython.core.magic_arguments', 'getopt', 'IPython.core.display_functions', 'mimetypes', 'IPython.testing', 'IPython.testing.skipdoctest', 'IPython.core.display', 'IPython.lib', 'IPython.lib.display', 'IPython.display', 'IPython.utils.data', 'IPython.core.page', 'IPython.lib.pretty', 'IPython.utils.openpy', 'IPython.utils.dir2', 'IPython.utils.wildcard', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.lexers', 'pygments.filter', 'pygments.filters', 'pygments.regexopt', 'pygments.lexer', 'pygments.unistring', 'pygments.lexers.python', 'pygments.formatters.html', 'IPython.core.oinspect', 'IPython.core.inputtransformer2', 'IPython.core.magic', 'pickleshare', 'IPython.core.hooks', 'IPython.core.autocall', 'IPython.core.macro', 'IPython.core.splitinput', 'IPython.core.prefilter', 'IPython.core.alias', 'IPython.core.builtin_trap', 'IPython.core.displayhook', 'IPython.core.displaypub', 'backcall.backcall', 'backcall', 'IPython.core.events', 'IPython.core.extensions', 'decorator', 'IPython.utils.sentinel', 'IPython.core.formatters', '_sqlite3', 'sqlite3.dbapi2', 'sqlite3', 'IPython.core.history', 'IPython.core.logger', 'IPython.core.payload', 'IPython.core.usage', 'IPython.utils.capture', 'IPython.utils.io', 'IPython.utils.strdispatch', 'IPython.utils.syspathcontext', 'IPython.core.async_helpers', 'IPython.core.interactiveshell', 'prompt_toolkit.application.current', 'prompt_toolkit.eventloop.utils', 'prompt_toolkit.eventloop.async_generator', 'wcwidth.table_wide', 'wcwidth.table_zero', 'wcwidth.unicode_versions', 'wcwidth.wcwidth', 'wcwidth', 'prompt_toolkit.utils', 'prompt_toolkit.eventloop.inputhook', 'prompt_toolkit.eventloop', 'prompt_toolkit.application.run_in_terminal', 'prompt_toolkit.selection', 'prompt_toolkit.clipboard.base', 'prompt_toolkit.clipboard.in_memory', 'prompt_toolkit.clipboard', 'prompt_toolkit.cache', 'prompt_toolkit.enums', 'prompt_toolkit.filters.base', 'prompt_toolkit.filters.app', 'prompt_toolkit.filters.cli', 'prompt_toolkit.filters.utils', 'prompt_toolkit.filters', 'prompt_toolkit.document', 'prompt_toolkit.auto_suggest', 'prompt_toolkit.data_structures', 'prompt_toolkit.styles.base', 'prompt_toolkit.styles.named_colors', 'prompt_toolkit.styles.style', 'prompt_toolkit.styles.defaults', 'prompt_toolkit.styles.pygments', 'colorsys', 'prompt_toolkit.styles.style_transformation', 'prompt_toolkit.styles', 'prompt_toolkit.output.color_depth', 'prompt_toolkit.output.base', 'prompt_toolkit.output.defaults', 'prompt_toolkit.output', 'prompt_toolkit.output.vt100', 'prompt_toolkit.mouse_events', 'prompt_toolkit.formatted_text.base', 'prompt_toolkit.formatted_text.ansi', 'xml', 'xml.dom.domreg', 'xml.dom', 'xml.dom.minicompat', 'xml.dom.NodeFilter', 'xml.dom.xmlbuilder', 'xml.dom.minidom', 'prompt_toolkit.formatted_text.html', 'prompt_toolkit.formatted_text.pygments', 'prompt_toolkit.formatted_text.utils', 'prompt_toolkit.formatted_text', 'prompt_toolkit.completion.base', 'prompt_toolkit.completion.deduplicate', 'prompt_toolkit.completion.filesystem', 'prompt_toolkit.completion.word_completer', 'prompt_toolkit.completion.fuzzy_completer', 'prompt_toolkit.completion.nested', 'prompt_toolkit.completion', 'prompt_toolkit.history', 'prompt_toolkit.keys', 'prompt_toolkit.key_binding.key_bindings', 'prompt_toolkit.key_binding.key_processor', 'prompt_toolkit.key_binding', 'prompt_toolkit.key_binding.vi_state', 'prompt_toolkit.search', 'prompt_toolkit.validation', 'prompt_toolkit.buffer', 'prompt_toolkit.input.base', 'prompt_toolkit.input.defaults', 'prompt_toolkit.input', 'prompt_toolkit.input.typeahead', 'prompt_toolkit.key_binding.bindings', 'prompt_toolkit.key_binding.bindings.scroll', 'prompt_toolkit.key_binding.bindings.page_navigation', 'prompt_toolkit.lexers.base', 'prompt_toolkit.lexers.pygments', 'prompt_toolkit.lexers', 'prompt_toolkit.layout.utils', 'prompt_toolkit.layout.processors', 'prompt_toolkit.layout.controls', 'prompt_toolkit.layout.dimension', 'prompt_toolkit.layout.margins', 'prompt_toolkit.layout.mouse_handlers', 'prompt_toolkit.layout.screen', 'prompt_toolkit.layout.containers', 'prompt_toolkit.layout.layout', 'prompt_toolkit.layout.menus', 'prompt_toolkit.layout.scrollable_pane', 'prompt_toolkit.layout', 'prompt_toolkit.key_binding.bindings.completion', 'prompt_toolkit.key_binding.bindings.named_commands', 'prompt_toolkit.key_binding.bindings.basic', 'prompt_toolkit.key_binding.bindings.cpr', 'prompt_toolkit.key_binding.bindings.emacs', 'prompt_toolkit.key_binding.bindings.mouse', 'prompt_toolkit.input.ansi_escape_sequences', 'prompt_toolkit.input.vt100_parser', 'prompt_toolkit.key_binding.digraphs', 'prompt_toolkit.key_binding.bindings.vi', 'prompt_toolkit.key_binding.defaults', 'prompt_toolkit.key_binding.emacs_state', 'prompt_toolkit.layout.dummy', 'prompt_toolkit.renderer', 'prompt_toolkit.application.application', 'prompt_toolkit.application.dummy', 'prompt_toolkit.application', 'prompt_toolkit.key_binding.bindings.focus', 'prompt_toolkit.widgets.toolbars', 'prompt_toolkit.widgets.base', 'prompt_toolkit.widgets.dialogs', 'prompt_toolkit.widgets.menus', 'prompt_toolkit.widgets', 'prompt_toolkit.shortcuts.dialogs', 'prompt_toolkit.shortcuts.progress_bar.formatters', 'prompt_toolkit.shortcuts.progress_bar.base', 'prompt_toolkit.shortcuts.progress_bar', 'prompt_toolkit.key_binding.bindings.auto_suggest', 'prompt_toolkit.key_binding.bindings.open_in_editor', 'prompt_toolkit.shortcuts.prompt', 'prompt_toolkit.shortcuts.utils', 'prompt_toolkit.shortcuts', 'prompt_toolkit', 'prompt_toolkit.patch_stdout', 'unicodedata', 'IPython.core.latex_symbols', 'IPython.utils.generics', 'parso.utils', 'parso.tree', 'parso.python', 'parso.python.token', 'parso.python.tokenize', 'parso.pgen2.grammar_parser', 'parso.pgen2.generator', 'parso.pgen2', 'parso.parser', 'parso._compatibility', 'difflib', 'parso.python.prefix', 'parso.python.tree', 'parso.python.parser', 'parso.python.diff', 'gc', 'parso.cache', 'parso.normalizer', 'parso.python.errors', 'parso.python.pep8', 'parso.file_io', 'parso.grammar', 'parso', 'jedi.parser_utils', 'jedi.debug', 'jedi.settings', 'jedi.cache', 'jedi.file_io', 'jedi.inference.cache', 'jedi.inference.helpers', 'jedi.inference.utils', 'jedi.inference.base_value', 'jedi.inference.sys_path', 'jedi.inference.recursion', 'jedi.inference.flow_analysis', 'jedi.common', 'jedi.inference.lazy_value', 'jedi.inference.docstrings', 'jedi.plugins', 'jedi.inference.names', 'jedi.inference.filters', 'jedi.inference.compiled.getattr_static', 'jedi.inference.compiled.access', 'jedi.inference.signature', 'jedi.inference.context', 'jedi.inference.compiled.value', 'jedi.inference.compiled', 'jedi.inference.analysis', 'jedi.inference.gradual', 'jedi.inference.value.module', 'jedi.inference.value.dynamic_arrays', 'jedi.inference.value.iterable', 'jedi.inference.arguments', 'jedi.inference.parser_cache', 'jedi.inference.gradual.generics', 'jedi.inference.value.function', 'jedi.inference.value.klass', 'jedi.inference.value.instance', 'jedi.inference.value', 'jedi.inference.gradual.base', 'jedi.inference.gradual.type_var', 'jedi.inference.gradual.typing', 'jedi.inference.gradual.stub_value', 'jedi.inference.gradual.typeshed', 'jedi._compatibility', 'zipfile', 'jedi.inference.compiled.subprocess.functions', 'jedi.api.exceptions', 'jedi.inference.compiled.subprocess', 'jedi.inference.imports', 'jedi.inference.param', 'jedi.inference.gradual.annotation', 'jedi.inference.value.decorator', 'jedi.inference.syntax_tree', 'jedi.inference', 'jedi.inference.gradual.conversion', 'jedi.inference.compiled.mixed', 'pydoc_data', 'pydoc_data.topics', 'jedi.api.keywords', 'jedi.api.completion_cache', 'jedi.api.helpers', 'jedi.api.classes', 'jedi.api.interpreter', 'jedi.api.strings', 'jedi.api.file_name', 'jedi.inference.docstring_utils', 'jedi.api.completion', 'filecmp', 'jedi.api.environment', 'jedi.inference.references', 'jedi.api.project', 'jedi.api.errors', 'jedi.api.refactoring', 'jedi.api.refactoring.extract', 'jedi.inference.gradual.utils', 'jedi.api', 'jedi.plugins.stdlib', 'jedi.plugins.flask', 'jedi.plugins.pytest', 'jedi.plugins.django', 'jedi.plugins.registry', 'jedi', 'IPython.core.completer', 'IPython.terminal.ptutils', 'IPython.lib.clipboard', 'IPython.terminal.shortcuts', 'concurrent.futures.thread', 'IPython.terminal.debugger', 'IPython.terminal.magics', 'IPython.terminal.pt_inputhooks', 'IPython.terminal.prompts', 'IPython.terminal.interactiveshell', 'IPython.core.magics.auto', 'IPython.core.magics.basic', 'email', 'http', 'email.errors', 'email.quoprimime', 'email.base64mime', 'quopri', 'email.encoders', 'email.charset', 'email.header', 'calendar', 'email._parseaddr', 'email.utils', 'email._policybase', 'email.feedparser', 'email.parser', 'uu', 'email._encoded_words', 'email.iterators', 'email.message', 'http.client', 'urllib.response', 'urllib.error', 'nturl2path', 'urllib.request', 'IPython.utils.contexts', 'IPython.core.magics.code', 'IPython.core.magics.config', 'IPython.core.magics.display', '_lsprof', 'profile', 'cProfile', 'dataclasses', 'pstats', 'timeit', 'IPython.utils.module_paths', 'IPython.utils.timing', 'IPython.core.magics.execution', 'IPython.core.magics.extension', 'IPython.core.magics.history', 'IPython.core.magics.logging', 'IPython.core.magics.namespace', 'IPython.core.magics.osm', 'IPython.core.magics.packaging', 'IPython.core.pylabtools', 'IPython.core.magics.pylab', 'IPython.core.magics.script', 'IPython.core.magics', 'IPython.core.shellapp', 'IPython.extensions', 'IPython.extensions.storemagic', 'IPython.terminal.ipapp', 'IPython.terminal.embed', 'IPython.utils.frame', 'IPython', 'imp', 'hmac', 'dateutil._version', 'dateutil', 'dateutil._common', 'dateutil.relativedelta', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.win', 'dateutil.tz.tz', 'dateutil.tz', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', '_strptime', 'jupyter_client.jsonutil', 'jupyter_client.adapter', 'jupyter_client.session', 'ipykernel.iostream', 'ipykernel.control', 'ipykernel.heartbeat', 'IPython.utils.tokenutil', 'psutil._common', 'psutil._compat', 'psutil._psutil_windows', 'psutil._pswindows', 'psutil', 'tornado.locks', 'tornado.queues', 'ipykernel.jsonutil', 'ipykernel.kernelbase', 'ipykernel.comm.comm', 'ipykernel.comm.manager', 'ipykernel.comm', 'IPython.core.payloadpage', 'ipykernel.displayhook', 'ipykernel.zmqshell', 'setuptools._distutils', 'distutils.debug', 'distutils.errors', 'distutils.fancy_getopt', 'distutils.dep_util', 'distutils.log', 'distutils.spawn', 'distutils.py35compat', 'distutils.util', 'distutils.dist', 'distutils.dir_util', 'distutils.file_util', 'distutils.archive_util', 'distutils.cmd', 'configparser', 'distutils.config', 'distutils.extension', 'distutils.core', '_distutils_hack.override', 'setuptools._deprecation_warning', 'xml.parsers', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'xml.parsers.expat', 'plistlib', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources._vendor.jaraco', 'pkg_resources.extern.jaraco', 'importlib._common', 'importlib.resources', 'pkg_resources._vendor.more_itertools.recipes', 'pkg_resources._vendor.more_itertools.more', 'pkg_resources._vendor.more_itertools', 'pkg_resources.extern.more_itertools', 'pkg_resources.extern.jaraco.functools', 'pkg_resources.extern.jaraco.context', 'pkg_resources.extern.jaraco.text', 'win32api', '_win32sysloader', 'pywintypes', 'pythoncom', 'win32com.gen_py', 'win32com', 'win32com.shell', 'pkg_resources._vendor.appdirs', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources._vendor.packaging', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.version', 'pkg_resources._vendor.packaging._manylinux', 'pkg_resources._vendor.packaging._musllinux', 'pkg_resources.extern.packaging.tags', 'pkg_resources.extern.packaging.utils', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources._vendor.pyparsing', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.packaging.markers', 'pkg_resources.extern.packaging.requirements', 'pkg_resources', 'setuptools.version', 'distutils.filelist', 'setuptools.monkey', 'setuptools.extension', 'distutils.command', 'setuptools.extern', 'setuptools._vendor', 'setuptools._vendor.packaging.__about__', 'setuptools._vendor.packaging', 'setuptools.extern.packaging', 'setuptools._vendor.ordered_set', 'setuptools.extern.ordered_set', 'setuptools._vendor.more_itertools.recipes', 'setuptools._vendor.more_itertools.more', 'setuptools._vendor.more_itertools', 'setuptools.extern.more_itertools', 'setuptools._vendor.pyparsing', 'setuptools.extern.pyparsing', 'setuptools._vendor.packaging._manylinux', 'setuptools._vendor.packaging._musllinux', 'setuptools.extern.packaging.tags', 'setuptools.extern.packaging._structures', 'setuptools.extern.packaging.version', 'setuptools.extern.packaging.utils', 'setuptools.extern.packaging.specifiers', 'setuptools.extern.packaging.markers', 'setuptools.extern.packaging.requirements', 'setuptools._vendor.jaraco', 'setuptools.extern.jaraco', 'setuptools.extern.jaraco.context', 'setuptools.extern.jaraco.functools', '_csv', 'csv', 'setuptools._vendor.zipp', 'setuptools._vendor.importlib_metadata._functools', 'setuptools._vendor.importlib_metadata._text', 'setuptools._vendor.importlib_metadata._adapters', 'setuptools._vendor.importlib_metadata._compat', 'setuptools._vendor.importlib_metadata._meta', 'setuptools._vendor.importlib_metadata._collections', 'setuptools._vendor.importlib_metadata._itertools', 'setuptools._vendor.importlib_metadata', 'setuptools.extern.importlib_metadata', 'setuptools._vendor.nspektr._compat', 'setuptools._vendor.nspektr', 'setuptools.extern.nspektr', 'zipp', 'importlib_metadata._functools', 'importlib_metadata._text', 'importlib_metadata._adapters', 'importlib_metadata._compat', 'importlib_metadata._meta', 'importlib_metadata._collections', 'importlib_metadata._itertools', 'importlib_metadata', 'setuptools._importlib', 'distutils.command.bdist', 'setuptools.command', 'setuptools.windows_support', 'setuptools.config.expand', 'setuptools.config.setupcfg', 'setuptools.config', 'setuptools.errors', 'email._header_value_parser', 'email.headerregistry', 'setuptools.config._apply_pyprojecttoml', 'setuptools.config.pyprojecttoml', 'setuptools.discovery', 'setuptools.extern.jaraco.text', 'setuptools._reqs', 'setuptools._itertools', 'setuptools._entry_points', 'setuptools.dist', 'setuptools.py34compat', 'setuptools._imp', 'setuptools.depends', 'setuptools.logging', 'distutils.ccompiler', 'distutils.msvc9compiler', 'setuptools.msvc', 'unittest.util', 'unittest.result', 'unittest.case', 'unittest.suite', 'unittest.loader', 'unittest.signals', 'unittest.runner', 'unittest.main', 'unittest', 'unittest.mock', 'distutils._msvccompiler', 'setuptools', 'distutils', 'distutils.version', 'ipykernel.eventloops', 'ipykernel.compiler', 'debugpy._version', 'debugpy.common', 'debugpy.common.json', 'debugpy.common.fmt', 'debugpy.common.compat', 'debugpy', 'debugpy._vendored._util', 'debugpy._vendored', '_pydevd_bundle', 'encodings.ascii', 'stringprep', 'encodings.idna', '_pydevd_bundle.pydevd_vm_type', '_pydev_imps', 'xmlrpc', 'gzip', 'xmlrpc.client', 'socketserver', 'http.server', 'xmlrpc.server', '_pydev_imps._pydev_saved_modules', '_pydevd_bundle.pydevd_constants', '_pydev_bundle', '_pydev_runfiles', '_pydevd_frame_eval', 'pydev_ipython', 'pydevd_concurrency_analyser', 'pydevd_plugins', '_pydev_bundle.pydev_log', '_pydev_bundle._pydev_filesystem_encoding', '_pydevd_bundle.pydevd_comm_constants', 'pydevd_file_utils', '_pydev_imps._pydev_execfile', '_pydevd_bundle.pydevd_exec2', '_pydev_bundle.pydev_imports', '_pydev_bundle.pydev_is_thread_alive', '_pydev_bundle.pydev_override', 'pydevd_plugins.extensions', '_pydevd_bundle.pydevd_extension_utils', '_pydevd_bundle.pydevd_frame_utils', '_pydevd_bundle.pydevd_filtering', '_pydevd_bundle.pydevd_io', '_pydevd_bundle.pydevd_utils', '_pydev_bundle._pydev_tipper_common', '_pydev_bundle._pydev_imports_tipper', '_pydev_bundle._pydev_calltip_util', '_pydevd_bundle.pydevd_safe_repr', '_pydevd_bundle.pydevd_resolver', '_pydevd_bundle.pydevd_extension_api', '_pydevd_bundle.pydevd_xml', '_pydevd_bundle.pydevd_dont_trace', '_pydevd_frame_eval.vendored', '_pydevd_frame_eval.vendored.bytecode.flags', '_pydevd_frame_eval.vendored.bytecode.instr', '_pydevd_frame_eval.vendored.bytecode.bytecode', '_pydevd_frame_eval.vendored.bytecode.concrete', '_pydevd_frame_eval.vendored.bytecode.cfg', '_pydevd_frame_eval.vendored.bytecode', '_pydevd_bundle.pydevd_bytecode_utils', '_pydevd_bundle.pydevd_cython', '_pydevd_bundle.pydevd_cython_wrapper', '_pydevd_bundle.pydevd_additional_thread_info', '_pydevd_bundle.pydevd_thread_lifecycle', '_pydevd_bundle.pydevd_save_locals', '_pydevd_bundle.pydevd_defaults', '_pydev_bundle.pydev_monkey', 'pydevd_tracing', '_pydevd_bundle.pydevd_daemon_thread', '_pydevd_bundle.pydevd_timeout', '_pydevd_bundle.pydevd_vars', '_pydev_bundle.pydev_console_utils', '_pydevd_bundle.pydevd_import_class', '_pydevd_bundle.pydevd_breakpoints', '_pydevd_bundle.pydevd_custom_frames', '_pydevd_bundle.pydevd_dont_trace_files', '_pydevd_bundle.pydevd_net_command', '_pydev_bundle.pydev_umd', 'pydevconsole', '_pydev_bundle._pydev_completer', '_pydevd_bundle.pydevd_net_command_factory_xml', '_pydevd_bundle.pydevd_frame', '_pydevd_bundle.pydevd_additional_thread_info_regular', '_pydevd_bundle.pydevd_trace_dispatch', '_pydevd_frame_eval.pydevd_frame_eval_main', '_pydevd_bundle.pydevd_source_mapping', 'pydevd_concurrency_analyser.pydevd_thread_wrappers', 'pydevd_concurrency_analyser.pydevd_concurrency_logger', '_pydevd_bundle._debug_adapter', '_pydevd_bundle._debug_adapter.pydevd_schema_log', '_pydevd_bundle._debug_adapter.pydevd_base_schema', '_pydevd_bundle._debug_adapter.pydevd_schema', '_pydevd_bundle.pydevd_reload', '_pydev_bundle.fsnotify', '_pydevd_bundle.pydevd_console', '_pydevd_bundle.pydevd_comm', '_pydevd_bundle.pydevd_net_command_factory_json', '_pydevd_bundle.pydevd_collect_bytecode_info', '_pydevd_bundle.pydevd_api', '_pydevd_bundle.pydevd_json_debug_options', '_pydevd_bundle.pydevd_process_net_command_json', '_pydevd_bundle.pydevd_traceproperty', '_pydevd_bundle.pydevd_process_net_command', '_pydevd_bundle.pydevd_suspended_frames', '_pydevd_bundle.pydevd_trace_api', 'pydevd_plugins.django_debug', 'pydevd_plugins.jinja2_debug', '_pydevd_bundle.pydevd_plugin_utils', 'pydevd_plugins.extensions.types', 'pydevd_plugins.extensions.types.pydevd_helpers', 'pydevd_plugins.extensions.types.pydevd_plugin_numpy_types', 'pydevd_plugins.extensions.types.pydevd_plugins_django_form_str', 'pydevd', 'debugpy._vendored.force_pydevd', 'debugpy.server', 'debugpy.adapter', 'debugpy.common.timestamp', 'debugpy.common.util', 'debugpy.common.log', 'debugpy.common.sockets', 'debugpy.server.api', 'ipykernel.debugger', 'ipykernel.ipkernel', 'ipykernel.parentpoller', 'ipykernel.kernelapp', 'win32security', 'ntsecuritycon', 'faulthandler', 'IPython.core.completerlib', 'logging.config', 'pythonjsonlogger', 'pythonjsonlogger.jsonlogger', 'daiquiri.types', 'daiquiri.formatter', 'daiquiri.handlers', 'daiquiri.output', 'daiquiri', 'jupyter_require.__about__', 'csscompressor', 'jupyter_require.core', 'jupyter_require.notebook', 'jupyter_require', 'jupyter_nbutils.__about__', 'jupyter_nbutils.config', 'jupyter_nbutils.utils', 'jupyter_nbutils', 'jupyter_require.magic', 'numpy._globals', 'numpy.__config__', 'numpy._distributor_init', 'numpy._version', 'numpy.version', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core._asarray', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core._machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.stride_tricks', 'numpy.lib.twodim_base', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', '_cython_0_29_30', 'numpy.random._common', 'secrets', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'pytz', 'pandas._typing', '_cython_0_29_28', 'pandas._libs.tslibs.dtypes', 'pandas._libs.tslibs.base', 'pandas._libs.tslibs.np_datetime', 'pandas._libs.tslibs.nattype', 'pandas._libs.tslibs.timezones', 'pandas._libs.tslibs.ccalendar', 'pandas._libs.tslibs.tzconversion', 'pandas._config.config', 'pandas._config.dates', 'pandas._config.display', 'pandas._config', 'pandas._config.localization', 'pandas._libs.tslibs.strptime', 'pandas._libs.tslibs.fields', 'pandas._libs.tslibs.timedeltas', 'pandas._libs.tslibs.timestamps', 'dateutil.easter', 'pandas._libs.properties', 'pandas._libs.tslibs.offsets', 'pandas._libs.tslibs.parsing', 'pandas._libs.tslibs.conversion', 'pandas._libs.tslibs.period', 'pandas._libs.tslibs.vectorized', 'pandas._libs.tslibs', 'pandas._libs.ops_dispatch', 'pandas._libs.missing', 'pandas._libs.hashtable', 'pandas._libs.algos', 'pandas._libs.interval', 'pandas._libs', 'pandas.util._decorators', 'pandas.core', 'pandas.core.util', 'pandas._libs.tslib', 'pandas._libs.lib', 'pandas._libs.hashing', 'pandas.core.dtypes', 'pandas.util._exceptions', 'pandas.errors', 'pandas.core.dtypes.generic', 'pandas.core.dtypes.base', 'pandas.core.dtypes.inference', 'pandas.core.dtypes.dtypes', 'pandas.core.dtypes.common', 'pandas.core.util.hashing', 'pandas.util', 'pandas.util.version', 'pandas.compat.numpy', 'pandas.compat.pyarrow', 'pandas.compat', 'pandas.core.config_init', 'pandas.core.dtypes.missing', 'pandas.util._validators', 'pandas.core.dtypes.cast', 'pandas.core.dtypes.concat', 'pandas.core.array_algos', 'pandas.core.common', 'pandas.core.construction', 'pandas.core.array_algos.take', 'pandas.core.indexers.utils', 'pandas.core.indexers', 'pandas.core.algorithms', 'pandas.compat.numpy.function', 'pandas.core.roperator', 'pandas._libs.ops', 'pandas.core.computation', 'pandas.compat._optional', 'numexpr.interpreter', 'packaging.__about__', 'packaging', 'packaging._structures', 'packaging.version', 'numexpr.expressions', 'numexpr.utils', 'numexpr.necompiler', 'numexpr.version', 'numexpr', 'pandas.core.computation.check', 'pandas.core.computation.expressions', 'pandas.core.ops.missing', 'pandas.core.ops.dispatch', 'pandas.core.ops.invalid', 'pandas.core.ops.array_ops', 'pandas.core.ops.common', 'pandas.core.ops.docstrings', 'pandas.core.ops.mask_ops', 'pandas.core.ops.methods', 'pandas.core.ops', 'pandas.core.arraylike', 'pandas.core.missing', 'pandas.core.array_algos.quantile', 'pandas.core.sorting', 'pandas.core.arrays.base', 'bottleneck.benchmark', 'bottleneck.benchmark.autotimeit', 'bottleneck.benchmark.bench', 'bottleneck.benchmark.bench_detailed', 'bottleneck.tests', 'bottleneck.tests.util', 'bottleneck.slow.reduce', 'bottleneck.slow.nonreduce', 'bottleneck.slow.nonreduce_axis', 'bottleneck.slow.move', 'bottleneck.slow', 'bottleneck._pytesttester', 'bottleneck.move', 'bottleneck.nonreduce', 'bottleneck.nonreduce_axis', 'bottleneck.reduce', 'bottleneck._version', 'bottleneck', 'pandas.core.nanops', 'pandas.core.array_algos.masked_reductions', 'pandas.core.arrays.masked', 'pandas.core.arrays.boolean', 'pandas._libs.arrays', 'pandas.core.accessor', 'pandas.core.array_algos.transforms', 'pandas.core.arrays._mixins', 'pandas.core.base', 'pandas.core.strings.accessor', 'pandas.core.strings.base', 'pandas.core.strings', 'pandas.core.strings.object_array', 'pandas.io', 'pandas.io.formats', 'pandas.io.formats.console', 'pandas.core.arrays.categorical', 'pandas.tseries', 'pandas.tseries.frequencies', 'pandas.core.arrays.datetimelike', 'pandas.core.arrays._ranges', 'pandas.core.arrays.numeric', 'pandas.core.tools', 'pandas.core.tools.numeric', 'pandas.core.arrays.integer', 'pandas.tseries.offsets', 'pandas.core.arrays.datetimes', 'pandas.core.arrays.floating', 'pandas.core.indexes', 'pandas._libs.index', 'pandas._libs.join', 'pandas.core.array_algos.putmask', 'pandas._libs.sparse', 'pandas.core.arrays.sparse.dtype', 'pandas.io.formats.printing', 'pandas.core.arrays.sparse.array', 'pandas.core.arrays.sparse.accessor', 'pandas.core.arrays.sparse', 'pandas.core.indexes.frozen', 'pandas.core.indexes.base', 'pandas.core.arrays.interval', 'pandas.core.arrays.numpy_', 'pandas.core.arrays.period', 'pandas.core.arrays.string_', 'pandas.core.arrays.string_arrow', 'pandas.core.arrays.timedeltas', 'pandas.core.arrays', 'pandas.core.flags', 'pandas._libs.reduction', 'pandas.core.apply', 'pandas._libs.indexing', 'pandas.core.indexes.extension', 'pandas.core.indexes.category', 'pandas.core.indexes.numeric', 'pandas.core.indexes.range', 'pandas.core.tools.timedeltas', 'pandas.core.indexes.datetimelike', 'pandas.core.tools.times', 'pandas.core.indexes.datetimes', 'pandas.core.indexes.multi', 'pandas.core.indexes.timedeltas', 'pandas.core.indexes.interval', 'pandas.core.indexes.period', 'pandas.core.indexes.api', 'pandas.core.indexing', 'pandas.core.array_algos.replace', 'pandas.core.reshape', 'pandas._libs.internals', 'pandas._libs.writers', 'pandas.core.internals.blocks', 'pandas.core.internals.api', 'pandas.core.internals.base', 'pandas.core.internals.array_manager', 'pandas.core.internals.ops', 'pandas.core.internals.managers', 'pandas.core.internals.concat', 'pandas.core.internals', 'pandas.core.reshape.concat', 'mmap', 'pandas.core.shared_docs', 'pandas.io.common', 'pandas.io.formats.format', 'pandas.core.describe', 'pandas.core.internals.construction', 'pandas.core.sample', 'pandas._libs.window', 'pandas._libs.window.aggregations', 'pandas._libs.window.indexers', 'pandas.core.indexers.objects', 'pandas.core.util.numba_', 'pandas.core.window.common', 'pandas.core.window.doc', 'pandas.core.window.numba_', 'pandas.core.window.online', 'pandas.core._numba', 'pandas.core._numba.executor', 'pandas.core.window.rolling', 'pandas.core.window.ewm', 'pandas.core.window.expanding', 'pandas.core.window', 'pandas.core.generic', 'pandas.core.reshape.util', 'pandas.core.reshape.melt', 'pandas._libs.reshape', 'pandas.core.indexes.accessors', 'pandas.arrays', 'pandas.core.tools.datetimes', 'pandas.io.formats.info', 'pandas.plotting._core', 'pandas.plotting._misc', 'pandas.plotting', 'pandas.core.series', 'pandas.core.frame', 'pandas.core.groupby.base', 'pandas._libs.groupby', 'pandas.core.groupby.numba_', 'pandas.core.groupby.categorical', 'pandas.core.groupby.grouper', 'pandas.core.groupby.ops', 'pandas.core.groupby.indexing', 'pandas.core.groupby.groupby', 'pandas.core.groupby.generic', 'pandas.core.groupby', 'pandas.core.api', 'pandas.tseries.api', 'pandas.core.computation.common', 'pandas.core.computation.align', 'pandas.compat.chainmap', 'pandas.core.computation.scope', 'pandas.core.computation.ops', 'pandas.core.computation.parsing', 'pandas.core.computation.expr', 'pandas.core.computation.engines', 'pandas.core.computation.eval', 'pandas.core.computation.api', 'pandas.core.reshape.merge', 'pandas.core.reshape.pivot', 'pandas.core.reshape.reshape', 'pandas.core.reshape.tile', 'pandas.core.reshape.api', 'pandas.api.extensions', 'pandas.api.indexers', 'pandas.core.dtypes.api', 'pandas.api.types', 'pandas.api', 'pandas._testing._random', 'pandas._testing.contexts', 'pandas._testing._io', 'pandas._testing._warnings', 'cmath', 'pandas._libs.testing', 'pandas._testing.asserters', 'pandas._testing.compat', 'pandas._testing', 'pandas.testing', 'pandas.util._print_versions', 'pandas.io.clipboards', 'pandas._libs.parsers', 'pandas.io.excel._util', 'pandas.io.date_converters', 'pandas.io.parsers.base_parser', 'pandas.io.parsers.arrow_parser_wrapper', 'pandas.io.parsers.c_parser_wrapper', 'pandas.io.parsers.python_parser', 'pandas.io.parsers.readers', 'pandas.io.parsers', 'pandas.io.excel._odfreader', 'pandas.io.excel._openpyxl', 'pandas.io.excel._pyxlsb', 'pandas.io.excel._xlrd', 'pandas.io.excel._base', 'pandas._libs.json', 'pandas.io.formats._color_data', 'pandas.io.formats.css', 'pandas.io.formats.excel', 'pandas.io.excel._odswriter', 'pandas.io.excel._xlsxwriter', 'pandas.io.excel._xlwt', 'pandas.io.excel', 'pandas.io.feather_format', 'pandas.io.gbq', 'pandas.io.html', 'pandas.io.json._normalize', 'pandas.io.json._table_schema', 'pandas.io.json._json', 'pandas.io.json', 'pandas.io.orc', 'pandas.io.parquet', 'pandas.compat.pickle_compat', 'pandas.io.pickle', 'pandas.core.computation.pytables', 'pandas.io.pytables', 'pandas.io.sas.sasreader', 'pandas.io.sas', 'pandas.io.spss', 'pandas.io.sql', 'pandas.io.stata', 'pandas.io.xml', 'pandas.io.api', 'pandas.util._tester', 'pandas._version', 'pandas', 'summarytools', 'summarytools.htmlwidgets', 'summarytools.summarytools', 'matplotlib', 'matplotlib._api.deprecation', 'matplotlib._api', 'matplotlib._version', 'matplotlib._c_internal_utils', 'matplotlib.cbook', 'matplotlib.docstring', 'PIL._version', 'PIL', 'defusedxml.common', 'defusedxml', 'xml.etree', 'xml.etree.ElementPath', '_elementtree', 'xml.etree.ElementTree', 'defusedxml.ElementTree', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._util', 'PIL._imaging', 'cffi.lock', 'cffi.error', 'cffi.model', 'cffi.api', 'cffi', 'PIL.Image', 'PIL.ImageChops', 'PIL.ImageFile', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'PIL.ImagePalette', 'PIL.ImageSequence', 'PIL.PngImagePlugin', 'matplotlib._path', 'matplotlib.bezier', 'matplotlib.path', 'matplotlib.transforms', 'matplotlib.ticker', 'matplotlib.scale', 'matplotlib._color_data', 'matplotlib.colors', 'pyparsing.util', 'pyparsing.unicode', 'pyparsing.exceptions', 'pyparsing.actions', 'pyparsing.results', 'pyparsing.core', 'pyparsing.helpers', 'pyparsing.testing', 'pyparsing.common', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib._enums', 'cycler', 'matplotlib.rcsetup', 'matplotlib.ft2font', 'kiwisolver']
2023-04-20 15:58:34,438 [33852] DEBUG    matplotlib:275: [JupyterRequire] CACHEDIR=C:\Users\adity\.matplotlib
2023-04-20 15:58:34,443 [33852] DEBUG    matplotlib.font_manager:1439: [JupyterRequire] Using fontManager instance from C:\Users\adity\.matplotlib\fontlist-v330.json
2023-04-20 15:58:35,094 [33852] DEBUG    matplotlib.pyplot:280: [JupyterRequire] Loaded backend module://matplotlib_inline.backend_inline version unknown.
2023-04-20 15:58:35,100 [33852] DEBUG    matplotlib.pyplot:280: [JupyterRequire] Loaded backend module://matplotlib_inline.backend_inline version unknown.
2023-04-20 16:00:46,095 [1948] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-04-20 16:00:46,096 [1948] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-04-20 16:00:46,096 [1948] INFO     root:247: [JupyterRequire] Initializing comms.
2023-04-20 16:00:46,098 [1948] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-04-20 16:00:46,099 [1948] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-04-20 16:00:46,100 [1948] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-04-20 16:30:51,714 [1948] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-04-20 16:30:51,714 [1948] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-04-20 16:30:51,714 [1948] INFO     root:247: [JupyterRequire] Initializing comms.
2023-04-20 16:30:51,718 [1948] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-04-20 16:30:51,720 [1948] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-04-20 16:30:51,720 [1948] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-04-20 16:30:51,747 [34208] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-04-20 16:30:51,747 [34208] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-04-20 16:30:51,747 [34208] INFO     root:247: [JupyterRequire] Initializing comms.
2023-04-20 16:30:51,751 [34208] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-04-20 16:30:51,751 [34208] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-04-20 16:30:51,751 [34208] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-04-20 16:42:15,992 [34208] WARNING  py.warnings:109: [JupyterRequire] C:\Users\adity\anaconda3\lib\site-packages\matplotlib\tight_bbox.py:71: RuntimeWarning: invalid value encountered in double_scalars
  fig.patch.set_bounds(x0 / w1, y0 / h1,

2023-04-20 16:42:15,997 [34208] WARNING  py.warnings:109: [JupyterRequire] C:\Users\adity\anaconda3\lib\site-packages\matplotlib\tight_bbox.py:72: RuntimeWarning: invalid value encountered in double_scalars
  fig.bbox.width / w1, fig.bbox.height / h1)

2023-04-20 16:42:19,533 [34208] WARNING  py.warnings:109: [JupyterRequire] C:\Users\adity\anaconda3\lib\site-packages\matplotlib\tight_bbox.py:71: RuntimeWarning: divide by zero encountered in double_scalars
  fig.patch.set_bounds(x0 / w1, y0 / h1,

2023-04-20 16:42:19,535 [34208] WARNING  py.warnings:109: [JupyterRequire] C:\Users\adity\anaconda3\lib\site-packages\matplotlib\tight_bbox.py:72: RuntimeWarning: divide by zero encountered in double_scalars
  fig.bbox.width / w1, fig.bbox.height / h1)

2023-04-20 16:42:19,552 [34208] WARNING  py.warnings:109: [JupyterRequire] C:\Users\adity\anaconda3\lib\site-packages\matplotlib\patches.py:744: RuntimeWarning: invalid value encountered in double_scalars
  y1 = self.convert_yunits(self._y0 + self._height)

2023-04-20 16:42:19,558 [34208] WARNING  py.warnings:109: [JupyterRequire] C:\Users\adity\anaconda3\lib\site-packages\matplotlib\transforms.py:2053: RuntimeWarning: invalid value encountered in double_scalars
  self._mtx[1, 2] += ty

2023-04-20 16:42:52,919 [32392] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-04-20 16:42:52,919 [32392] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-04-20 16:42:52,920 [32392] INFO     root:247: [JupyterRequire] Initializing comms.
2023-04-20 16:42:52,921 [32392] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-04-20 16:42:52,922 [32392] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-04-20 16:42:52,922 [32392] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-04-20 16:43:06,308 [32392] WARNING  py.warnings:109: [JupyterRequire] C:\Users\adity\anaconda3\lib\site-packages\matplotlib\tight_bbox.py:71: RuntimeWarning: invalid value encountered in double_scalars
  fig.patch.set_bounds(x0 / w1, y0 / h1,

2023-04-20 16:43:06,313 [32392] WARNING  py.warnings:109: [JupyterRequire] C:\Users\adity\anaconda3\lib\site-packages\matplotlib\tight_bbox.py:72: RuntimeWarning: invalid value encountered in double_scalars
  fig.bbox.width / w1, fig.bbox.height / h1)

2023-04-20 16:43:09,847 [32392] WARNING  py.warnings:109: [JupyterRequire] C:\Users\adity\anaconda3\lib\site-packages\matplotlib\tight_bbox.py:71: RuntimeWarning: divide by zero encountered in double_scalars
  fig.patch.set_bounds(x0 / w1, y0 / h1,

2023-04-20 16:43:09,849 [32392] WARNING  py.warnings:109: [JupyterRequire] C:\Users\adity\anaconda3\lib\site-packages\matplotlib\tight_bbox.py:72: RuntimeWarning: divide by zero encountered in double_scalars
  fig.bbox.width / w1, fig.bbox.height / h1)

2023-04-20 16:43:09,856 [32392] WARNING  py.warnings:109: [JupyterRequire] C:\Users\adity\anaconda3\lib\site-packages\matplotlib\patches.py:744: RuntimeWarning: invalid value encountered in double_scalars
  y1 = self.convert_yunits(self._y0 + self._height)

2023-04-20 16:43:09,862 [32392] WARNING  py.warnings:109: [JupyterRequire] C:\Users\adity\anaconda3\lib\site-packages\matplotlib\transforms.py:2053: RuntimeWarning: invalid value encountered in double_scalars
  self._mtx[1, 2] += ty

2023-04-20 16:47:25,557 [34440] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-04-20 16:47:25,557 [34440] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-04-20 16:47:25,558 [34440] INFO     root:247: [JupyterRequire] Initializing comms.
2023-04-20 16:47:25,561 [34440] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-04-20 16:47:25,562 [34440] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-04-20 16:47:25,563 [34440] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-04-20 17:26:17,911 [18564] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-04-20 17:26:17,912 [18564] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-04-20 17:26:17,913 [18564] INFO     root:247: [JupyterRequire] Initializing comms.
2023-04-20 17:26:17,917 [18564] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-04-20 17:26:17,918 [18564] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-04-20 17:26:17,919 [18564] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-04-20 17:29:25,565 [18564] INFO     numexpr.utils:147: [JupyterRequire] Note: NumExpr detected 12 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
2023-04-20 17:29:25,565 [18564] INFO     numexpr.utils:159: [JupyterRequire] NumExpr defaulting to 8 threads.
2023-04-20 17:29:26,282 [18564] DEBUG    matplotlib:275: [JupyterRequire] matplotlib data path: C:\Users\adity\anaconda3\lib\site-packages\matplotlib\mpl-data
2023-04-20 17:29:26,290 [18564] DEBUG    matplotlib:275: [JupyterRequire] CONFIGDIR=C:\Users\adity\.matplotlib
2023-04-20 17:29:26,293 [18564] DEBUG    matplotlib:1445: [JupyterRequire] interactive is False
2023-04-20 17:29:26,293 [18564] DEBUG    matplotlib:1446: [JupyterRequire] platform is win32
2023-04-20 17:29:26,294 [18564] DEBUG    matplotlib:1447: [JupyterRequire] loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', '_io', 'marshal', 'nt', 'winreg', '_frozen_importlib_external', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', 'encodings.cp1252', '_signal', 'encodings.latin_1', '_abc', 'abc', 'io', '__main__', '_stat', 'stat', '_collections_abc', 'genericpath', 'ntpath', 'os.path', 'os', '_sitebuiltins', '_locale', '_bootlocale', '_distutils_hack', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib.machinery', '_heapq', 'heapq', 'itertools', 'keyword', '_operator', 'operator', 'reprlib', '_collections', 'collections', 'collections.abc', '_functools', 'functools', 'contextlib', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', 'copyreg', 're', 'typing.io', 'typing.re', 'typing', 'importlib.abc', 'importlib.util', 'google', 'google.cloud', 'google.logging', 'mpl_toolkits', 'sphinxcontrib', 'zope', 'site', '_weakrefset', 'weakref', 'pkgutil', 'runpy', 'ipykernel._version', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'errno', 'signal', 'threading', 'msvcrt', '_winapi', 'subprocess', 'jupyter_client._version', 'posixpath', 'fnmatch', 'glob', '_socket', 'math', 'select', 'selectors', 'socket', 'zlib', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', '_bisect', 'bisect', '_random', '_sha512', 'random', 'tempfile', 'getpass', 'platform', 'zmq.libzmq', 'zmq.backend.select', 'cython_runtime', 'zmq.backend.cython.constants', '_cython_0_29_24', 'zmq.backend.cython.error', 'zmq.error', 'zmq.backend.cython.message', 'zmq.backend.cython.context', 'copy', '_struct', 'struct', '_compat_pickle', '_pickle', 'pickle', 'zmq.backend.cython.socket', 'zmq.backend.cython.utils', 'zmq.backend.cython._poll', 'zmq.backend.cython._version', 'zmq.backend.cython._device', 'zmq.backend.cython._proxy_steerable', 'zmq.backend.cython', 'zmq.backend', 'zmq.utils', 'zmq.utils.constant_names', 'zmq.sugar.constants', 'atexit', 'zmq.sugar.attrsettr', 'zmq.sugar.poll', 'zmq.utils.jsonapi', 'zmq.utils.strtypes', 'zmq.sugar.socket', 'zmq.sugar.context', 'zmq.sugar.frame', 'zmq.sugar.tracker', 'zmq.sugar.version', 'zmq.sugar.stopwatch', 'zmq.sugar', 'zmq', '_ast', 'ast', '_opcode', 'opcode', 'dis', 'token', 'tokenize', 'linecache', 'inspect', 'traitlets.utils', 'traitlets.utils.getargspec', 'traitlets.utils.importstring', 'traitlets.utils.sentinel', 'traitlets.utils.bunch', 'traitlets.utils.descriptions', 'traitlets.traitlets', 'traitlets.utils.decorators', 'traitlets._version', 'traitlets', 'traceback', '_string', 'string', 'logging', 'pprint', 'gettext', 'argparse', 'traitlets.config.loader', 'textwrap', 'traitlets.utils.text', 'traitlets.config.configurable', 'traitlets.config.application', 'traitlets.config', 'jupyter_client.localinterfaces', 'jupyter_core.version', 'jupyter_core', 'urllib', 'urllib.parse', 'pathlib', 'jupyter_core.paths', 'jupyter_client.utils', 'jupyter_client.connect', 'traitlets.log', 'jupyter_client.launcher', 'concurrent', 'concurrent.futures._base', 'concurrent.futures', '_ssl', 'binascii', 'base64', 'ssl', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', '_contextvars', 'contextvars', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.threads', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'asyncio.windows_events', 'asyncio', 'jupyter_client.channelsabc', 'jupyter_client.channels', 'jupyter_client.clientabc', 'jupyter_client.client', 'jupyter_client.kernelspec', 'jupyter_client.managerabc', 'jupyter_client.manager', '_queue', 'queue', 'jupyter_client.blocking.channels', 'jupyter_client.blocking.client', 'jupyter_client.blocking', 'zmq._future', 'zmq.asyncio', 'jupyter_client.asynchronous.channels', 'jupyter_client.asynchronous.client', 'jupyter_client.asynchronous', '_uuid', 'uuid', 'jupyter_client.multikernelmanager', 'jupyter_client', 'ipykernel.connect', 'ipykernel', 'tornado', '_datetime', 'datetime', 'numbers', 'logging.handlers', 'html.entities', 'html', 'array', 'tornado.speedups', 'tornado.util', 'tornado.escape', 'colorama.ansi', '_ctypes', 'ctypes._endian', 'ctypes', 'ctypes.wintypes', 'colorama.win32', 'colorama.winterm', 'colorama.ansitowin32', 'colorama.initialise', 'colorama', 'tornado.log', 'tornado.concurrent', 'tornado.ioloop', '__future__', 'tornado.platform', 'tornado.gen', 'tornado.platform.asyncio', 'zmq.eventloop.ioloop', 'zmq.eventloop', 'zmq.eventloop.zmqstream', 'IPython.core', 'IPython.core.getipython', 'IPython.core.release', 'sysconfig', 'pydoc', 'executing.executing', 'executing.version', 'executing', 'asttokens.line_numbers', 'six', 'six.moves', 'asttokens.util', 'asttokens.mark_tokens', 'asttokens.asttokens', 'asttokens', '_decimal', 'decimal', 'fractions', 'pure_eval.utils', 'pure_eval.my_getattr_static', 'pure_eval.core', 'pure_eval.version', 'pure_eval', 'stack_data.utils', 'stack_data.core', 'stack_data.formatting', 'stack_data.version', 'stack_data', 'pygments', 'pygments.formatters._mapping', 'pygments.plugin', 'pygments.util', 'pygments.formatters', 'pygments.styles', 'pygments.formatter', 'pygments.console', 'pygments.token', 'pygments.style', 'pygments.formatters.terminal256', 'bdb', 'IPython.utils', 'IPython.utils.ipstruct', 'IPython.utils.coloransi', 'IPython.utils.colorable', 'IPython.utils.PyColorize', 'locale', 'IPython.utils.encoding', 'IPython.utils.py3compat', 'IPython.core.excolors', 'cmd', 'codeop', 'code', 'pdb', 'IPython.core.debugger', 'IPython.core.display_trap', 'shlex', 'IPython.utils._process_common', 'IPython.utils._process_win32', 'IPython.utils.process', 'IPython.utils.decorators', 'IPython.utils.path', 'IPython.utils.terminal', 'IPython.core.ultratb', 'IPython.utils._sysinfo', 'IPython.utils.sysinfo', 'IPython.core.crashhandler', 'IPython.utils.importstring', 'IPython.paths', 'IPython.core.profiledir', 'IPython.core.application', 'IPython.terminal', '_hashlib', '_blake2', 'hashlib', 'IPython.core.compilerop', 'IPython.core.error', 'IPython.utils.text', 'IPython.core.magic_arguments', 'getopt', 'IPython.core.display_functions', 'mimetypes', 'IPython.testing', 'IPython.testing.skipdoctest', 'IPython.core.display', 'IPython.lib', 'IPython.lib.display', 'IPython.display', 'IPython.utils.data', 'IPython.core.page', 'IPython.lib.pretty', 'IPython.utils.openpy', 'IPython.utils.dir2', 'IPython.utils.wildcard', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.lexers', 'pygments.filter', 'pygments.filters', 'pygments.regexopt', 'pygments.lexer', 'pygments.unistring', 'pygments.lexers.python', 'pygments.formatters.html', 'IPython.core.oinspect', 'IPython.core.inputtransformer2', 'IPython.core.magic', 'pickleshare', 'IPython.core.hooks', 'IPython.core.autocall', 'IPython.core.macro', 'IPython.core.splitinput', 'IPython.core.prefilter', 'IPython.core.alias', 'IPython.core.builtin_trap', 'IPython.core.displayhook', 'IPython.core.displaypub', 'backcall.backcall', 'backcall', 'IPython.core.events', 'IPython.core.extensions', 'decorator', 'IPython.utils.sentinel', 'IPython.core.formatters', '_sqlite3', 'sqlite3.dbapi2', 'sqlite3', 'IPython.core.history', 'IPython.core.logger', 'IPython.core.payload', 'IPython.core.usage', 'IPython.utils.capture', 'IPython.utils.io', 'IPython.utils.strdispatch', 'IPython.utils.syspathcontext', 'IPython.core.async_helpers', 'IPython.core.interactiveshell', 'prompt_toolkit.application.current', 'prompt_toolkit.eventloop.utils', 'prompt_toolkit.eventloop.async_generator', 'wcwidth.table_wide', 'wcwidth.table_zero', 'wcwidth.unicode_versions', 'wcwidth.wcwidth', 'wcwidth', 'prompt_toolkit.utils', 'prompt_toolkit.eventloop.inputhook', 'prompt_toolkit.eventloop', 'prompt_toolkit.application.run_in_terminal', 'prompt_toolkit.selection', 'prompt_toolkit.clipboard.base', 'prompt_toolkit.clipboard.in_memory', 'prompt_toolkit.clipboard', 'prompt_toolkit.cache', 'prompt_toolkit.enums', 'prompt_toolkit.filters.base', 'prompt_toolkit.filters.app', 'prompt_toolkit.filters.cli', 'prompt_toolkit.filters.utils', 'prompt_toolkit.filters', 'prompt_toolkit.document', 'prompt_toolkit.auto_suggest', 'prompt_toolkit.data_structures', 'prompt_toolkit.styles.base', 'prompt_toolkit.styles.named_colors', 'prompt_toolkit.styles.style', 'prompt_toolkit.styles.defaults', 'prompt_toolkit.styles.pygments', 'colorsys', 'prompt_toolkit.styles.style_transformation', 'prompt_toolkit.styles', 'prompt_toolkit.output.color_depth', 'prompt_toolkit.output.base', 'prompt_toolkit.output.defaults', 'prompt_toolkit.output', 'prompt_toolkit.output.vt100', 'prompt_toolkit.mouse_events', 'prompt_toolkit.formatted_text.base', 'prompt_toolkit.formatted_text.ansi', 'xml', 'xml.dom.domreg', 'xml.dom', 'xml.dom.minicompat', 'xml.dom.NodeFilter', 'xml.dom.xmlbuilder', 'xml.dom.minidom', 'prompt_toolkit.formatted_text.html', 'prompt_toolkit.formatted_text.pygments', 'prompt_toolkit.formatted_text.utils', 'prompt_toolkit.formatted_text', 'prompt_toolkit.completion.base', 'prompt_toolkit.completion.deduplicate', 'prompt_toolkit.completion.filesystem', 'prompt_toolkit.completion.word_completer', 'prompt_toolkit.completion.fuzzy_completer', 'prompt_toolkit.completion.nested', 'prompt_toolkit.completion', 'prompt_toolkit.history', 'prompt_toolkit.keys', 'prompt_toolkit.key_binding.key_bindings', 'prompt_toolkit.key_binding.key_processor', 'prompt_toolkit.key_binding', 'prompt_toolkit.key_binding.vi_state', 'prompt_toolkit.search', 'prompt_toolkit.validation', 'prompt_toolkit.buffer', 'prompt_toolkit.input.base', 'prompt_toolkit.input.defaults', 'prompt_toolkit.input', 'prompt_toolkit.input.typeahead', 'prompt_toolkit.key_binding.bindings', 'prompt_toolkit.key_binding.bindings.scroll', 'prompt_toolkit.key_binding.bindings.page_navigation', 'prompt_toolkit.lexers.base', 'prompt_toolkit.lexers.pygments', 'prompt_toolkit.lexers', 'prompt_toolkit.layout.utils', 'prompt_toolkit.layout.processors', 'prompt_toolkit.layout.controls', 'prompt_toolkit.layout.dimension', 'prompt_toolkit.layout.margins', 'prompt_toolkit.layout.mouse_handlers', 'prompt_toolkit.layout.screen', 'prompt_toolkit.layout.containers', 'prompt_toolkit.layout.layout', 'prompt_toolkit.layout.menus', 'prompt_toolkit.layout.scrollable_pane', 'prompt_toolkit.layout', 'prompt_toolkit.key_binding.bindings.completion', 'prompt_toolkit.key_binding.bindings.named_commands', 'prompt_toolkit.key_binding.bindings.basic', 'prompt_toolkit.key_binding.bindings.cpr', 'prompt_toolkit.key_binding.bindings.emacs', 'prompt_toolkit.key_binding.bindings.mouse', 'prompt_toolkit.input.ansi_escape_sequences', 'prompt_toolkit.input.vt100_parser', 'prompt_toolkit.key_binding.digraphs', 'prompt_toolkit.key_binding.bindings.vi', 'prompt_toolkit.key_binding.defaults', 'prompt_toolkit.key_binding.emacs_state', 'prompt_toolkit.layout.dummy', 'prompt_toolkit.renderer', 'prompt_toolkit.application.application', 'prompt_toolkit.application.dummy', 'prompt_toolkit.application', 'prompt_toolkit.key_binding.bindings.focus', 'prompt_toolkit.widgets.toolbars', 'prompt_toolkit.widgets.base', 'prompt_toolkit.widgets.dialogs', 'prompt_toolkit.widgets.menus', 'prompt_toolkit.widgets', 'prompt_toolkit.shortcuts.dialogs', 'prompt_toolkit.shortcuts.progress_bar.formatters', 'prompt_toolkit.shortcuts.progress_bar.base', 'prompt_toolkit.shortcuts.progress_bar', 'prompt_toolkit.key_binding.bindings.auto_suggest', 'prompt_toolkit.key_binding.bindings.open_in_editor', 'prompt_toolkit.shortcuts.prompt', 'prompt_toolkit.shortcuts.utils', 'prompt_toolkit.shortcuts', 'prompt_toolkit', 'prompt_toolkit.patch_stdout', 'unicodedata', 'IPython.core.latex_symbols', 'IPython.utils.generics', 'parso.utils', 'parso.tree', 'parso.python', 'parso.python.token', 'parso.python.tokenize', 'parso.pgen2.grammar_parser', 'parso.pgen2.generator', 'parso.pgen2', 'parso.parser', 'parso._compatibility', 'difflib', 'parso.python.prefix', 'parso.python.tree', 'parso.python.parser', 'parso.python.diff', 'gc', 'parso.cache', 'parso.normalizer', 'parso.python.errors', 'parso.python.pep8', 'parso.file_io', 'parso.grammar', 'parso', 'jedi.parser_utils', 'jedi.debug', 'jedi.settings', 'jedi.cache', 'jedi.file_io', 'jedi.inference.cache', 'jedi.inference.helpers', 'jedi.inference.utils', 'jedi.inference.base_value', 'jedi.inference.sys_path', 'jedi.inference.recursion', 'jedi.inference.flow_analysis', 'jedi.common', 'jedi.inference.lazy_value', 'jedi.inference.docstrings', 'jedi.plugins', 'jedi.inference.names', 'jedi.inference.filters', 'jedi.inference.compiled.getattr_static', 'jedi.inference.compiled.access', 'jedi.inference.signature', 'jedi.inference.context', 'jedi.inference.compiled.value', 'jedi.inference.compiled', 'jedi.inference.analysis', 'jedi.inference.gradual', 'jedi.inference.value.module', 'jedi.inference.value.dynamic_arrays', 'jedi.inference.value.iterable', 'jedi.inference.arguments', 'jedi.inference.parser_cache', 'jedi.inference.gradual.generics', 'jedi.inference.value.function', 'jedi.inference.value.klass', 'jedi.inference.value.instance', 'jedi.inference.value', 'jedi.inference.gradual.base', 'jedi.inference.gradual.type_var', 'jedi.inference.gradual.typing', 'jedi.inference.gradual.stub_value', 'jedi.inference.gradual.typeshed', 'jedi._compatibility', 'zipfile', 'jedi.inference.compiled.subprocess.functions', 'jedi.api.exceptions', 'jedi.inference.compiled.subprocess', 'jedi.inference.imports', 'jedi.inference.param', 'jedi.inference.gradual.annotation', 'jedi.inference.value.decorator', 'jedi.inference.syntax_tree', 'jedi.inference', 'jedi.inference.gradual.conversion', 'jedi.inference.compiled.mixed', 'pydoc_data', 'pydoc_data.topics', 'jedi.api.keywords', 'jedi.api.completion_cache', 'jedi.api.helpers', 'jedi.api.classes', 'jedi.api.interpreter', 'jedi.api.strings', 'jedi.api.file_name', 'jedi.inference.docstring_utils', 'jedi.api.completion', 'filecmp', 'jedi.api.environment', 'jedi.inference.references', 'jedi.api.project', 'jedi.api.errors', 'jedi.api.refactoring', 'jedi.api.refactoring.extract', 'jedi.inference.gradual.utils', 'jedi.api', 'jedi.plugins.stdlib', 'jedi.plugins.flask', 'jedi.plugins.pytest', 'jedi.plugins.django', 'jedi.plugins.registry', 'jedi', 'IPython.core.completer', 'IPython.terminal.ptutils', 'IPython.lib.clipboard', 'IPython.terminal.shortcuts', 'concurrent.futures.thread', 'IPython.terminal.debugger', 'IPython.terminal.magics', 'IPython.terminal.pt_inputhooks', 'IPython.terminal.prompts', 'IPython.terminal.interactiveshell', 'IPython.core.magics.auto', 'IPython.core.magics.basic', 'email', 'http', 'email.errors', 'email.quoprimime', 'email.base64mime', 'quopri', 'email.encoders', 'email.charset', 'email.header', 'calendar', 'email._parseaddr', 'email.utils', 'email._policybase', 'email.feedparser', 'email.parser', 'uu', 'email._encoded_words', 'email.iterators', 'email.message', 'http.client', 'urllib.response', 'urllib.error', 'nturl2path', 'urllib.request', 'IPython.utils.contexts', 'IPython.core.magics.code', 'IPython.core.magics.config', 'IPython.core.magics.display', '_lsprof', 'profile', 'cProfile', 'dataclasses', 'pstats', 'timeit', 'IPython.utils.module_paths', 'IPython.utils.timing', 'IPython.core.magics.execution', 'IPython.core.magics.extension', 'IPython.core.magics.history', 'IPython.core.magics.logging', 'IPython.core.magics.namespace', 'IPython.core.magics.osm', 'IPython.core.magics.packaging', 'IPython.core.pylabtools', 'IPython.core.magics.pylab', 'IPython.core.magics.script', 'IPython.core.magics', 'IPython.core.shellapp', 'IPython.extensions', 'IPython.extensions.storemagic', 'IPython.terminal.ipapp', 'IPython.terminal.embed', 'IPython.utils.frame', 'IPython', 'imp', 'hmac', 'dateutil._version', 'dateutil', 'dateutil._common', 'dateutil.relativedelta', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.win', 'dateutil.tz.tz', 'dateutil.tz', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', '_strptime', 'jupyter_client.jsonutil', 'jupyter_client.adapter', 'jupyter_client.session', 'ipykernel.iostream', 'ipykernel.control', 'ipykernel.heartbeat', 'IPython.utils.tokenutil', 'psutil._common', 'psutil._compat', 'psutil._psutil_windows', 'psutil._pswindows', 'psutil', 'tornado.locks', 'tornado.queues', 'ipykernel.jsonutil', 'ipykernel.kernelbase', 'ipykernel.comm.comm', 'ipykernel.comm.manager', 'ipykernel.comm', 'IPython.core.payloadpage', 'ipykernel.displayhook', 'ipykernel.zmqshell', 'setuptools._distutils', 'distutils.debug', 'distutils.errors', 'distutils.fancy_getopt', 'distutils.dep_util', 'distutils.log', 'distutils.spawn', 'distutils.py35compat', 'distutils.util', 'distutils.dist', 'distutils.dir_util', 'distutils.file_util', 'distutils.archive_util', 'distutils.cmd', 'configparser', 'distutils.config', 'distutils.extension', 'distutils.core', '_distutils_hack.override', 'setuptools._deprecation_warning', 'xml.parsers', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'xml.parsers.expat', 'plistlib', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources._vendor.jaraco', 'pkg_resources.extern.jaraco', 'importlib._common', 'importlib.resources', 'pkg_resources._vendor.more_itertools.recipes', 'pkg_resources._vendor.more_itertools.more', 'pkg_resources._vendor.more_itertools', 'pkg_resources.extern.more_itertools', 'pkg_resources.extern.jaraco.functools', 'pkg_resources.extern.jaraco.context', 'pkg_resources.extern.jaraco.text', 'win32api', '_win32sysloader', 'pywintypes', 'pythoncom', 'win32com.gen_py', 'win32com', 'win32com.shell', 'pkg_resources._vendor.appdirs', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources._vendor.packaging', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.version', 'pkg_resources._vendor.packaging._manylinux', 'pkg_resources._vendor.packaging._musllinux', 'pkg_resources.extern.packaging.tags', 'pkg_resources.extern.packaging.utils', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources._vendor.pyparsing', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.packaging.markers', 'pkg_resources.extern.packaging.requirements', 'pkg_resources', 'setuptools.version', 'distutils.filelist', 'setuptools.monkey', 'setuptools.extension', 'distutils.command', 'setuptools.extern', 'setuptools._vendor', 'setuptools._vendor.packaging.__about__', 'setuptools._vendor.packaging', 'setuptools.extern.packaging', 'setuptools._vendor.ordered_set', 'setuptools.extern.ordered_set', 'setuptools._vendor.more_itertools.recipes', 'setuptools._vendor.more_itertools.more', 'setuptools._vendor.more_itertools', 'setuptools.extern.more_itertools', 'setuptools._vendor.pyparsing', 'setuptools.extern.pyparsing', 'setuptools._vendor.packaging._manylinux', 'setuptools._vendor.packaging._musllinux', 'setuptools.extern.packaging.tags', 'setuptools.extern.packaging._structures', 'setuptools.extern.packaging.version', 'setuptools.extern.packaging.utils', 'setuptools.extern.packaging.specifiers', 'setuptools.extern.packaging.markers', 'setuptools.extern.packaging.requirements', 'setuptools._vendor.jaraco', 'setuptools.extern.jaraco', 'setuptools.extern.jaraco.context', 'setuptools.extern.jaraco.functools', '_csv', 'csv', 'setuptools._vendor.zipp', 'setuptools._vendor.importlib_metadata._functools', 'setuptools._vendor.importlib_metadata._text', 'setuptools._vendor.importlib_metadata._adapters', 'setuptools._vendor.importlib_metadata._compat', 'setuptools._vendor.importlib_metadata._meta', 'setuptools._vendor.importlib_metadata._collections', 'setuptools._vendor.importlib_metadata._itertools', 'setuptools._vendor.importlib_metadata', 'setuptools.extern.importlib_metadata', 'setuptools._vendor.nspektr._compat', 'setuptools._vendor.nspektr', 'setuptools.extern.nspektr', 'zipp', 'importlib_metadata._functools', 'importlib_metadata._text', 'importlib_metadata._adapters', 'importlib_metadata._compat', 'importlib_metadata._meta', 'importlib_metadata._collections', 'importlib_metadata._itertools', 'importlib_metadata', 'setuptools._importlib', 'distutils.command.bdist', 'setuptools.command', 'setuptools.windows_support', 'setuptools.config.expand', 'setuptools.config.setupcfg', 'setuptools.config', 'setuptools.errors', 'email._header_value_parser', 'email.headerregistry', 'setuptools.config._apply_pyprojecttoml', 'setuptools.config.pyprojecttoml', 'setuptools.discovery', 'setuptools.extern.jaraco.text', 'setuptools._reqs', 'setuptools._itertools', 'setuptools._entry_points', 'setuptools.dist', 'setuptools.py34compat', 'setuptools._imp', 'setuptools.depends', 'setuptools.logging', 'distutils.ccompiler', 'distutils.msvc9compiler', 'setuptools.msvc', 'unittest.util', 'unittest.result', 'unittest.case', 'unittest.suite', 'unittest.loader', 'unittest.signals', 'unittest.runner', 'unittest.main', 'unittest', 'unittest.mock', 'distutils._msvccompiler', 'setuptools', 'distutils', 'distutils.version', 'ipykernel.eventloops', 'ipykernel.compiler', 'debugpy._version', 'debugpy.common', 'debugpy.common.json', 'debugpy.common.fmt', 'debugpy.common.compat', 'debugpy', 'debugpy._vendored._util', 'debugpy._vendored', '_pydevd_bundle', 'encodings.ascii', 'stringprep', 'encodings.idna', '_pydevd_bundle.pydevd_vm_type', '_pydev_imps', 'xmlrpc', 'gzip', 'xmlrpc.client', 'socketserver', 'http.server', 'xmlrpc.server', '_pydev_imps._pydev_saved_modules', '_pydevd_bundle.pydevd_constants', '_pydev_bundle', '_pydev_runfiles', '_pydevd_frame_eval', 'pydev_ipython', 'pydevd_concurrency_analyser', 'pydevd_plugins', '_pydev_bundle.pydev_log', '_pydev_bundle._pydev_filesystem_encoding', '_pydevd_bundle.pydevd_comm_constants', 'pydevd_file_utils', '_pydev_imps._pydev_execfile', '_pydevd_bundle.pydevd_exec2', '_pydev_bundle.pydev_imports', '_pydev_bundle.pydev_is_thread_alive', '_pydev_bundle.pydev_override', 'pydevd_plugins.extensions', '_pydevd_bundle.pydevd_extension_utils', '_pydevd_bundle.pydevd_frame_utils', '_pydevd_bundle.pydevd_filtering', '_pydevd_bundle.pydevd_io', '_pydevd_bundle.pydevd_utils', '_pydev_bundle._pydev_tipper_common', '_pydev_bundle._pydev_imports_tipper', '_pydev_bundle._pydev_calltip_util', '_pydevd_bundle.pydevd_safe_repr', '_pydevd_bundle.pydevd_resolver', '_pydevd_bundle.pydevd_extension_api', '_pydevd_bundle.pydevd_xml', '_pydevd_bundle.pydevd_dont_trace', '_pydevd_frame_eval.vendored', '_pydevd_frame_eval.vendored.bytecode.flags', '_pydevd_frame_eval.vendored.bytecode.instr', '_pydevd_frame_eval.vendored.bytecode.bytecode', '_pydevd_frame_eval.vendored.bytecode.concrete', '_pydevd_frame_eval.vendored.bytecode.cfg', '_pydevd_frame_eval.vendored.bytecode', '_pydevd_bundle.pydevd_bytecode_utils', '_pydevd_bundle.pydevd_cython', '_pydevd_bundle.pydevd_cython_wrapper', '_pydevd_bundle.pydevd_additional_thread_info', '_pydevd_bundle.pydevd_thread_lifecycle', '_pydevd_bundle.pydevd_save_locals', '_pydevd_bundle.pydevd_defaults', '_pydev_bundle.pydev_monkey', 'pydevd_tracing', '_pydevd_bundle.pydevd_daemon_thread', '_pydevd_bundle.pydevd_timeout', '_pydevd_bundle.pydevd_vars', '_pydev_bundle.pydev_console_utils', '_pydevd_bundle.pydevd_import_class', '_pydevd_bundle.pydevd_breakpoints', '_pydevd_bundle.pydevd_custom_frames', '_pydevd_bundle.pydevd_dont_trace_files', '_pydevd_bundle.pydevd_net_command', '_pydev_bundle.pydev_umd', 'pydevconsole', '_pydev_bundle._pydev_completer', '_pydevd_bundle.pydevd_net_command_factory_xml', '_pydevd_bundle.pydevd_frame', '_pydevd_bundle.pydevd_additional_thread_info_regular', '_pydevd_bundle.pydevd_trace_dispatch', '_pydevd_frame_eval.pydevd_frame_eval_main', '_pydevd_bundle.pydevd_source_mapping', 'pydevd_concurrency_analyser.pydevd_thread_wrappers', 'pydevd_concurrency_analyser.pydevd_concurrency_logger', '_pydevd_bundle._debug_adapter', '_pydevd_bundle._debug_adapter.pydevd_schema_log', '_pydevd_bundle._debug_adapter.pydevd_base_schema', '_pydevd_bundle._debug_adapter.pydevd_schema', '_pydevd_bundle.pydevd_reload', '_pydev_bundle.fsnotify', '_pydevd_bundle.pydevd_console', '_pydevd_bundle.pydevd_comm', '_pydevd_bundle.pydevd_net_command_factory_json', '_pydevd_bundle.pydevd_collect_bytecode_info', '_pydevd_bundle.pydevd_api', '_pydevd_bundle.pydevd_json_debug_options', '_pydevd_bundle.pydevd_process_net_command_json', '_pydevd_bundle.pydevd_traceproperty', '_pydevd_bundle.pydevd_process_net_command', '_pydevd_bundle.pydevd_suspended_frames', '_pydevd_bundle.pydevd_trace_api', 'pydevd_plugins.django_debug', 'pydevd_plugins.jinja2_debug', '_pydevd_bundle.pydevd_plugin_utils', 'pydevd_plugins.extensions.types', 'pydevd_plugins.extensions.types.pydevd_helpers', 'pydevd_plugins.extensions.types.pydevd_plugin_numpy_types', 'pydevd_plugins.extensions.types.pydevd_plugins_django_form_str', 'pydevd', 'debugpy._vendored.force_pydevd', 'debugpy.server', 'debugpy.adapter', 'debugpy.common.timestamp', 'debugpy.common.util', 'debugpy.common.log', 'debugpy.common.sockets', 'debugpy.server.api', 'ipykernel.debugger', 'ipykernel.ipkernel', 'ipykernel.parentpoller', 'ipykernel.kernelapp', 'win32security', 'ntsecuritycon', 'faulthandler', 'IPython.core.completerlib', 'logging.config', 'pythonjsonlogger', 'pythonjsonlogger.jsonlogger', 'daiquiri.types', 'daiquiri.formatter', 'daiquiri.handlers', 'daiquiri.output', 'daiquiri', 'jupyter_require.__about__', 'csscompressor', 'jupyter_require.core', 'jupyter_require.notebook', 'jupyter_require', 'jupyter_nbutils.__about__', 'jupyter_nbutils.config', 'jupyter_nbutils.utils', 'jupyter_nbutils', 'jupyter_require.magic', 'numpy._globals', 'numpy.__config__', 'numpy._distributor_init', 'numpy._version', 'numpy.version', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core._asarray', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core._machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.stride_tricks', 'numpy.lib.twodim_base', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', '_cython_0_29_30', 'numpy.random._common', 'secrets', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'pytz', 'pandas._typing', '_cython_0_29_28', 'pandas._libs.tslibs.dtypes', 'pandas._libs.tslibs.base', 'pandas._libs.tslibs.np_datetime', 'pandas._libs.tslibs.nattype', 'pandas._libs.tslibs.timezones', 'pandas._libs.tslibs.ccalendar', 'pandas._libs.tslibs.tzconversion', 'pandas._config.config', 'pandas._config.dates', 'pandas._config.display', 'pandas._config', 'pandas._config.localization', 'pandas._libs.tslibs.strptime', 'pandas._libs.tslibs.fields', 'pandas._libs.tslibs.timedeltas', 'pandas._libs.tslibs.timestamps', 'dateutil.easter', 'pandas._libs.properties', 'pandas._libs.tslibs.offsets', 'pandas._libs.tslibs.parsing', 'pandas._libs.tslibs.conversion', 'pandas._libs.tslibs.period', 'pandas._libs.tslibs.vectorized', 'pandas._libs.tslibs', 'pandas._libs.ops_dispatch', 'pandas._libs.missing', 'pandas._libs.hashtable', 'pandas._libs.algos', 'pandas._libs.interval', 'pandas._libs', 'pandas.util._decorators', 'pandas.core', 'pandas.core.util', 'pandas._libs.tslib', 'pandas._libs.lib', 'pandas._libs.hashing', 'pandas.core.dtypes', 'pandas.util._exceptions', 'pandas.errors', 'pandas.core.dtypes.generic', 'pandas.core.dtypes.base', 'pandas.core.dtypes.inference', 'pandas.core.dtypes.dtypes', 'pandas.core.dtypes.common', 'pandas.core.util.hashing', 'pandas.util', 'pandas.util.version', 'pandas.compat.numpy', 'pandas.compat.pyarrow', 'pandas.compat', 'pandas.core.config_init', 'pandas.core.dtypes.missing', 'pandas.util._validators', 'pandas.core.dtypes.cast', 'pandas.core.dtypes.concat', 'pandas.core.array_algos', 'pandas.core.common', 'pandas.core.construction', 'pandas.core.array_algos.take', 'pandas.core.indexers.utils', 'pandas.core.indexers', 'pandas.core.algorithms', 'pandas.compat.numpy.function', 'pandas.core.roperator', 'pandas._libs.ops', 'pandas.core.computation', 'pandas.compat._optional', 'numexpr.interpreter', 'packaging.__about__', 'packaging', 'packaging._structures', 'packaging.version', 'numexpr.expressions', 'numexpr.utils', 'numexpr.necompiler', 'numexpr.version', 'numexpr', 'pandas.core.computation.check', 'pandas.core.computation.expressions', 'pandas.core.ops.missing', 'pandas.core.ops.dispatch', 'pandas.core.ops.invalid', 'pandas.core.ops.array_ops', 'pandas.core.ops.common', 'pandas.core.ops.docstrings', 'pandas.core.ops.mask_ops', 'pandas.core.ops.methods', 'pandas.core.ops', 'pandas.core.arraylike', 'pandas.core.missing', 'pandas.core.array_algos.quantile', 'pandas.core.sorting', 'pandas.core.arrays.base', 'bottleneck.benchmark', 'bottleneck.benchmark.autotimeit', 'bottleneck.benchmark.bench', 'bottleneck.benchmark.bench_detailed', 'bottleneck.tests', 'bottleneck.tests.util', 'bottleneck.slow.reduce', 'bottleneck.slow.nonreduce', 'bottleneck.slow.nonreduce_axis', 'bottleneck.slow.move', 'bottleneck.slow', 'bottleneck._pytesttester', 'bottleneck.move', 'bottleneck.nonreduce', 'bottleneck.nonreduce_axis', 'bottleneck.reduce', 'bottleneck._version', 'bottleneck', 'pandas.core.nanops', 'pandas.core.array_algos.masked_reductions', 'pandas.core.arrays.masked', 'pandas.core.arrays.boolean', 'pandas._libs.arrays', 'pandas.core.accessor', 'pandas.core.array_algos.transforms', 'pandas.core.arrays._mixins', 'pandas.core.base', 'pandas.core.strings.accessor', 'pandas.core.strings.base', 'pandas.core.strings', 'pandas.core.strings.object_array', 'pandas.io', 'pandas.io.formats', 'pandas.io.formats.console', 'pandas.core.arrays.categorical', 'pandas.tseries', 'pandas.tseries.frequencies', 'pandas.core.arrays.datetimelike', 'pandas.core.arrays._ranges', 'pandas.core.arrays.numeric', 'pandas.core.tools', 'pandas.core.tools.numeric', 'pandas.core.arrays.integer', 'pandas.tseries.offsets', 'pandas.core.arrays.datetimes', 'pandas.core.arrays.floating', 'pandas.core.indexes', 'pandas._libs.index', 'pandas._libs.join', 'pandas.core.array_algos.putmask', 'pandas._libs.sparse', 'pandas.core.arrays.sparse.dtype', 'pandas.io.formats.printing', 'pandas.core.arrays.sparse.array', 'pandas.core.arrays.sparse.accessor', 'pandas.core.arrays.sparse', 'pandas.core.indexes.frozen', 'pandas.core.indexes.base', 'pandas.core.arrays.interval', 'pandas.core.arrays.numpy_', 'pandas.core.arrays.period', 'pandas.core.arrays.string_', 'pandas.core.arrays.string_arrow', 'pandas.core.arrays.timedeltas', 'pandas.core.arrays', 'pandas.core.flags', 'pandas._libs.reduction', 'pandas.core.apply', 'pandas._libs.indexing', 'pandas.core.indexes.extension', 'pandas.core.indexes.category', 'pandas.core.indexes.numeric', 'pandas.core.indexes.range', 'pandas.core.tools.timedeltas', 'pandas.core.indexes.datetimelike', 'pandas.core.tools.times', 'pandas.core.indexes.datetimes', 'pandas.core.indexes.multi', 'pandas.core.indexes.timedeltas', 'pandas.core.indexes.interval', 'pandas.core.indexes.period', 'pandas.core.indexes.api', 'pandas.core.indexing', 'pandas.core.array_algos.replace', 'pandas.core.reshape', 'pandas._libs.internals', 'pandas._libs.writers', 'pandas.core.internals.blocks', 'pandas.core.internals.api', 'pandas.core.internals.base', 'pandas.core.internals.array_manager', 'pandas.core.internals.ops', 'pandas.core.internals.managers', 'pandas.core.internals.concat', 'pandas.core.internals', 'pandas.core.reshape.concat', 'mmap', 'pandas.core.shared_docs', 'pandas.io.common', 'pandas.io.formats.format', 'pandas.core.describe', 'pandas.core.internals.construction', 'pandas.core.sample', 'pandas._libs.window', 'pandas._libs.window.aggregations', 'pandas._libs.window.indexers', 'pandas.core.indexers.objects', 'pandas.core.util.numba_', 'pandas.core.window.common', 'pandas.core.window.doc', 'pandas.core.window.numba_', 'pandas.core.window.online', 'pandas.core._numba', 'pandas.core._numba.executor', 'pandas.core.window.rolling', 'pandas.core.window.ewm', 'pandas.core.window.expanding', 'pandas.core.window', 'pandas.core.generic', 'pandas.core.reshape.util', 'pandas.core.reshape.melt', 'pandas._libs.reshape', 'pandas.core.indexes.accessors', 'pandas.arrays', 'pandas.core.tools.datetimes', 'pandas.io.formats.info', 'pandas.plotting._core', 'pandas.plotting._misc', 'pandas.plotting', 'pandas.core.series', 'pandas.core.frame', 'pandas.core.groupby.base', 'pandas._libs.groupby', 'pandas.core.groupby.numba_', 'pandas.core.groupby.categorical', 'pandas.core.groupby.grouper', 'pandas.core.groupby.ops', 'pandas.core.groupby.indexing', 'pandas.core.groupby.groupby', 'pandas.core.groupby.generic', 'pandas.core.groupby', 'pandas.core.api', 'pandas.tseries.api', 'pandas.core.computation.common', 'pandas.core.computation.align', 'pandas.compat.chainmap', 'pandas.core.computation.scope', 'pandas.core.computation.ops', 'pandas.core.computation.parsing', 'pandas.core.computation.expr', 'pandas.core.computation.engines', 'pandas.core.computation.eval', 'pandas.core.computation.api', 'pandas.core.reshape.merge', 'pandas.core.reshape.pivot', 'pandas.core.reshape.reshape', 'pandas.core.reshape.tile', 'pandas.core.reshape.api', 'pandas.api.extensions', 'pandas.api.indexers', 'pandas.core.dtypes.api', 'pandas.api.types', 'pandas.api', 'pandas._testing._random', 'pandas._testing.contexts', 'pandas._testing._io', 'pandas._testing._warnings', 'cmath', 'pandas._libs.testing', 'pandas._testing.asserters', 'pandas._testing.compat', 'pandas._testing', 'pandas.testing', 'pandas.util._print_versions', 'pandas.io.clipboards', 'pandas._libs.parsers', 'pandas.io.excel._util', 'pandas.io.date_converters', 'pandas.io.parsers.base_parser', 'pandas.io.parsers.arrow_parser_wrapper', 'pandas.io.parsers.c_parser_wrapper', 'pandas.io.parsers.python_parser', 'pandas.io.parsers.readers', 'pandas.io.parsers', 'pandas.io.excel._odfreader', 'pandas.io.excel._openpyxl', 'pandas.io.excel._pyxlsb', 'pandas.io.excel._xlrd', 'pandas.io.excel._base', 'pandas._libs.json', 'pandas.io.formats._color_data', 'pandas.io.formats.css', 'pandas.io.formats.excel', 'pandas.io.excel._odswriter', 'pandas.io.excel._xlsxwriter', 'pandas.io.excel._xlwt', 'pandas.io.excel', 'pandas.io.feather_format', 'pandas.io.gbq', 'pandas.io.html', 'pandas.io.json._normalize', 'pandas.io.json._table_schema', 'pandas.io.json._json', 'pandas.io.json', 'pandas.io.orc', 'pandas.io.parquet', 'pandas.compat.pickle_compat', 'pandas.io.pickle', 'pandas.core.computation.pytables', 'pandas.io.pytables', 'pandas.io.sas.sasreader', 'pandas.io.sas', 'pandas.io.spss', 'pandas.io.sql', 'pandas.io.stata', 'pandas.io.xml', 'pandas.io.api', 'pandas.util._tester', 'pandas._version', 'pandas', 'summarytools', 'summarytools.htmlwidgets', 'summarytools.summarytools', 'matplotlib', 'matplotlib._api.deprecation', 'matplotlib._api', 'matplotlib._version', 'matplotlib._c_internal_utils', 'matplotlib.cbook', 'matplotlib.docstring', 'PIL._version', 'PIL', 'defusedxml.common', 'defusedxml', 'xml.etree', 'xml.etree.ElementPath', '_elementtree', 'xml.etree.ElementTree', 'defusedxml.ElementTree', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._util', 'PIL._imaging', 'cffi.lock', 'cffi.error', 'cffi.model', 'cffi.api', 'cffi', 'PIL.Image', 'PIL.ImageChops', 'PIL.ImageFile', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'PIL.ImagePalette', 'PIL.ImageSequence', 'PIL.PngImagePlugin', 'matplotlib._path', 'matplotlib.bezier', 'matplotlib.path', 'matplotlib.transforms', 'matplotlib.ticker', 'matplotlib.scale', 'matplotlib._color_data', 'matplotlib.colors', 'pyparsing.util', 'pyparsing.unicode', 'pyparsing.exceptions', 'pyparsing.actions', 'pyparsing.results', 'pyparsing.core', 'pyparsing.helpers', 'pyparsing.testing', 'pyparsing.common', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib._enums', 'cycler', 'matplotlib.rcsetup', 'matplotlib.ft2font', 'kiwisolver']
2023-04-20 17:29:26,449 [18564] DEBUG    matplotlib:275: [JupyterRequire] CACHEDIR=C:\Users\adity\.matplotlib
2023-04-20 17:29:26,454 [18564] DEBUG    matplotlib.font_manager:1439: [JupyterRequire] Using fontManager instance from C:\Users\adity\.matplotlib\fontlist-v330.json
2023-04-20 17:29:27,123 [18564] DEBUG    matplotlib.pyplot:280: [JupyterRequire] Loaded backend module://matplotlib_inline.backend_inline version unknown.
2023-04-20 17:29:27,127 [18564] DEBUG    matplotlib.pyplot:280: [JupyterRequire] Loaded backend module://matplotlib_inline.backend_inline version unknown.
2023-04-20 17:29:45,675 [18564] DEBUG    matplotlib.font_manager:1329: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2023-04-20 17:29:45,675 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 17:29:45,676 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 17:29:45,676 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,676 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2023-04-20 17:29:45,678 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2023-04-20 17:29:45,678 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 17:29:45,678 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 17:29:45,678 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 17:29:45,679 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,679 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 17:29:45,679 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,680 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 17:29:45,680 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,680 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,680 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,681 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 17:29:45,681 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 17:29:45,681 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,682 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,682 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2023-04-20 17:29:45,683 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,683 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,683 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 17:29:45,683 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 17:29:45,685 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 17:29:45,685 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,685 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,685 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 17:29:45,686 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 17:29:45,686 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,686 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,686 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,688 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 17:29:45,688 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,689 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 17:29:45,689 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,690 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,691 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2023-04-20 17:29:45,691 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLSNECB.TTF', name='Gill Sans MT Ext Condensed Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-20 17:29:45,692 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanz.ttf', name='Constantia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 17:29:45,692 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LEELAWAD.TTF', name='Leelawadee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,692 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\monbaiti.ttf', name='Mongolian Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,692 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-MEDIUM.TTF', name='Dubai', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-04-20 17:29:45,693 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-04-20 17:29:45,693 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FTLTLT.TTF', name='Footlight MT Light', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-20 17:29:45,694 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibril.ttf', name='Calibri', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-20 17:29:45,694 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSI.TTF', name='Goudy Old Style', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 17:29:45,694 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisbi.ttf', name='Segoe UI', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-20 17:29:45,694 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCCB___.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-04-20 17:29:45,696 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXD.TTF', name='Lucida Fax', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-20 17:29:45,696 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2023-04-20 17:29:45,696 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BSSYM7.TTF', name='Bookshelf Symbol 7', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,697 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAMDCN.TTF', name='Franklin Gothic Medium Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-20 17:29:45,697 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framdit.ttf', name='Franklin Gothic Medium', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 17:29:45,698 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSB.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 17:29:45,698 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-LIGHT.TTF', name='Dubai', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-20 17:29:45,699 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCC____.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-20 17:29:45,699 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_B.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 17:29:45,699 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COOPBL.TTF', name='Cooper Black', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,700 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNI.TTF', name='Arial', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 7.613636363636363
2023-04-20 17:29:45,700 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\INFROMAN.TTF', name='Informal Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,700 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSB.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-20 17:29:45,700 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BERNHC.TTF', name='Bernard MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-20 17:29:45,701 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEB.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-20 17:29:45,701 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCEDSCR.TTF', name='Edwardian Script ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,702 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consola.ttf', name='Consolas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,702 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,702 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\holomdl2.ttf', name='HoloLens MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,703 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COLONNA.TTF', name='Colonna MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,703 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYR.TTF', name='Agency FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,703 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRITANIC.TTF', name='Britannic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,704 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiai.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 17:29:45,704 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 17:29:45,705 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaS.ttf', name='Nirmala UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2023-04-20 17:29:45,705 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CHILLER.TTF', name='Chiller', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,706 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,706 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAB.TTF', name='Book Antiqua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 17:29:45,706 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothM.ttc', name='Yu Gothic', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-04-20 17:29:45,707 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG2.TTF', name='Wingdings 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,707 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Nirmala.ttf', name='Nirmala UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,708 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelUIsl.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2023-04-20 17:29:45,708 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriai.ttf', name='Cambria', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 17:29:45,708 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariali.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
2023-04-20 17:29:45,709 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARA.TTF', name='Garamond', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,709 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSPCL.TTF', name='MS Reference Specialty', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,710 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-REGULAR.TTF', name='Dubai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,710 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LHANDW.TTF', name='Lucida Handwriting', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 17:29:45,710 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 17:29:45,711 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comici.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 17:29:45,711 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTAUR.TTF', name='Centaur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,712 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEBO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-20 17:29:45,712 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ONYX.TTF', name='Onyx', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,712 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrima.ttf', name='Ebrima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,713 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFI.TTF', name='Californian FB', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 17:29:45,713 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERBI___.TTF', name='Perpetua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 17:29:45,713 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbell.ttf', name='Corbel', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-20 17:29:45,714 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILI____.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 17:29:45,714 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segmdl2.ttf', name='Segoe MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,715 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-BOLD.TTF', name='Dubai', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 17:29:45,715 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FELIXTI.TTF', name='Felix Titling', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,715 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbd.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
2023-04-20 17:29:45,715 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taileb.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 17:29:45,717 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeprb.ttf', name='Segoe Print', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 17:29:45,717 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoescb.ttf', name='Segoe Script', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 17:29:45,717 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITE.TTF', name='Lucida Bright', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,717 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhbd.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 17:29:45,718 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\times.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,718 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisb.ttf', name='Segoe UI', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-20 17:29:45,718 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSDB.TTF', name='Berlin Sans FB Demi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 17:29:45,718 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbi.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
2023-04-20 17:29:45,719 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesi.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 17:29:45,719 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADM.TTF', name='Franklin Gothic Demi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,720 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERTI.TTF', name='High Tower Text', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 17:29:45,720 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF-Italic.ttf', name='Sitka', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 17:29:45,720 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsun.ttc', name='SimSun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,721 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTI.TTF', name='Calisto MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 17:29:45,721 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCMI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 17:29:45,721 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaral.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,722 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\lucon.ttf', name='Lucida Console', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,722 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_I.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 17:29:45,722 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mvboli.ttf', name='MV Boli', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,722 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiab.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 17:29:45,723 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\l_10646.ttf', name='Lucida Sans Unicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,723 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTIBD.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 17:29:45,723 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNT.TTF', name='Elephant', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,724 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASMD.TTF', name='Eras Medium ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,724 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MSUIGHUR.TTF', name='Microsoft Uighur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,724 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYB.TTF', name='Agency FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 17:29:45,725 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MSUIGHUB.TTF', name='Microsoft Uighur', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 17:29:45,725 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicbd.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 17:29:45,725 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMIT.TTF', name='Franklin Gothic Demi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 17:29:45,726 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKEB.TTF', name='Rockwell Extra Bold', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
2023-04-20 17:29:45,726 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PER_____.TTF', name='Perpetua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,726 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VINERITC.TTF', name='Viner Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,727 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\marlett.ttf', name='Marlett', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-04-20 17:29:45,727 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrili.ttf', name='Calibri', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-04-20 17:29:45,727 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICBI.TTF', name='Century Gothic', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 17:29:45,728 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ALGER.TTF', name='Algerian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,728 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOS.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,728 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelz.ttf', name='Corbel', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 17:29:45,729 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILB____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 17:29:45,729 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUABI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 17:29:45,729 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\sylfaen.ttf', name='Sylfaen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,729 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriaz.ttf', name='Cambria', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 17:29:45,730 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanaz.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
2023-04-20 17:29:45,730 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constan.ttf', name='Constantia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,731 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTILI.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-20 17:29:45,731 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCM_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,731 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhl.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2023-04-20 17:29:45,732 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOS.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-20 17:29:45,732 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HATTEN.TTF', name='Haettenschweiler', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,733 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JOKERMAN.TTF', name='Jokerman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,733 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ENGR.TTF', name='Engravers MT', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-04-20 17:29:45,733 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARAIT.TTF', name='Garamond', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 17:29:45,733 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,733 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelli.ttf', name='Corbel', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-04-20 17:29:45,734 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constani.ttf', name='Constantia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 17:29:45,734 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIST.TTF', name='Calisto MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,734 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PARCHM.TTF', name='Parchment', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,736 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\himalaya.ttf', name='Microsoft Himalaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,736 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRADHITC.TTF', name='Bradley Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,736 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\wingding.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,736 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtextb.ttf', name='Myanmar Text', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 17:29:45,737 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG3.TTF', name='Wingdings 3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,737 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGSOL.TTF', name='Niagara Solid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,737 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarali.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 17:29:45,737 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKI.TTF', name='Rockwell', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 17:29:45,738 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolab.ttf', name='Consolas', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 17:29:45,738 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXDI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-20 17:29:45,738 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BAUHS93.TTF', name='Bauhaus 93', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,738 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisli.ttf', name='Segoe UI', style='italic', variant='normal', weight=350, stretch='normal', size='scalable')) = 11.0975
2023-04-20 17:29:45,740 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELL.TTF', name='Bell MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,740 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2023-04-20 17:29:45,740 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyi.ttf', name='Microsoft Yi Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,740 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSR.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,741 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHVIT.TTF', name='Franklin Gothic Heavy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 17:29:45,741 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OLDENGL.TTF', name='Old English Text MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,741 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbel.ttf', name='Corbel', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,741 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLB.TTF', name='Bell MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 17:29:45,742 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelaUIb.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 17:29:45,742 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHV.TTF', name='Franklin Gothic Heavy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,742 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OUTLOOK.TTF', name='MS Outlook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,743 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PRISTINA.TTF', name='Pristina', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,743 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERI____.TTF', name='Perpetua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 17:29:45,743 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtext.ttf', name='Myanmar Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,743 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSAN.TTF', name='MS Reference Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,745 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERB____.TTF', name='Perpetua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 17:29:45,745 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTEXTRA.TTF', name='MT Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,745 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKB.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 17:29:45,745 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARABD.TTF', name='Garamond', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 17:29:45,746 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cour.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,746 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mingliub.ttc', name='MingLiU-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,746 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICB.TTF', name='Century Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 17:29:45,746 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspa.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,747 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VIVALDII.TTF', name='Vivaldi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 17:29:45,747 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAGE.TTF', name='Rage Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 17:29:45,747 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-20 17:29:45,747 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2023-04-20 17:29:45,748 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MATURASC.TTF', name='Matura MT Script Capitals', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,748 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comic.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,748 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbi.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 17:29:45,748 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothR.ttc', name='Yu Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,750 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palai.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 17:29:45,750 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MOD20.TTF', name='Modern No. 20', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,750 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMCN.TTF', name='Franklin Gothic Demi Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-20 17:29:45,751 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrimabd.ttf', name='Ebrima', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 17:29:45,751 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\javatext.ttf', name='Javanese Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,751 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CASTELAR.TTF', name='Castellar', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,753 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSDI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-20 17:29:45,753 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelawUI.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,753 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAX.TTF', name='Lucida Fax', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,754 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunbd.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 17:29:45,754 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF.ttf', name='Sitka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,754 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTL.TTF', name='Copperplate Gothic Light', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,755 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
2023-04-20 17:29:45,755 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeui.ttf', name='Segoe UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,755 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Gabriola.ttf', name='Gabriola', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,755 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTBI.TTF', name='Calisto MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 17:29:45,756 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicz.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 17:29:45,756 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALN.TTF', name='Arial', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 6.613636363636363
2023-04-20 17:29:45,756 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKBI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 17:29:45,756 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FREESCPT.TTF', name='Freestyle Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,757 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTURY.TTF', name='Century', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,757 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaB.ttf', name='Nirmala UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 17:29:45,757 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSB.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 17:29:45,757 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSD.TTF', name='Lucida Sans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-20 17:29:45,759 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuisl.ttf', name='Segoe UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2023-04-20 17:29:45,759 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 17:29:45,759 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 17:29:45,760 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguihis.ttf', name='Segoe UI Historic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,760 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCB____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-04-20 17:29:45,760 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambria.ttc', name='Cambria', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,760 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKBI.TTF', name='Rockwell', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 17:29:45,761 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGENG.TTF', name='Niagara Engraved', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,761 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisym.ttf', name='Segoe UI Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,761 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inkfree.ttf', name='Ink Free', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,762 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASBD.TTF', name='Eras Bold ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,762 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILC____.TTF', name='Gill Sans MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-20 17:29:45,762 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candara.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,763 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\bahnschrift.ttf', name='Bahnschrift', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,763 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BROADW.TTF', name='Broadway', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,763 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolaz.ttf', name='Consolas', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 17:29:45,763 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CBI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2023-04-20 17:29:45,765 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuii.ttf', name='Segoe UI', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 17:29:45,765 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibli.ttf', name='Segoe UI', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2023-04-20 17:29:45,765 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEDI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-20 17:29:45,765 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucit.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 17:29:45,766 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BKANT.TTF', name='Book Antiqua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,766 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothL.ttc', name='Yu Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-20 17:29:45,767 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrii.ttf', name='Calibri', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 17:29:45,767 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CURLZ___.TTF', name='Curlz MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,767 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelb.ttf', name='Corbel', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 17:29:45,767 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARLRDBD.TTF', name='Arial Rounded MT Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,769 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothB.ttc', name='Yu Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 17:29:45,769 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASDEMI.TTF', name='Eras Demi ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,770 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
2023-04-20 17:29:45,770 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANS.TTF', name='Lucida Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,770 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariblk.ttf', name='Arial', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 6.888636363636364
2023-04-20 17:29:45,771 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCKRIST.TTF', name='Kristen ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,771 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\KUNSTLER.TTF', name='Kunstler Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,771 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanb.ttf', name='Constantia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 17:29:45,772 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PAPYRUS.TTF', name='Papyrus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,772 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JUICE___.TTF', name='Juice ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,773 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguili.ttf', name='Segoe UI', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-04-20 17:29:45,773 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 17:29:45,773 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarab.ttf', name='Candara', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 17:29:45,773 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\IMPRISHA.TTF', name='Imprint MT Shadow', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,774 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailu.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,774 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbi.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 17:29:45,774 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuil.ttf', name='Segoe UI', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-20 17:29:45,775 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanai.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
2023-04-20 17:29:45,775 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoepr.ttf', name='Segoe Print', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,776 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaraz.ttf', name='Candara', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 17:29:45,776 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNB.TTF', name='Arial', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 6.8986363636363635
2023-04-20 17:29:45,776 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspab.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 17:29:45,777 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,777 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCM____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-20 17:29:45,777 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARNGTON.TTF', name='Harrington', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,778 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbd.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 17:29:45,778 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 17:29:45,778 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILSANUB.TTF', name='Gill Sans Ultra Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,779 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibri.ttf', name='Calibri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,779 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiaz.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 17:29:45,779 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegoeIcons.ttf', name='Segoe Fluent Icons', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,780 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAGNETOB.TTF', name='Magneto', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 17:29:45,780 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICI.TTF', name='Century Gothic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 17:29:45,780 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCBLKAD.TTF', name='Blackadder ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,781 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahomabd.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 17:29:45,781 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugi.ttf', name='Gadugi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,781 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LCALLIG.TTF', name='Lucida Calligraphy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 17:29:45,782 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyh.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,782 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsunb.ttf', name='SimSun-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,783 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgun.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,783 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIL_____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,783 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VLADIMIR.TTF', name='Vladimir Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,784 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,784 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msgothic.ttc', name='MS Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,784 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRSCRIPT.TTF', name='French Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,784 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILBI___.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 17:29:45,785 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASLGHT.TTF', name='Eras Light ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,785 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTB.TTF', name='Calisto MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 17:29:45,785 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunsl.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-20 17:29:45,785 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRUSHSCI.TTF', name='Brush Script MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 17:29:45,787 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SNAP____.TTF', name='Snap ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,787 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuib.ttf', name='Segoe UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 17:29:45,787 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCBI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 17:29:45,787 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailub.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 17:29:45,788 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framd.ttf', name='Franklin Gothic Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,788 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolai.ttf', name='Consolas', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 17:29:45,788 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCEB.TTF', name='Tw Cen MT Condensed Extra Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-20 17:29:45,788 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\POORICH.TTF', name='Poor Richard', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,789 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDYSTO.TTF', name='Goudy Stout', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,789 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKB.TTF', name='Rockwell', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 17:29:45,789 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PALSCRI.TTF', name='Palace Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,789 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarai.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 17:29:45,790 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\micross.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,790 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LEELAWDB.TTF', name='Leelawadee', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 17:29:45,790 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABK.TTF', name='Franklin Gothic Book', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,790 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjh.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,791 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palabi.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 17:29:45,791 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAVIE.TTF', name='Ravie', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,791 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCK.TTF', name='Rockwell', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,791 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\pala.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,792 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibriz.ttf', name='Calibri', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 17:29:45,792 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugib.ttf', name='Gadugi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 17:29:45,792 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_PSTC.TTF', name='Bodoni MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-20 17:29:45,792 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENSCBK.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,793 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanab.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
2023-04-20 17:29:45,793 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LATINWD.TTF', name='Wide Latin', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
2023-04-20 17:29:45,793 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbeli.ttf', name='Corbel', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 17:29:45,793 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIGI.TTF', name='Gigi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,793 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITED.TTF', name='Lucida Bright', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-20 17:29:45,795 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbi.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 17:29:45,795 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhl.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2023-04-20 17:29:45,795 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguiemj.ttf', name='Segoe UI Emoji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,796 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OCRAEXT.TTF', name='OCR A Extended', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
2023-04-20 17:29:45,796 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebuc.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,796 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SHOWG.TTF', name='Showcard Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,796 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BASKVILL.TTF', name='Baskerville Old Face', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,797 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriab.ttf', name='Cambria', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 17:29:45,797 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAIAN.TTF', name='Maiandra GD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,797 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCRIPTBL.TTF', name='Script MT Bold', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 17:29:45,797 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLECB.TTF', name='Gloucester MT Extra Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-20 17:29:45,798 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNTI.TTF', name='Elephant', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 17:29:45,798 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFR.TTF', name='Californian FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,798 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHIC.TTF', name='Century Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,799 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PLAYBILL.TTF', name='Playbill', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,799 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABKIT.TTF', name='Franklin Gothic Book', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 17:29:45,799 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARLOWSI.TTF', name='Harlow Solid Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 17:29:45,799 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPE.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,799 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taile.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,800 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibl.ttf', name='Segoe UI', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2023-04-20 17:29:45,800 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNBI.TTF', name='Arial', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 7.8986363636363635
2023-04-20 17:29:45,800 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuiz.ttf', name='Segoe UI', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 17:29:45,800 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSBI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-20 17:29:45,801 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palab.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 17:29:45,801 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLI.TTF', name='Bell MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 17:29:45,801 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILLUBCD.TTF', name='Gill Sans Ultra Bold Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-20 17:29:45,801 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbd.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 17:29:45,801 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhbd.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 17:29:45,803 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoesc.ttf', name='Segoe Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,803 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\couri.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 17:29:45,803 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegUIVar.ttf', name='Segoe UI Variable', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,803 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_R.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,804 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTB.TTF', name='Copperplate Gothic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,804 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 17:29:45,804 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCB_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 17:29:45,804 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TEMPSITC.TTF', name='Tempus Sans ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,804 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MISTRAL.TTF', name='Mistral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,804 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FORTE.TTF', name='Forte', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,804 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CB.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-04-20 17:29:45,804 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbd.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 17:29:45,804 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STENCIL.TTF', name='Stencil', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,804 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrib.ttf', name='Calibri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 17:29:45,804 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERT.TTF', name='High Tower Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,804 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTCORSVA.TTF', name='Monotype Corsiva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:29:45,804 [18564] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFB.TTF', name='Californian FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 17:29:45,804 [18564] DEBUG    matplotlib.font_manager:1367: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
2023-04-20 17:36:29,032 [23176] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-04-20 17:36:29,033 [23176] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-04-20 17:36:29,033 [23176] INFO     root:247: [JupyterRequire] Initializing comms.
2023-04-20 17:36:29,035 [23176] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-04-20 17:36:29,038 [23176] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-04-20 17:36:29,039 [23176] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-04-20 17:36:32,752 [23176] INFO     numexpr.utils:147: [JupyterRequire] Note: NumExpr detected 12 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
2023-04-20 17:36:32,753 [23176] INFO     numexpr.utils:159: [JupyterRequire] NumExpr defaulting to 8 threads.
2023-04-20 17:36:33,407 [23176] DEBUG    matplotlib:275: [JupyterRequire] matplotlib data path: C:\Users\adity\anaconda3\lib\site-packages\matplotlib\mpl-data
2023-04-20 17:36:33,413 [23176] DEBUG    matplotlib:275: [JupyterRequire] CONFIGDIR=C:\Users\adity\.matplotlib
2023-04-20 17:36:33,416 [23176] DEBUG    matplotlib:1445: [JupyterRequire] interactive is False
2023-04-20 17:36:33,416 [23176] DEBUG    matplotlib:1446: [JupyterRequire] platform is win32
2023-04-20 17:36:33,417 [23176] DEBUG    matplotlib:1447: [JupyterRequire] loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', '_io', 'marshal', 'nt', 'winreg', '_frozen_importlib_external', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', 'encodings.cp1252', '_signal', 'encodings.latin_1', '_abc', 'abc', 'io', '__main__', '_stat', 'stat', '_collections_abc', 'genericpath', 'ntpath', 'os.path', 'os', '_sitebuiltins', '_locale', '_bootlocale', '_distutils_hack', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib.machinery', '_heapq', 'heapq', 'itertools', 'keyword', '_operator', 'operator', 'reprlib', '_collections', 'collections', 'collections.abc', '_functools', 'functools', 'contextlib', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', 'copyreg', 're', 'typing.io', 'typing.re', 'typing', 'importlib.abc', 'importlib.util', 'google', 'google.cloud', 'google.logging', 'mpl_toolkits', 'sphinxcontrib', 'zope', 'site', '_weakrefset', 'weakref', 'pkgutil', 'runpy', 'ipykernel._version', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'errno', 'signal', 'threading', 'msvcrt', '_winapi', 'subprocess', 'jupyter_client._version', 'posixpath', 'fnmatch', 'glob', '_socket', 'math', 'select', 'selectors', 'socket', 'zlib', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', '_bisect', 'bisect', '_random', '_sha512', 'random', 'tempfile', 'getpass', 'platform', 'zmq.libzmq', 'zmq.backend.select', 'cython_runtime', 'zmq.backend.cython.constants', '_cython_0_29_24', 'zmq.backend.cython.error', 'zmq.error', 'zmq.backend.cython.message', 'zmq.backend.cython.context', 'copy', '_struct', 'struct', '_compat_pickle', '_pickle', 'pickle', 'zmq.backend.cython.socket', 'zmq.backend.cython.utils', 'zmq.backend.cython._poll', 'zmq.backend.cython._version', 'zmq.backend.cython._device', 'zmq.backend.cython._proxy_steerable', 'zmq.backend.cython', 'zmq.backend', 'zmq.utils', 'zmq.utils.constant_names', 'zmq.sugar.constants', 'atexit', 'zmq.sugar.attrsettr', 'zmq.sugar.poll', 'zmq.utils.jsonapi', 'zmq.utils.strtypes', 'zmq.sugar.socket', 'zmq.sugar.context', 'zmq.sugar.frame', 'zmq.sugar.tracker', 'zmq.sugar.version', 'zmq.sugar.stopwatch', 'zmq.sugar', 'zmq', '_ast', 'ast', '_opcode', 'opcode', 'dis', 'token', 'tokenize', 'linecache', 'inspect', 'traitlets.utils', 'traitlets.utils.getargspec', 'traitlets.utils.importstring', 'traitlets.utils.sentinel', 'traitlets.utils.bunch', 'traitlets.utils.descriptions', 'traitlets.traitlets', 'traitlets.utils.decorators', 'traitlets._version', 'traitlets', 'traceback', '_string', 'string', 'logging', 'pprint', 'gettext', 'argparse', 'traitlets.config.loader', 'textwrap', 'traitlets.utils.text', 'traitlets.config.configurable', 'traitlets.config.application', 'traitlets.config', 'jupyter_client.localinterfaces', 'jupyter_core.version', 'jupyter_core', 'urllib', 'urllib.parse', 'pathlib', 'jupyter_core.paths', 'jupyter_client.utils', 'jupyter_client.connect', 'traitlets.log', 'jupyter_client.launcher', 'concurrent', 'concurrent.futures._base', 'concurrent.futures', '_ssl', 'binascii', 'base64', 'ssl', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', '_contextvars', 'contextvars', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.threads', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'asyncio.windows_events', 'asyncio', 'jupyter_client.channelsabc', 'jupyter_client.channels', 'jupyter_client.clientabc', 'jupyter_client.client', 'jupyter_client.kernelspec', 'jupyter_client.managerabc', 'jupyter_client.manager', '_queue', 'queue', 'jupyter_client.blocking.channels', 'jupyter_client.blocking.client', 'jupyter_client.blocking', 'zmq._future', 'zmq.asyncio', 'jupyter_client.asynchronous.channels', 'jupyter_client.asynchronous.client', 'jupyter_client.asynchronous', '_uuid', 'uuid', 'jupyter_client.multikernelmanager', 'jupyter_client', 'ipykernel.connect', 'ipykernel', 'tornado', '_datetime', 'datetime', 'numbers', 'logging.handlers', 'html.entities', 'html', 'array', 'tornado.speedups', 'tornado.util', 'tornado.escape', 'colorama.ansi', '_ctypes', 'ctypes._endian', 'ctypes', 'ctypes.wintypes', 'colorama.win32', 'colorama.winterm', 'colorama.ansitowin32', 'colorama.initialise', 'colorama', 'tornado.log', 'tornado.concurrent', 'tornado.ioloop', '__future__', 'tornado.platform', 'tornado.gen', 'tornado.platform.asyncio', 'zmq.eventloop.ioloop', 'zmq.eventloop', 'zmq.eventloop.zmqstream', 'IPython.core', 'IPython.core.getipython', 'IPython.core.release', 'sysconfig', 'pydoc', 'executing.executing', 'executing.version', 'executing', 'asttokens.line_numbers', 'six', 'six.moves', 'asttokens.util', 'asttokens.mark_tokens', 'asttokens.asttokens', 'asttokens', '_decimal', 'decimal', 'fractions', 'pure_eval.utils', 'pure_eval.my_getattr_static', 'pure_eval.core', 'pure_eval.version', 'pure_eval', 'stack_data.utils', 'stack_data.core', 'stack_data.formatting', 'stack_data.version', 'stack_data', 'pygments', 'pygments.formatters._mapping', 'pygments.plugin', 'pygments.util', 'pygments.formatters', 'pygments.styles', 'pygments.formatter', 'pygments.console', 'pygments.token', 'pygments.style', 'pygments.formatters.terminal256', 'bdb', 'IPython.utils', 'IPython.utils.ipstruct', 'IPython.utils.coloransi', 'IPython.utils.colorable', 'IPython.utils.PyColorize', 'locale', 'IPython.utils.encoding', 'IPython.utils.py3compat', 'IPython.core.excolors', 'cmd', 'codeop', 'code', 'pdb', 'IPython.core.debugger', 'IPython.core.display_trap', 'shlex', 'IPython.utils._process_common', 'IPython.utils._process_win32', 'IPython.utils.process', 'IPython.utils.decorators', 'IPython.utils.path', 'IPython.utils.terminal', 'IPython.core.ultratb', 'IPython.utils._sysinfo', 'IPython.utils.sysinfo', 'IPython.core.crashhandler', 'IPython.utils.importstring', 'IPython.paths', 'IPython.core.profiledir', 'IPython.core.application', 'IPython.terminal', '_hashlib', '_blake2', 'hashlib', 'IPython.core.compilerop', 'IPython.core.error', 'IPython.utils.text', 'IPython.core.magic_arguments', 'getopt', 'IPython.core.display_functions', 'mimetypes', 'IPython.testing', 'IPython.testing.skipdoctest', 'IPython.core.display', 'IPython.lib', 'IPython.lib.display', 'IPython.display', 'IPython.utils.data', 'IPython.core.page', 'IPython.lib.pretty', 'IPython.utils.openpy', 'IPython.utils.dir2', 'IPython.utils.wildcard', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.lexers', 'pygments.filter', 'pygments.filters', 'pygments.regexopt', 'pygments.lexer', 'pygments.unistring', 'pygments.lexers.python', 'pygments.formatters.html', 'IPython.core.oinspect', 'IPython.core.inputtransformer2', 'IPython.core.magic', 'pickleshare', 'IPython.core.hooks', 'IPython.core.autocall', 'IPython.core.macro', 'IPython.core.splitinput', 'IPython.core.prefilter', 'IPython.core.alias', 'IPython.core.builtin_trap', 'IPython.core.displayhook', 'IPython.core.displaypub', 'backcall.backcall', 'backcall', 'IPython.core.events', 'IPython.core.extensions', 'decorator', 'IPython.utils.sentinel', 'IPython.core.formatters', '_sqlite3', 'sqlite3.dbapi2', 'sqlite3', 'IPython.core.history', 'IPython.core.logger', 'IPython.core.payload', 'IPython.core.usage', 'IPython.utils.capture', 'IPython.utils.io', 'IPython.utils.strdispatch', 'IPython.utils.syspathcontext', 'IPython.core.async_helpers', 'IPython.core.interactiveshell', 'prompt_toolkit.application.current', 'prompt_toolkit.eventloop.utils', 'prompt_toolkit.eventloop.async_generator', 'wcwidth.table_wide', 'wcwidth.table_zero', 'wcwidth.unicode_versions', 'wcwidth.wcwidth', 'wcwidth', 'prompt_toolkit.utils', 'prompt_toolkit.eventloop.inputhook', 'prompt_toolkit.eventloop', 'prompt_toolkit.application.run_in_terminal', 'prompt_toolkit.selection', 'prompt_toolkit.clipboard.base', 'prompt_toolkit.clipboard.in_memory', 'prompt_toolkit.clipboard', 'prompt_toolkit.cache', 'prompt_toolkit.enums', 'prompt_toolkit.filters.base', 'prompt_toolkit.filters.app', 'prompt_toolkit.filters.cli', 'prompt_toolkit.filters.utils', 'prompt_toolkit.filters', 'prompt_toolkit.document', 'prompt_toolkit.auto_suggest', 'prompt_toolkit.data_structures', 'prompt_toolkit.styles.base', 'prompt_toolkit.styles.named_colors', 'prompt_toolkit.styles.style', 'prompt_toolkit.styles.defaults', 'prompt_toolkit.styles.pygments', 'colorsys', 'prompt_toolkit.styles.style_transformation', 'prompt_toolkit.styles', 'prompt_toolkit.output.color_depth', 'prompt_toolkit.output.base', 'prompt_toolkit.output.defaults', 'prompt_toolkit.output', 'prompt_toolkit.output.vt100', 'prompt_toolkit.mouse_events', 'prompt_toolkit.formatted_text.base', 'prompt_toolkit.formatted_text.ansi', 'xml', 'xml.dom.domreg', 'xml.dom', 'xml.dom.minicompat', 'xml.dom.NodeFilter', 'xml.dom.xmlbuilder', 'xml.dom.minidom', 'prompt_toolkit.formatted_text.html', 'prompt_toolkit.formatted_text.pygments', 'prompt_toolkit.formatted_text.utils', 'prompt_toolkit.formatted_text', 'prompt_toolkit.completion.base', 'prompt_toolkit.completion.deduplicate', 'prompt_toolkit.completion.filesystem', 'prompt_toolkit.completion.word_completer', 'prompt_toolkit.completion.fuzzy_completer', 'prompt_toolkit.completion.nested', 'prompt_toolkit.completion', 'prompt_toolkit.history', 'prompt_toolkit.keys', 'prompt_toolkit.key_binding.key_bindings', 'prompt_toolkit.key_binding.key_processor', 'prompt_toolkit.key_binding', 'prompt_toolkit.key_binding.vi_state', 'prompt_toolkit.search', 'prompt_toolkit.validation', 'prompt_toolkit.buffer', 'prompt_toolkit.input.base', 'prompt_toolkit.input.defaults', 'prompt_toolkit.input', 'prompt_toolkit.input.typeahead', 'prompt_toolkit.key_binding.bindings', 'prompt_toolkit.key_binding.bindings.scroll', 'prompt_toolkit.key_binding.bindings.page_navigation', 'prompt_toolkit.lexers.base', 'prompt_toolkit.lexers.pygments', 'prompt_toolkit.lexers', 'prompt_toolkit.layout.utils', 'prompt_toolkit.layout.processors', 'prompt_toolkit.layout.controls', 'prompt_toolkit.layout.dimension', 'prompt_toolkit.layout.margins', 'prompt_toolkit.layout.mouse_handlers', 'prompt_toolkit.layout.screen', 'prompt_toolkit.layout.containers', 'prompt_toolkit.layout.layout', 'prompt_toolkit.layout.menus', 'prompt_toolkit.layout.scrollable_pane', 'prompt_toolkit.layout', 'prompt_toolkit.key_binding.bindings.completion', 'prompt_toolkit.key_binding.bindings.named_commands', 'prompt_toolkit.key_binding.bindings.basic', 'prompt_toolkit.key_binding.bindings.cpr', 'prompt_toolkit.key_binding.bindings.emacs', 'prompt_toolkit.key_binding.bindings.mouse', 'prompt_toolkit.input.ansi_escape_sequences', 'prompt_toolkit.input.vt100_parser', 'prompt_toolkit.key_binding.digraphs', 'prompt_toolkit.key_binding.bindings.vi', 'prompt_toolkit.key_binding.defaults', 'prompt_toolkit.key_binding.emacs_state', 'prompt_toolkit.layout.dummy', 'prompt_toolkit.renderer', 'prompt_toolkit.application.application', 'prompt_toolkit.application.dummy', 'prompt_toolkit.application', 'prompt_toolkit.key_binding.bindings.focus', 'prompt_toolkit.widgets.toolbars', 'prompt_toolkit.widgets.base', 'prompt_toolkit.widgets.dialogs', 'prompt_toolkit.widgets.menus', 'prompt_toolkit.widgets', 'prompt_toolkit.shortcuts.dialogs', 'prompt_toolkit.shortcuts.progress_bar.formatters', 'prompt_toolkit.shortcuts.progress_bar.base', 'prompt_toolkit.shortcuts.progress_bar', 'prompt_toolkit.key_binding.bindings.auto_suggest', 'prompt_toolkit.key_binding.bindings.open_in_editor', 'prompt_toolkit.shortcuts.prompt', 'prompt_toolkit.shortcuts.utils', 'prompt_toolkit.shortcuts', 'prompt_toolkit', 'prompt_toolkit.patch_stdout', 'unicodedata', 'IPython.core.latex_symbols', 'IPython.utils.generics', 'parso.utils', 'parso.tree', 'parso.python', 'parso.python.token', 'parso.python.tokenize', 'parso.pgen2.grammar_parser', 'parso.pgen2.generator', 'parso.pgen2', 'parso.parser', 'parso._compatibility', 'difflib', 'parso.python.prefix', 'parso.python.tree', 'parso.python.parser', 'parso.python.diff', 'gc', 'parso.cache', 'parso.normalizer', 'parso.python.errors', 'parso.python.pep8', 'parso.file_io', 'parso.grammar', 'parso', 'jedi.parser_utils', 'jedi.debug', 'jedi.settings', 'jedi.cache', 'jedi.file_io', 'jedi.inference.cache', 'jedi.inference.helpers', 'jedi.inference.utils', 'jedi.inference.base_value', 'jedi.inference.sys_path', 'jedi.inference.recursion', 'jedi.inference.flow_analysis', 'jedi.common', 'jedi.inference.lazy_value', 'jedi.inference.docstrings', 'jedi.plugins', 'jedi.inference.names', 'jedi.inference.filters', 'jedi.inference.compiled.getattr_static', 'jedi.inference.compiled.access', 'jedi.inference.signature', 'jedi.inference.context', 'jedi.inference.compiled.value', 'jedi.inference.compiled', 'jedi.inference.analysis', 'jedi.inference.gradual', 'jedi.inference.value.module', 'jedi.inference.value.dynamic_arrays', 'jedi.inference.value.iterable', 'jedi.inference.arguments', 'jedi.inference.parser_cache', 'jedi.inference.gradual.generics', 'jedi.inference.value.function', 'jedi.inference.value.klass', 'jedi.inference.value.instance', 'jedi.inference.value', 'jedi.inference.gradual.base', 'jedi.inference.gradual.type_var', 'jedi.inference.gradual.typing', 'jedi.inference.gradual.stub_value', 'jedi.inference.gradual.typeshed', 'jedi._compatibility', 'zipfile', 'jedi.inference.compiled.subprocess.functions', 'jedi.api.exceptions', 'jedi.inference.compiled.subprocess', 'jedi.inference.imports', 'jedi.inference.param', 'jedi.inference.gradual.annotation', 'jedi.inference.value.decorator', 'jedi.inference.syntax_tree', 'jedi.inference', 'jedi.inference.gradual.conversion', 'jedi.inference.compiled.mixed', 'pydoc_data', 'pydoc_data.topics', 'jedi.api.keywords', 'jedi.api.completion_cache', 'jedi.api.helpers', 'jedi.api.classes', 'jedi.api.interpreter', 'jedi.api.strings', 'jedi.api.file_name', 'jedi.inference.docstring_utils', 'jedi.api.completion', 'filecmp', 'jedi.api.environment', 'jedi.inference.references', 'jedi.api.project', 'jedi.api.errors', 'jedi.api.refactoring', 'jedi.api.refactoring.extract', 'jedi.inference.gradual.utils', 'jedi.api', 'jedi.plugins.stdlib', 'jedi.plugins.flask', 'jedi.plugins.pytest', 'jedi.plugins.django', 'jedi.plugins.registry', 'jedi', 'IPython.core.completer', 'IPython.terminal.ptutils', 'IPython.lib.clipboard', 'IPython.terminal.shortcuts', 'concurrent.futures.thread', 'IPython.terminal.debugger', 'IPython.terminal.magics', 'IPython.terminal.pt_inputhooks', 'IPython.terminal.prompts', 'IPython.terminal.interactiveshell', 'IPython.core.magics.auto', 'IPython.core.magics.basic', 'email', 'http', 'email.errors', 'email.quoprimime', 'email.base64mime', 'quopri', 'email.encoders', 'email.charset', 'email.header', 'calendar', 'email._parseaddr', 'email.utils', 'email._policybase', 'email.feedparser', 'email.parser', 'uu', 'email._encoded_words', 'email.iterators', 'email.message', 'http.client', 'urllib.response', 'urllib.error', 'nturl2path', 'urllib.request', 'IPython.utils.contexts', 'IPython.core.magics.code', 'IPython.core.magics.config', 'IPython.core.magics.display', '_lsprof', 'profile', 'cProfile', 'dataclasses', 'pstats', 'timeit', 'IPython.utils.module_paths', 'IPython.utils.timing', 'IPython.core.magics.execution', 'IPython.core.magics.extension', 'IPython.core.magics.history', 'IPython.core.magics.logging', 'IPython.core.magics.namespace', 'IPython.core.magics.osm', 'IPython.core.magics.packaging', 'IPython.core.pylabtools', 'IPython.core.magics.pylab', 'IPython.core.magics.script', 'IPython.core.magics', 'IPython.core.shellapp', 'IPython.extensions', 'IPython.extensions.storemagic', 'IPython.terminal.ipapp', 'IPython.terminal.embed', 'IPython.utils.frame', 'IPython', 'imp', 'hmac', 'dateutil._version', 'dateutil', 'dateutil._common', 'dateutil.relativedelta', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.win', 'dateutil.tz.tz', 'dateutil.tz', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', '_strptime', 'jupyter_client.jsonutil', 'jupyter_client.adapter', 'jupyter_client.session', 'ipykernel.iostream', 'ipykernel.control', 'ipykernel.heartbeat', 'IPython.utils.tokenutil', 'psutil._common', 'psutil._compat', 'psutil._psutil_windows', 'psutil._pswindows', 'psutil', 'tornado.locks', 'tornado.queues', 'ipykernel.jsonutil', 'ipykernel.kernelbase', 'ipykernel.comm.comm', 'ipykernel.comm.manager', 'ipykernel.comm', 'IPython.core.payloadpage', 'ipykernel.displayhook', 'ipykernel.zmqshell', 'setuptools._distutils', 'distutils.debug', 'distutils.errors', 'distutils.fancy_getopt', 'distutils.dep_util', 'distutils.log', 'distutils.spawn', 'distutils.py35compat', 'distutils.util', 'distutils.dist', 'distutils.dir_util', 'distutils.file_util', 'distutils.archive_util', 'distutils.cmd', 'configparser', 'distutils.config', 'distutils.extension', 'distutils.core', '_distutils_hack.override', 'setuptools._deprecation_warning', 'xml.parsers', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'xml.parsers.expat', 'plistlib', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources._vendor.jaraco', 'pkg_resources.extern.jaraco', 'importlib._common', 'importlib.resources', 'pkg_resources._vendor.more_itertools.recipes', 'pkg_resources._vendor.more_itertools.more', 'pkg_resources._vendor.more_itertools', 'pkg_resources.extern.more_itertools', 'pkg_resources.extern.jaraco.functools', 'pkg_resources.extern.jaraco.context', 'pkg_resources.extern.jaraco.text', 'win32api', '_win32sysloader', 'pywintypes', 'pythoncom', 'win32com.gen_py', 'win32com', 'win32com.shell', 'pkg_resources._vendor.appdirs', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources._vendor.packaging', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.version', 'pkg_resources._vendor.packaging._manylinux', 'pkg_resources._vendor.packaging._musllinux', 'pkg_resources.extern.packaging.tags', 'pkg_resources.extern.packaging.utils', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources._vendor.pyparsing', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.packaging.markers', 'pkg_resources.extern.packaging.requirements', 'pkg_resources', 'setuptools.version', 'distutils.filelist', 'setuptools.monkey', 'setuptools.extension', 'distutils.command', 'setuptools.extern', 'setuptools._vendor', 'setuptools._vendor.packaging.__about__', 'setuptools._vendor.packaging', 'setuptools.extern.packaging', 'setuptools._vendor.ordered_set', 'setuptools.extern.ordered_set', 'setuptools._vendor.more_itertools.recipes', 'setuptools._vendor.more_itertools.more', 'setuptools._vendor.more_itertools', 'setuptools.extern.more_itertools', 'setuptools._vendor.pyparsing', 'setuptools.extern.pyparsing', 'setuptools._vendor.packaging._manylinux', 'setuptools._vendor.packaging._musllinux', 'setuptools.extern.packaging.tags', 'setuptools.extern.packaging._structures', 'setuptools.extern.packaging.version', 'setuptools.extern.packaging.utils', 'setuptools.extern.packaging.specifiers', 'setuptools.extern.packaging.markers', 'setuptools.extern.packaging.requirements', 'setuptools._vendor.jaraco', 'setuptools.extern.jaraco', 'setuptools.extern.jaraco.context', 'setuptools.extern.jaraco.functools', '_csv', 'csv', 'setuptools._vendor.zipp', 'setuptools._vendor.importlib_metadata._functools', 'setuptools._vendor.importlib_metadata._text', 'setuptools._vendor.importlib_metadata._adapters', 'setuptools._vendor.importlib_metadata._compat', 'setuptools._vendor.importlib_metadata._meta', 'setuptools._vendor.importlib_metadata._collections', 'setuptools._vendor.importlib_metadata._itertools', 'setuptools._vendor.importlib_metadata', 'setuptools.extern.importlib_metadata', 'setuptools._vendor.nspektr._compat', 'setuptools._vendor.nspektr', 'setuptools.extern.nspektr', 'zipp', 'importlib_metadata._functools', 'importlib_metadata._text', 'importlib_metadata._adapters', 'importlib_metadata._compat', 'importlib_metadata._meta', 'importlib_metadata._collections', 'importlib_metadata._itertools', 'importlib_metadata', 'setuptools._importlib', 'distutils.command.bdist', 'setuptools.command', 'setuptools.windows_support', 'setuptools.config.expand', 'setuptools.config.setupcfg', 'setuptools.config', 'setuptools.errors', 'email._header_value_parser', 'email.headerregistry', 'setuptools.config._apply_pyprojecttoml', 'setuptools.config.pyprojecttoml', 'setuptools.discovery', 'setuptools.extern.jaraco.text', 'setuptools._reqs', 'setuptools._itertools', 'setuptools._entry_points', 'setuptools.dist', 'setuptools.py34compat', 'setuptools._imp', 'setuptools.depends', 'setuptools.logging', 'distutils.ccompiler', 'distutils.msvc9compiler', 'setuptools.msvc', 'unittest.util', 'unittest.result', 'unittest.case', 'unittest.suite', 'unittest.loader', 'unittest.signals', 'unittest.runner', 'unittest.main', 'unittest', 'unittest.mock', 'distutils._msvccompiler', 'setuptools', 'distutils', 'distutils.version', 'ipykernel.eventloops', 'ipykernel.compiler', 'debugpy._version', 'debugpy.common', 'debugpy.common.json', 'debugpy.common.fmt', 'debugpy.common.compat', 'debugpy', 'debugpy._vendored._util', 'debugpy._vendored', '_pydevd_bundle', 'encodings.ascii', 'stringprep', 'encodings.idna', '_pydevd_bundle.pydevd_vm_type', '_pydev_imps', 'xmlrpc', 'gzip', 'xmlrpc.client', 'socketserver', 'http.server', 'xmlrpc.server', '_pydev_imps._pydev_saved_modules', '_pydevd_bundle.pydevd_constants', '_pydev_bundle', '_pydev_runfiles', '_pydevd_frame_eval', 'pydev_ipython', 'pydevd_concurrency_analyser', 'pydevd_plugins', '_pydev_bundle.pydev_log', '_pydev_bundle._pydev_filesystem_encoding', '_pydevd_bundle.pydevd_comm_constants', 'pydevd_file_utils', '_pydev_imps._pydev_execfile', '_pydevd_bundle.pydevd_exec2', '_pydev_bundle.pydev_imports', '_pydev_bundle.pydev_is_thread_alive', '_pydev_bundle.pydev_override', 'pydevd_plugins.extensions', '_pydevd_bundle.pydevd_extension_utils', '_pydevd_bundle.pydevd_frame_utils', '_pydevd_bundle.pydevd_filtering', '_pydevd_bundle.pydevd_io', '_pydevd_bundle.pydevd_utils', '_pydev_bundle._pydev_tipper_common', '_pydev_bundle._pydev_imports_tipper', '_pydev_bundle._pydev_calltip_util', '_pydevd_bundle.pydevd_safe_repr', '_pydevd_bundle.pydevd_resolver', '_pydevd_bundle.pydevd_extension_api', '_pydevd_bundle.pydevd_xml', '_pydevd_bundle.pydevd_dont_trace', '_pydevd_frame_eval.vendored', '_pydevd_frame_eval.vendored.bytecode.flags', '_pydevd_frame_eval.vendored.bytecode.instr', '_pydevd_frame_eval.vendored.bytecode.bytecode', '_pydevd_frame_eval.vendored.bytecode.concrete', '_pydevd_frame_eval.vendored.bytecode.cfg', '_pydevd_frame_eval.vendored.bytecode', '_pydevd_bundle.pydevd_bytecode_utils', '_pydevd_bundle.pydevd_cython', '_pydevd_bundle.pydevd_cython_wrapper', '_pydevd_bundle.pydevd_additional_thread_info', '_pydevd_bundle.pydevd_thread_lifecycle', '_pydevd_bundle.pydevd_save_locals', '_pydevd_bundle.pydevd_defaults', '_pydev_bundle.pydev_monkey', 'pydevd_tracing', '_pydevd_bundle.pydevd_daemon_thread', '_pydevd_bundle.pydevd_timeout', '_pydevd_bundle.pydevd_vars', '_pydev_bundle.pydev_console_utils', '_pydevd_bundle.pydevd_import_class', '_pydevd_bundle.pydevd_breakpoints', '_pydevd_bundle.pydevd_custom_frames', '_pydevd_bundle.pydevd_dont_trace_files', '_pydevd_bundle.pydevd_net_command', '_pydev_bundle.pydev_umd', 'pydevconsole', '_pydev_bundle._pydev_completer', '_pydevd_bundle.pydevd_net_command_factory_xml', '_pydevd_bundle.pydevd_frame', '_pydevd_bundle.pydevd_additional_thread_info_regular', '_pydevd_bundle.pydevd_trace_dispatch', '_pydevd_frame_eval.pydevd_frame_eval_main', '_pydevd_bundle.pydevd_source_mapping', 'pydevd_concurrency_analyser.pydevd_thread_wrappers', 'pydevd_concurrency_analyser.pydevd_concurrency_logger', '_pydevd_bundle._debug_adapter', '_pydevd_bundle._debug_adapter.pydevd_schema_log', '_pydevd_bundle._debug_adapter.pydevd_base_schema', '_pydevd_bundle._debug_adapter.pydevd_schema', '_pydevd_bundle.pydevd_reload', '_pydev_bundle.fsnotify', '_pydevd_bundle.pydevd_console', '_pydevd_bundle.pydevd_comm', '_pydevd_bundle.pydevd_net_command_factory_json', '_pydevd_bundle.pydevd_collect_bytecode_info', '_pydevd_bundle.pydevd_api', '_pydevd_bundle.pydevd_json_debug_options', '_pydevd_bundle.pydevd_process_net_command_json', '_pydevd_bundle.pydevd_traceproperty', '_pydevd_bundle.pydevd_process_net_command', '_pydevd_bundle.pydevd_suspended_frames', '_pydevd_bundle.pydevd_trace_api', 'pydevd_plugins.django_debug', 'pydevd_plugins.jinja2_debug', '_pydevd_bundle.pydevd_plugin_utils', 'pydevd_plugins.extensions.types', 'pydevd_plugins.extensions.types.pydevd_helpers', 'pydevd_plugins.extensions.types.pydevd_plugin_numpy_types', 'pydevd_plugins.extensions.types.pydevd_plugins_django_form_str', 'pydevd', 'debugpy._vendored.force_pydevd', 'debugpy.server', 'debugpy.adapter', 'debugpy.common.timestamp', 'debugpy.common.util', 'debugpy.common.log', 'debugpy.common.sockets', 'debugpy.server.api', 'ipykernel.debugger', 'ipykernel.ipkernel', 'ipykernel.parentpoller', 'ipykernel.kernelapp', 'win32security', 'ntsecuritycon', 'faulthandler', 'IPython.core.completerlib', 'logging.config', 'pythonjsonlogger', 'pythonjsonlogger.jsonlogger', 'daiquiri.types', 'daiquiri.formatter', 'daiquiri.handlers', 'daiquiri.output', 'daiquiri', 'jupyter_require.__about__', 'csscompressor', 'jupyter_require.core', 'jupyter_require.notebook', 'jupyter_require', 'jupyter_nbutils.__about__', 'jupyter_nbutils.config', 'jupyter_nbutils.utils', 'jupyter_nbutils', 'jupyter_require.magic', 'numpy._globals', 'numpy.__config__', 'numpy._distributor_init', 'numpy._version', 'numpy.version', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core._asarray', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core._machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.stride_tricks', 'numpy.lib.twodim_base', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', '_cython_0_29_30', 'numpy.random._common', 'secrets', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'pytz', 'pandas._typing', '_cython_0_29_28', 'pandas._libs.tslibs.dtypes', 'pandas._libs.tslibs.base', 'pandas._libs.tslibs.np_datetime', 'pandas._libs.tslibs.nattype', 'pandas._libs.tslibs.timezones', 'pandas._libs.tslibs.ccalendar', 'pandas._libs.tslibs.tzconversion', 'pandas._config.config', 'pandas._config.dates', 'pandas._config.display', 'pandas._config', 'pandas._config.localization', 'pandas._libs.tslibs.strptime', 'pandas._libs.tslibs.fields', 'pandas._libs.tslibs.timedeltas', 'pandas._libs.tslibs.timestamps', 'dateutil.easter', 'pandas._libs.properties', 'pandas._libs.tslibs.offsets', 'pandas._libs.tslibs.parsing', 'pandas._libs.tslibs.conversion', 'pandas._libs.tslibs.period', 'pandas._libs.tslibs.vectorized', 'pandas._libs.tslibs', 'pandas._libs.ops_dispatch', 'pandas._libs.missing', 'pandas._libs.hashtable', 'pandas._libs.algos', 'pandas._libs.interval', 'pandas._libs', 'pandas.util._decorators', 'pandas.core', 'pandas.core.util', 'pandas._libs.tslib', 'pandas._libs.lib', 'pandas._libs.hashing', 'pandas.core.dtypes', 'pandas.util._exceptions', 'pandas.errors', 'pandas.core.dtypes.generic', 'pandas.core.dtypes.base', 'pandas.core.dtypes.inference', 'pandas.core.dtypes.dtypes', 'pandas.core.dtypes.common', 'pandas.core.util.hashing', 'pandas.util', 'pandas.util.version', 'pandas.compat.numpy', 'pandas.compat.pyarrow', 'pandas.compat', 'pandas.core.config_init', 'pandas.core.dtypes.missing', 'pandas.util._validators', 'pandas.core.dtypes.cast', 'pandas.core.dtypes.concat', 'pandas.core.array_algos', 'pandas.core.common', 'pandas.core.construction', 'pandas.core.array_algos.take', 'pandas.core.indexers.utils', 'pandas.core.indexers', 'pandas.core.algorithms', 'pandas.compat.numpy.function', 'pandas.core.roperator', 'pandas._libs.ops', 'pandas.core.computation', 'pandas.compat._optional', 'numexpr.interpreter', 'packaging.__about__', 'packaging', 'packaging._structures', 'packaging.version', 'numexpr.expressions', 'numexpr.utils', 'numexpr.necompiler', 'numexpr.version', 'numexpr', 'pandas.core.computation.check', 'pandas.core.computation.expressions', 'pandas.core.ops.missing', 'pandas.core.ops.dispatch', 'pandas.core.ops.invalid', 'pandas.core.ops.array_ops', 'pandas.core.ops.common', 'pandas.core.ops.docstrings', 'pandas.core.ops.mask_ops', 'pandas.core.ops.methods', 'pandas.core.ops', 'pandas.core.arraylike', 'pandas.core.missing', 'pandas.core.array_algos.quantile', 'pandas.core.sorting', 'pandas.core.arrays.base', 'bottleneck.benchmark', 'bottleneck.benchmark.autotimeit', 'bottleneck.benchmark.bench', 'bottleneck.benchmark.bench_detailed', 'bottleneck.tests', 'bottleneck.tests.util', 'bottleneck.slow.reduce', 'bottleneck.slow.nonreduce', 'bottleneck.slow.nonreduce_axis', 'bottleneck.slow.move', 'bottleneck.slow', 'bottleneck._pytesttester', 'bottleneck.move', 'bottleneck.nonreduce', 'bottleneck.nonreduce_axis', 'bottleneck.reduce', 'bottleneck._version', 'bottleneck', 'pandas.core.nanops', 'pandas.core.array_algos.masked_reductions', 'pandas.core.arrays.masked', 'pandas.core.arrays.boolean', 'pandas._libs.arrays', 'pandas.core.accessor', 'pandas.core.array_algos.transforms', 'pandas.core.arrays._mixins', 'pandas.core.base', 'pandas.core.strings.accessor', 'pandas.core.strings.base', 'pandas.core.strings', 'pandas.core.strings.object_array', 'pandas.io', 'pandas.io.formats', 'pandas.io.formats.console', 'pandas.core.arrays.categorical', 'pandas.tseries', 'pandas.tseries.frequencies', 'pandas.core.arrays.datetimelike', 'pandas.core.arrays._ranges', 'pandas.core.arrays.numeric', 'pandas.core.tools', 'pandas.core.tools.numeric', 'pandas.core.arrays.integer', 'pandas.tseries.offsets', 'pandas.core.arrays.datetimes', 'pandas.core.arrays.floating', 'pandas.core.indexes', 'pandas._libs.index', 'pandas._libs.join', 'pandas.core.array_algos.putmask', 'pandas._libs.sparse', 'pandas.core.arrays.sparse.dtype', 'pandas.io.formats.printing', 'pandas.core.arrays.sparse.array', 'pandas.core.arrays.sparse.accessor', 'pandas.core.arrays.sparse', 'pandas.core.indexes.frozen', 'pandas.core.indexes.base', 'pandas.core.arrays.interval', 'pandas.core.arrays.numpy_', 'pandas.core.arrays.period', 'pandas.core.arrays.string_', 'pandas.core.arrays.string_arrow', 'pandas.core.arrays.timedeltas', 'pandas.core.arrays', 'pandas.core.flags', 'pandas._libs.reduction', 'pandas.core.apply', 'pandas._libs.indexing', 'pandas.core.indexes.extension', 'pandas.core.indexes.category', 'pandas.core.indexes.numeric', 'pandas.core.indexes.range', 'pandas.core.tools.timedeltas', 'pandas.core.indexes.datetimelike', 'pandas.core.tools.times', 'pandas.core.indexes.datetimes', 'pandas.core.indexes.multi', 'pandas.core.indexes.timedeltas', 'pandas.core.indexes.interval', 'pandas.core.indexes.period', 'pandas.core.indexes.api', 'pandas.core.indexing', 'pandas.core.array_algos.replace', 'pandas.core.reshape', 'pandas._libs.internals', 'pandas._libs.writers', 'pandas.core.internals.blocks', 'pandas.core.internals.api', 'pandas.core.internals.base', 'pandas.core.internals.array_manager', 'pandas.core.internals.ops', 'pandas.core.internals.managers', 'pandas.core.internals.concat', 'pandas.core.internals', 'pandas.core.reshape.concat', 'mmap', 'pandas.core.shared_docs', 'pandas.io.common', 'pandas.io.formats.format', 'pandas.core.describe', 'pandas.core.internals.construction', 'pandas.core.sample', 'pandas._libs.window', 'pandas._libs.window.aggregations', 'pandas._libs.window.indexers', 'pandas.core.indexers.objects', 'pandas.core.util.numba_', 'pandas.core.window.common', 'pandas.core.window.doc', 'pandas.core.window.numba_', 'pandas.core.window.online', 'pandas.core._numba', 'pandas.core._numba.executor', 'pandas.core.window.rolling', 'pandas.core.window.ewm', 'pandas.core.window.expanding', 'pandas.core.window', 'pandas.core.generic', 'pandas.core.reshape.util', 'pandas.core.reshape.melt', 'pandas._libs.reshape', 'pandas.core.indexes.accessors', 'pandas.arrays', 'pandas.core.tools.datetimes', 'pandas.io.formats.info', 'pandas.plotting._core', 'pandas.plotting._misc', 'pandas.plotting', 'pandas.core.series', 'pandas.core.frame', 'pandas.core.groupby.base', 'pandas._libs.groupby', 'pandas.core.groupby.numba_', 'pandas.core.groupby.categorical', 'pandas.core.groupby.grouper', 'pandas.core.groupby.ops', 'pandas.core.groupby.indexing', 'pandas.core.groupby.groupby', 'pandas.core.groupby.generic', 'pandas.core.groupby', 'pandas.core.api', 'pandas.tseries.api', 'pandas.core.computation.common', 'pandas.core.computation.align', 'pandas.compat.chainmap', 'pandas.core.computation.scope', 'pandas.core.computation.ops', 'pandas.core.computation.parsing', 'pandas.core.computation.expr', 'pandas.core.computation.engines', 'pandas.core.computation.eval', 'pandas.core.computation.api', 'pandas.core.reshape.merge', 'pandas.core.reshape.pivot', 'pandas.core.reshape.reshape', 'pandas.core.reshape.tile', 'pandas.core.reshape.api', 'pandas.api.extensions', 'pandas.api.indexers', 'pandas.core.dtypes.api', 'pandas.api.types', 'pandas.api', 'pandas._testing._random', 'pandas._testing.contexts', 'pandas._testing._io', 'pandas._testing._warnings', 'cmath', 'pandas._libs.testing', 'pandas._testing.asserters', 'pandas._testing.compat', 'pandas._testing', 'pandas.testing', 'pandas.util._print_versions', 'pandas.io.clipboards', 'pandas._libs.parsers', 'pandas.io.excel._util', 'pandas.io.date_converters', 'pandas.io.parsers.base_parser', 'pandas.io.parsers.arrow_parser_wrapper', 'pandas.io.parsers.c_parser_wrapper', 'pandas.io.parsers.python_parser', 'pandas.io.parsers.readers', 'pandas.io.parsers', 'pandas.io.excel._odfreader', 'pandas.io.excel._openpyxl', 'pandas.io.excel._pyxlsb', 'pandas.io.excel._xlrd', 'pandas.io.excel._base', 'pandas._libs.json', 'pandas.io.formats._color_data', 'pandas.io.formats.css', 'pandas.io.formats.excel', 'pandas.io.excel._odswriter', 'pandas.io.excel._xlsxwriter', 'pandas.io.excel._xlwt', 'pandas.io.excel', 'pandas.io.feather_format', 'pandas.io.gbq', 'pandas.io.html', 'pandas.io.json._normalize', 'pandas.io.json._table_schema', 'pandas.io.json._json', 'pandas.io.json', 'pandas.io.orc', 'pandas.io.parquet', 'pandas.compat.pickle_compat', 'pandas.io.pickle', 'pandas.core.computation.pytables', 'pandas.io.pytables', 'pandas.io.sas.sasreader', 'pandas.io.sas', 'pandas.io.spss', 'pandas.io.sql', 'pandas.io.stata', 'pandas.io.xml', 'pandas.io.api', 'pandas.util._tester', 'pandas._version', 'pandas', 'summarytools', 'summarytools.htmlwidgets', 'summarytools.summarytools', 'matplotlib', 'matplotlib._api.deprecation', 'matplotlib._api', 'matplotlib._version', 'matplotlib._c_internal_utils', 'matplotlib.cbook', 'matplotlib.docstring', 'PIL._version', 'PIL', 'defusedxml.common', 'defusedxml', 'xml.etree', 'xml.etree.ElementPath', '_elementtree', 'xml.etree.ElementTree', 'defusedxml.ElementTree', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._util', 'PIL._imaging', 'cffi.lock', 'cffi.error', 'cffi.model', 'cffi.api', 'cffi', 'PIL.Image', 'PIL.ImageChops', 'PIL.ImageFile', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'PIL.ImagePalette', 'PIL.ImageSequence', 'PIL.PngImagePlugin', 'matplotlib._path', 'matplotlib.bezier', 'matplotlib.path', 'matplotlib.transforms', 'matplotlib.ticker', 'matplotlib.scale', 'matplotlib._color_data', 'matplotlib.colors', 'pyparsing.util', 'pyparsing.unicode', 'pyparsing.exceptions', 'pyparsing.actions', 'pyparsing.results', 'pyparsing.core', 'pyparsing.helpers', 'pyparsing.testing', 'pyparsing.common', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib._enums', 'cycler', 'matplotlib.rcsetup', 'matplotlib.ft2font', 'kiwisolver']
2023-04-20 17:36:33,571 [23176] DEBUG    matplotlib:275: [JupyterRequire] CACHEDIR=C:\Users\adity\.matplotlib
2023-04-20 17:36:33,575 [23176] DEBUG    matplotlib.font_manager:1439: [JupyterRequire] Using fontManager instance from C:\Users\adity\.matplotlib\fontlist-v330.json
2023-04-20 17:36:34,164 [23176] DEBUG    matplotlib.pyplot:280: [JupyterRequire] Loaded backend module://matplotlib_inline.backend_inline version unknown.
2023-04-20 17:36:34,170 [23176] DEBUG    matplotlib.pyplot:280: [JupyterRequire] Loaded backend module://matplotlib_inline.backend_inline version unknown.
2023-04-20 17:36:43,186 [23176] DEBUG    matplotlib.font_manager:1329: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2023-04-20 17:36:43,188 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 17:36:43,188 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 17:36:43,188 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,190 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2023-04-20 17:36:43,190 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2023-04-20 17:36:43,190 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 17:36:43,191 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 17:36:43,191 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 17:36:43,192 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,192 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 17:36:43,193 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,193 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 17:36:43,193 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,194 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,194 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,194 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 17:36:43,195 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 17:36:43,195 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,196 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,196 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2023-04-20 17:36:43,196 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,197 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,197 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 17:36:43,197 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 17:36:43,198 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 17:36:43,198 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,198 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,199 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 17:36:43,199 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 17:36:43,200 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,200 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,201 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,201 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 17:36:43,202 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,202 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 17:36:43,202 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,204 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,204 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2023-04-20 17:36:43,205 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLSNECB.TTF', name='Gill Sans MT Ext Condensed Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-20 17:36:43,205 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanz.ttf', name='Constantia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 17:36:43,206 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LEELAWAD.TTF', name='Leelawadee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,206 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\monbaiti.ttf', name='Mongolian Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,206 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-MEDIUM.TTF', name='Dubai', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-04-20 17:36:43,206 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-04-20 17:36:43,208 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FTLTLT.TTF', name='Footlight MT Light', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-20 17:36:43,208 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibril.ttf', name='Calibri', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-20 17:36:43,208 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSI.TTF', name='Goudy Old Style', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 17:36:43,209 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisbi.ttf', name='Segoe UI', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-20 17:36:43,209 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCCB___.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-04-20 17:36:43,209 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXD.TTF', name='Lucida Fax', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-20 17:36:43,209 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2023-04-20 17:36:43,210 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BSSYM7.TTF', name='Bookshelf Symbol 7', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,210 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAMDCN.TTF', name='Franklin Gothic Medium Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-20 17:36:43,210 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framdit.ttf', name='Franklin Gothic Medium', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 17:36:43,210 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSB.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 17:36:43,210 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-LIGHT.TTF', name='Dubai', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-20 17:36:43,211 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCC____.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-20 17:36:43,211 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_B.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 17:36:43,211 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COOPBL.TTF', name='Cooper Black', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,212 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNI.TTF', name='Arial', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 7.613636363636363
2023-04-20 17:36:43,212 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\INFROMAN.TTF', name='Informal Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,212 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSB.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-20 17:36:43,212 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BERNHC.TTF', name='Bernard MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-20 17:36:43,214 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEB.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-20 17:36:43,214 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCEDSCR.TTF', name='Edwardian Script ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,214 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consola.ttf', name='Consolas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,214 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,215 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\holomdl2.ttf', name='HoloLens MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,215 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COLONNA.TTF', name='Colonna MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,215 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYR.TTF', name='Agency FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,216 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRITANIC.TTF', name='Britannic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,216 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiai.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 17:36:43,216 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 17:36:43,216 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaS.ttf', name='Nirmala UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2023-04-20 17:36:43,217 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CHILLER.TTF', name='Chiller', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,217 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,217 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAB.TTF', name='Book Antiqua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 17:36:43,217 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothM.ttc', name='Yu Gothic', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-04-20 17:36:43,218 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG2.TTF', name='Wingdings 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,218 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Nirmala.ttf', name='Nirmala UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,218 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelUIsl.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2023-04-20 17:36:43,218 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriai.ttf', name='Cambria', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 17:36:43,219 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariali.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
2023-04-20 17:36:43,219 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARA.TTF', name='Garamond', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,219 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSPCL.TTF', name='MS Reference Specialty', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,220 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-REGULAR.TTF', name='Dubai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,220 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LHANDW.TTF', name='Lucida Handwriting', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 17:36:43,221 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 17:36:43,221 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comici.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 17:36:43,221 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTAUR.TTF', name='Centaur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,222 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEBO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-20 17:36:43,222 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ONYX.TTF', name='Onyx', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,222 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrima.ttf', name='Ebrima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,222 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFI.TTF', name='Californian FB', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 17:36:43,222 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERBI___.TTF', name='Perpetua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 17:36:43,224 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbell.ttf', name='Corbel', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-20 17:36:43,224 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILI____.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 17:36:43,224 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segmdl2.ttf', name='Segoe MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,225 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-BOLD.TTF', name='Dubai', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 17:36:43,225 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FELIXTI.TTF', name='Felix Titling', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,225 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbd.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
2023-04-20 17:36:43,225 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taileb.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 17:36:43,225 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeprb.ttf', name='Segoe Print', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 17:36:43,226 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoescb.ttf', name='Segoe Script', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 17:36:43,226 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITE.TTF', name='Lucida Bright', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,226 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhbd.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 17:36:43,227 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\times.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,227 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisb.ttf', name='Segoe UI', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-20 17:36:43,227 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSDB.TTF', name='Berlin Sans FB Demi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 17:36:43,227 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbi.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
2023-04-20 17:36:43,229 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesi.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 17:36:43,229 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADM.TTF', name='Franklin Gothic Demi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,229 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERTI.TTF', name='High Tower Text', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 17:36:43,229 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF-Italic.ttf', name='Sitka', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 17:36:43,230 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsun.ttc', name='SimSun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,230 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTI.TTF', name='Calisto MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 17:36:43,230 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCMI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 17:36:43,230 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaral.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,231 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\lucon.ttf', name='Lucida Console', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,231 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_I.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 17:36:43,231 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mvboli.ttf', name='MV Boli', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,231 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiab.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 17:36:43,233 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\l_10646.ttf', name='Lucida Sans Unicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,233 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTIBD.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 17:36:43,233 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNT.TTF', name='Elephant', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,234 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASMD.TTF', name='Eras Medium ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,234 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MSUIGHUR.TTF', name='Microsoft Uighur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,234 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYB.TTF', name='Agency FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 17:36:43,234 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MSUIGHUB.TTF', name='Microsoft Uighur', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 17:36:43,234 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicbd.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 17:36:43,235 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMIT.TTF', name='Franklin Gothic Demi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 17:36:43,235 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKEB.TTF', name='Rockwell Extra Bold', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
2023-04-20 17:36:43,235 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PER_____.TTF', name='Perpetua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,236 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VINERITC.TTF', name='Viner Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,236 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\marlett.ttf', name='Marlett', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-04-20 17:36:43,236 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrili.ttf', name='Calibri', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-04-20 17:36:43,236 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICBI.TTF', name='Century Gothic', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 17:36:43,236 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ALGER.TTF', name='Algerian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,238 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOS.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,238 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelz.ttf', name='Corbel', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 17:36:43,238 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILB____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 17:36:43,238 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUABI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 17:36:43,239 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\sylfaen.ttf', name='Sylfaen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,239 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriaz.ttf', name='Cambria', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 17:36:43,239 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanaz.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
2023-04-20 17:36:43,239 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constan.ttf', name='Constantia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,240 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTILI.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-20 17:36:43,240 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCM_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,240 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhl.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2023-04-20 17:36:43,240 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOS.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-20 17:36:43,241 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HATTEN.TTF', name='Haettenschweiler', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,241 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JOKERMAN.TTF', name='Jokerman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,241 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ENGR.TTF', name='Engravers MT', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-04-20 17:36:43,241 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARAIT.TTF', name='Garamond', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 17:36:43,242 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,242 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelli.ttf', name='Corbel', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-04-20 17:36:43,242 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constani.ttf', name='Constantia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 17:36:43,242 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIST.TTF', name='Calisto MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,243 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PARCHM.TTF', name='Parchment', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,243 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\himalaya.ttf', name='Microsoft Himalaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,243 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRADHITC.TTF', name='Bradley Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,243 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\wingding.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,244 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtextb.ttf', name='Myanmar Text', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 17:36:43,244 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG3.TTF', name='Wingdings 3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,244 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGSOL.TTF', name='Niagara Solid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,244 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarali.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 17:36:43,245 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKI.TTF', name='Rockwell', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 17:36:43,245 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolab.ttf', name='Consolas', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 17:36:43,245 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXDI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-20 17:36:43,245 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BAUHS93.TTF', name='Bauhaus 93', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,246 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisli.ttf', name='Segoe UI', style='italic', variant='normal', weight=350, stretch='normal', size='scalable')) = 11.0975
2023-04-20 17:36:43,246 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELL.TTF', name='Bell MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,246 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2023-04-20 17:36:43,246 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyi.ttf', name='Microsoft Yi Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,247 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSR.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,247 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHVIT.TTF', name='Franklin Gothic Heavy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 17:36:43,247 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OLDENGL.TTF', name='Old English Text MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,247 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbel.ttf', name='Corbel', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,248 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLB.TTF', name='Bell MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 17:36:43,248 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelaUIb.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 17:36:43,248 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHV.TTF', name='Franklin Gothic Heavy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,248 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OUTLOOK.TTF', name='MS Outlook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,249 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PRISTINA.TTF', name='Pristina', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,249 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERI____.TTF', name='Perpetua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 17:36:43,249 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtext.ttf', name='Myanmar Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,249 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSAN.TTF', name='MS Reference Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,250 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERB____.TTF', name='Perpetua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 17:36:43,250 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTEXTRA.TTF', name='MT Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,250 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKB.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 17:36:43,250 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARABD.TTF', name='Garamond', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 17:36:43,251 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cour.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,251 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mingliub.ttc', name='MingLiU-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,251 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICB.TTF', name='Century Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 17:36:43,251 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspa.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,252 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VIVALDII.TTF', name='Vivaldi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 17:36:43,252 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAGE.TTF', name='Rage Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 17:36:43,252 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-20 17:36:43,252 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2023-04-20 17:36:43,253 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MATURASC.TTF', name='Matura MT Script Capitals', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,253 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comic.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,253 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbi.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 17:36:43,253 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothR.ttc', name='Yu Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,253 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palai.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 17:36:43,255 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MOD20.TTF', name='Modern No. 20', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,255 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMCN.TTF', name='Franklin Gothic Demi Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-20 17:36:43,255 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrimabd.ttf', name='Ebrima', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 17:36:43,255 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\javatext.ttf', name='Javanese Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,256 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CASTELAR.TTF', name='Castellar', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,256 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSDI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-20 17:36:43,256 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelawUI.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,256 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAX.TTF', name='Lucida Fax', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,257 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunbd.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 17:36:43,257 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF.ttf', name='Sitka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,257 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTL.TTF', name='Copperplate Gothic Light', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,257 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
2023-04-20 17:36:43,258 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeui.ttf', name='Segoe UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,258 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Gabriola.ttf', name='Gabriola', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,258 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTBI.TTF', name='Calisto MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 17:36:43,258 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicz.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 17:36:43,259 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALN.TTF', name='Arial', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 6.613636363636363
2023-04-20 17:36:43,259 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKBI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 17:36:43,259 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FREESCPT.TTF', name='Freestyle Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,259 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTURY.TTF', name='Century', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,260 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaB.ttf', name='Nirmala UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 17:36:43,260 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSB.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 17:36:43,260 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSD.TTF', name='Lucida Sans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-20 17:36:43,260 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuisl.ttf', name='Segoe UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2023-04-20 17:36:43,261 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 17:36:43,261 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 17:36:43,261 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguihis.ttf', name='Segoe UI Historic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,261 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCB____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-04-20 17:36:43,262 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambria.ttc', name='Cambria', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,262 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKBI.TTF', name='Rockwell', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 17:36:43,262 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGENG.TTF', name='Niagara Engraved', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,263 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisym.ttf', name='Segoe UI Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,263 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inkfree.ttf', name='Ink Free', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,263 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASBD.TTF', name='Eras Bold ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,265 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILC____.TTF', name='Gill Sans MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-20 17:36:43,265 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candara.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,265 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\bahnschrift.ttf', name='Bahnschrift', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,265 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BROADW.TTF', name='Broadway', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,266 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolaz.ttf', name='Consolas', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 17:36:43,266 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CBI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2023-04-20 17:36:43,266 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuii.ttf', name='Segoe UI', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 17:36:43,266 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibli.ttf', name='Segoe UI', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2023-04-20 17:36:43,267 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEDI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-20 17:36:43,267 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucit.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 17:36:43,267 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BKANT.TTF', name='Book Antiqua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,267 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothL.ttc', name='Yu Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-20 17:36:43,268 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrii.ttf', name='Calibri', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 17:36:43,268 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CURLZ___.TTF', name='Curlz MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,268 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelb.ttf', name='Corbel', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 17:36:43,269 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARLRDBD.TTF', name='Arial Rounded MT Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,269 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothB.ttc', name='Yu Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 17:36:43,269 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASDEMI.TTF', name='Eras Demi ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,270 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
2023-04-20 17:36:43,270 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANS.TTF', name='Lucida Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,270 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariblk.ttf', name='Arial', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 6.888636363636364
2023-04-20 17:36:43,271 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCKRIST.TTF', name='Kristen ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,271 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\KUNSTLER.TTF', name='Kunstler Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,271 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanb.ttf', name='Constantia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 17:36:43,272 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PAPYRUS.TTF', name='Papyrus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,272 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JUICE___.TTF', name='Juice ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,272 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguili.ttf', name='Segoe UI', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-04-20 17:36:43,273 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 17:36:43,273 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarab.ttf', name='Candara', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 17:36:43,273 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\IMPRISHA.TTF', name='Imprint MT Shadow', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,274 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailu.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,274 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbi.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 17:36:43,274 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuil.ttf', name='Segoe UI', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-20 17:36:43,275 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanai.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
2023-04-20 17:36:43,275 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoepr.ttf', name='Segoe Print', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,275 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaraz.ttf', name='Candara', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 17:36:43,275 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNB.TTF', name='Arial', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 6.8986363636363635
2023-04-20 17:36:43,276 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspab.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 17:36:43,276 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,277 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCM____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-20 17:36:43,277 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARNGTON.TTF', name='Harrington', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,277 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbd.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 17:36:43,278 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 17:36:43,278 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILSANUB.TTF', name='Gill Sans Ultra Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,278 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibri.ttf', name='Calibri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,279 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiaz.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 17:36:43,279 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegoeIcons.ttf', name='Segoe Fluent Icons', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,279 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAGNETOB.TTF', name='Magneto', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 17:36:43,279 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICI.TTF', name='Century Gothic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 17:36:43,280 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCBLKAD.TTF', name='Blackadder ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,280 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahomabd.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 17:36:43,280 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugi.ttf', name='Gadugi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,281 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LCALLIG.TTF', name='Lucida Calligraphy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 17:36:43,281 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyh.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,281 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsunb.ttf', name='SimSun-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,282 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgun.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,287 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIL_____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,287 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VLADIMIR.TTF', name='Vladimir Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,289 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,289 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msgothic.ttc', name='MS Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,290 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRSCRIPT.TTF', name='French Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,290 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILBI___.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 17:36:43,290 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASLGHT.TTF', name='Eras Light ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,290 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTB.TTF', name='Calisto MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 17:36:43,291 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunsl.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-20 17:36:43,291 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRUSHSCI.TTF', name='Brush Script MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 17:36:43,291 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SNAP____.TTF', name='Snap ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,292 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuib.ttf', name='Segoe UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 17:36:43,292 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCBI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 17:36:43,292 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailub.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 17:36:43,292 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framd.ttf', name='Franklin Gothic Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,293 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolai.ttf', name='Consolas', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 17:36:43,293 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCEB.TTF', name='Tw Cen MT Condensed Extra Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-20 17:36:43,293 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\POORICH.TTF', name='Poor Richard', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,294 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDYSTO.TTF', name='Goudy Stout', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,294 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKB.TTF', name='Rockwell', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 17:36:43,294 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PALSCRI.TTF', name='Palace Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,294 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarai.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 17:36:43,295 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\micross.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,295 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LEELAWDB.TTF', name='Leelawadee', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 17:36:43,295 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABK.TTF', name='Franklin Gothic Book', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,295 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjh.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,296 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palabi.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 17:36:43,296 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAVIE.TTF', name='Ravie', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,296 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCK.TTF', name='Rockwell', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,297 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\pala.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,297 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibriz.ttf', name='Calibri', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 17:36:43,297 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugib.ttf', name='Gadugi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 17:36:43,297 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_PSTC.TTF', name='Bodoni MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-20 17:36:43,298 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENSCBK.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,298 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanab.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
2023-04-20 17:36:43,299 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LATINWD.TTF', name='Wide Latin', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
2023-04-20 17:36:43,299 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbeli.ttf', name='Corbel', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 17:36:43,299 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIGI.TTF', name='Gigi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,299 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITED.TTF', name='Lucida Bright', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-20 17:36:43,300 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbi.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 17:36:43,300 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhl.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2023-04-20 17:36:43,300 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguiemj.ttf', name='Segoe UI Emoji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,301 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OCRAEXT.TTF', name='OCR A Extended', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
2023-04-20 17:36:43,301 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebuc.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,301 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SHOWG.TTF', name='Showcard Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,301 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BASKVILL.TTF', name='Baskerville Old Face', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,302 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriab.ttf', name='Cambria', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 17:36:43,302 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAIAN.TTF', name='Maiandra GD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,302 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCRIPTBL.TTF', name='Script MT Bold', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 17:36:43,304 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLECB.TTF', name='Gloucester MT Extra Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-20 17:36:43,304 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNTI.TTF', name='Elephant', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 17:36:43,304 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFR.TTF', name='Californian FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,304 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHIC.TTF', name='Century Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,305 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PLAYBILL.TTF', name='Playbill', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,305 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABKIT.TTF', name='Franklin Gothic Book', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 17:36:43,305 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARLOWSI.TTF', name='Harlow Solid Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 17:36:43,305 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPE.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,306 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taile.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,306 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibl.ttf', name='Segoe UI', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2023-04-20 17:36:43,306 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNBI.TTF', name='Arial', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 7.8986363636363635
2023-04-20 17:36:43,306 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuiz.ttf', name='Segoe UI', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 17:36:43,308 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSBI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-20 17:36:43,308 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palab.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 17:36:43,308 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLI.TTF', name='Bell MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 17:36:43,309 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILLUBCD.TTF', name='Gill Sans Ultra Bold Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-20 17:36:43,309 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbd.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 17:36:43,309 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhbd.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 17:36:43,310 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoesc.ttf', name='Segoe Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,310 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\couri.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 17:36:43,310 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegUIVar.ttf', name='Segoe UI Variable', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,311 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_R.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,311 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTB.TTF', name='Copperplate Gothic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,311 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 17:36:43,312 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCB_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 17:36:43,312 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TEMPSITC.TTF', name='Tempus Sans ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,312 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MISTRAL.TTF', name='Mistral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,313 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FORTE.TTF', name='Forte', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,313 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CB.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-04-20 17:36:43,314 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbd.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 17:36:43,314 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STENCIL.TTF', name='Stencil', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,314 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrib.ttf', name='Calibri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 17:36:43,315 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERT.TTF', name='High Tower Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,315 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTCORSVA.TTF', name='Monotype Corsiva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 17:36:43,315 [23176] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFB.TTF', name='Californian FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 17:36:43,316 [23176] DEBUG    matplotlib.font_manager:1367: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
2023-04-20 17:38:16,456 [1948] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-04-20 17:38:16,460 [1948] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-04-20 17:38:16,460 [1948] INFO     root:247: [JupyterRequire] Initializing comms.
2023-04-20 17:38:16,464 [1948] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-04-20 17:38:16,464 [1948] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-04-20 17:38:16,468 [1948] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-04-20 17:38:16,484 [23176] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-04-20 17:38:16,488 [23176] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-04-20 17:38:16,488 [23176] INFO     root:247: [JupyterRequire] Initializing comms.
2023-04-20 17:38:16,492 [23176] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-04-20 17:38:16,492 [23176] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-04-20 17:38:16,496 [23176] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-04-20 18:04:43,892 [9988] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-04-20 18:04:43,893 [9988] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-04-20 18:04:43,894 [9988] INFO     root:247: [JupyterRequire] Initializing comms.
2023-04-20 18:04:43,896 [9988] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-04-20 18:04:43,897 [9988] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-04-20 18:04:43,898 [9988] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-04-20 18:05:31,322 [9988] INFO     numexpr.utils:147: [JupyterRequire] Note: NumExpr detected 12 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
2023-04-20 18:05:31,324 [9988] INFO     numexpr.utils:159: [JupyterRequire] NumExpr defaulting to 8 threads.
2023-04-20 18:05:32,034 [9988] DEBUG    matplotlib:275: [JupyterRequire] matplotlib data path: C:\Users\adity\anaconda3\lib\site-packages\matplotlib\mpl-data
2023-04-20 18:05:32,042 [9988] DEBUG    matplotlib:275: [JupyterRequire] CONFIGDIR=C:\Users\adity\.matplotlib
2023-04-20 18:05:32,048 [9988] DEBUG    matplotlib:1445: [JupyterRequire] interactive is False
2023-04-20 18:05:32,049 [9988] DEBUG    matplotlib:1446: [JupyterRequire] platform is win32
2023-04-20 18:05:32,050 [9988] DEBUG    matplotlib:1447: [JupyterRequire] loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', '_io', 'marshal', 'nt', 'winreg', '_frozen_importlib_external', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', 'encodings.cp1252', '_signal', 'encodings.latin_1', '_abc', 'abc', 'io', '__main__', '_stat', 'stat', '_collections_abc', 'genericpath', 'ntpath', 'os.path', 'os', '_sitebuiltins', '_locale', '_bootlocale', '_distutils_hack', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib.machinery', '_heapq', 'heapq', 'itertools', 'keyword', '_operator', 'operator', 'reprlib', '_collections', 'collections', 'collections.abc', '_functools', 'functools', 'contextlib', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', 'copyreg', 're', 'typing.io', 'typing.re', 'typing', 'importlib.abc', 'importlib.util', 'google', 'google.cloud', 'google.logging', 'mpl_toolkits', 'sphinxcontrib', 'zope', 'site', '_weakrefset', 'weakref', 'pkgutil', 'runpy', 'ipykernel._version', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'errno', 'signal', 'threading', 'msvcrt', '_winapi', 'subprocess', 'jupyter_client._version', 'posixpath', 'fnmatch', 'glob', '_socket', 'math', 'select', 'selectors', 'socket', 'zlib', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', '_bisect', 'bisect', '_random', '_sha512', 'random', 'tempfile', 'getpass', 'platform', 'zmq.libzmq', 'zmq.backend.select', 'cython_runtime', 'zmq.backend.cython.constants', '_cython_0_29_24', 'zmq.backend.cython.error', 'zmq.error', 'zmq.backend.cython.message', 'zmq.backend.cython.context', 'copy', '_struct', 'struct', '_compat_pickle', '_pickle', 'pickle', 'zmq.backend.cython.socket', 'zmq.backend.cython.utils', 'zmq.backend.cython._poll', 'zmq.backend.cython._version', 'zmq.backend.cython._device', 'zmq.backend.cython._proxy_steerable', 'zmq.backend.cython', 'zmq.backend', 'zmq.utils', 'zmq.utils.constant_names', 'zmq.sugar.constants', 'atexit', 'zmq.sugar.attrsettr', 'zmq.sugar.poll', 'zmq.utils.jsonapi', 'zmq.utils.strtypes', 'zmq.sugar.socket', 'zmq.sugar.context', 'zmq.sugar.frame', 'zmq.sugar.tracker', 'zmq.sugar.version', 'zmq.sugar.stopwatch', 'zmq.sugar', 'zmq', '_ast', 'ast', '_opcode', 'opcode', 'dis', 'token', 'tokenize', 'linecache', 'inspect', 'traitlets.utils', 'traitlets.utils.getargspec', 'traitlets.utils.importstring', 'traitlets.utils.sentinel', 'traitlets.utils.bunch', 'traitlets.utils.descriptions', 'traitlets.traitlets', 'traitlets.utils.decorators', 'traitlets._version', 'traitlets', 'traceback', '_string', 'string', 'logging', 'pprint', 'gettext', 'argparse', 'traitlets.config.loader', 'textwrap', 'traitlets.utils.text', 'traitlets.config.configurable', 'traitlets.config.application', 'traitlets.config', 'jupyter_client.localinterfaces', 'jupyter_core.version', 'jupyter_core', 'urllib', 'urllib.parse', 'pathlib', 'jupyter_core.paths', 'jupyter_client.utils', 'jupyter_client.connect', 'traitlets.log', 'jupyter_client.launcher', 'concurrent', 'concurrent.futures._base', 'concurrent.futures', '_ssl', 'binascii', 'base64', 'ssl', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', '_contextvars', 'contextvars', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.threads', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'asyncio.windows_events', 'asyncio', 'jupyter_client.channelsabc', 'jupyter_client.channels', 'jupyter_client.clientabc', 'jupyter_client.client', 'jupyter_client.kernelspec', 'jupyter_client.managerabc', 'jupyter_client.manager', '_queue', 'queue', 'jupyter_client.blocking.channels', 'jupyter_client.blocking.client', 'jupyter_client.blocking', 'zmq._future', 'zmq.asyncio', 'jupyter_client.asynchronous.channels', 'jupyter_client.asynchronous.client', 'jupyter_client.asynchronous', '_uuid', 'uuid', 'jupyter_client.multikernelmanager', 'jupyter_client', 'ipykernel.connect', 'ipykernel', 'tornado', '_datetime', 'datetime', 'numbers', 'logging.handlers', 'html.entities', 'html', 'array', 'tornado.speedups', 'tornado.util', 'tornado.escape', 'colorama.ansi', '_ctypes', 'ctypes._endian', 'ctypes', 'ctypes.wintypes', 'colorama.win32', 'colorama.winterm', 'colorama.ansitowin32', 'colorama.initialise', 'colorama', 'tornado.log', 'tornado.concurrent', 'tornado.ioloop', '__future__', 'tornado.platform', 'tornado.gen', 'tornado.platform.asyncio', 'zmq.eventloop.ioloop', 'zmq.eventloop', 'zmq.eventloop.zmqstream', 'IPython.core', 'IPython.core.getipython', 'IPython.core.release', 'sysconfig', 'pydoc', 'executing.executing', 'executing.version', 'executing', 'asttokens.line_numbers', 'six', 'six.moves', 'asttokens.util', 'asttokens.mark_tokens', 'asttokens.asttokens', 'asttokens', '_decimal', 'decimal', 'fractions', 'pure_eval.utils', 'pure_eval.my_getattr_static', 'pure_eval.core', 'pure_eval.version', 'pure_eval', 'stack_data.utils', 'stack_data.core', 'stack_data.formatting', 'stack_data.version', 'stack_data', 'pygments', 'pygments.formatters._mapping', 'pygments.plugin', 'pygments.util', 'pygments.formatters', 'pygments.styles', 'pygments.formatter', 'pygments.console', 'pygments.token', 'pygments.style', 'pygments.formatters.terminal256', 'bdb', 'IPython.utils', 'IPython.utils.ipstruct', 'IPython.utils.coloransi', 'IPython.utils.colorable', 'IPython.utils.PyColorize', 'locale', 'IPython.utils.encoding', 'IPython.utils.py3compat', 'IPython.core.excolors', 'cmd', 'codeop', 'code', 'pdb', 'IPython.core.debugger', 'IPython.core.display_trap', 'shlex', 'IPython.utils._process_common', 'IPython.utils._process_win32', 'IPython.utils.process', 'IPython.utils.decorators', 'IPython.utils.path', 'IPython.utils.terminal', 'IPython.core.ultratb', 'IPython.utils._sysinfo', 'IPython.utils.sysinfo', 'IPython.core.crashhandler', 'IPython.utils.importstring', 'IPython.paths', 'IPython.core.profiledir', 'IPython.core.application', 'IPython.terminal', '_hashlib', '_blake2', 'hashlib', 'IPython.core.compilerop', 'IPython.core.error', 'IPython.utils.text', 'IPython.core.magic_arguments', 'getopt', 'IPython.core.display_functions', 'mimetypes', 'IPython.testing', 'IPython.testing.skipdoctest', 'IPython.core.display', 'IPython.lib', 'IPython.lib.display', 'IPython.display', 'IPython.utils.data', 'IPython.core.page', 'IPython.lib.pretty', 'IPython.utils.openpy', 'IPython.utils.dir2', 'IPython.utils.wildcard', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.lexers', 'pygments.filter', 'pygments.filters', 'pygments.regexopt', 'pygments.lexer', 'pygments.unistring', 'pygments.lexers.python', 'pygments.formatters.html', 'IPython.core.oinspect', 'IPython.core.inputtransformer2', 'IPython.core.magic', 'pickleshare', 'IPython.core.hooks', 'IPython.core.autocall', 'IPython.core.macro', 'IPython.core.splitinput', 'IPython.core.prefilter', 'IPython.core.alias', 'IPython.core.builtin_trap', 'IPython.core.displayhook', 'IPython.core.displaypub', 'backcall.backcall', 'backcall', 'IPython.core.events', 'IPython.core.extensions', 'decorator', 'IPython.utils.sentinel', 'IPython.core.formatters', '_sqlite3', 'sqlite3.dbapi2', 'sqlite3', 'IPython.core.history', 'IPython.core.logger', 'IPython.core.payload', 'IPython.core.usage', 'IPython.utils.capture', 'IPython.utils.io', 'IPython.utils.strdispatch', 'IPython.utils.syspathcontext', 'IPython.core.async_helpers', 'IPython.core.interactiveshell', 'prompt_toolkit.application.current', 'prompt_toolkit.eventloop.utils', 'prompt_toolkit.eventloop.async_generator', 'wcwidth.table_wide', 'wcwidth.table_zero', 'wcwidth.unicode_versions', 'wcwidth.wcwidth', 'wcwidth', 'prompt_toolkit.utils', 'prompt_toolkit.eventloop.inputhook', 'prompt_toolkit.eventloop', 'prompt_toolkit.application.run_in_terminal', 'prompt_toolkit.selection', 'prompt_toolkit.clipboard.base', 'prompt_toolkit.clipboard.in_memory', 'prompt_toolkit.clipboard', 'prompt_toolkit.cache', 'prompt_toolkit.enums', 'prompt_toolkit.filters.base', 'prompt_toolkit.filters.app', 'prompt_toolkit.filters.cli', 'prompt_toolkit.filters.utils', 'prompt_toolkit.filters', 'prompt_toolkit.document', 'prompt_toolkit.auto_suggest', 'prompt_toolkit.data_structures', 'prompt_toolkit.styles.base', 'prompt_toolkit.styles.named_colors', 'prompt_toolkit.styles.style', 'prompt_toolkit.styles.defaults', 'prompt_toolkit.styles.pygments', 'colorsys', 'prompt_toolkit.styles.style_transformation', 'prompt_toolkit.styles', 'prompt_toolkit.output.color_depth', 'prompt_toolkit.output.base', 'prompt_toolkit.output.defaults', 'prompt_toolkit.output', 'prompt_toolkit.output.vt100', 'prompt_toolkit.mouse_events', 'prompt_toolkit.formatted_text.base', 'prompt_toolkit.formatted_text.ansi', 'xml', 'xml.dom.domreg', 'xml.dom', 'xml.dom.minicompat', 'xml.dom.NodeFilter', 'xml.dom.xmlbuilder', 'xml.dom.minidom', 'prompt_toolkit.formatted_text.html', 'prompt_toolkit.formatted_text.pygments', 'prompt_toolkit.formatted_text.utils', 'prompt_toolkit.formatted_text', 'prompt_toolkit.completion.base', 'prompt_toolkit.completion.deduplicate', 'prompt_toolkit.completion.filesystem', 'prompt_toolkit.completion.word_completer', 'prompt_toolkit.completion.fuzzy_completer', 'prompt_toolkit.completion.nested', 'prompt_toolkit.completion', 'prompt_toolkit.history', 'prompt_toolkit.keys', 'prompt_toolkit.key_binding.key_bindings', 'prompt_toolkit.key_binding.key_processor', 'prompt_toolkit.key_binding', 'prompt_toolkit.key_binding.vi_state', 'prompt_toolkit.search', 'prompt_toolkit.validation', 'prompt_toolkit.buffer', 'prompt_toolkit.input.base', 'prompt_toolkit.input.defaults', 'prompt_toolkit.input', 'prompt_toolkit.input.typeahead', 'prompt_toolkit.key_binding.bindings', 'prompt_toolkit.key_binding.bindings.scroll', 'prompt_toolkit.key_binding.bindings.page_navigation', 'prompt_toolkit.lexers.base', 'prompt_toolkit.lexers.pygments', 'prompt_toolkit.lexers', 'prompt_toolkit.layout.utils', 'prompt_toolkit.layout.processors', 'prompt_toolkit.layout.controls', 'prompt_toolkit.layout.dimension', 'prompt_toolkit.layout.margins', 'prompt_toolkit.layout.mouse_handlers', 'prompt_toolkit.layout.screen', 'prompt_toolkit.layout.containers', 'prompt_toolkit.layout.layout', 'prompt_toolkit.layout.menus', 'prompt_toolkit.layout.scrollable_pane', 'prompt_toolkit.layout', 'prompt_toolkit.key_binding.bindings.completion', 'prompt_toolkit.key_binding.bindings.named_commands', 'prompt_toolkit.key_binding.bindings.basic', 'prompt_toolkit.key_binding.bindings.cpr', 'prompt_toolkit.key_binding.bindings.emacs', 'prompt_toolkit.key_binding.bindings.mouse', 'prompt_toolkit.input.ansi_escape_sequences', 'prompt_toolkit.input.vt100_parser', 'prompt_toolkit.key_binding.digraphs', 'prompt_toolkit.key_binding.bindings.vi', 'prompt_toolkit.key_binding.defaults', 'prompt_toolkit.key_binding.emacs_state', 'prompt_toolkit.layout.dummy', 'prompt_toolkit.renderer', 'prompt_toolkit.application.application', 'prompt_toolkit.application.dummy', 'prompt_toolkit.application', 'prompt_toolkit.key_binding.bindings.focus', 'prompt_toolkit.widgets.toolbars', 'prompt_toolkit.widgets.base', 'prompt_toolkit.widgets.dialogs', 'prompt_toolkit.widgets.menus', 'prompt_toolkit.widgets', 'prompt_toolkit.shortcuts.dialogs', 'prompt_toolkit.shortcuts.progress_bar.formatters', 'prompt_toolkit.shortcuts.progress_bar.base', 'prompt_toolkit.shortcuts.progress_bar', 'prompt_toolkit.key_binding.bindings.auto_suggest', 'prompt_toolkit.key_binding.bindings.open_in_editor', 'prompt_toolkit.shortcuts.prompt', 'prompt_toolkit.shortcuts.utils', 'prompt_toolkit.shortcuts', 'prompt_toolkit', 'prompt_toolkit.patch_stdout', 'unicodedata', 'IPython.core.latex_symbols', 'IPython.utils.generics', 'parso.utils', 'parso.tree', 'parso.python', 'parso.python.token', 'parso.python.tokenize', 'parso.pgen2.grammar_parser', 'parso.pgen2.generator', 'parso.pgen2', 'parso.parser', 'parso._compatibility', 'difflib', 'parso.python.prefix', 'parso.python.tree', 'parso.python.parser', 'parso.python.diff', 'gc', 'parso.cache', 'parso.normalizer', 'parso.python.errors', 'parso.python.pep8', 'parso.file_io', 'parso.grammar', 'parso', 'jedi.parser_utils', 'jedi.debug', 'jedi.settings', 'jedi.cache', 'jedi.file_io', 'jedi.inference.cache', 'jedi.inference.helpers', 'jedi.inference.utils', 'jedi.inference.base_value', 'jedi.inference.sys_path', 'jedi.inference.recursion', 'jedi.inference.flow_analysis', 'jedi.common', 'jedi.inference.lazy_value', 'jedi.inference.docstrings', 'jedi.plugins', 'jedi.inference.names', 'jedi.inference.filters', 'jedi.inference.compiled.getattr_static', 'jedi.inference.compiled.access', 'jedi.inference.signature', 'jedi.inference.context', 'jedi.inference.compiled.value', 'jedi.inference.compiled', 'jedi.inference.analysis', 'jedi.inference.gradual', 'jedi.inference.value.module', 'jedi.inference.value.dynamic_arrays', 'jedi.inference.value.iterable', 'jedi.inference.arguments', 'jedi.inference.parser_cache', 'jedi.inference.gradual.generics', 'jedi.inference.value.function', 'jedi.inference.value.klass', 'jedi.inference.value.instance', 'jedi.inference.value', 'jedi.inference.gradual.base', 'jedi.inference.gradual.type_var', 'jedi.inference.gradual.typing', 'jedi.inference.gradual.stub_value', 'jedi.inference.gradual.typeshed', 'jedi._compatibility', 'zipfile', 'jedi.inference.compiled.subprocess.functions', 'jedi.api.exceptions', 'jedi.inference.compiled.subprocess', 'jedi.inference.imports', 'jedi.inference.param', 'jedi.inference.gradual.annotation', 'jedi.inference.value.decorator', 'jedi.inference.syntax_tree', 'jedi.inference', 'jedi.inference.gradual.conversion', 'jedi.inference.compiled.mixed', 'pydoc_data', 'pydoc_data.topics', 'jedi.api.keywords', 'jedi.api.completion_cache', 'jedi.api.helpers', 'jedi.api.classes', 'jedi.api.interpreter', 'jedi.api.strings', 'jedi.api.file_name', 'jedi.inference.docstring_utils', 'jedi.api.completion', 'filecmp', 'jedi.api.environment', 'jedi.inference.references', 'jedi.api.project', 'jedi.api.errors', 'jedi.api.refactoring', 'jedi.api.refactoring.extract', 'jedi.inference.gradual.utils', 'jedi.api', 'jedi.plugins.stdlib', 'jedi.plugins.flask', 'jedi.plugins.pytest', 'jedi.plugins.django', 'jedi.plugins.registry', 'jedi', 'IPython.core.completer', 'IPython.terminal.ptutils', 'IPython.lib.clipboard', 'IPython.terminal.shortcuts', 'concurrent.futures.thread', 'IPython.terminal.debugger', 'IPython.terminal.magics', 'IPython.terminal.pt_inputhooks', 'IPython.terminal.prompts', 'IPython.terminal.interactiveshell', 'IPython.core.magics.auto', 'IPython.core.magics.basic', 'email', 'http', 'email.errors', 'email.quoprimime', 'email.base64mime', 'quopri', 'email.encoders', 'email.charset', 'email.header', 'calendar', 'email._parseaddr', 'email.utils', 'email._policybase', 'email.feedparser', 'email.parser', 'uu', 'email._encoded_words', 'email.iterators', 'email.message', 'http.client', 'urllib.response', 'urllib.error', 'nturl2path', 'urllib.request', 'IPython.utils.contexts', 'IPython.core.magics.code', 'IPython.core.magics.config', 'IPython.core.magics.display', '_lsprof', 'profile', 'cProfile', 'dataclasses', 'pstats', 'timeit', 'IPython.utils.module_paths', 'IPython.utils.timing', 'IPython.core.magics.execution', 'IPython.core.magics.extension', 'IPython.core.magics.history', 'IPython.core.magics.logging', 'IPython.core.magics.namespace', 'IPython.core.magics.osm', 'IPython.core.magics.packaging', 'IPython.core.pylabtools', 'IPython.core.magics.pylab', 'IPython.core.magics.script', 'IPython.core.magics', 'IPython.core.shellapp', 'IPython.extensions', 'IPython.extensions.storemagic', 'IPython.terminal.ipapp', 'IPython.terminal.embed', 'IPython.utils.frame', 'IPython', 'imp', 'hmac', 'dateutil._version', 'dateutil', 'dateutil._common', 'dateutil.relativedelta', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.win', 'dateutil.tz.tz', 'dateutil.tz', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', '_strptime', 'jupyter_client.jsonutil', 'jupyter_client.adapter', 'jupyter_client.session', 'ipykernel.iostream', 'ipykernel.control', 'ipykernel.heartbeat', 'IPython.utils.tokenutil', 'psutil._common', 'psutil._compat', 'psutil._psutil_windows', 'psutil._pswindows', 'psutil', 'tornado.locks', 'tornado.queues', 'ipykernel.jsonutil', 'ipykernel.kernelbase', 'ipykernel.comm.comm', 'ipykernel.comm.manager', 'ipykernel.comm', 'IPython.core.payloadpage', 'ipykernel.displayhook', 'ipykernel.zmqshell', 'setuptools._distutils', 'distutils.debug', 'distutils.errors', 'distutils.fancy_getopt', 'distutils.dep_util', 'distutils.log', 'distutils.spawn', 'distutils.py35compat', 'distutils.util', 'distutils.dist', 'distutils.dir_util', 'distutils.file_util', 'distutils.archive_util', 'distutils.cmd', 'configparser', 'distutils.config', 'distutils.extension', 'distutils.core', '_distutils_hack.override', 'setuptools._deprecation_warning', 'xml.parsers', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'xml.parsers.expat', 'plistlib', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources._vendor.jaraco', 'pkg_resources.extern.jaraco', 'importlib._common', 'importlib.resources', 'pkg_resources._vendor.more_itertools.recipes', 'pkg_resources._vendor.more_itertools.more', 'pkg_resources._vendor.more_itertools', 'pkg_resources.extern.more_itertools', 'pkg_resources.extern.jaraco.functools', 'pkg_resources.extern.jaraco.context', 'pkg_resources.extern.jaraco.text', 'win32api', '_win32sysloader', 'pywintypes', 'pythoncom', 'win32com.gen_py', 'win32com', 'win32com.shell', 'pkg_resources._vendor.appdirs', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources._vendor.packaging', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.version', 'pkg_resources._vendor.packaging._manylinux', 'pkg_resources._vendor.packaging._musllinux', 'pkg_resources.extern.packaging.tags', 'pkg_resources.extern.packaging.utils', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources._vendor.pyparsing', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.packaging.markers', 'pkg_resources.extern.packaging.requirements', 'pkg_resources', 'setuptools.version', 'distutils.filelist', 'setuptools.monkey', 'setuptools.extension', 'distutils.command', 'setuptools.extern', 'setuptools._vendor', 'setuptools._vendor.packaging.__about__', 'setuptools._vendor.packaging', 'setuptools.extern.packaging', 'setuptools._vendor.ordered_set', 'setuptools.extern.ordered_set', 'setuptools._vendor.more_itertools.recipes', 'setuptools._vendor.more_itertools.more', 'setuptools._vendor.more_itertools', 'setuptools.extern.more_itertools', 'setuptools._vendor.pyparsing', 'setuptools.extern.pyparsing', 'setuptools._vendor.packaging._manylinux', 'setuptools._vendor.packaging._musllinux', 'setuptools.extern.packaging.tags', 'setuptools.extern.packaging._structures', 'setuptools.extern.packaging.version', 'setuptools.extern.packaging.utils', 'setuptools.extern.packaging.specifiers', 'setuptools.extern.packaging.markers', 'setuptools.extern.packaging.requirements', 'setuptools._vendor.jaraco', 'setuptools.extern.jaraco', 'setuptools.extern.jaraco.context', 'setuptools.extern.jaraco.functools', '_csv', 'csv', 'setuptools._vendor.zipp', 'setuptools._vendor.importlib_metadata._functools', 'setuptools._vendor.importlib_metadata._text', 'setuptools._vendor.importlib_metadata._adapters', 'setuptools._vendor.importlib_metadata._compat', 'setuptools._vendor.importlib_metadata._meta', 'setuptools._vendor.importlib_metadata._collections', 'setuptools._vendor.importlib_metadata._itertools', 'setuptools._vendor.importlib_metadata', 'setuptools.extern.importlib_metadata', 'setuptools._vendor.nspektr._compat', 'setuptools._vendor.nspektr', 'setuptools.extern.nspektr', 'zipp', 'importlib_metadata._functools', 'importlib_metadata._text', 'importlib_metadata._adapters', 'importlib_metadata._compat', 'importlib_metadata._meta', 'importlib_metadata._collections', 'importlib_metadata._itertools', 'importlib_metadata', 'setuptools._importlib', 'distutils.command.bdist', 'setuptools.command', 'setuptools.windows_support', 'setuptools.config.expand', 'setuptools.config.setupcfg', 'setuptools.config', 'setuptools.errors', 'email._header_value_parser', 'email.headerregistry', 'setuptools.config._apply_pyprojecttoml', 'setuptools.config.pyprojecttoml', 'setuptools.discovery', 'setuptools.extern.jaraco.text', 'setuptools._reqs', 'setuptools._itertools', 'setuptools._entry_points', 'setuptools.dist', 'setuptools.py34compat', 'setuptools._imp', 'setuptools.depends', 'setuptools.logging', 'distutils.ccompiler', 'distutils.msvc9compiler', 'setuptools.msvc', 'unittest.util', 'unittest.result', 'unittest.case', 'unittest.suite', 'unittest.loader', 'unittest.signals', 'unittest.runner', 'unittest.main', 'unittest', 'unittest.mock', 'distutils._msvccompiler', 'setuptools', 'distutils', 'distutils.version', 'ipykernel.eventloops', 'ipykernel.compiler', 'debugpy._version', 'debugpy.common', 'debugpy.common.json', 'debugpy.common.fmt', 'debugpy.common.compat', 'debugpy', 'debugpy._vendored._util', 'debugpy._vendored', '_pydevd_bundle', 'encodings.ascii', 'stringprep', 'encodings.idna', '_pydevd_bundle.pydevd_vm_type', '_pydev_imps', 'xmlrpc', 'gzip', 'xmlrpc.client', 'socketserver', 'http.server', 'xmlrpc.server', '_pydev_imps._pydev_saved_modules', '_pydevd_bundle.pydevd_constants', '_pydev_bundle', '_pydev_runfiles', '_pydevd_frame_eval', 'pydev_ipython', 'pydevd_concurrency_analyser', 'pydevd_plugins', '_pydev_bundle.pydev_log', '_pydev_bundle._pydev_filesystem_encoding', '_pydevd_bundle.pydevd_comm_constants', 'pydevd_file_utils', '_pydev_imps._pydev_execfile', '_pydevd_bundle.pydevd_exec2', '_pydev_bundle.pydev_imports', '_pydev_bundle.pydev_is_thread_alive', '_pydev_bundle.pydev_override', 'pydevd_plugins.extensions', '_pydevd_bundle.pydevd_extension_utils', '_pydevd_bundle.pydevd_frame_utils', '_pydevd_bundle.pydevd_filtering', '_pydevd_bundle.pydevd_io', '_pydevd_bundle.pydevd_utils', '_pydev_bundle._pydev_tipper_common', '_pydev_bundle._pydev_imports_tipper', '_pydev_bundle._pydev_calltip_util', '_pydevd_bundle.pydevd_safe_repr', '_pydevd_bundle.pydevd_resolver', '_pydevd_bundle.pydevd_extension_api', '_pydevd_bundle.pydevd_xml', '_pydevd_bundle.pydevd_dont_trace', '_pydevd_frame_eval.vendored', '_pydevd_frame_eval.vendored.bytecode.flags', '_pydevd_frame_eval.vendored.bytecode.instr', '_pydevd_frame_eval.vendored.bytecode.bytecode', '_pydevd_frame_eval.vendored.bytecode.concrete', '_pydevd_frame_eval.vendored.bytecode.cfg', '_pydevd_frame_eval.vendored.bytecode', '_pydevd_bundle.pydevd_bytecode_utils', '_pydevd_bundle.pydevd_cython', '_pydevd_bundle.pydevd_cython_wrapper', '_pydevd_bundle.pydevd_additional_thread_info', '_pydevd_bundle.pydevd_thread_lifecycle', '_pydevd_bundle.pydevd_save_locals', '_pydevd_bundle.pydevd_defaults', '_pydev_bundle.pydev_monkey', 'pydevd_tracing', '_pydevd_bundle.pydevd_daemon_thread', '_pydevd_bundle.pydevd_timeout', '_pydevd_bundle.pydevd_vars', '_pydev_bundle.pydev_console_utils', '_pydevd_bundle.pydevd_import_class', '_pydevd_bundle.pydevd_breakpoints', '_pydevd_bundle.pydevd_custom_frames', '_pydevd_bundle.pydevd_dont_trace_files', '_pydevd_bundle.pydevd_net_command', '_pydev_bundle.pydev_umd', 'pydevconsole', '_pydev_bundle._pydev_completer', '_pydevd_bundle.pydevd_net_command_factory_xml', '_pydevd_bundle.pydevd_frame', '_pydevd_bundle.pydevd_additional_thread_info_regular', '_pydevd_bundle.pydevd_trace_dispatch', '_pydevd_frame_eval.pydevd_frame_eval_main', '_pydevd_bundle.pydevd_source_mapping', 'pydevd_concurrency_analyser.pydevd_thread_wrappers', 'pydevd_concurrency_analyser.pydevd_concurrency_logger', '_pydevd_bundle._debug_adapter', '_pydevd_bundle._debug_adapter.pydevd_schema_log', '_pydevd_bundle._debug_adapter.pydevd_base_schema', '_pydevd_bundle._debug_adapter.pydevd_schema', '_pydevd_bundle.pydevd_reload', '_pydev_bundle.fsnotify', '_pydevd_bundle.pydevd_console', '_pydevd_bundle.pydevd_comm', '_pydevd_bundle.pydevd_net_command_factory_json', '_pydevd_bundle.pydevd_collect_bytecode_info', '_pydevd_bundle.pydevd_api', '_pydevd_bundle.pydevd_json_debug_options', '_pydevd_bundle.pydevd_process_net_command_json', '_pydevd_bundle.pydevd_traceproperty', '_pydevd_bundle.pydevd_process_net_command', '_pydevd_bundle.pydevd_suspended_frames', '_pydevd_bundle.pydevd_trace_api', 'pydevd_plugins.django_debug', 'pydevd_plugins.jinja2_debug', '_pydevd_bundle.pydevd_plugin_utils', 'pydevd_plugins.extensions.types', 'pydevd_plugins.extensions.types.pydevd_helpers', 'pydevd_plugins.extensions.types.pydevd_plugin_numpy_types', 'pydevd_plugins.extensions.types.pydevd_plugins_django_form_str', 'pydevd', 'debugpy._vendored.force_pydevd', 'debugpy.server', 'debugpy.adapter', 'debugpy.common.timestamp', 'debugpy.common.util', 'debugpy.common.log', 'debugpy.common.sockets', 'debugpy.server.api', 'ipykernel.debugger', 'ipykernel.ipkernel', 'ipykernel.parentpoller', 'ipykernel.kernelapp', 'win32security', 'ntsecuritycon', 'faulthandler', 'IPython.core.completerlib', 'logging.config', 'pythonjsonlogger', 'pythonjsonlogger.jsonlogger', 'daiquiri.types', 'daiquiri.formatter', 'daiquiri.handlers', 'daiquiri.output', 'daiquiri', 'jupyter_require.__about__', 'csscompressor', 'jupyter_require.core', 'jupyter_require.notebook', 'jupyter_require', 'jupyter_nbutils.__about__', 'jupyter_nbutils.config', 'jupyter_nbutils.utils', 'jupyter_nbutils', 'jupyter_require.magic', 'numpy._globals', 'numpy.__config__', 'numpy._distributor_init', 'numpy._version', 'numpy.version', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core._asarray', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core._machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.stride_tricks', 'numpy.lib.twodim_base', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', '_cython_0_29_30', 'numpy.random._common', 'secrets', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'pytz', 'pandas._typing', '_cython_0_29_28', 'pandas._libs.tslibs.dtypes', 'pandas._libs.tslibs.base', 'pandas._libs.tslibs.np_datetime', 'pandas._libs.tslibs.nattype', 'pandas._libs.tslibs.timezones', 'pandas._libs.tslibs.ccalendar', 'pandas._libs.tslibs.tzconversion', 'pandas._config.config', 'pandas._config.dates', 'pandas._config.display', 'pandas._config', 'pandas._config.localization', 'pandas._libs.tslibs.strptime', 'pandas._libs.tslibs.fields', 'pandas._libs.tslibs.timedeltas', 'pandas._libs.tslibs.timestamps', 'dateutil.easter', 'pandas._libs.properties', 'pandas._libs.tslibs.offsets', 'pandas._libs.tslibs.parsing', 'pandas._libs.tslibs.conversion', 'pandas._libs.tslibs.period', 'pandas._libs.tslibs.vectorized', 'pandas._libs.tslibs', 'pandas._libs.ops_dispatch', 'pandas._libs.missing', 'pandas._libs.hashtable', 'pandas._libs.algos', 'pandas._libs.interval', 'pandas._libs', 'pandas.util._decorators', 'pandas.core', 'pandas.core.util', 'pandas._libs.tslib', 'pandas._libs.lib', 'pandas._libs.hashing', 'pandas.core.dtypes', 'pandas.util._exceptions', 'pandas.errors', 'pandas.core.dtypes.generic', 'pandas.core.dtypes.base', 'pandas.core.dtypes.inference', 'pandas.core.dtypes.dtypes', 'pandas.core.dtypes.common', 'pandas.core.util.hashing', 'pandas.util', 'pandas.util.version', 'pandas.compat.numpy', 'pandas.compat.pyarrow', 'pandas.compat', 'pandas.core.config_init', 'pandas.core.dtypes.missing', 'pandas.util._validators', 'pandas.core.dtypes.cast', 'pandas.core.dtypes.concat', 'pandas.core.array_algos', 'pandas.core.common', 'pandas.core.construction', 'pandas.core.array_algos.take', 'pandas.core.indexers.utils', 'pandas.core.indexers', 'pandas.core.algorithms', 'pandas.compat.numpy.function', 'pandas.core.roperator', 'pandas._libs.ops', 'pandas.core.computation', 'pandas.compat._optional', 'numexpr.interpreter', 'packaging.__about__', 'packaging', 'packaging._structures', 'packaging.version', 'numexpr.expressions', 'numexpr.utils', 'numexpr.necompiler', 'numexpr.version', 'numexpr', 'pandas.core.computation.check', 'pandas.core.computation.expressions', 'pandas.core.ops.missing', 'pandas.core.ops.dispatch', 'pandas.core.ops.invalid', 'pandas.core.ops.array_ops', 'pandas.core.ops.common', 'pandas.core.ops.docstrings', 'pandas.core.ops.mask_ops', 'pandas.core.ops.methods', 'pandas.core.ops', 'pandas.core.arraylike', 'pandas.core.missing', 'pandas.core.array_algos.quantile', 'pandas.core.sorting', 'pandas.core.arrays.base', 'bottleneck.benchmark', 'bottleneck.benchmark.autotimeit', 'bottleneck.benchmark.bench', 'bottleneck.benchmark.bench_detailed', 'bottleneck.tests', 'bottleneck.tests.util', 'bottleneck.slow.reduce', 'bottleneck.slow.nonreduce', 'bottleneck.slow.nonreduce_axis', 'bottleneck.slow.move', 'bottleneck.slow', 'bottleneck._pytesttester', 'bottleneck.move', 'bottleneck.nonreduce', 'bottleneck.nonreduce_axis', 'bottleneck.reduce', 'bottleneck._version', 'bottleneck', 'pandas.core.nanops', 'pandas.core.array_algos.masked_reductions', 'pandas.core.arrays.masked', 'pandas.core.arrays.boolean', 'pandas._libs.arrays', 'pandas.core.accessor', 'pandas.core.array_algos.transforms', 'pandas.core.arrays._mixins', 'pandas.core.base', 'pandas.core.strings.accessor', 'pandas.core.strings.base', 'pandas.core.strings', 'pandas.core.strings.object_array', 'pandas.io', 'pandas.io.formats', 'pandas.io.formats.console', 'pandas.core.arrays.categorical', 'pandas.tseries', 'pandas.tseries.frequencies', 'pandas.core.arrays.datetimelike', 'pandas.core.arrays._ranges', 'pandas.core.arrays.numeric', 'pandas.core.tools', 'pandas.core.tools.numeric', 'pandas.core.arrays.integer', 'pandas.tseries.offsets', 'pandas.core.arrays.datetimes', 'pandas.core.arrays.floating', 'pandas.core.indexes', 'pandas._libs.index', 'pandas._libs.join', 'pandas.core.array_algos.putmask', 'pandas._libs.sparse', 'pandas.core.arrays.sparse.dtype', 'pandas.io.formats.printing', 'pandas.core.arrays.sparse.array', 'pandas.core.arrays.sparse.accessor', 'pandas.core.arrays.sparse', 'pandas.core.indexes.frozen', 'pandas.core.indexes.base', 'pandas.core.arrays.interval', 'pandas.core.arrays.numpy_', 'pandas.core.arrays.period', 'pandas.core.arrays.string_', 'pandas.core.arrays.string_arrow', 'pandas.core.arrays.timedeltas', 'pandas.core.arrays', 'pandas.core.flags', 'pandas._libs.reduction', 'pandas.core.apply', 'pandas._libs.indexing', 'pandas.core.indexes.extension', 'pandas.core.indexes.category', 'pandas.core.indexes.numeric', 'pandas.core.indexes.range', 'pandas.core.tools.timedeltas', 'pandas.core.indexes.datetimelike', 'pandas.core.tools.times', 'pandas.core.indexes.datetimes', 'pandas.core.indexes.multi', 'pandas.core.indexes.timedeltas', 'pandas.core.indexes.interval', 'pandas.core.indexes.period', 'pandas.core.indexes.api', 'pandas.core.indexing', 'pandas.core.array_algos.replace', 'pandas.core.reshape', 'pandas._libs.internals', 'pandas._libs.writers', 'pandas.core.internals.blocks', 'pandas.core.internals.api', 'pandas.core.internals.base', 'pandas.core.internals.array_manager', 'pandas.core.internals.ops', 'pandas.core.internals.managers', 'pandas.core.internals.concat', 'pandas.core.internals', 'pandas.core.reshape.concat', 'mmap', 'pandas.core.shared_docs', 'pandas.io.common', 'pandas.io.formats.format', 'pandas.core.describe', 'pandas.core.internals.construction', 'pandas.core.sample', 'pandas._libs.window', 'pandas._libs.window.aggregations', 'pandas._libs.window.indexers', 'pandas.core.indexers.objects', 'pandas.core.util.numba_', 'pandas.core.window.common', 'pandas.core.window.doc', 'pandas.core.window.numba_', 'pandas.core.window.online', 'pandas.core._numba', 'pandas.core._numba.executor', 'pandas.core.window.rolling', 'pandas.core.window.ewm', 'pandas.core.window.expanding', 'pandas.core.window', 'pandas.core.generic', 'pandas.core.reshape.util', 'pandas.core.reshape.melt', 'pandas._libs.reshape', 'pandas.core.indexes.accessors', 'pandas.arrays', 'pandas.core.tools.datetimes', 'pandas.io.formats.info', 'pandas.plotting._core', 'pandas.plotting._misc', 'pandas.plotting', 'pandas.core.series', 'pandas.core.frame', 'pandas.core.groupby.base', 'pandas._libs.groupby', 'pandas.core.groupby.numba_', 'pandas.core.groupby.categorical', 'pandas.core.groupby.grouper', 'pandas.core.groupby.ops', 'pandas.core.groupby.indexing', 'pandas.core.groupby.groupby', 'pandas.core.groupby.generic', 'pandas.core.groupby', 'pandas.core.api', 'pandas.tseries.api', 'pandas.core.computation.common', 'pandas.core.computation.align', 'pandas.compat.chainmap', 'pandas.core.computation.scope', 'pandas.core.computation.ops', 'pandas.core.computation.parsing', 'pandas.core.computation.expr', 'pandas.core.computation.engines', 'pandas.core.computation.eval', 'pandas.core.computation.api', 'pandas.core.reshape.merge', 'pandas.core.reshape.pivot', 'pandas.core.reshape.reshape', 'pandas.core.reshape.tile', 'pandas.core.reshape.api', 'pandas.api.extensions', 'pandas.api.indexers', 'pandas.core.dtypes.api', 'pandas.api.types', 'pandas.api', 'pandas._testing._random', 'pandas._testing.contexts', 'pandas._testing._io', 'pandas._testing._warnings', 'cmath', 'pandas._libs.testing', 'pandas._testing.asserters', 'pandas._testing.compat', 'pandas._testing', 'pandas.testing', 'pandas.util._print_versions', 'pandas.io.clipboards', 'pandas._libs.parsers', 'pandas.io.excel._util', 'pandas.io.date_converters', 'pandas.io.parsers.base_parser', 'pandas.io.parsers.arrow_parser_wrapper', 'pandas.io.parsers.c_parser_wrapper', 'pandas.io.parsers.python_parser', 'pandas.io.parsers.readers', 'pandas.io.parsers', 'pandas.io.excel._odfreader', 'pandas.io.excel._openpyxl', 'pandas.io.excel._pyxlsb', 'pandas.io.excel._xlrd', 'pandas.io.excel._base', 'pandas._libs.json', 'pandas.io.formats._color_data', 'pandas.io.formats.css', 'pandas.io.formats.excel', 'pandas.io.excel._odswriter', 'pandas.io.excel._xlsxwriter', 'pandas.io.excel._xlwt', 'pandas.io.excel', 'pandas.io.feather_format', 'pandas.io.gbq', 'pandas.io.html', 'pandas.io.json._normalize', 'pandas.io.json._table_schema', 'pandas.io.json._json', 'pandas.io.json', 'pandas.io.orc', 'pandas.io.parquet', 'pandas.compat.pickle_compat', 'pandas.io.pickle', 'pandas.core.computation.pytables', 'pandas.io.pytables', 'pandas.io.sas.sasreader', 'pandas.io.sas', 'pandas.io.spss', 'pandas.io.sql', 'pandas.io.stata', 'pandas.io.xml', 'pandas.io.api', 'pandas.util._tester', 'pandas._version', 'pandas', 'summarytools', 'summarytools.htmlwidgets', 'summarytools.summarytools', 'matplotlib', 'matplotlib._api.deprecation', 'matplotlib._api', 'matplotlib._version', 'matplotlib._c_internal_utils', 'matplotlib.cbook', 'matplotlib.docstring', 'PIL._version', 'PIL', 'defusedxml.common', 'defusedxml', 'xml.etree', 'xml.etree.ElementPath', '_elementtree', 'xml.etree.ElementTree', 'defusedxml.ElementTree', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._util', 'PIL._imaging', 'cffi.lock', 'cffi.error', 'cffi.model', 'cffi.api', 'cffi', 'PIL.Image', 'PIL.ImageChops', 'PIL.ImageFile', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'PIL.ImagePalette', 'PIL.ImageSequence', 'PIL.PngImagePlugin', 'matplotlib._path', 'matplotlib.bezier', 'matplotlib.path', 'matplotlib.transforms', 'matplotlib.ticker', 'matplotlib.scale', 'matplotlib._color_data', 'matplotlib.colors', 'pyparsing.util', 'pyparsing.unicode', 'pyparsing.exceptions', 'pyparsing.actions', 'pyparsing.results', 'pyparsing.core', 'pyparsing.helpers', 'pyparsing.testing', 'pyparsing.common', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib._enums', 'cycler', 'matplotlib.rcsetup', 'matplotlib.ft2font', 'kiwisolver']
2023-04-20 18:05:32,212 [9988] DEBUG    matplotlib:275: [JupyterRequire] CACHEDIR=C:\Users\adity\.matplotlib
2023-04-20 18:05:32,219 [9988] DEBUG    matplotlib.font_manager:1439: [JupyterRequire] Using fontManager instance from C:\Users\adity\.matplotlib\fontlist-v330.json
2023-04-20 18:05:32,835 [9988] DEBUG    matplotlib.pyplot:280: [JupyterRequire] Loaded backend module://matplotlib_inline.backend_inline version unknown.
2023-04-20 18:05:32,840 [9988] DEBUG    matplotlib.pyplot:280: [JupyterRequire] Loaded backend module://matplotlib_inline.backend_inline version unknown.
2023-04-20 18:05:39,990 [9988] DEBUG    matplotlib.font_manager:1329: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2023-04-20 18:05:39,990 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:05:39,991 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:05:39,991 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:39,991 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2023-04-20 18:05:39,991 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2023-04-20 18:05:39,993 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:05:39,993 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:05:39,994 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:05:39,994 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:39,994 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:05:39,995 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:39,995 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:05:39,995 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:39,995 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:39,996 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:39,996 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:05:39,996 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:05:39,997 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:39,997 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:39,997 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2023-04-20 18:05:39,998 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:39,998 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:39,998 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:05:39,999 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:05:40,000 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:05:40,000 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,000 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,001 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:05:40,001 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:05:40,002 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,002 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,002 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,002 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:05:40,003 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,003 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:05:40,003 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,004 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,004 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2023-04-20 18:05:40,004 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLSNECB.TTF', name='Gill Sans MT Ext Condensed Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-20 18:05:40,005 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanz.ttf', name='Constantia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:05:40,005 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LEELAWAD.TTF', name='Leelawadee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,005 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\monbaiti.ttf', name='Mongolian Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,006 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-MEDIUM.TTF', name='Dubai', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-04-20 18:05:40,006 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-04-20 18:05:40,006 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FTLTLT.TTF', name='Footlight MT Light', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-20 18:05:40,007 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibril.ttf', name='Calibri', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-20 18:05:40,007 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSI.TTF', name='Goudy Old Style', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:05:40,007 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisbi.ttf', name='Segoe UI', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-20 18:05:40,008 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCCB___.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-04-20 18:05:40,008 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXD.TTF', name='Lucida Fax', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-20 18:05:40,008 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2023-04-20 18:05:40,009 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BSSYM7.TTF', name='Bookshelf Symbol 7', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,009 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAMDCN.TTF', name='Franklin Gothic Medium Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-20 18:05:40,009 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framdit.ttf', name='Franklin Gothic Medium', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:05:40,011 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSB.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:05:40,011 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-LIGHT.TTF', name='Dubai', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-20 18:05:40,011 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCC____.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-20 18:05:40,012 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_B.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:05:40,012 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COOPBL.TTF', name='Cooper Black', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,012 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNI.TTF', name='Arial', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 7.613636363636363
2023-04-20 18:05:40,013 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\INFROMAN.TTF', name='Informal Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,013 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSB.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-20 18:05:40,013 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BERNHC.TTF', name='Bernard MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-20 18:05:40,014 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEB.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-20 18:05:40,014 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCEDSCR.TTF', name='Edwardian Script ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,014 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consola.ttf', name='Consolas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,014 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,016 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\holomdl2.ttf', name='HoloLens MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,016 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COLONNA.TTF', name='Colonna MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,017 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYR.TTF', name='Agency FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,017 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRITANIC.TTF', name='Britannic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,018 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiai.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:05:40,018 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:05:40,018 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaS.ttf', name='Nirmala UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2023-04-20 18:05:40,018 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CHILLER.TTF', name='Chiller', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,019 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,020 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAB.TTF', name='Book Antiqua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:05:40,020 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothM.ttc', name='Yu Gothic', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-04-20 18:05:40,021 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG2.TTF', name='Wingdings 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,021 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Nirmala.ttf', name='Nirmala UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,021 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelUIsl.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2023-04-20 18:05:40,021 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriai.ttf', name='Cambria', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:05:40,022 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariali.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
2023-04-20 18:05:40,022 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARA.TTF', name='Garamond', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,022 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSPCL.TTF', name='MS Reference Specialty', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,024 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-REGULAR.TTF', name='Dubai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,024 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LHANDW.TTF', name='Lucida Handwriting', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:05:40,024 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:05:40,024 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comici.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:05:40,025 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTAUR.TTF', name='Centaur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,025 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEBO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-20 18:05:40,025 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ONYX.TTF', name='Onyx', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,026 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrima.ttf', name='Ebrima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,026 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFI.TTF', name='Californian FB', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:05:40,027 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERBI___.TTF', name='Perpetua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:05:40,027 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbell.ttf', name='Corbel', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-20 18:05:40,028 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILI____.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:05:40,028 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segmdl2.ttf', name='Segoe MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,028 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-BOLD.TTF', name='Dubai', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:05:40,028 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FELIXTI.TTF', name='Felix Titling', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,029 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbd.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
2023-04-20 18:05:40,029 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taileb.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:05:40,030 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeprb.ttf', name='Segoe Print', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:05:40,030 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoescb.ttf', name='Segoe Script', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:05:40,031 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITE.TTF', name='Lucida Bright', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,031 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhbd.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:05:40,031 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\times.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,031 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisb.ttf', name='Segoe UI', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-20 18:05:40,032 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSDB.TTF', name='Berlin Sans FB Demi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:05:40,032 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbi.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
2023-04-20 18:05:40,032 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesi.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:05:40,033 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADM.TTF', name='Franklin Gothic Demi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,033 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERTI.TTF', name='High Tower Text', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:05:40,034 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF-Italic.ttf', name='Sitka', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:05:40,034 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsun.ttc', name='SimSun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,034 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTI.TTF', name='Calisto MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:05:40,035 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCMI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:05:40,035 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaral.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,035 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\lucon.ttf', name='Lucida Console', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,037 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_I.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:05:40,037 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mvboli.ttf', name='MV Boli', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,037 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiab.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:05:40,038 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\l_10646.ttf', name='Lucida Sans Unicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,038 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTIBD.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:05:40,038 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNT.TTF', name='Elephant', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,038 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASMD.TTF', name='Eras Medium ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,039 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MSUIGHUR.TTF', name='Microsoft Uighur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,039 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYB.TTF', name='Agency FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:05:40,039 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MSUIGHUB.TTF', name='Microsoft Uighur', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:05:40,040 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicbd.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:05:40,040 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMIT.TTF', name='Franklin Gothic Demi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:05:40,041 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKEB.TTF', name='Rockwell Extra Bold', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
2023-04-20 18:05:40,041 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PER_____.TTF', name='Perpetua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,042 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VINERITC.TTF', name='Viner Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,042 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\marlett.ttf', name='Marlett', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-04-20 18:05:40,042 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrili.ttf', name='Calibri', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-04-20 18:05:40,043 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICBI.TTF', name='Century Gothic', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:05:40,043 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ALGER.TTF', name='Algerian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,043 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOS.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,044 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelz.ttf', name='Corbel', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:05:40,044 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILB____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:05:40,044 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUABI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:05:40,044 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\sylfaen.ttf', name='Sylfaen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,046 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriaz.ttf', name='Cambria', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:05:40,046 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanaz.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
2023-04-20 18:05:40,046 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constan.ttf', name='Constantia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,047 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTILI.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-20 18:05:40,047 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCM_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,047 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhl.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2023-04-20 18:05:40,048 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOS.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-20 18:05:40,048 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HATTEN.TTF', name='Haettenschweiler', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,049 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JOKERMAN.TTF', name='Jokerman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,049 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ENGR.TTF', name='Engravers MT', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-04-20 18:05:40,049 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARAIT.TTF', name='Garamond', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:05:40,049 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,050 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelli.ttf', name='Corbel', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-04-20 18:05:40,050 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constani.ttf', name='Constantia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:05:40,050 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIST.TTF', name='Calisto MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,050 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PARCHM.TTF', name='Parchment', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,050 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\himalaya.ttf', name='Microsoft Himalaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,052 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRADHITC.TTF', name='Bradley Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,052 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\wingding.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,052 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtextb.ttf', name='Myanmar Text', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:05:40,052 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG3.TTF', name='Wingdings 3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,053 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGSOL.TTF', name='Niagara Solid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,053 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarali.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:05:40,053 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKI.TTF', name='Rockwell', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:05:40,053 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolab.ttf', name='Consolas', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:05:40,053 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXDI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-20 18:05:40,055 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BAUHS93.TTF', name='Bauhaus 93', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,055 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisli.ttf', name='Segoe UI', style='italic', variant='normal', weight=350, stretch='normal', size='scalable')) = 11.0975
2023-04-20 18:05:40,055 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELL.TTF', name='Bell MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,056 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2023-04-20 18:05:40,056 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyi.ttf', name='Microsoft Yi Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,056 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSR.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,056 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHVIT.TTF', name='Franklin Gothic Heavy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:05:40,056 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OLDENGL.TTF', name='Old English Text MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,057 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbel.ttf', name='Corbel', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,057 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLB.TTF', name='Bell MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:05:40,057 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelaUIb.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:05:40,057 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHV.TTF', name='Franklin Gothic Heavy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,058 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OUTLOOK.TTF', name='MS Outlook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,058 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PRISTINA.TTF', name='Pristina', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,058 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERI____.TTF', name='Perpetua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:05:40,058 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtext.ttf', name='Myanmar Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,059 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSAN.TTF', name='MS Reference Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,059 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERB____.TTF', name='Perpetua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:05:40,059 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTEXTRA.TTF', name='MT Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,059 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKB.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:05:40,059 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARABD.TTF', name='Garamond', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:05:40,061 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cour.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,061 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mingliub.ttc', name='MingLiU-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,061 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICB.TTF', name='Century Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:05:40,061 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspa.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,062 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VIVALDII.TTF', name='Vivaldi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:05:40,062 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAGE.TTF', name='Rage Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:05:40,062 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-20 18:05:40,062 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2023-04-20 18:05:40,063 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MATURASC.TTF', name='Matura MT Script Capitals', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,063 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comic.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,064 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbi.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:05:40,064 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothR.ttc', name='Yu Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,064 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palai.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:05:40,064 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MOD20.TTF', name='Modern No. 20', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,064 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMCN.TTF', name='Franklin Gothic Demi Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-20 18:05:40,065 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrimabd.ttf', name='Ebrima', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:05:40,065 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\javatext.ttf', name='Javanese Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,065 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CASTELAR.TTF', name='Castellar', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,066 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSDI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-20 18:05:40,066 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelawUI.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,066 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAX.TTF', name='Lucida Fax', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,066 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunbd.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:05:40,068 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF.ttf', name='Sitka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,068 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTL.TTF', name='Copperplate Gothic Light', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,068 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
2023-04-20 18:05:40,069 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeui.ttf', name='Segoe UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,069 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Gabriola.ttf', name='Gabriola', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,069 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTBI.TTF', name='Calisto MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:05:40,070 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicz.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:05:40,070 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALN.TTF', name='Arial', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 6.613636363636363
2023-04-20 18:05:40,070 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKBI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:05:40,071 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FREESCPT.TTF', name='Freestyle Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,071 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTURY.TTF', name='Century', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,071 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaB.ttf', name='Nirmala UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:05:40,072 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSB.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:05:40,072 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSD.TTF', name='Lucida Sans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-20 18:05:40,072 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuisl.ttf', name='Segoe UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2023-04-20 18:05:40,072 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:05:40,073 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:05:40,073 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguihis.ttf', name='Segoe UI Historic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,073 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCB____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-04-20 18:05:40,075 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambria.ttc', name='Cambria', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,075 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKBI.TTF', name='Rockwell', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:05:40,075 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGENG.TTF', name='Niagara Engraved', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,076 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisym.ttf', name='Segoe UI Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,076 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inkfree.ttf', name='Ink Free', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,076 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASBD.TTF', name='Eras Bold ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,077 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILC____.TTF', name='Gill Sans MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-20 18:05:40,077 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candara.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,077 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\bahnschrift.ttf', name='Bahnschrift', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,078 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BROADW.TTF', name='Broadway', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,078 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolaz.ttf', name='Consolas', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:05:40,078 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CBI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2023-04-20 18:05:40,079 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuii.ttf', name='Segoe UI', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:05:40,079 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibli.ttf', name='Segoe UI', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2023-04-20 18:05:40,080 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEDI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-20 18:05:40,080 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucit.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:05:40,080 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BKANT.TTF', name='Book Antiqua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,080 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothL.ttc', name='Yu Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-20 18:05:40,081 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrii.ttf', name='Calibri', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:05:40,081 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CURLZ___.TTF', name='Curlz MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,081 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelb.ttf', name='Corbel', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:05:40,081 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARLRDBD.TTF', name='Arial Rounded MT Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,082 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothB.ttc', name='Yu Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:05:40,082 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASDEMI.TTF', name='Eras Demi ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,082 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
2023-04-20 18:05:40,082 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANS.TTF', name='Lucida Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,084 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariblk.ttf', name='Arial', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 6.888636363636364
2023-04-20 18:05:40,084 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCKRIST.TTF', name='Kristen ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,084 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\KUNSTLER.TTF', name='Kunstler Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,084 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanb.ttf', name='Constantia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:05:40,085 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PAPYRUS.TTF', name='Papyrus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,085 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JUICE___.TTF', name='Juice ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,085 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguili.ttf', name='Segoe UI', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-04-20 18:05:40,085 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:05:40,085 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarab.ttf', name='Candara', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:05:40,086 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\IMPRISHA.TTF', name='Imprint MT Shadow', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,086 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailu.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,086 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbi.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:05:40,086 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuil.ttf', name='Segoe UI', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-20 18:05:40,087 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanai.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
2023-04-20 18:05:40,087 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoepr.ttf', name='Segoe Print', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,087 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaraz.ttf', name='Candara', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:05:40,087 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNB.TTF', name='Arial', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 6.8986363636363635
2023-04-20 18:05:40,089 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspab.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:05:40,089 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,089 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCM____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-20 18:05:40,089 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARNGTON.TTF', name='Harrington', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,090 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbd.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:05:40,090 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:05:40,090 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILSANUB.TTF', name='Gill Sans Ultra Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,090 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibri.ttf', name='Calibri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,091 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiaz.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:05:40,091 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegoeIcons.ttf', name='Segoe Fluent Icons', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,091 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAGNETOB.TTF', name='Magneto', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:05:40,091 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICI.TTF', name='Century Gothic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:05:40,092 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCBLKAD.TTF', name='Blackadder ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,092 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahomabd.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:05:40,092 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugi.ttf', name='Gadugi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,092 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LCALLIG.TTF', name='Lucida Calligraphy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:05:40,093 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyh.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,093 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsunb.ttf', name='SimSun-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,093 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgun.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,093 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIL_____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,094 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VLADIMIR.TTF', name='Vladimir Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,095 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,095 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msgothic.ttc', name='MS Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,095 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRSCRIPT.TTF', name='French Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,096 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILBI___.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:05:40,096 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASLGHT.TTF', name='Eras Light ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,096 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTB.TTF', name='Calisto MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:05:40,096 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunsl.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-20 18:05:40,096 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRUSHSCI.TTF', name='Brush Script MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:05:40,097 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SNAP____.TTF', name='Snap ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,097 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuib.ttf', name='Segoe UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:05:40,097 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCBI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:05:40,098 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailub.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:05:40,098 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framd.ttf', name='Franklin Gothic Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,098 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolai.ttf', name='Consolas', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:05:40,098 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCEB.TTF', name='Tw Cen MT Condensed Extra Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-20 18:05:40,099 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\POORICH.TTF', name='Poor Richard', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,099 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDYSTO.TTF', name='Goudy Stout', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,099 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKB.TTF', name='Rockwell', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:05:40,100 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PALSCRI.TTF', name='Palace Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,100 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarai.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:05:40,100 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\micross.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,100 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LEELAWDB.TTF', name='Leelawadee', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:05:40,101 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABK.TTF', name='Franklin Gothic Book', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,101 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjh.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,101 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palabi.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:05:40,102 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAVIE.TTF', name='Ravie', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,102 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCK.TTF', name='Rockwell', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,102 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\pala.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,102 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibriz.ttf', name='Calibri', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:05:40,103 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugib.ttf', name='Gadugi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:05:40,103 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_PSTC.TTF', name='Bodoni MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-20 18:05:40,103 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENSCBK.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,104 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanab.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
2023-04-20 18:05:40,104 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LATINWD.TTF', name='Wide Latin', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
2023-04-20 18:05:40,104 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbeli.ttf', name='Corbel', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:05:40,104 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIGI.TTF', name='Gigi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,105 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITED.TTF', name='Lucida Bright', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-20 18:05:40,105 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbi.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:05:40,105 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhl.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2023-04-20 18:05:40,106 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguiemj.ttf', name='Segoe UI Emoji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,106 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OCRAEXT.TTF', name='OCR A Extended', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
2023-04-20 18:05:40,106 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebuc.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,106 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SHOWG.TTF', name='Showcard Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,107 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BASKVILL.TTF', name='Baskerville Old Face', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,107 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriab.ttf', name='Cambria', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:05:40,107 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAIAN.TTF', name='Maiandra GD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,108 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCRIPTBL.TTF', name='Script MT Bold', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:05:40,108 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLECB.TTF', name='Gloucester MT Extra Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-20 18:05:40,108 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNTI.TTF', name='Elephant', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:05:40,108 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFR.TTF', name='Californian FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,109 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHIC.TTF', name='Century Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,109 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PLAYBILL.TTF', name='Playbill', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,109 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABKIT.TTF', name='Franklin Gothic Book', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:05:40,109 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARLOWSI.TTF', name='Harlow Solid Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:05:40,110 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPE.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,110 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taile.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,111 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibl.ttf', name='Segoe UI', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2023-04-20 18:05:40,111 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNBI.TTF', name='Arial', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 7.8986363636363635
2023-04-20 18:05:40,111 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuiz.ttf', name='Segoe UI', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:05:40,111 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSBI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-20 18:05:40,112 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palab.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:05:40,112 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLI.TTF', name='Bell MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:05:40,112 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILLUBCD.TTF', name='Gill Sans Ultra Bold Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-20 18:05:40,113 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbd.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:05:40,113 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhbd.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:05:40,113 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoesc.ttf', name='Segoe Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,113 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\couri.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:05:40,114 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegUIVar.ttf', name='Segoe UI Variable', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,114 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_R.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,114 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTB.TTF', name='Copperplate Gothic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,115 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:05:40,115 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCB_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:05:40,115 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TEMPSITC.TTF', name='Tempus Sans ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,115 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MISTRAL.TTF', name='Mistral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,116 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FORTE.TTF', name='Forte', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,116 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CB.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-04-20 18:05:40,116 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbd.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:05:40,117 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STENCIL.TTF', name='Stencil', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,117 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrib.ttf', name='Calibri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:05:40,117 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERT.TTF', name='High Tower Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,118 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTCORSVA.TTF', name='Monotype Corsiva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:05:40,118 [9988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFB.TTF', name='Californian FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:05:40,118 [9988] DEBUG    matplotlib.font_manager:1367: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
2023-04-20 18:11:34,300 [33244] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-04-20 18:11:34,301 [33244] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-04-20 18:11:34,301 [33244] INFO     root:247: [JupyterRequire] Initializing comms.
2023-04-20 18:11:34,305 [33244] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-04-20 18:11:34,307 [33244] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-04-20 18:11:34,307 [33244] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-04-20 18:11:38,165 [33244] INFO     numexpr.utils:147: [JupyterRequire] Note: NumExpr detected 12 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
2023-04-20 18:11:38,166 [33244] INFO     numexpr.utils:159: [JupyterRequire] NumExpr defaulting to 8 threads.
2023-04-20 18:11:38,850 [33244] DEBUG    matplotlib:275: [JupyterRequire] matplotlib data path: C:\Users\adity\anaconda3\lib\site-packages\matplotlib\mpl-data
2023-04-20 18:11:38,857 [33244] DEBUG    matplotlib:275: [JupyterRequire] CONFIGDIR=C:\Users\adity\.matplotlib
2023-04-20 18:11:38,862 [33244] DEBUG    matplotlib:1445: [JupyterRequire] interactive is False
2023-04-20 18:11:38,862 [33244] DEBUG    matplotlib:1446: [JupyterRequire] platform is win32
2023-04-20 18:11:38,863 [33244] DEBUG    matplotlib:1447: [JupyterRequire] loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', '_io', 'marshal', 'nt', 'winreg', '_frozen_importlib_external', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', 'encodings.cp1252', '_signal', 'encodings.latin_1', '_abc', 'abc', 'io', '__main__', '_stat', 'stat', '_collections_abc', 'genericpath', 'ntpath', 'os.path', 'os', '_sitebuiltins', '_locale', '_bootlocale', '_distutils_hack', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib.machinery', '_heapq', 'heapq', 'itertools', 'keyword', '_operator', 'operator', 'reprlib', '_collections', 'collections', 'collections.abc', '_functools', 'functools', 'contextlib', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', 'copyreg', 're', 'typing.io', 'typing.re', 'typing', 'importlib.abc', 'importlib.util', 'google', 'google.cloud', 'google.logging', 'mpl_toolkits', 'sphinxcontrib', 'zope', 'site', '_weakrefset', 'weakref', 'pkgutil', 'runpy', 'ipykernel._version', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'errno', 'signal', 'threading', 'msvcrt', '_winapi', 'subprocess', 'jupyter_client._version', 'posixpath', 'fnmatch', 'glob', '_socket', 'math', 'select', 'selectors', 'socket', 'zlib', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', '_bisect', 'bisect', '_random', '_sha512', 'random', 'tempfile', 'getpass', 'platform', 'zmq.libzmq', 'zmq.backend.select', 'cython_runtime', 'zmq.backend.cython.constants', '_cython_0_29_24', 'zmq.backend.cython.error', 'zmq.error', 'zmq.backend.cython.message', 'zmq.backend.cython.context', 'copy', '_struct', 'struct', '_compat_pickle', '_pickle', 'pickle', 'zmq.backend.cython.socket', 'zmq.backend.cython.utils', 'zmq.backend.cython._poll', 'zmq.backend.cython._version', 'zmq.backend.cython._device', 'zmq.backend.cython._proxy_steerable', 'zmq.backend.cython', 'zmq.backend', 'zmq.utils', 'zmq.utils.constant_names', 'zmq.sugar.constants', 'atexit', 'zmq.sugar.attrsettr', 'zmq.sugar.poll', 'zmq.utils.jsonapi', 'zmq.utils.strtypes', 'zmq.sugar.socket', 'zmq.sugar.context', 'zmq.sugar.frame', 'zmq.sugar.tracker', 'zmq.sugar.version', 'zmq.sugar.stopwatch', 'zmq.sugar', 'zmq', '_ast', 'ast', '_opcode', 'opcode', 'dis', 'token', 'tokenize', 'linecache', 'inspect', 'traitlets.utils', 'traitlets.utils.getargspec', 'traitlets.utils.importstring', 'traitlets.utils.sentinel', 'traitlets.utils.bunch', 'traitlets.utils.descriptions', 'traitlets.traitlets', 'traitlets.utils.decorators', 'traitlets._version', 'traitlets', 'traceback', '_string', 'string', 'logging', 'pprint', 'gettext', 'argparse', 'traitlets.config.loader', 'textwrap', 'traitlets.utils.text', 'traitlets.config.configurable', 'traitlets.config.application', 'traitlets.config', 'jupyter_client.localinterfaces', 'jupyter_core.version', 'jupyter_core', 'urllib', 'urllib.parse', 'pathlib', 'jupyter_core.paths', 'jupyter_client.utils', 'jupyter_client.connect', 'traitlets.log', 'jupyter_client.launcher', 'concurrent', 'concurrent.futures._base', 'concurrent.futures', '_ssl', 'binascii', 'base64', 'ssl', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', '_contextvars', 'contextvars', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.threads', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'asyncio.windows_events', 'asyncio', 'jupyter_client.channelsabc', 'jupyter_client.channels', 'jupyter_client.clientabc', 'jupyter_client.client', 'jupyter_client.kernelspec', 'jupyter_client.managerabc', 'jupyter_client.manager', '_queue', 'queue', 'jupyter_client.blocking.channels', 'jupyter_client.blocking.client', 'jupyter_client.blocking', 'zmq._future', 'zmq.asyncio', 'jupyter_client.asynchronous.channels', 'jupyter_client.asynchronous.client', 'jupyter_client.asynchronous', '_uuid', 'uuid', 'jupyter_client.multikernelmanager', 'jupyter_client', 'ipykernel.connect', 'ipykernel', 'tornado', '_datetime', 'datetime', 'numbers', 'logging.handlers', 'html.entities', 'html', 'array', 'tornado.speedups', 'tornado.util', 'tornado.escape', 'colorama.ansi', '_ctypes', 'ctypes._endian', 'ctypes', 'ctypes.wintypes', 'colorama.win32', 'colorama.winterm', 'colorama.ansitowin32', 'colorama.initialise', 'colorama', 'tornado.log', 'tornado.concurrent', 'tornado.ioloop', '__future__', 'tornado.platform', 'tornado.gen', 'tornado.platform.asyncio', 'zmq.eventloop.ioloop', 'zmq.eventloop', 'zmq.eventloop.zmqstream', 'IPython.core', 'IPython.core.getipython', 'IPython.core.release', 'sysconfig', 'pydoc', 'executing.executing', 'executing.version', 'executing', 'asttokens.line_numbers', 'six', 'six.moves', 'asttokens.util', 'asttokens.mark_tokens', 'asttokens.asttokens', 'asttokens', '_decimal', 'decimal', 'fractions', 'pure_eval.utils', 'pure_eval.my_getattr_static', 'pure_eval.core', 'pure_eval.version', 'pure_eval', 'stack_data.utils', 'stack_data.core', 'stack_data.formatting', 'stack_data.version', 'stack_data', 'pygments', 'pygments.formatters._mapping', 'pygments.plugin', 'pygments.util', 'pygments.formatters', 'pygments.styles', 'pygments.formatter', 'pygments.console', 'pygments.token', 'pygments.style', 'pygments.formatters.terminal256', 'bdb', 'IPython.utils', 'IPython.utils.ipstruct', 'IPython.utils.coloransi', 'IPython.utils.colorable', 'IPython.utils.PyColorize', 'locale', 'IPython.utils.encoding', 'IPython.utils.py3compat', 'IPython.core.excolors', 'cmd', 'codeop', 'code', 'pdb', 'IPython.core.debugger', 'IPython.core.display_trap', 'shlex', 'IPython.utils._process_common', 'IPython.utils._process_win32', 'IPython.utils.process', 'IPython.utils.decorators', 'IPython.utils.path', 'IPython.utils.terminal', 'IPython.core.ultratb', 'IPython.utils._sysinfo', 'IPython.utils.sysinfo', 'IPython.core.crashhandler', 'IPython.utils.importstring', 'IPython.paths', 'IPython.core.profiledir', 'IPython.core.application', 'IPython.terminal', '_hashlib', '_blake2', 'hashlib', 'IPython.core.compilerop', 'IPython.core.error', 'IPython.utils.text', 'IPython.core.magic_arguments', 'getopt', 'IPython.core.display_functions', 'mimetypes', 'IPython.testing', 'IPython.testing.skipdoctest', 'IPython.core.display', 'IPython.lib', 'IPython.lib.display', 'IPython.display', 'IPython.utils.data', 'IPython.core.page', 'IPython.lib.pretty', 'IPython.utils.openpy', 'IPython.utils.dir2', 'IPython.utils.wildcard', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.lexers', 'pygments.filter', 'pygments.filters', 'pygments.regexopt', 'pygments.lexer', 'pygments.unistring', 'pygments.lexers.python', 'pygments.formatters.html', 'IPython.core.oinspect', 'IPython.core.inputtransformer2', 'IPython.core.magic', 'pickleshare', 'IPython.core.hooks', 'IPython.core.autocall', 'IPython.core.macro', 'IPython.core.splitinput', 'IPython.core.prefilter', 'IPython.core.alias', 'IPython.core.builtin_trap', 'IPython.core.displayhook', 'IPython.core.displaypub', 'backcall.backcall', 'backcall', 'IPython.core.events', 'IPython.core.extensions', 'decorator', 'IPython.utils.sentinel', 'IPython.core.formatters', '_sqlite3', 'sqlite3.dbapi2', 'sqlite3', 'IPython.core.history', 'IPython.core.logger', 'IPython.core.payload', 'IPython.core.usage', 'IPython.utils.capture', 'IPython.utils.io', 'IPython.utils.strdispatch', 'IPython.utils.syspathcontext', 'IPython.core.async_helpers', 'IPython.core.interactiveshell', 'prompt_toolkit.application.current', 'prompt_toolkit.eventloop.utils', 'prompt_toolkit.eventloop.async_generator', 'wcwidth.table_wide', 'wcwidth.table_zero', 'wcwidth.unicode_versions', 'wcwidth.wcwidth', 'wcwidth', 'prompt_toolkit.utils', 'prompt_toolkit.eventloop.inputhook', 'prompt_toolkit.eventloop', 'prompt_toolkit.application.run_in_terminal', 'prompt_toolkit.selection', 'prompt_toolkit.clipboard.base', 'prompt_toolkit.clipboard.in_memory', 'prompt_toolkit.clipboard', 'prompt_toolkit.cache', 'prompt_toolkit.enums', 'prompt_toolkit.filters.base', 'prompt_toolkit.filters.app', 'prompt_toolkit.filters.cli', 'prompt_toolkit.filters.utils', 'prompt_toolkit.filters', 'prompt_toolkit.document', 'prompt_toolkit.auto_suggest', 'prompt_toolkit.data_structures', 'prompt_toolkit.styles.base', 'prompt_toolkit.styles.named_colors', 'prompt_toolkit.styles.style', 'prompt_toolkit.styles.defaults', 'prompt_toolkit.styles.pygments', 'colorsys', 'prompt_toolkit.styles.style_transformation', 'prompt_toolkit.styles', 'prompt_toolkit.output.color_depth', 'prompt_toolkit.output.base', 'prompt_toolkit.output.defaults', 'prompt_toolkit.output', 'prompt_toolkit.output.vt100', 'prompt_toolkit.mouse_events', 'prompt_toolkit.formatted_text.base', 'prompt_toolkit.formatted_text.ansi', 'xml', 'xml.dom.domreg', 'xml.dom', 'xml.dom.minicompat', 'xml.dom.NodeFilter', 'xml.dom.xmlbuilder', 'xml.dom.minidom', 'prompt_toolkit.formatted_text.html', 'prompt_toolkit.formatted_text.pygments', 'prompt_toolkit.formatted_text.utils', 'prompt_toolkit.formatted_text', 'prompt_toolkit.completion.base', 'prompt_toolkit.completion.deduplicate', 'prompt_toolkit.completion.filesystem', 'prompt_toolkit.completion.word_completer', 'prompt_toolkit.completion.fuzzy_completer', 'prompt_toolkit.completion.nested', 'prompt_toolkit.completion', 'prompt_toolkit.history', 'prompt_toolkit.keys', 'prompt_toolkit.key_binding.key_bindings', 'prompt_toolkit.key_binding.key_processor', 'prompt_toolkit.key_binding', 'prompt_toolkit.key_binding.vi_state', 'prompt_toolkit.search', 'prompt_toolkit.validation', 'prompt_toolkit.buffer', 'prompt_toolkit.input.base', 'prompt_toolkit.input.defaults', 'prompt_toolkit.input', 'prompt_toolkit.input.typeahead', 'prompt_toolkit.key_binding.bindings', 'prompt_toolkit.key_binding.bindings.scroll', 'prompt_toolkit.key_binding.bindings.page_navigation', 'prompt_toolkit.lexers.base', 'prompt_toolkit.lexers.pygments', 'prompt_toolkit.lexers', 'prompt_toolkit.layout.utils', 'prompt_toolkit.layout.processors', 'prompt_toolkit.layout.controls', 'prompt_toolkit.layout.dimension', 'prompt_toolkit.layout.margins', 'prompt_toolkit.layout.mouse_handlers', 'prompt_toolkit.layout.screen', 'prompt_toolkit.layout.containers', 'prompt_toolkit.layout.layout', 'prompt_toolkit.layout.menus', 'prompt_toolkit.layout.scrollable_pane', 'prompt_toolkit.layout', 'prompt_toolkit.key_binding.bindings.completion', 'prompt_toolkit.key_binding.bindings.named_commands', 'prompt_toolkit.key_binding.bindings.basic', 'prompt_toolkit.key_binding.bindings.cpr', 'prompt_toolkit.key_binding.bindings.emacs', 'prompt_toolkit.key_binding.bindings.mouse', 'prompt_toolkit.input.ansi_escape_sequences', 'prompt_toolkit.input.vt100_parser', 'prompt_toolkit.key_binding.digraphs', 'prompt_toolkit.key_binding.bindings.vi', 'prompt_toolkit.key_binding.defaults', 'prompt_toolkit.key_binding.emacs_state', 'prompt_toolkit.layout.dummy', 'prompt_toolkit.renderer', 'prompt_toolkit.application.application', 'prompt_toolkit.application.dummy', 'prompt_toolkit.application', 'prompt_toolkit.key_binding.bindings.focus', 'prompt_toolkit.widgets.toolbars', 'prompt_toolkit.widgets.base', 'prompt_toolkit.widgets.dialogs', 'prompt_toolkit.widgets.menus', 'prompt_toolkit.widgets', 'prompt_toolkit.shortcuts.dialogs', 'prompt_toolkit.shortcuts.progress_bar.formatters', 'prompt_toolkit.shortcuts.progress_bar.base', 'prompt_toolkit.shortcuts.progress_bar', 'prompt_toolkit.key_binding.bindings.auto_suggest', 'prompt_toolkit.key_binding.bindings.open_in_editor', 'prompt_toolkit.shortcuts.prompt', 'prompt_toolkit.shortcuts.utils', 'prompt_toolkit.shortcuts', 'prompt_toolkit', 'prompt_toolkit.patch_stdout', 'unicodedata', 'IPython.core.latex_symbols', 'IPython.utils.generics', 'parso.utils', 'parso.tree', 'parso.python', 'parso.python.token', 'parso.python.tokenize', 'parso.pgen2.grammar_parser', 'parso.pgen2.generator', 'parso.pgen2', 'parso.parser', 'parso._compatibility', 'difflib', 'parso.python.prefix', 'parso.python.tree', 'parso.python.parser', 'parso.python.diff', 'gc', 'parso.cache', 'parso.normalizer', 'parso.python.errors', 'parso.python.pep8', 'parso.file_io', 'parso.grammar', 'parso', 'jedi.parser_utils', 'jedi.debug', 'jedi.settings', 'jedi.cache', 'jedi.file_io', 'jedi.inference.cache', 'jedi.inference.helpers', 'jedi.inference.utils', 'jedi.inference.base_value', 'jedi.inference.sys_path', 'jedi.inference.recursion', 'jedi.inference.flow_analysis', 'jedi.common', 'jedi.inference.lazy_value', 'jedi.inference.docstrings', 'jedi.plugins', 'jedi.inference.names', 'jedi.inference.filters', 'jedi.inference.compiled.getattr_static', 'jedi.inference.compiled.access', 'jedi.inference.signature', 'jedi.inference.context', 'jedi.inference.compiled.value', 'jedi.inference.compiled', 'jedi.inference.analysis', 'jedi.inference.gradual', 'jedi.inference.value.module', 'jedi.inference.value.dynamic_arrays', 'jedi.inference.value.iterable', 'jedi.inference.arguments', 'jedi.inference.parser_cache', 'jedi.inference.gradual.generics', 'jedi.inference.value.function', 'jedi.inference.value.klass', 'jedi.inference.value.instance', 'jedi.inference.value', 'jedi.inference.gradual.base', 'jedi.inference.gradual.type_var', 'jedi.inference.gradual.typing', 'jedi.inference.gradual.stub_value', 'jedi.inference.gradual.typeshed', 'jedi._compatibility', 'zipfile', 'jedi.inference.compiled.subprocess.functions', 'jedi.api.exceptions', 'jedi.inference.compiled.subprocess', 'jedi.inference.imports', 'jedi.inference.param', 'jedi.inference.gradual.annotation', 'jedi.inference.value.decorator', 'jedi.inference.syntax_tree', 'jedi.inference', 'jedi.inference.gradual.conversion', 'jedi.inference.compiled.mixed', 'pydoc_data', 'pydoc_data.topics', 'jedi.api.keywords', 'jedi.api.completion_cache', 'jedi.api.helpers', 'jedi.api.classes', 'jedi.api.interpreter', 'jedi.api.strings', 'jedi.api.file_name', 'jedi.inference.docstring_utils', 'jedi.api.completion', 'filecmp', 'jedi.api.environment', 'jedi.inference.references', 'jedi.api.project', 'jedi.api.errors', 'jedi.api.refactoring', 'jedi.api.refactoring.extract', 'jedi.inference.gradual.utils', 'jedi.api', 'jedi.plugins.stdlib', 'jedi.plugins.flask', 'jedi.plugins.pytest', 'jedi.plugins.django', 'jedi.plugins.registry', 'jedi', 'IPython.core.completer', 'IPython.terminal.ptutils', 'IPython.lib.clipboard', 'IPython.terminal.shortcuts', 'concurrent.futures.thread', 'IPython.terminal.debugger', 'IPython.terminal.magics', 'IPython.terminal.pt_inputhooks', 'IPython.terminal.prompts', 'IPython.terminal.interactiveshell', 'IPython.core.magics.auto', 'IPython.core.magics.basic', 'email', 'http', 'email.errors', 'email.quoprimime', 'email.base64mime', 'quopri', 'email.encoders', 'email.charset', 'email.header', 'calendar', 'email._parseaddr', 'email.utils', 'email._policybase', 'email.feedparser', 'email.parser', 'uu', 'email._encoded_words', 'email.iterators', 'email.message', 'http.client', 'urllib.response', 'urllib.error', 'nturl2path', 'urllib.request', 'IPython.utils.contexts', 'IPython.core.magics.code', 'IPython.core.magics.config', 'IPython.core.magics.display', '_lsprof', 'profile', 'cProfile', 'dataclasses', 'pstats', 'timeit', 'IPython.utils.module_paths', 'IPython.utils.timing', 'IPython.core.magics.execution', 'IPython.core.magics.extension', 'IPython.core.magics.history', 'IPython.core.magics.logging', 'IPython.core.magics.namespace', 'IPython.core.magics.osm', 'IPython.core.magics.packaging', 'IPython.core.pylabtools', 'IPython.core.magics.pylab', 'IPython.core.magics.script', 'IPython.core.magics', 'IPython.core.shellapp', 'IPython.extensions', 'IPython.extensions.storemagic', 'IPython.terminal.ipapp', 'IPython.terminal.embed', 'IPython.utils.frame', 'IPython', 'imp', 'hmac', 'dateutil._version', 'dateutil', 'dateutil._common', 'dateutil.relativedelta', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.win', 'dateutil.tz.tz', 'dateutil.tz', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', '_strptime', 'jupyter_client.jsonutil', 'jupyter_client.adapter', 'jupyter_client.session', 'ipykernel.iostream', 'ipykernel.control', 'ipykernel.heartbeat', 'IPython.utils.tokenutil', 'psutil._common', 'psutil._compat', 'psutil._psutil_windows', 'psutil._pswindows', 'psutil', 'tornado.locks', 'tornado.queues', 'ipykernel.jsonutil', 'ipykernel.kernelbase', 'ipykernel.comm.comm', 'ipykernel.comm.manager', 'ipykernel.comm', 'IPython.core.payloadpage', 'ipykernel.displayhook', 'ipykernel.zmqshell', 'setuptools._distutils', 'distutils.debug', 'distutils.errors', 'distutils.fancy_getopt', 'distutils.dep_util', 'distutils.log', 'distutils.spawn', 'distutils.py35compat', 'distutils.util', 'distutils.dist', 'distutils.dir_util', 'distutils.file_util', 'distutils.archive_util', 'distutils.cmd', 'configparser', 'distutils.config', 'distutils.extension', 'distutils.core', '_distutils_hack.override', 'setuptools._deprecation_warning', 'xml.parsers', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'xml.parsers.expat', 'plistlib', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources._vendor.jaraco', 'pkg_resources.extern.jaraco', 'importlib._common', 'importlib.resources', 'pkg_resources._vendor.more_itertools.recipes', 'pkg_resources._vendor.more_itertools.more', 'pkg_resources._vendor.more_itertools', 'pkg_resources.extern.more_itertools', 'pkg_resources.extern.jaraco.functools', 'pkg_resources.extern.jaraco.context', 'pkg_resources.extern.jaraco.text', 'win32api', '_win32sysloader', 'pywintypes', 'pythoncom', 'win32com.gen_py', 'win32com', 'win32com.shell', 'pkg_resources._vendor.appdirs', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources._vendor.packaging', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.version', 'pkg_resources._vendor.packaging._manylinux', 'pkg_resources._vendor.packaging._musllinux', 'pkg_resources.extern.packaging.tags', 'pkg_resources.extern.packaging.utils', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources._vendor.pyparsing', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.packaging.markers', 'pkg_resources.extern.packaging.requirements', 'pkg_resources', 'setuptools.version', 'distutils.filelist', 'setuptools.monkey', 'setuptools.extension', 'distutils.command', 'setuptools.extern', 'setuptools._vendor', 'setuptools._vendor.packaging.__about__', 'setuptools._vendor.packaging', 'setuptools.extern.packaging', 'setuptools._vendor.ordered_set', 'setuptools.extern.ordered_set', 'setuptools._vendor.more_itertools.recipes', 'setuptools._vendor.more_itertools.more', 'setuptools._vendor.more_itertools', 'setuptools.extern.more_itertools', 'setuptools._vendor.pyparsing', 'setuptools.extern.pyparsing', 'setuptools._vendor.packaging._manylinux', 'setuptools._vendor.packaging._musllinux', 'setuptools.extern.packaging.tags', 'setuptools.extern.packaging._structures', 'setuptools.extern.packaging.version', 'setuptools.extern.packaging.utils', 'setuptools.extern.packaging.specifiers', 'setuptools.extern.packaging.markers', 'setuptools.extern.packaging.requirements', 'setuptools._vendor.jaraco', 'setuptools.extern.jaraco', 'setuptools.extern.jaraco.context', 'setuptools.extern.jaraco.functools', '_csv', 'csv', 'setuptools._vendor.zipp', 'setuptools._vendor.importlib_metadata._functools', 'setuptools._vendor.importlib_metadata._text', 'setuptools._vendor.importlib_metadata._adapters', 'setuptools._vendor.importlib_metadata._compat', 'setuptools._vendor.importlib_metadata._meta', 'setuptools._vendor.importlib_metadata._collections', 'setuptools._vendor.importlib_metadata._itertools', 'setuptools._vendor.importlib_metadata', 'setuptools.extern.importlib_metadata', 'setuptools._vendor.nspektr._compat', 'setuptools._vendor.nspektr', 'setuptools.extern.nspektr', 'zipp', 'importlib_metadata._functools', 'importlib_metadata._text', 'importlib_metadata._adapters', 'importlib_metadata._compat', 'importlib_metadata._meta', 'importlib_metadata._collections', 'importlib_metadata._itertools', 'importlib_metadata', 'setuptools._importlib', 'distutils.command.bdist', 'setuptools.command', 'setuptools.windows_support', 'setuptools.config.expand', 'setuptools.config.setupcfg', 'setuptools.config', 'setuptools.errors', 'email._header_value_parser', 'email.headerregistry', 'setuptools.config._apply_pyprojecttoml', 'setuptools.config.pyprojecttoml', 'setuptools.discovery', 'setuptools.extern.jaraco.text', 'setuptools._reqs', 'setuptools._itertools', 'setuptools._entry_points', 'setuptools.dist', 'setuptools.py34compat', 'setuptools._imp', 'setuptools.depends', 'setuptools.logging', 'distutils.ccompiler', 'distutils.msvc9compiler', 'setuptools.msvc', 'unittest.util', 'unittest.result', 'unittest.case', 'unittest.suite', 'unittest.loader', 'unittest.signals', 'unittest.runner', 'unittest.main', 'unittest', 'unittest.mock', 'distutils._msvccompiler', 'setuptools', 'distutils', 'distutils.version', 'ipykernel.eventloops', 'ipykernel.compiler', 'debugpy._version', 'debugpy.common', 'debugpy.common.json', 'debugpy.common.fmt', 'debugpy.common.compat', 'debugpy', 'debugpy._vendored._util', 'debugpy._vendored', '_pydevd_bundle', 'encodings.ascii', 'stringprep', 'encodings.idna', '_pydevd_bundle.pydevd_vm_type', '_pydev_imps', 'xmlrpc', 'gzip', 'xmlrpc.client', 'socketserver', 'http.server', 'xmlrpc.server', '_pydev_imps._pydev_saved_modules', '_pydevd_bundle.pydevd_constants', '_pydev_bundle', '_pydev_runfiles', '_pydevd_frame_eval', 'pydev_ipython', 'pydevd_concurrency_analyser', 'pydevd_plugins', '_pydev_bundle.pydev_log', '_pydev_bundle._pydev_filesystem_encoding', '_pydevd_bundle.pydevd_comm_constants', 'pydevd_file_utils', '_pydev_imps._pydev_execfile', '_pydevd_bundle.pydevd_exec2', '_pydev_bundle.pydev_imports', '_pydev_bundle.pydev_is_thread_alive', '_pydev_bundle.pydev_override', 'pydevd_plugins.extensions', '_pydevd_bundle.pydevd_extension_utils', '_pydevd_bundle.pydevd_frame_utils', '_pydevd_bundle.pydevd_filtering', '_pydevd_bundle.pydevd_io', '_pydevd_bundle.pydevd_utils', '_pydev_bundle._pydev_tipper_common', '_pydev_bundle._pydev_imports_tipper', '_pydev_bundle._pydev_calltip_util', '_pydevd_bundle.pydevd_safe_repr', '_pydevd_bundle.pydevd_resolver', '_pydevd_bundle.pydevd_extension_api', '_pydevd_bundle.pydevd_xml', '_pydevd_bundle.pydevd_dont_trace', '_pydevd_frame_eval.vendored', '_pydevd_frame_eval.vendored.bytecode.flags', '_pydevd_frame_eval.vendored.bytecode.instr', '_pydevd_frame_eval.vendored.bytecode.bytecode', '_pydevd_frame_eval.vendored.bytecode.concrete', '_pydevd_frame_eval.vendored.bytecode.cfg', '_pydevd_frame_eval.vendored.bytecode', '_pydevd_bundle.pydevd_bytecode_utils', '_pydevd_bundle.pydevd_cython', '_pydevd_bundle.pydevd_cython_wrapper', '_pydevd_bundle.pydevd_additional_thread_info', '_pydevd_bundle.pydevd_thread_lifecycle', '_pydevd_bundle.pydevd_save_locals', '_pydevd_bundle.pydevd_defaults', '_pydev_bundle.pydev_monkey', 'pydevd_tracing', '_pydevd_bundle.pydevd_daemon_thread', '_pydevd_bundle.pydevd_timeout', '_pydevd_bundle.pydevd_vars', '_pydev_bundle.pydev_console_utils', '_pydevd_bundle.pydevd_import_class', '_pydevd_bundle.pydevd_breakpoints', '_pydevd_bundle.pydevd_custom_frames', '_pydevd_bundle.pydevd_dont_trace_files', '_pydevd_bundle.pydevd_net_command', '_pydev_bundle.pydev_umd', 'pydevconsole', '_pydev_bundle._pydev_completer', '_pydevd_bundle.pydevd_net_command_factory_xml', '_pydevd_bundle.pydevd_frame', '_pydevd_bundle.pydevd_additional_thread_info_regular', '_pydevd_bundle.pydevd_trace_dispatch', '_pydevd_frame_eval.pydevd_frame_eval_main', '_pydevd_bundle.pydevd_source_mapping', 'pydevd_concurrency_analyser.pydevd_thread_wrappers', 'pydevd_concurrency_analyser.pydevd_concurrency_logger', '_pydevd_bundle._debug_adapter', '_pydevd_bundle._debug_adapter.pydevd_schema_log', '_pydevd_bundle._debug_adapter.pydevd_base_schema', '_pydevd_bundle._debug_adapter.pydevd_schema', '_pydevd_bundle.pydevd_reload', '_pydev_bundle.fsnotify', '_pydevd_bundle.pydevd_console', '_pydevd_bundle.pydevd_comm', '_pydevd_bundle.pydevd_net_command_factory_json', '_pydevd_bundle.pydevd_collect_bytecode_info', '_pydevd_bundle.pydevd_api', '_pydevd_bundle.pydevd_json_debug_options', '_pydevd_bundle.pydevd_process_net_command_json', '_pydevd_bundle.pydevd_traceproperty', '_pydevd_bundle.pydevd_process_net_command', '_pydevd_bundle.pydevd_suspended_frames', '_pydevd_bundle.pydevd_trace_api', 'pydevd_plugins.django_debug', 'pydevd_plugins.jinja2_debug', '_pydevd_bundle.pydevd_plugin_utils', 'pydevd_plugins.extensions.types', 'pydevd_plugins.extensions.types.pydevd_helpers', 'pydevd_plugins.extensions.types.pydevd_plugin_numpy_types', 'pydevd_plugins.extensions.types.pydevd_plugins_django_form_str', 'pydevd', 'debugpy._vendored.force_pydevd', 'debugpy.server', 'debugpy.adapter', 'debugpy.common.timestamp', 'debugpy.common.util', 'debugpy.common.log', 'debugpy.common.sockets', 'debugpy.server.api', 'ipykernel.debugger', 'ipykernel.ipkernel', 'ipykernel.parentpoller', 'ipykernel.kernelapp', 'win32security', 'ntsecuritycon', 'faulthandler', 'IPython.core.completerlib', 'logging.config', 'pythonjsonlogger', 'pythonjsonlogger.jsonlogger', 'daiquiri.types', 'daiquiri.formatter', 'daiquiri.handlers', 'daiquiri.output', 'daiquiri', 'jupyter_require.__about__', 'csscompressor', 'jupyter_require.core', 'jupyter_require.notebook', 'jupyter_require', 'jupyter_nbutils.__about__', 'jupyter_nbutils.config', 'jupyter_nbutils.utils', 'jupyter_nbutils', 'jupyter_require.magic', 'numpy._globals', 'numpy.__config__', 'numpy._distributor_init', 'numpy._version', 'numpy.version', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core._asarray', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core._machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.stride_tricks', 'numpy.lib.twodim_base', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', '_cython_0_29_30', 'numpy.random._common', 'secrets', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'pytz', 'pandas._typing', '_cython_0_29_28', 'pandas._libs.tslibs.dtypes', 'pandas._libs.tslibs.base', 'pandas._libs.tslibs.np_datetime', 'pandas._libs.tslibs.nattype', 'pandas._libs.tslibs.timezones', 'pandas._libs.tslibs.ccalendar', 'pandas._libs.tslibs.tzconversion', 'pandas._config.config', 'pandas._config.dates', 'pandas._config.display', 'pandas._config', 'pandas._config.localization', 'pandas._libs.tslibs.strptime', 'pandas._libs.tslibs.fields', 'pandas._libs.tslibs.timedeltas', 'pandas._libs.tslibs.timestamps', 'dateutil.easter', 'pandas._libs.properties', 'pandas._libs.tslibs.offsets', 'pandas._libs.tslibs.parsing', 'pandas._libs.tslibs.conversion', 'pandas._libs.tslibs.period', 'pandas._libs.tslibs.vectorized', 'pandas._libs.tslibs', 'pandas._libs.ops_dispatch', 'pandas._libs.missing', 'pandas._libs.hashtable', 'pandas._libs.algos', 'pandas._libs.interval', 'pandas._libs', 'pandas.util._decorators', 'pandas.core', 'pandas.core.util', 'pandas._libs.tslib', 'pandas._libs.lib', 'pandas._libs.hashing', 'pandas.core.dtypes', 'pandas.util._exceptions', 'pandas.errors', 'pandas.core.dtypes.generic', 'pandas.core.dtypes.base', 'pandas.core.dtypes.inference', 'pandas.core.dtypes.dtypes', 'pandas.core.dtypes.common', 'pandas.core.util.hashing', 'pandas.util', 'pandas.util.version', 'pandas.compat.numpy', 'pandas.compat.pyarrow', 'pandas.compat', 'pandas.core.config_init', 'pandas.core.dtypes.missing', 'pandas.util._validators', 'pandas.core.dtypes.cast', 'pandas.core.dtypes.concat', 'pandas.core.array_algos', 'pandas.core.common', 'pandas.core.construction', 'pandas.core.array_algos.take', 'pandas.core.indexers.utils', 'pandas.core.indexers', 'pandas.core.algorithms', 'pandas.compat.numpy.function', 'pandas.core.roperator', 'pandas._libs.ops', 'pandas.core.computation', 'pandas.compat._optional', 'numexpr.interpreter', 'packaging.__about__', 'packaging', 'packaging._structures', 'packaging.version', 'numexpr.expressions', 'numexpr.utils', 'numexpr.necompiler', 'numexpr.version', 'numexpr', 'pandas.core.computation.check', 'pandas.core.computation.expressions', 'pandas.core.ops.missing', 'pandas.core.ops.dispatch', 'pandas.core.ops.invalid', 'pandas.core.ops.array_ops', 'pandas.core.ops.common', 'pandas.core.ops.docstrings', 'pandas.core.ops.mask_ops', 'pandas.core.ops.methods', 'pandas.core.ops', 'pandas.core.arraylike', 'pandas.core.missing', 'pandas.core.array_algos.quantile', 'pandas.core.sorting', 'pandas.core.arrays.base', 'bottleneck.benchmark', 'bottleneck.benchmark.autotimeit', 'bottleneck.benchmark.bench', 'bottleneck.benchmark.bench_detailed', 'bottleneck.tests', 'bottleneck.tests.util', 'bottleneck.slow.reduce', 'bottleneck.slow.nonreduce', 'bottleneck.slow.nonreduce_axis', 'bottleneck.slow.move', 'bottleneck.slow', 'bottleneck._pytesttester', 'bottleneck.move', 'bottleneck.nonreduce', 'bottleneck.nonreduce_axis', 'bottleneck.reduce', 'bottleneck._version', 'bottleneck', 'pandas.core.nanops', 'pandas.core.array_algos.masked_reductions', 'pandas.core.arrays.masked', 'pandas.core.arrays.boolean', 'pandas._libs.arrays', 'pandas.core.accessor', 'pandas.core.array_algos.transforms', 'pandas.core.arrays._mixins', 'pandas.core.base', 'pandas.core.strings.accessor', 'pandas.core.strings.base', 'pandas.core.strings', 'pandas.core.strings.object_array', 'pandas.io', 'pandas.io.formats', 'pandas.io.formats.console', 'pandas.core.arrays.categorical', 'pandas.tseries', 'pandas.tseries.frequencies', 'pandas.core.arrays.datetimelike', 'pandas.core.arrays._ranges', 'pandas.core.arrays.numeric', 'pandas.core.tools', 'pandas.core.tools.numeric', 'pandas.core.arrays.integer', 'pandas.tseries.offsets', 'pandas.core.arrays.datetimes', 'pandas.core.arrays.floating', 'pandas.core.indexes', 'pandas._libs.index', 'pandas._libs.join', 'pandas.core.array_algos.putmask', 'pandas._libs.sparse', 'pandas.core.arrays.sparse.dtype', 'pandas.io.formats.printing', 'pandas.core.arrays.sparse.array', 'pandas.core.arrays.sparse.accessor', 'pandas.core.arrays.sparse', 'pandas.core.indexes.frozen', 'pandas.core.indexes.base', 'pandas.core.arrays.interval', 'pandas.core.arrays.numpy_', 'pandas.core.arrays.period', 'pandas.core.arrays.string_', 'pandas.core.arrays.string_arrow', 'pandas.core.arrays.timedeltas', 'pandas.core.arrays', 'pandas.core.flags', 'pandas._libs.reduction', 'pandas.core.apply', 'pandas._libs.indexing', 'pandas.core.indexes.extension', 'pandas.core.indexes.category', 'pandas.core.indexes.numeric', 'pandas.core.indexes.range', 'pandas.core.tools.timedeltas', 'pandas.core.indexes.datetimelike', 'pandas.core.tools.times', 'pandas.core.indexes.datetimes', 'pandas.core.indexes.multi', 'pandas.core.indexes.timedeltas', 'pandas.core.indexes.interval', 'pandas.core.indexes.period', 'pandas.core.indexes.api', 'pandas.core.indexing', 'pandas.core.array_algos.replace', 'pandas.core.reshape', 'pandas._libs.internals', 'pandas._libs.writers', 'pandas.core.internals.blocks', 'pandas.core.internals.api', 'pandas.core.internals.base', 'pandas.core.internals.array_manager', 'pandas.core.internals.ops', 'pandas.core.internals.managers', 'pandas.core.internals.concat', 'pandas.core.internals', 'pandas.core.reshape.concat', 'mmap', 'pandas.core.shared_docs', 'pandas.io.common', 'pandas.io.formats.format', 'pandas.core.describe', 'pandas.core.internals.construction', 'pandas.core.sample', 'pandas._libs.window', 'pandas._libs.window.aggregations', 'pandas._libs.window.indexers', 'pandas.core.indexers.objects', 'pandas.core.util.numba_', 'pandas.core.window.common', 'pandas.core.window.doc', 'pandas.core.window.numba_', 'pandas.core.window.online', 'pandas.core._numba', 'pandas.core._numba.executor', 'pandas.core.window.rolling', 'pandas.core.window.ewm', 'pandas.core.window.expanding', 'pandas.core.window', 'pandas.core.generic', 'pandas.core.reshape.util', 'pandas.core.reshape.melt', 'pandas._libs.reshape', 'pandas.core.indexes.accessors', 'pandas.arrays', 'pandas.core.tools.datetimes', 'pandas.io.formats.info', 'pandas.plotting._core', 'pandas.plotting._misc', 'pandas.plotting', 'pandas.core.series', 'pandas.core.frame', 'pandas.core.groupby.base', 'pandas._libs.groupby', 'pandas.core.groupby.numba_', 'pandas.core.groupby.categorical', 'pandas.core.groupby.grouper', 'pandas.core.groupby.ops', 'pandas.core.groupby.indexing', 'pandas.core.groupby.groupby', 'pandas.core.groupby.generic', 'pandas.core.groupby', 'pandas.core.api', 'pandas.tseries.api', 'pandas.core.computation.common', 'pandas.core.computation.align', 'pandas.compat.chainmap', 'pandas.core.computation.scope', 'pandas.core.computation.ops', 'pandas.core.computation.parsing', 'pandas.core.computation.expr', 'pandas.core.computation.engines', 'pandas.core.computation.eval', 'pandas.core.computation.api', 'pandas.core.reshape.merge', 'pandas.core.reshape.pivot', 'pandas.core.reshape.reshape', 'pandas.core.reshape.tile', 'pandas.core.reshape.api', 'pandas.api.extensions', 'pandas.api.indexers', 'pandas.core.dtypes.api', 'pandas.api.types', 'pandas.api', 'pandas._testing._random', 'pandas._testing.contexts', 'pandas._testing._io', 'pandas._testing._warnings', 'cmath', 'pandas._libs.testing', 'pandas._testing.asserters', 'pandas._testing.compat', 'pandas._testing', 'pandas.testing', 'pandas.util._print_versions', 'pandas.io.clipboards', 'pandas._libs.parsers', 'pandas.io.excel._util', 'pandas.io.date_converters', 'pandas.io.parsers.base_parser', 'pandas.io.parsers.arrow_parser_wrapper', 'pandas.io.parsers.c_parser_wrapper', 'pandas.io.parsers.python_parser', 'pandas.io.parsers.readers', 'pandas.io.parsers', 'pandas.io.excel._odfreader', 'pandas.io.excel._openpyxl', 'pandas.io.excel._pyxlsb', 'pandas.io.excel._xlrd', 'pandas.io.excel._base', 'pandas._libs.json', 'pandas.io.formats._color_data', 'pandas.io.formats.css', 'pandas.io.formats.excel', 'pandas.io.excel._odswriter', 'pandas.io.excel._xlsxwriter', 'pandas.io.excel._xlwt', 'pandas.io.excel', 'pandas.io.feather_format', 'pandas.io.gbq', 'pandas.io.html', 'pandas.io.json._normalize', 'pandas.io.json._table_schema', 'pandas.io.json._json', 'pandas.io.json', 'pandas.io.orc', 'pandas.io.parquet', 'pandas.compat.pickle_compat', 'pandas.io.pickle', 'pandas.core.computation.pytables', 'pandas.io.pytables', 'pandas.io.sas.sasreader', 'pandas.io.sas', 'pandas.io.spss', 'pandas.io.sql', 'pandas.io.stata', 'pandas.io.xml', 'pandas.io.api', 'pandas.util._tester', 'pandas._version', 'pandas', 'summarytools', 'summarytools.htmlwidgets', 'summarytools.summarytools', 'matplotlib', 'matplotlib._api.deprecation', 'matplotlib._api', 'matplotlib._version', 'matplotlib._c_internal_utils', 'matplotlib.cbook', 'matplotlib.docstring', 'PIL._version', 'PIL', 'defusedxml.common', 'defusedxml', 'xml.etree', 'xml.etree.ElementPath', '_elementtree', 'xml.etree.ElementTree', 'defusedxml.ElementTree', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._util', 'PIL._imaging', 'cffi.lock', 'cffi.error', 'cffi.model', 'cffi.api', 'cffi', 'PIL.Image', 'PIL.ImageChops', 'PIL.ImageFile', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'PIL.ImagePalette', 'PIL.ImageSequence', 'PIL.PngImagePlugin', 'matplotlib._path', 'matplotlib.bezier', 'matplotlib.path', 'matplotlib.transforms', 'matplotlib.ticker', 'matplotlib.scale', 'matplotlib._color_data', 'matplotlib.colors', 'pyparsing.util', 'pyparsing.unicode', 'pyparsing.exceptions', 'pyparsing.actions', 'pyparsing.results', 'pyparsing.core', 'pyparsing.helpers', 'pyparsing.testing', 'pyparsing.common', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib._enums', 'cycler', 'matplotlib.rcsetup', 'matplotlib.ft2font', 'kiwisolver']
2023-04-20 18:11:39,007 [33244] DEBUG    matplotlib:275: [JupyterRequire] CACHEDIR=C:\Users\adity\.matplotlib
2023-04-20 18:11:39,011 [33244] DEBUG    matplotlib.font_manager:1439: [JupyterRequire] Using fontManager instance from C:\Users\adity\.matplotlib\fontlist-v330.json
2023-04-20 18:11:39,628 [33244] DEBUG    matplotlib.pyplot:280: [JupyterRequire] Loaded backend module://matplotlib_inline.backend_inline version unknown.
2023-04-20 18:11:39,636 [33244] DEBUG    matplotlib.pyplot:280: [JupyterRequire] Loaded backend module://matplotlib_inline.backend_inline version unknown.
2023-04-20 18:11:47,286 [33244] DEBUG    matplotlib.font_manager:1329: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2023-04-20 18:11:47,286 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:11:47,287 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:11:47,287 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,288 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2023-04-20 18:11:47,288 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2023-04-20 18:11:47,288 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:11:47,289 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:11:47,289 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:11:47,290 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,290 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:11:47,290 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,291 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:11:47,291 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,291 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,291 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,292 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:11:47,292 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:11:47,292 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,293 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,293 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2023-04-20 18:11:47,293 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,294 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,294 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:11:47,294 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:11:47,295 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:11:47,295 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,295 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,295 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:11:47,296 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:11:47,296 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,297 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,297 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,297 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:11:47,298 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,298 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:11:47,298 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,299 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,299 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2023-04-20 18:11:47,300 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLSNECB.TTF', name='Gill Sans MT Ext Condensed Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-20 18:11:47,300 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanz.ttf', name='Constantia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:11:47,301 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LEELAWAD.TTF', name='Leelawadee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,301 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\monbaiti.ttf', name='Mongolian Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,301 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-MEDIUM.TTF', name='Dubai', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-04-20 18:11:47,302 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-04-20 18:11:47,302 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FTLTLT.TTF', name='Footlight MT Light', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-20 18:11:47,302 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibril.ttf', name='Calibri', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-20 18:11:47,303 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSI.TTF', name='Goudy Old Style', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:11:47,303 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisbi.ttf', name='Segoe UI', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-20 18:11:47,303 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCCB___.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-04-20 18:11:47,304 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXD.TTF', name='Lucida Fax', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-20 18:11:47,304 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2023-04-20 18:11:47,304 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BSSYM7.TTF', name='Bookshelf Symbol 7', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,306 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAMDCN.TTF', name='Franklin Gothic Medium Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-20 18:11:47,306 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framdit.ttf', name='Franklin Gothic Medium', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:11:47,306 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSB.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:11:47,306 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-LIGHT.TTF', name='Dubai', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-20 18:11:47,307 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCC____.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-20 18:11:47,307 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_B.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:11:47,307 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COOPBL.TTF', name='Cooper Black', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,308 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNI.TTF', name='Arial', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 7.613636363636363
2023-04-20 18:11:47,308 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\INFROMAN.TTF', name='Informal Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,308 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSB.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-20 18:11:47,309 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BERNHC.TTF', name='Bernard MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-20 18:11:47,309 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEB.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-20 18:11:47,309 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCEDSCR.TTF', name='Edwardian Script ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,310 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consola.ttf', name='Consolas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,310 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,310 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\holomdl2.ttf', name='HoloLens MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,311 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COLONNA.TTF', name='Colonna MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,311 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYR.TTF', name='Agency FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,312 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRITANIC.TTF', name='Britannic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,312 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiai.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:11:47,312 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:11:47,312 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaS.ttf', name='Nirmala UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2023-04-20 18:11:47,312 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CHILLER.TTF', name='Chiller', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,314 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,314 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAB.TTF', name='Book Antiqua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:11:47,315 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothM.ttc', name='Yu Gothic', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-04-20 18:11:47,315 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG2.TTF', name='Wingdings 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,315 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Nirmala.ttf', name='Nirmala UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,316 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelUIsl.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2023-04-20 18:11:47,316 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriai.ttf', name='Cambria', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:11:47,317 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariali.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
2023-04-20 18:11:47,317 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARA.TTF', name='Garamond', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,317 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSPCL.TTF', name='MS Reference Specialty', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,318 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-REGULAR.TTF', name='Dubai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,318 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LHANDW.TTF', name='Lucida Handwriting', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:11:47,318 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:11:47,319 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comici.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:11:47,319 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTAUR.TTF', name='Centaur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,320 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEBO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-20 18:11:47,320 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ONYX.TTF', name='Onyx', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,320 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrima.ttf', name='Ebrima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,321 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFI.TTF', name='Californian FB', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:11:47,321 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERBI___.TTF', name='Perpetua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:11:47,321 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbell.ttf', name='Corbel', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-20 18:11:47,321 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILI____.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:11:47,323 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segmdl2.ttf', name='Segoe MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,323 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-BOLD.TTF', name='Dubai', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:11:47,323 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FELIXTI.TTF', name='Felix Titling', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,323 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbd.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
2023-04-20 18:11:47,324 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taileb.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:11:47,324 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeprb.ttf', name='Segoe Print', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:11:47,324 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoescb.ttf', name='Segoe Script', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:11:47,324 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITE.TTF', name='Lucida Bright', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,325 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhbd.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:11:47,325 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\times.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,325 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisb.ttf', name='Segoe UI', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-20 18:11:47,325 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSDB.TTF', name='Berlin Sans FB Demi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:11:47,326 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbi.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
2023-04-20 18:11:47,326 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesi.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:11:47,326 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADM.TTF', name='Franklin Gothic Demi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,327 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERTI.TTF', name='High Tower Text', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:11:47,327 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF-Italic.ttf', name='Sitka', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:11:47,327 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsun.ttc', name='SimSun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,329 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTI.TTF', name='Calisto MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:11:47,330 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCMI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:11:47,330 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaral.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,330 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\lucon.ttf', name='Lucida Console', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,331 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_I.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:11:47,331 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mvboli.ttf', name='MV Boli', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,331 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiab.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:11:47,332 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\l_10646.ttf', name='Lucida Sans Unicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,332 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTIBD.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:11:47,333 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNT.TTF', name='Elephant', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,333 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASMD.TTF', name='Eras Medium ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,333 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MSUIGHUR.TTF', name='Microsoft Uighur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,334 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYB.TTF', name='Agency FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:11:47,334 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MSUIGHUB.TTF', name='Microsoft Uighur', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:11:47,334 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicbd.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:11:47,335 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMIT.TTF', name='Franklin Gothic Demi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:11:47,335 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKEB.TTF', name='Rockwell Extra Bold', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
2023-04-20 18:11:47,335 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PER_____.TTF', name='Perpetua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,336 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VINERITC.TTF', name='Viner Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,336 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\marlett.ttf', name='Marlett', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-04-20 18:11:47,336 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrili.ttf', name='Calibri', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-04-20 18:11:47,337 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICBI.TTF', name='Century Gothic', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:11:47,337 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ALGER.TTF', name='Algerian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,337 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOS.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,337 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelz.ttf', name='Corbel', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:11:47,339 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILB____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:11:47,339 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUABI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:11:47,339 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\sylfaen.ttf', name='Sylfaen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,339 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriaz.ttf', name='Cambria', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:11:47,340 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanaz.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
2023-04-20 18:11:47,340 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constan.ttf', name='Constantia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,341 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTILI.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-20 18:11:47,341 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCM_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,341 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhl.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2023-04-20 18:11:47,341 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOS.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-20 18:11:47,342 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HATTEN.TTF', name='Haettenschweiler', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,342 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JOKERMAN.TTF', name='Jokerman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,342 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ENGR.TTF', name='Engravers MT', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-04-20 18:11:47,343 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARAIT.TTF', name='Garamond', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:11:47,343 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,343 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelli.ttf', name='Corbel', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-04-20 18:11:47,344 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constani.ttf', name='Constantia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:11:47,344 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIST.TTF', name='Calisto MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,344 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PARCHM.TTF', name='Parchment', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,345 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\himalaya.ttf', name='Microsoft Himalaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,345 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRADHITC.TTF', name='Bradley Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,345 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\wingding.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,345 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtextb.ttf', name='Myanmar Text', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:11:47,346 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG3.TTF', name='Wingdings 3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,347 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGSOL.TTF', name='Niagara Solid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,347 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarali.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:11:47,347 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKI.TTF', name='Rockwell', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:11:47,348 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolab.ttf', name='Consolas', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:11:47,348 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXDI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-20 18:11:47,348 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BAUHS93.TTF', name='Bauhaus 93', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,349 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisli.ttf', name='Segoe UI', style='italic', variant='normal', weight=350, stretch='normal', size='scalable')) = 11.0975
2023-04-20 18:11:47,349 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELL.TTF', name='Bell MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,349 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2023-04-20 18:11:47,350 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyi.ttf', name='Microsoft Yi Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,350 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSR.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,350 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHVIT.TTF', name='Franklin Gothic Heavy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:11:47,350 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OLDENGL.TTF', name='Old English Text MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,350 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbel.ttf', name='Corbel', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,351 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLB.TTF', name='Bell MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:11:47,351 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelaUIb.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:11:47,351 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHV.TTF', name='Franklin Gothic Heavy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,351 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OUTLOOK.TTF', name='MS Outlook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,353 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PRISTINA.TTF', name='Pristina', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,353 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERI____.TTF', name='Perpetua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:11:47,353 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtext.ttf', name='Myanmar Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,353 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSAN.TTF', name='MS Reference Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,354 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERB____.TTF', name='Perpetua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:11:47,354 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTEXTRA.TTF', name='MT Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,354 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKB.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:11:47,354 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARABD.TTF', name='Garamond', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:11:47,356 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cour.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,356 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mingliub.ttc', name='MingLiU-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,356 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICB.TTF', name='Century Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:11:47,357 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspa.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,357 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VIVALDII.TTF', name='Vivaldi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:11:47,357 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAGE.TTF', name='Rage Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:11:47,358 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-20 18:11:47,358 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2023-04-20 18:11:47,358 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MATURASC.TTF', name='Matura MT Script Capitals', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,358 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comic.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,359 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbi.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:11:47,360 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothR.ttc', name='Yu Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,360 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palai.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:11:47,360 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MOD20.TTF', name='Modern No. 20', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,360 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMCN.TTF', name='Franklin Gothic Demi Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-20 18:11:47,361 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrimabd.ttf', name='Ebrima', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:11:47,361 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\javatext.ttf', name='Javanese Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,362 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CASTELAR.TTF', name='Castellar', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,362 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSDI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-20 18:11:47,362 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelawUI.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,363 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAX.TTF', name='Lucida Fax', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,363 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunbd.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:11:47,363 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF.ttf', name='Sitka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,364 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTL.TTF', name='Copperplate Gothic Light', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,364 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
2023-04-20 18:11:47,364 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeui.ttf', name='Segoe UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,365 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Gabriola.ttf', name='Gabriola', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,365 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTBI.TTF', name='Calisto MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:11:47,365 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicz.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:11:47,366 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALN.TTF', name='Arial', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 6.613636363636363
2023-04-20 18:11:47,366 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKBI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:11:47,366 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FREESCPT.TTF', name='Freestyle Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,367 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTURY.TTF', name='Century', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,367 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaB.ttf', name='Nirmala UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:11:47,367 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSB.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:11:47,368 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSD.TTF', name='Lucida Sans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-20 18:11:47,368 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuisl.ttf', name='Segoe UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2023-04-20 18:11:47,368 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:11:47,369 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:11:47,369 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguihis.ttf', name='Segoe UI Historic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,369 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCB____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-04-20 18:11:47,370 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambria.ttc', name='Cambria', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,370 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKBI.TTF', name='Rockwell', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:11:47,370 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGENG.TTF', name='Niagara Engraved', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,370 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisym.ttf', name='Segoe UI Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,371 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inkfree.ttf', name='Ink Free', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,371 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASBD.TTF', name='Eras Bold ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,371 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILC____.TTF', name='Gill Sans MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-20 18:11:47,372 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candara.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,372 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\bahnschrift.ttf', name='Bahnschrift', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,372 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BROADW.TTF', name='Broadway', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,373 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolaz.ttf', name='Consolas', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:11:47,373 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CBI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2023-04-20 18:11:47,373 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuii.ttf', name='Segoe UI', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:11:47,373 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibli.ttf', name='Segoe UI', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2023-04-20 18:11:47,374 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEDI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-20 18:11:47,374 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucit.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:11:47,374 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BKANT.TTF', name='Book Antiqua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,375 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothL.ttc', name='Yu Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-20 18:11:47,375 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrii.ttf', name='Calibri', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:11:47,376 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CURLZ___.TTF', name='Curlz MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,376 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelb.ttf', name='Corbel', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:11:47,376 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARLRDBD.TTF', name='Arial Rounded MT Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,376 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothB.ttc', name='Yu Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:11:47,378 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASDEMI.TTF', name='Eras Demi ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,378 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
2023-04-20 18:11:47,378 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANS.TTF', name='Lucida Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,379 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariblk.ttf', name='Arial', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 6.888636363636364
2023-04-20 18:11:47,379 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCKRIST.TTF', name='Kristen ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,379 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\KUNSTLER.TTF', name='Kunstler Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,379 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanb.ttf', name='Constantia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:11:47,380 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PAPYRUS.TTF', name='Papyrus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,380 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JUICE___.TTF', name='Juice ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,380 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguili.ttf', name='Segoe UI', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-04-20 18:11:47,381 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:11:47,381 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarab.ttf', name='Candara', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:11:47,381 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\IMPRISHA.TTF', name='Imprint MT Shadow', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,381 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailu.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,382 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbi.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:11:47,382 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuil.ttf', name='Segoe UI', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-20 18:11:47,382 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanai.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
2023-04-20 18:11:47,384 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoepr.ttf', name='Segoe Print', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,384 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaraz.ttf', name='Candara', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:11:47,384 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNB.TTF', name='Arial', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 6.8986363636363635
2023-04-20 18:11:47,385 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspab.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:11:47,385 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,385 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCM____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-20 18:11:47,385 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARNGTON.TTF', name='Harrington', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,386 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbd.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:11:47,386 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:11:47,386 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILSANUB.TTF', name='Gill Sans Ultra Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,387 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibri.ttf', name='Calibri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,387 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiaz.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:11:47,387 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegoeIcons.ttf', name='Segoe Fluent Icons', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,388 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAGNETOB.TTF', name='Magneto', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:11:47,388 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICI.TTF', name='Century Gothic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:11:47,388 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCBLKAD.TTF', name='Blackadder ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,389 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahomabd.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:11:47,389 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugi.ttf', name='Gadugi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,389 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LCALLIG.TTF', name='Lucida Calligraphy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:11:47,389 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyh.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,389 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsunb.ttf', name='SimSun-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,391 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgun.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,391 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIL_____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,391 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VLADIMIR.TTF', name='Vladimir Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,392 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,392 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msgothic.ttc', name='MS Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,392 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRSCRIPT.TTF', name='French Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,392 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILBI___.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:11:47,392 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASLGHT.TTF', name='Eras Light ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,394 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTB.TTF', name='Calisto MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:11:47,394 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunsl.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-20 18:11:47,394 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRUSHSCI.TTF', name='Brush Script MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:11:47,394 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SNAP____.TTF', name='Snap ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,395 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuib.ttf', name='Segoe UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:11:47,395 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCBI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:11:47,395 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailub.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:11:47,396 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framd.ttf', name='Franklin Gothic Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,396 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolai.ttf', name='Consolas', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:11:47,396 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCEB.TTF', name='Tw Cen MT Condensed Extra Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-20 18:11:47,396 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\POORICH.TTF', name='Poor Richard', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,397 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDYSTO.TTF', name='Goudy Stout', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,397 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKB.TTF', name='Rockwell', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:11:47,397 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PALSCRI.TTF', name='Palace Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,397 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarai.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:11:47,397 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\micross.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,398 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LEELAWDB.TTF', name='Leelawadee', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:11:47,398 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABK.TTF', name='Franklin Gothic Book', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,398 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjh.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,398 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palabi.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:11:47,399 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAVIE.TTF', name='Ravie', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,399 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCK.TTF', name='Rockwell', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,399 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\pala.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,399 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibriz.ttf', name='Calibri', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:11:47,400 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugib.ttf', name='Gadugi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:11:47,400 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_PSTC.TTF', name='Bodoni MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-20 18:11:47,400 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENSCBK.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,400 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanab.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
2023-04-20 18:11:47,401 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LATINWD.TTF', name='Wide Latin', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
2023-04-20 18:11:47,401 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbeli.ttf', name='Corbel', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:11:47,401 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIGI.TTF', name='Gigi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,401 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITED.TTF', name='Lucida Bright', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-20 18:11:47,402 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbi.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:11:47,402 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhl.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2023-04-20 18:11:47,402 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguiemj.ttf', name='Segoe UI Emoji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,402 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OCRAEXT.TTF', name='OCR A Extended', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
2023-04-20 18:11:47,403 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebuc.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,403 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SHOWG.TTF', name='Showcard Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,403 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BASKVILL.TTF', name='Baskerville Old Face', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,404 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriab.ttf', name='Cambria', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:11:47,404 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAIAN.TTF', name='Maiandra GD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,404 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCRIPTBL.TTF', name='Script MT Bold', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:11:47,406 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLECB.TTF', name='Gloucester MT Extra Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-20 18:11:47,406 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNTI.TTF', name='Elephant', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:11:47,406 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFR.TTF', name='Californian FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,407 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHIC.TTF', name='Century Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,407 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PLAYBILL.TTF', name='Playbill', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,408 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABKIT.TTF', name='Franklin Gothic Book', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:11:47,408 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARLOWSI.TTF', name='Harlow Solid Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:11:47,409 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPE.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,409 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taile.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,409 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibl.ttf', name='Segoe UI', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2023-04-20 18:11:47,409 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNBI.TTF', name='Arial', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 7.8986363636363635
2023-04-20 18:11:47,410 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuiz.ttf', name='Segoe UI', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:11:47,410 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSBI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-20 18:11:47,410 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palab.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:11:47,411 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLI.TTF', name='Bell MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:11:47,411 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILLUBCD.TTF', name='Gill Sans Ultra Bold Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-20 18:11:47,411 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbd.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:11:47,412 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhbd.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:11:47,412 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoesc.ttf', name='Segoe Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,412 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\couri.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:11:47,413 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegUIVar.ttf', name='Segoe UI Variable', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,413 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_R.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,414 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTB.TTF', name='Copperplate Gothic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,414 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:11:47,414 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCB_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:11:47,415 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TEMPSITC.TTF', name='Tempus Sans ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,415 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MISTRAL.TTF', name='Mistral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,415 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FORTE.TTF', name='Forte', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,416 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CB.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-04-20 18:11:47,416 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbd.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:11:47,416 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STENCIL.TTF', name='Stencil', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,417 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrib.ttf', name='Calibri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:11:47,417 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERT.TTF', name='High Tower Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,417 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTCORSVA.TTF', name='Monotype Corsiva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:11:47,418 [33244] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFB.TTF', name='Californian FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:11:47,418 [33244] DEBUG    matplotlib.font_manager:1367: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
2023-04-20 18:19:44,242 [14452] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-04-20 18:19:44,243 [14452] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-04-20 18:19:44,243 [14452] INFO     root:247: [JupyterRequire] Initializing comms.
2023-04-20 18:19:44,248 [14452] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-04-20 18:19:44,249 [14452] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-04-20 18:19:44,250 [14452] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-04-20 18:19:47,987 [14452] INFO     numexpr.utils:147: [JupyterRequire] Note: NumExpr detected 12 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
2023-04-20 18:19:47,988 [14452] INFO     numexpr.utils:159: [JupyterRequire] NumExpr defaulting to 8 threads.
2023-04-20 18:19:48,695 [14452] DEBUG    matplotlib:275: [JupyterRequire] matplotlib data path: C:\Users\adity\anaconda3\lib\site-packages\matplotlib\mpl-data
2023-04-20 18:19:48,702 [14452] DEBUG    matplotlib:275: [JupyterRequire] CONFIGDIR=C:\Users\adity\.matplotlib
2023-04-20 18:19:48,705 [14452] DEBUG    matplotlib:1445: [JupyterRequire] interactive is False
2023-04-20 18:19:48,706 [14452] DEBUG    matplotlib:1446: [JupyterRequire] platform is win32
2023-04-20 18:19:48,706 [14452] DEBUG    matplotlib:1447: [JupyterRequire] loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', '_io', 'marshal', 'nt', 'winreg', '_frozen_importlib_external', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', 'encodings.cp1252', '_signal', 'encodings.latin_1', '_abc', 'abc', 'io', '__main__', '_stat', 'stat', '_collections_abc', 'genericpath', 'ntpath', 'os.path', 'os', '_sitebuiltins', '_locale', '_bootlocale', '_distutils_hack', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib.machinery', '_heapq', 'heapq', 'itertools', 'keyword', '_operator', 'operator', 'reprlib', '_collections', 'collections', 'collections.abc', '_functools', 'functools', 'contextlib', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', 'copyreg', 're', 'typing.io', 'typing.re', 'typing', 'importlib.abc', 'importlib.util', 'google', 'google.cloud', 'google.logging', 'mpl_toolkits', 'sphinxcontrib', 'zope', 'site', '_weakrefset', 'weakref', 'pkgutil', 'runpy', 'ipykernel._version', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'errno', 'signal', 'threading', 'msvcrt', '_winapi', 'subprocess', 'jupyter_client._version', 'posixpath', 'fnmatch', 'glob', '_socket', 'math', 'select', 'selectors', 'socket', 'zlib', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', '_bisect', 'bisect', '_random', '_sha512', 'random', 'tempfile', 'getpass', 'platform', 'zmq.libzmq', 'zmq.backend.select', 'cython_runtime', 'zmq.backend.cython.constants', '_cython_0_29_24', 'zmq.backend.cython.error', 'zmq.error', 'zmq.backend.cython.message', 'zmq.backend.cython.context', 'copy', '_struct', 'struct', '_compat_pickle', '_pickle', 'pickle', 'zmq.backend.cython.socket', 'zmq.backend.cython.utils', 'zmq.backend.cython._poll', 'zmq.backend.cython._version', 'zmq.backend.cython._device', 'zmq.backend.cython._proxy_steerable', 'zmq.backend.cython', 'zmq.backend', 'zmq.utils', 'zmq.utils.constant_names', 'zmq.sugar.constants', 'atexit', 'zmq.sugar.attrsettr', 'zmq.sugar.poll', 'zmq.utils.jsonapi', 'zmq.utils.strtypes', 'zmq.sugar.socket', 'zmq.sugar.context', 'zmq.sugar.frame', 'zmq.sugar.tracker', 'zmq.sugar.version', 'zmq.sugar.stopwatch', 'zmq.sugar', 'zmq', '_ast', 'ast', '_opcode', 'opcode', 'dis', 'token', 'tokenize', 'linecache', 'inspect', 'traitlets.utils', 'traitlets.utils.getargspec', 'traitlets.utils.importstring', 'traitlets.utils.sentinel', 'traitlets.utils.bunch', 'traitlets.utils.descriptions', 'traitlets.traitlets', 'traitlets.utils.decorators', 'traitlets._version', 'traitlets', 'traceback', '_string', 'string', 'logging', 'pprint', 'gettext', 'argparse', 'traitlets.config.loader', 'textwrap', 'traitlets.utils.text', 'traitlets.config.configurable', 'traitlets.config.application', 'traitlets.config', 'jupyter_client.localinterfaces', 'jupyter_core.version', 'jupyter_core', 'urllib', 'urllib.parse', 'pathlib', 'jupyter_core.paths', 'jupyter_client.utils', 'jupyter_client.connect', 'traitlets.log', 'jupyter_client.launcher', 'concurrent', 'concurrent.futures._base', 'concurrent.futures', '_ssl', 'binascii', 'base64', 'ssl', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', '_contextvars', 'contextvars', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.threads', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'asyncio.windows_events', 'asyncio', 'jupyter_client.channelsabc', 'jupyter_client.channels', 'jupyter_client.clientabc', 'jupyter_client.client', 'jupyter_client.kernelspec', 'jupyter_client.managerabc', 'jupyter_client.manager', '_queue', 'queue', 'jupyter_client.blocking.channels', 'jupyter_client.blocking.client', 'jupyter_client.blocking', 'zmq._future', 'zmq.asyncio', 'jupyter_client.asynchronous.channels', 'jupyter_client.asynchronous.client', 'jupyter_client.asynchronous', '_uuid', 'uuid', 'jupyter_client.multikernelmanager', 'jupyter_client', 'ipykernel.connect', 'ipykernel', 'tornado', '_datetime', 'datetime', 'numbers', 'logging.handlers', 'html.entities', 'html', 'array', 'tornado.speedups', 'tornado.util', 'tornado.escape', 'colorama.ansi', '_ctypes', 'ctypes._endian', 'ctypes', 'ctypes.wintypes', 'colorama.win32', 'colorama.winterm', 'colorama.ansitowin32', 'colorama.initialise', 'colorama', 'tornado.log', 'tornado.concurrent', 'tornado.ioloop', '__future__', 'tornado.platform', 'tornado.gen', 'tornado.platform.asyncio', 'zmq.eventloop.ioloop', 'zmq.eventloop', 'zmq.eventloop.zmqstream', 'IPython.core', 'IPython.core.getipython', 'IPython.core.release', 'sysconfig', 'pydoc', 'executing.executing', 'executing.version', 'executing', 'asttokens.line_numbers', 'six', 'six.moves', 'asttokens.util', 'asttokens.mark_tokens', 'asttokens.asttokens', 'asttokens', '_decimal', 'decimal', 'fractions', 'pure_eval.utils', 'pure_eval.my_getattr_static', 'pure_eval.core', 'pure_eval.version', 'pure_eval', 'stack_data.utils', 'stack_data.core', 'stack_data.formatting', 'stack_data.version', 'stack_data', 'pygments', 'pygments.formatters._mapping', 'pygments.plugin', 'pygments.util', 'pygments.formatters', 'pygments.styles', 'pygments.formatter', 'pygments.console', 'pygments.token', 'pygments.style', 'pygments.formatters.terminal256', 'bdb', 'IPython.utils', 'IPython.utils.ipstruct', 'IPython.utils.coloransi', 'IPython.utils.colorable', 'IPython.utils.PyColorize', 'locale', 'IPython.utils.encoding', 'IPython.utils.py3compat', 'IPython.core.excolors', 'cmd', 'codeop', 'code', 'pdb', 'IPython.core.debugger', 'IPython.core.display_trap', 'shlex', 'IPython.utils._process_common', 'IPython.utils._process_win32', 'IPython.utils.process', 'IPython.utils.decorators', 'IPython.utils.path', 'IPython.utils.terminal', 'IPython.core.ultratb', 'IPython.utils._sysinfo', 'IPython.utils.sysinfo', 'IPython.core.crashhandler', 'IPython.utils.importstring', 'IPython.paths', 'IPython.core.profiledir', 'IPython.core.application', 'IPython.terminal', '_hashlib', '_blake2', 'hashlib', 'IPython.core.compilerop', 'IPython.core.error', 'IPython.utils.text', 'IPython.core.magic_arguments', 'getopt', 'IPython.core.display_functions', 'mimetypes', 'IPython.testing', 'IPython.testing.skipdoctest', 'IPython.core.display', 'IPython.lib', 'IPython.lib.display', 'IPython.display', 'IPython.utils.data', 'IPython.core.page', 'IPython.lib.pretty', 'IPython.utils.openpy', 'IPython.utils.dir2', 'IPython.utils.wildcard', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.lexers', 'pygments.filter', 'pygments.filters', 'pygments.regexopt', 'pygments.lexer', 'pygments.unistring', 'pygments.lexers.python', 'pygments.formatters.html', 'IPython.core.oinspect', 'IPython.core.inputtransformer2', 'IPython.core.magic', 'pickleshare', 'IPython.core.hooks', 'IPython.core.autocall', 'IPython.core.macro', 'IPython.core.splitinput', 'IPython.core.prefilter', 'IPython.core.alias', 'IPython.core.builtin_trap', 'IPython.core.displayhook', 'IPython.core.displaypub', 'backcall.backcall', 'backcall', 'IPython.core.events', 'IPython.core.extensions', 'decorator', 'IPython.utils.sentinel', 'IPython.core.formatters', '_sqlite3', 'sqlite3.dbapi2', 'sqlite3', 'IPython.core.history', 'IPython.core.logger', 'IPython.core.payload', 'IPython.core.usage', 'IPython.utils.capture', 'IPython.utils.io', 'IPython.utils.strdispatch', 'IPython.utils.syspathcontext', 'IPython.core.async_helpers', 'IPython.core.interactiveshell', 'prompt_toolkit.application.current', 'prompt_toolkit.eventloop.utils', 'prompt_toolkit.eventloop.async_generator', 'wcwidth.table_wide', 'wcwidth.table_zero', 'wcwidth.unicode_versions', 'wcwidth.wcwidth', 'wcwidth', 'prompt_toolkit.utils', 'prompt_toolkit.eventloop.inputhook', 'prompt_toolkit.eventloop', 'prompt_toolkit.application.run_in_terminal', 'prompt_toolkit.selection', 'prompt_toolkit.clipboard.base', 'prompt_toolkit.clipboard.in_memory', 'prompt_toolkit.clipboard', 'prompt_toolkit.cache', 'prompt_toolkit.enums', 'prompt_toolkit.filters.base', 'prompt_toolkit.filters.app', 'prompt_toolkit.filters.cli', 'prompt_toolkit.filters.utils', 'prompt_toolkit.filters', 'prompt_toolkit.document', 'prompt_toolkit.auto_suggest', 'prompt_toolkit.data_structures', 'prompt_toolkit.styles.base', 'prompt_toolkit.styles.named_colors', 'prompt_toolkit.styles.style', 'prompt_toolkit.styles.defaults', 'prompt_toolkit.styles.pygments', 'colorsys', 'prompt_toolkit.styles.style_transformation', 'prompt_toolkit.styles', 'prompt_toolkit.output.color_depth', 'prompt_toolkit.output.base', 'prompt_toolkit.output.defaults', 'prompt_toolkit.output', 'prompt_toolkit.output.vt100', 'prompt_toolkit.mouse_events', 'prompt_toolkit.formatted_text.base', 'prompt_toolkit.formatted_text.ansi', 'xml', 'xml.dom.domreg', 'xml.dom', 'xml.dom.minicompat', 'xml.dom.NodeFilter', 'xml.dom.xmlbuilder', 'xml.dom.minidom', 'prompt_toolkit.formatted_text.html', 'prompt_toolkit.formatted_text.pygments', 'prompt_toolkit.formatted_text.utils', 'prompt_toolkit.formatted_text', 'prompt_toolkit.completion.base', 'prompt_toolkit.completion.deduplicate', 'prompt_toolkit.completion.filesystem', 'prompt_toolkit.completion.word_completer', 'prompt_toolkit.completion.fuzzy_completer', 'prompt_toolkit.completion.nested', 'prompt_toolkit.completion', 'prompt_toolkit.history', 'prompt_toolkit.keys', 'prompt_toolkit.key_binding.key_bindings', 'prompt_toolkit.key_binding.key_processor', 'prompt_toolkit.key_binding', 'prompt_toolkit.key_binding.vi_state', 'prompt_toolkit.search', 'prompt_toolkit.validation', 'prompt_toolkit.buffer', 'prompt_toolkit.input.base', 'prompt_toolkit.input.defaults', 'prompt_toolkit.input', 'prompt_toolkit.input.typeahead', 'prompt_toolkit.key_binding.bindings', 'prompt_toolkit.key_binding.bindings.scroll', 'prompt_toolkit.key_binding.bindings.page_navigation', 'prompt_toolkit.lexers.base', 'prompt_toolkit.lexers.pygments', 'prompt_toolkit.lexers', 'prompt_toolkit.layout.utils', 'prompt_toolkit.layout.processors', 'prompt_toolkit.layout.controls', 'prompt_toolkit.layout.dimension', 'prompt_toolkit.layout.margins', 'prompt_toolkit.layout.mouse_handlers', 'prompt_toolkit.layout.screen', 'prompt_toolkit.layout.containers', 'prompt_toolkit.layout.layout', 'prompt_toolkit.layout.menus', 'prompt_toolkit.layout.scrollable_pane', 'prompt_toolkit.layout', 'prompt_toolkit.key_binding.bindings.completion', 'prompt_toolkit.key_binding.bindings.named_commands', 'prompt_toolkit.key_binding.bindings.basic', 'prompt_toolkit.key_binding.bindings.cpr', 'prompt_toolkit.key_binding.bindings.emacs', 'prompt_toolkit.key_binding.bindings.mouse', 'prompt_toolkit.input.ansi_escape_sequences', 'prompt_toolkit.input.vt100_parser', 'prompt_toolkit.key_binding.digraphs', 'prompt_toolkit.key_binding.bindings.vi', 'prompt_toolkit.key_binding.defaults', 'prompt_toolkit.key_binding.emacs_state', 'prompt_toolkit.layout.dummy', 'prompt_toolkit.renderer', 'prompt_toolkit.application.application', 'prompt_toolkit.application.dummy', 'prompt_toolkit.application', 'prompt_toolkit.key_binding.bindings.focus', 'prompt_toolkit.widgets.toolbars', 'prompt_toolkit.widgets.base', 'prompt_toolkit.widgets.dialogs', 'prompt_toolkit.widgets.menus', 'prompt_toolkit.widgets', 'prompt_toolkit.shortcuts.dialogs', 'prompt_toolkit.shortcuts.progress_bar.formatters', 'prompt_toolkit.shortcuts.progress_bar.base', 'prompt_toolkit.shortcuts.progress_bar', 'prompt_toolkit.key_binding.bindings.auto_suggest', 'prompt_toolkit.key_binding.bindings.open_in_editor', 'prompt_toolkit.shortcuts.prompt', 'prompt_toolkit.shortcuts.utils', 'prompt_toolkit.shortcuts', 'prompt_toolkit', 'prompt_toolkit.patch_stdout', 'unicodedata', 'IPython.core.latex_symbols', 'IPython.utils.generics', 'parso.utils', 'parso.tree', 'parso.python', 'parso.python.token', 'parso.python.tokenize', 'parso.pgen2.grammar_parser', 'parso.pgen2.generator', 'parso.pgen2', 'parso.parser', 'parso._compatibility', 'difflib', 'parso.python.prefix', 'parso.python.tree', 'parso.python.parser', 'parso.python.diff', 'gc', 'parso.cache', 'parso.normalizer', 'parso.python.errors', 'parso.python.pep8', 'parso.file_io', 'parso.grammar', 'parso', 'jedi.parser_utils', 'jedi.debug', 'jedi.settings', 'jedi.cache', 'jedi.file_io', 'jedi.inference.cache', 'jedi.inference.helpers', 'jedi.inference.utils', 'jedi.inference.base_value', 'jedi.inference.sys_path', 'jedi.inference.recursion', 'jedi.inference.flow_analysis', 'jedi.common', 'jedi.inference.lazy_value', 'jedi.inference.docstrings', 'jedi.plugins', 'jedi.inference.names', 'jedi.inference.filters', 'jedi.inference.compiled.getattr_static', 'jedi.inference.compiled.access', 'jedi.inference.signature', 'jedi.inference.context', 'jedi.inference.compiled.value', 'jedi.inference.compiled', 'jedi.inference.analysis', 'jedi.inference.gradual', 'jedi.inference.value.module', 'jedi.inference.value.dynamic_arrays', 'jedi.inference.value.iterable', 'jedi.inference.arguments', 'jedi.inference.parser_cache', 'jedi.inference.gradual.generics', 'jedi.inference.value.function', 'jedi.inference.value.klass', 'jedi.inference.value.instance', 'jedi.inference.value', 'jedi.inference.gradual.base', 'jedi.inference.gradual.type_var', 'jedi.inference.gradual.typing', 'jedi.inference.gradual.stub_value', 'jedi.inference.gradual.typeshed', 'jedi._compatibility', 'zipfile', 'jedi.inference.compiled.subprocess.functions', 'jedi.api.exceptions', 'jedi.inference.compiled.subprocess', 'jedi.inference.imports', 'jedi.inference.param', 'jedi.inference.gradual.annotation', 'jedi.inference.value.decorator', 'jedi.inference.syntax_tree', 'jedi.inference', 'jedi.inference.gradual.conversion', 'jedi.inference.compiled.mixed', 'pydoc_data', 'pydoc_data.topics', 'jedi.api.keywords', 'jedi.api.completion_cache', 'jedi.api.helpers', 'jedi.api.classes', 'jedi.api.interpreter', 'jedi.api.strings', 'jedi.api.file_name', 'jedi.inference.docstring_utils', 'jedi.api.completion', 'filecmp', 'jedi.api.environment', 'jedi.inference.references', 'jedi.api.project', 'jedi.api.errors', 'jedi.api.refactoring', 'jedi.api.refactoring.extract', 'jedi.inference.gradual.utils', 'jedi.api', 'jedi.plugins.stdlib', 'jedi.plugins.flask', 'jedi.plugins.pytest', 'jedi.plugins.django', 'jedi.plugins.registry', 'jedi', 'IPython.core.completer', 'IPython.terminal.ptutils', 'IPython.lib.clipboard', 'IPython.terminal.shortcuts', 'concurrent.futures.thread', 'IPython.terminal.debugger', 'IPython.terminal.magics', 'IPython.terminal.pt_inputhooks', 'IPython.terminal.prompts', 'IPython.terminal.interactiveshell', 'IPython.core.magics.auto', 'IPython.core.magics.basic', 'email', 'http', 'email.errors', 'email.quoprimime', 'email.base64mime', 'quopri', 'email.encoders', 'email.charset', 'email.header', 'calendar', 'email._parseaddr', 'email.utils', 'email._policybase', 'email.feedparser', 'email.parser', 'uu', 'email._encoded_words', 'email.iterators', 'email.message', 'http.client', 'urllib.response', 'urllib.error', 'nturl2path', 'urllib.request', 'IPython.utils.contexts', 'IPython.core.magics.code', 'IPython.core.magics.config', 'IPython.core.magics.display', '_lsprof', 'profile', 'cProfile', 'dataclasses', 'pstats', 'timeit', 'IPython.utils.module_paths', 'IPython.utils.timing', 'IPython.core.magics.execution', 'IPython.core.magics.extension', 'IPython.core.magics.history', 'IPython.core.magics.logging', 'IPython.core.magics.namespace', 'IPython.core.magics.osm', 'IPython.core.magics.packaging', 'IPython.core.pylabtools', 'IPython.core.magics.pylab', 'IPython.core.magics.script', 'IPython.core.magics', 'IPython.core.shellapp', 'IPython.extensions', 'IPython.extensions.storemagic', 'IPython.terminal.ipapp', 'IPython.terminal.embed', 'IPython.utils.frame', 'IPython', 'imp', 'hmac', 'dateutil._version', 'dateutil', 'dateutil._common', 'dateutil.relativedelta', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.win', 'dateutil.tz.tz', 'dateutil.tz', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', '_strptime', 'jupyter_client.jsonutil', 'jupyter_client.adapter', 'jupyter_client.session', 'ipykernel.iostream', 'ipykernel.control', 'ipykernel.heartbeat', 'IPython.utils.tokenutil', 'psutil._common', 'psutil._compat', 'psutil._psutil_windows', 'psutil._pswindows', 'psutil', 'tornado.locks', 'tornado.queues', 'ipykernel.jsonutil', 'ipykernel.kernelbase', 'ipykernel.comm.comm', 'ipykernel.comm.manager', 'ipykernel.comm', 'IPython.core.payloadpage', 'ipykernel.displayhook', 'ipykernel.zmqshell', 'setuptools._distutils', 'distutils.debug', 'distutils.errors', 'distutils.fancy_getopt', 'distutils.dep_util', 'distutils.log', 'distutils.spawn', 'distutils.py35compat', 'distutils.util', 'distutils.dist', 'distutils.dir_util', 'distutils.file_util', 'distutils.archive_util', 'distutils.cmd', 'configparser', 'distutils.config', 'distutils.extension', 'distutils.core', '_distutils_hack.override', 'setuptools._deprecation_warning', 'xml.parsers', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'xml.parsers.expat', 'plistlib', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources._vendor.jaraco', 'pkg_resources.extern.jaraco', 'importlib._common', 'importlib.resources', 'pkg_resources._vendor.more_itertools.recipes', 'pkg_resources._vendor.more_itertools.more', 'pkg_resources._vendor.more_itertools', 'pkg_resources.extern.more_itertools', 'pkg_resources.extern.jaraco.functools', 'pkg_resources.extern.jaraco.context', 'pkg_resources.extern.jaraco.text', 'win32api', '_win32sysloader', 'pywintypes', 'pythoncom', 'win32com.gen_py', 'win32com', 'win32com.shell', 'pkg_resources._vendor.appdirs', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources._vendor.packaging', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.version', 'pkg_resources._vendor.packaging._manylinux', 'pkg_resources._vendor.packaging._musllinux', 'pkg_resources.extern.packaging.tags', 'pkg_resources.extern.packaging.utils', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources._vendor.pyparsing', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.packaging.markers', 'pkg_resources.extern.packaging.requirements', 'pkg_resources', 'setuptools.version', 'distutils.filelist', 'setuptools.monkey', 'setuptools.extension', 'distutils.command', 'setuptools.extern', 'setuptools._vendor', 'setuptools._vendor.packaging.__about__', 'setuptools._vendor.packaging', 'setuptools.extern.packaging', 'setuptools._vendor.ordered_set', 'setuptools.extern.ordered_set', 'setuptools._vendor.more_itertools.recipes', 'setuptools._vendor.more_itertools.more', 'setuptools._vendor.more_itertools', 'setuptools.extern.more_itertools', 'setuptools._vendor.pyparsing', 'setuptools.extern.pyparsing', 'setuptools._vendor.packaging._manylinux', 'setuptools._vendor.packaging._musllinux', 'setuptools.extern.packaging.tags', 'setuptools.extern.packaging._structures', 'setuptools.extern.packaging.version', 'setuptools.extern.packaging.utils', 'setuptools.extern.packaging.specifiers', 'setuptools.extern.packaging.markers', 'setuptools.extern.packaging.requirements', 'setuptools._vendor.jaraco', 'setuptools.extern.jaraco', 'setuptools.extern.jaraco.context', 'setuptools.extern.jaraco.functools', '_csv', 'csv', 'setuptools._vendor.zipp', 'setuptools._vendor.importlib_metadata._functools', 'setuptools._vendor.importlib_metadata._text', 'setuptools._vendor.importlib_metadata._adapters', 'setuptools._vendor.importlib_metadata._compat', 'setuptools._vendor.importlib_metadata._meta', 'setuptools._vendor.importlib_metadata._collections', 'setuptools._vendor.importlib_metadata._itertools', 'setuptools._vendor.importlib_metadata', 'setuptools.extern.importlib_metadata', 'setuptools._vendor.nspektr._compat', 'setuptools._vendor.nspektr', 'setuptools.extern.nspektr', 'zipp', 'importlib_metadata._functools', 'importlib_metadata._text', 'importlib_metadata._adapters', 'importlib_metadata._compat', 'importlib_metadata._meta', 'importlib_metadata._collections', 'importlib_metadata._itertools', 'importlib_metadata', 'setuptools._importlib', 'distutils.command.bdist', 'setuptools.command', 'setuptools.windows_support', 'setuptools.config.expand', 'setuptools.config.setupcfg', 'setuptools.config', 'setuptools.errors', 'email._header_value_parser', 'email.headerregistry', 'setuptools.config._apply_pyprojecttoml', 'setuptools.config.pyprojecttoml', 'setuptools.discovery', 'setuptools.extern.jaraco.text', 'setuptools._reqs', 'setuptools._itertools', 'setuptools._entry_points', 'setuptools.dist', 'setuptools.py34compat', 'setuptools._imp', 'setuptools.depends', 'setuptools.logging', 'distutils.ccompiler', 'distutils.msvc9compiler', 'setuptools.msvc', 'unittest.util', 'unittest.result', 'unittest.case', 'unittest.suite', 'unittest.loader', 'unittest.signals', 'unittest.runner', 'unittest.main', 'unittest', 'unittest.mock', 'distutils._msvccompiler', 'setuptools', 'distutils', 'distutils.version', 'ipykernel.eventloops', 'ipykernel.compiler', 'debugpy._version', 'debugpy.common', 'debugpy.common.json', 'debugpy.common.fmt', 'debugpy.common.compat', 'debugpy', 'debugpy._vendored._util', 'debugpy._vendored', '_pydevd_bundle', 'encodings.ascii', 'stringprep', 'encodings.idna', '_pydevd_bundle.pydevd_vm_type', '_pydev_imps', 'xmlrpc', 'gzip', 'xmlrpc.client', 'socketserver', 'http.server', 'xmlrpc.server', '_pydev_imps._pydev_saved_modules', '_pydevd_bundle.pydevd_constants', '_pydev_bundle', '_pydev_runfiles', '_pydevd_frame_eval', 'pydev_ipython', 'pydevd_concurrency_analyser', 'pydevd_plugins', '_pydev_bundle.pydev_log', '_pydev_bundle._pydev_filesystem_encoding', '_pydevd_bundle.pydevd_comm_constants', 'pydevd_file_utils', '_pydev_imps._pydev_execfile', '_pydevd_bundle.pydevd_exec2', '_pydev_bundle.pydev_imports', '_pydev_bundle.pydev_is_thread_alive', '_pydev_bundle.pydev_override', 'pydevd_plugins.extensions', '_pydevd_bundle.pydevd_extension_utils', '_pydevd_bundle.pydevd_frame_utils', '_pydevd_bundle.pydevd_filtering', '_pydevd_bundle.pydevd_io', '_pydevd_bundle.pydevd_utils', '_pydev_bundle._pydev_tipper_common', '_pydev_bundle._pydev_imports_tipper', '_pydev_bundle._pydev_calltip_util', '_pydevd_bundle.pydevd_safe_repr', '_pydevd_bundle.pydevd_resolver', '_pydevd_bundle.pydevd_extension_api', '_pydevd_bundle.pydevd_xml', '_pydevd_bundle.pydevd_dont_trace', '_pydevd_frame_eval.vendored', '_pydevd_frame_eval.vendored.bytecode.flags', '_pydevd_frame_eval.vendored.bytecode.instr', '_pydevd_frame_eval.vendored.bytecode.bytecode', '_pydevd_frame_eval.vendored.bytecode.concrete', '_pydevd_frame_eval.vendored.bytecode.cfg', '_pydevd_frame_eval.vendored.bytecode', '_pydevd_bundle.pydevd_bytecode_utils', '_pydevd_bundle.pydevd_cython', '_pydevd_bundle.pydevd_cython_wrapper', '_pydevd_bundle.pydevd_additional_thread_info', '_pydevd_bundle.pydevd_thread_lifecycle', '_pydevd_bundle.pydevd_save_locals', '_pydevd_bundle.pydevd_defaults', '_pydev_bundle.pydev_monkey', 'pydevd_tracing', '_pydevd_bundle.pydevd_daemon_thread', '_pydevd_bundle.pydevd_timeout', '_pydevd_bundle.pydevd_vars', '_pydev_bundle.pydev_console_utils', '_pydevd_bundle.pydevd_import_class', '_pydevd_bundle.pydevd_breakpoints', '_pydevd_bundle.pydevd_custom_frames', '_pydevd_bundle.pydevd_dont_trace_files', '_pydevd_bundle.pydevd_net_command', '_pydev_bundle.pydev_umd', 'pydevconsole', '_pydev_bundle._pydev_completer', '_pydevd_bundle.pydevd_net_command_factory_xml', '_pydevd_bundle.pydevd_frame', '_pydevd_bundle.pydevd_additional_thread_info_regular', '_pydevd_bundle.pydevd_trace_dispatch', '_pydevd_frame_eval.pydevd_frame_eval_main', '_pydevd_bundle.pydevd_source_mapping', 'pydevd_concurrency_analyser.pydevd_thread_wrappers', 'pydevd_concurrency_analyser.pydevd_concurrency_logger', '_pydevd_bundle._debug_adapter', '_pydevd_bundle._debug_adapter.pydevd_schema_log', '_pydevd_bundle._debug_adapter.pydevd_base_schema', '_pydevd_bundle._debug_adapter.pydevd_schema', '_pydevd_bundle.pydevd_reload', '_pydev_bundle.fsnotify', '_pydevd_bundle.pydevd_console', '_pydevd_bundle.pydevd_comm', '_pydevd_bundle.pydevd_net_command_factory_json', '_pydevd_bundle.pydevd_collect_bytecode_info', '_pydevd_bundle.pydevd_api', '_pydevd_bundle.pydevd_json_debug_options', '_pydevd_bundle.pydevd_process_net_command_json', '_pydevd_bundle.pydevd_traceproperty', '_pydevd_bundle.pydevd_process_net_command', '_pydevd_bundle.pydevd_suspended_frames', '_pydevd_bundle.pydevd_trace_api', 'pydevd_plugins.django_debug', 'pydevd_plugins.jinja2_debug', '_pydevd_bundle.pydevd_plugin_utils', 'pydevd_plugins.extensions.types', 'pydevd_plugins.extensions.types.pydevd_helpers', 'pydevd_plugins.extensions.types.pydevd_plugin_numpy_types', 'pydevd_plugins.extensions.types.pydevd_plugins_django_form_str', 'pydevd', 'debugpy._vendored.force_pydevd', 'debugpy.server', 'debugpy.adapter', 'debugpy.common.timestamp', 'debugpy.common.util', 'debugpy.common.log', 'debugpy.common.sockets', 'debugpy.server.api', 'ipykernel.debugger', 'ipykernel.ipkernel', 'ipykernel.parentpoller', 'ipykernel.kernelapp', 'win32security', 'ntsecuritycon', 'faulthandler', 'IPython.core.completerlib', 'logging.config', 'pythonjsonlogger', 'pythonjsonlogger.jsonlogger', 'daiquiri.types', 'daiquiri.formatter', 'daiquiri.handlers', 'daiquiri.output', 'daiquiri', 'jupyter_require.__about__', 'csscompressor', 'jupyter_require.core', 'jupyter_require.notebook', 'jupyter_require', 'jupyter_nbutils.__about__', 'jupyter_nbutils.config', 'jupyter_nbutils.utils', 'jupyter_nbutils', 'jupyter_require.magic', 'numpy._globals', 'numpy.__config__', 'numpy._distributor_init', 'numpy._version', 'numpy.version', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core._asarray', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core._machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.stride_tricks', 'numpy.lib.twodim_base', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', '_cython_0_29_30', 'numpy.random._common', 'secrets', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'pytz', 'pandas._typing', '_cython_0_29_28', 'pandas._libs.tslibs.dtypes', 'pandas._libs.tslibs.base', 'pandas._libs.tslibs.np_datetime', 'pandas._libs.tslibs.nattype', 'pandas._libs.tslibs.timezones', 'pandas._libs.tslibs.ccalendar', 'pandas._libs.tslibs.tzconversion', 'pandas._config.config', 'pandas._config.dates', 'pandas._config.display', 'pandas._config', 'pandas._config.localization', 'pandas._libs.tslibs.strptime', 'pandas._libs.tslibs.fields', 'pandas._libs.tslibs.timedeltas', 'pandas._libs.tslibs.timestamps', 'dateutil.easter', 'pandas._libs.properties', 'pandas._libs.tslibs.offsets', 'pandas._libs.tslibs.parsing', 'pandas._libs.tslibs.conversion', 'pandas._libs.tslibs.period', 'pandas._libs.tslibs.vectorized', 'pandas._libs.tslibs', 'pandas._libs.ops_dispatch', 'pandas._libs.missing', 'pandas._libs.hashtable', 'pandas._libs.algos', 'pandas._libs.interval', 'pandas._libs', 'pandas.util._decorators', 'pandas.core', 'pandas.core.util', 'pandas._libs.tslib', 'pandas._libs.lib', 'pandas._libs.hashing', 'pandas.core.dtypes', 'pandas.util._exceptions', 'pandas.errors', 'pandas.core.dtypes.generic', 'pandas.core.dtypes.base', 'pandas.core.dtypes.inference', 'pandas.core.dtypes.dtypes', 'pandas.core.dtypes.common', 'pandas.core.util.hashing', 'pandas.util', 'pandas.util.version', 'pandas.compat.numpy', 'pandas.compat.pyarrow', 'pandas.compat', 'pandas.core.config_init', 'pandas.core.dtypes.missing', 'pandas.util._validators', 'pandas.core.dtypes.cast', 'pandas.core.dtypes.concat', 'pandas.core.array_algos', 'pandas.core.common', 'pandas.core.construction', 'pandas.core.array_algos.take', 'pandas.core.indexers.utils', 'pandas.core.indexers', 'pandas.core.algorithms', 'pandas.compat.numpy.function', 'pandas.core.roperator', 'pandas._libs.ops', 'pandas.core.computation', 'pandas.compat._optional', 'numexpr.interpreter', 'packaging.__about__', 'packaging', 'packaging._structures', 'packaging.version', 'numexpr.expressions', 'numexpr.utils', 'numexpr.necompiler', 'numexpr.version', 'numexpr', 'pandas.core.computation.check', 'pandas.core.computation.expressions', 'pandas.core.ops.missing', 'pandas.core.ops.dispatch', 'pandas.core.ops.invalid', 'pandas.core.ops.array_ops', 'pandas.core.ops.common', 'pandas.core.ops.docstrings', 'pandas.core.ops.mask_ops', 'pandas.core.ops.methods', 'pandas.core.ops', 'pandas.core.arraylike', 'pandas.core.missing', 'pandas.core.array_algos.quantile', 'pandas.core.sorting', 'pandas.core.arrays.base', 'bottleneck.benchmark', 'bottleneck.benchmark.autotimeit', 'bottleneck.benchmark.bench', 'bottleneck.benchmark.bench_detailed', 'bottleneck.tests', 'bottleneck.tests.util', 'bottleneck.slow.reduce', 'bottleneck.slow.nonreduce', 'bottleneck.slow.nonreduce_axis', 'bottleneck.slow.move', 'bottleneck.slow', 'bottleneck._pytesttester', 'bottleneck.move', 'bottleneck.nonreduce', 'bottleneck.nonreduce_axis', 'bottleneck.reduce', 'bottleneck._version', 'bottleneck', 'pandas.core.nanops', 'pandas.core.array_algos.masked_reductions', 'pandas.core.arrays.masked', 'pandas.core.arrays.boolean', 'pandas._libs.arrays', 'pandas.core.accessor', 'pandas.core.array_algos.transforms', 'pandas.core.arrays._mixins', 'pandas.core.base', 'pandas.core.strings.accessor', 'pandas.core.strings.base', 'pandas.core.strings', 'pandas.core.strings.object_array', 'pandas.io', 'pandas.io.formats', 'pandas.io.formats.console', 'pandas.core.arrays.categorical', 'pandas.tseries', 'pandas.tseries.frequencies', 'pandas.core.arrays.datetimelike', 'pandas.core.arrays._ranges', 'pandas.core.arrays.numeric', 'pandas.core.tools', 'pandas.core.tools.numeric', 'pandas.core.arrays.integer', 'pandas.tseries.offsets', 'pandas.core.arrays.datetimes', 'pandas.core.arrays.floating', 'pandas.core.indexes', 'pandas._libs.index', 'pandas._libs.join', 'pandas.core.array_algos.putmask', 'pandas._libs.sparse', 'pandas.core.arrays.sparse.dtype', 'pandas.io.formats.printing', 'pandas.core.arrays.sparse.array', 'pandas.core.arrays.sparse.accessor', 'pandas.core.arrays.sparse', 'pandas.core.indexes.frozen', 'pandas.core.indexes.base', 'pandas.core.arrays.interval', 'pandas.core.arrays.numpy_', 'pandas.core.arrays.period', 'pandas.core.arrays.string_', 'pandas.core.arrays.string_arrow', 'pandas.core.arrays.timedeltas', 'pandas.core.arrays', 'pandas.core.flags', 'pandas._libs.reduction', 'pandas.core.apply', 'pandas._libs.indexing', 'pandas.core.indexes.extension', 'pandas.core.indexes.category', 'pandas.core.indexes.numeric', 'pandas.core.indexes.range', 'pandas.core.tools.timedeltas', 'pandas.core.indexes.datetimelike', 'pandas.core.tools.times', 'pandas.core.indexes.datetimes', 'pandas.core.indexes.multi', 'pandas.core.indexes.timedeltas', 'pandas.core.indexes.interval', 'pandas.core.indexes.period', 'pandas.core.indexes.api', 'pandas.core.indexing', 'pandas.core.array_algos.replace', 'pandas.core.reshape', 'pandas._libs.internals', 'pandas._libs.writers', 'pandas.core.internals.blocks', 'pandas.core.internals.api', 'pandas.core.internals.base', 'pandas.core.internals.array_manager', 'pandas.core.internals.ops', 'pandas.core.internals.managers', 'pandas.core.internals.concat', 'pandas.core.internals', 'pandas.core.reshape.concat', 'mmap', 'pandas.core.shared_docs', 'pandas.io.common', 'pandas.io.formats.format', 'pandas.core.describe', 'pandas.core.internals.construction', 'pandas.core.sample', 'pandas._libs.window', 'pandas._libs.window.aggregations', 'pandas._libs.window.indexers', 'pandas.core.indexers.objects', 'pandas.core.util.numba_', 'pandas.core.window.common', 'pandas.core.window.doc', 'pandas.core.window.numba_', 'pandas.core.window.online', 'pandas.core._numba', 'pandas.core._numba.executor', 'pandas.core.window.rolling', 'pandas.core.window.ewm', 'pandas.core.window.expanding', 'pandas.core.window', 'pandas.core.generic', 'pandas.core.reshape.util', 'pandas.core.reshape.melt', 'pandas._libs.reshape', 'pandas.core.indexes.accessors', 'pandas.arrays', 'pandas.core.tools.datetimes', 'pandas.io.formats.info', 'pandas.plotting._core', 'pandas.plotting._misc', 'pandas.plotting', 'pandas.core.series', 'pandas.core.frame', 'pandas.core.groupby.base', 'pandas._libs.groupby', 'pandas.core.groupby.numba_', 'pandas.core.groupby.categorical', 'pandas.core.groupby.grouper', 'pandas.core.groupby.ops', 'pandas.core.groupby.indexing', 'pandas.core.groupby.groupby', 'pandas.core.groupby.generic', 'pandas.core.groupby', 'pandas.core.api', 'pandas.tseries.api', 'pandas.core.computation.common', 'pandas.core.computation.align', 'pandas.compat.chainmap', 'pandas.core.computation.scope', 'pandas.core.computation.ops', 'pandas.core.computation.parsing', 'pandas.core.computation.expr', 'pandas.core.computation.engines', 'pandas.core.computation.eval', 'pandas.core.computation.api', 'pandas.core.reshape.merge', 'pandas.core.reshape.pivot', 'pandas.core.reshape.reshape', 'pandas.core.reshape.tile', 'pandas.core.reshape.api', 'pandas.api.extensions', 'pandas.api.indexers', 'pandas.core.dtypes.api', 'pandas.api.types', 'pandas.api', 'pandas._testing._random', 'pandas._testing.contexts', 'pandas._testing._io', 'pandas._testing._warnings', 'cmath', 'pandas._libs.testing', 'pandas._testing.asserters', 'pandas._testing.compat', 'pandas._testing', 'pandas.testing', 'pandas.util._print_versions', 'pandas.io.clipboards', 'pandas._libs.parsers', 'pandas.io.excel._util', 'pandas.io.date_converters', 'pandas.io.parsers.base_parser', 'pandas.io.parsers.arrow_parser_wrapper', 'pandas.io.parsers.c_parser_wrapper', 'pandas.io.parsers.python_parser', 'pandas.io.parsers.readers', 'pandas.io.parsers', 'pandas.io.excel._odfreader', 'pandas.io.excel._openpyxl', 'pandas.io.excel._pyxlsb', 'pandas.io.excel._xlrd', 'pandas.io.excel._base', 'pandas._libs.json', 'pandas.io.formats._color_data', 'pandas.io.formats.css', 'pandas.io.formats.excel', 'pandas.io.excel._odswriter', 'pandas.io.excel._xlsxwriter', 'pandas.io.excel._xlwt', 'pandas.io.excel', 'pandas.io.feather_format', 'pandas.io.gbq', 'pandas.io.html', 'pandas.io.json._normalize', 'pandas.io.json._table_schema', 'pandas.io.json._json', 'pandas.io.json', 'pandas.io.orc', 'pandas.io.parquet', 'pandas.compat.pickle_compat', 'pandas.io.pickle', 'pandas.core.computation.pytables', 'pandas.io.pytables', 'pandas.io.sas.sasreader', 'pandas.io.sas', 'pandas.io.spss', 'pandas.io.sql', 'pandas.io.stata', 'pandas.io.xml', 'pandas.io.api', 'pandas.util._tester', 'pandas._version', 'pandas', 'summarytools', 'summarytools.htmlwidgets', 'summarytools.summarytools', 'matplotlib', 'matplotlib._api.deprecation', 'matplotlib._api', 'matplotlib._version', 'matplotlib._c_internal_utils', 'matplotlib.cbook', 'matplotlib.docstring', 'PIL._version', 'PIL', 'defusedxml.common', 'defusedxml', 'xml.etree', 'xml.etree.ElementPath', '_elementtree', 'xml.etree.ElementTree', 'defusedxml.ElementTree', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._util', 'PIL._imaging', 'cffi.lock', 'cffi.error', 'cffi.model', 'cffi.api', 'cffi', 'PIL.Image', 'PIL.ImageChops', 'PIL.ImageFile', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'PIL.ImagePalette', 'PIL.ImageSequence', 'PIL.PngImagePlugin', 'matplotlib._path', 'matplotlib.bezier', 'matplotlib.path', 'matplotlib.transforms', 'matplotlib.ticker', 'matplotlib.scale', 'matplotlib._color_data', 'matplotlib.colors', 'pyparsing.util', 'pyparsing.unicode', 'pyparsing.exceptions', 'pyparsing.actions', 'pyparsing.results', 'pyparsing.core', 'pyparsing.helpers', 'pyparsing.testing', 'pyparsing.common', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib._enums', 'cycler', 'matplotlib.rcsetup', 'matplotlib.ft2font', 'kiwisolver']
2023-04-20 18:19:48,879 [14452] DEBUG    matplotlib:275: [JupyterRequire] CACHEDIR=C:\Users\adity\.matplotlib
2023-04-20 18:19:48,883 [14452] DEBUG    matplotlib.font_manager:1439: [JupyterRequire] Using fontManager instance from C:\Users\adity\.matplotlib\fontlist-v330.json
2023-04-20 18:19:49,525 [14452] DEBUG    matplotlib.pyplot:280: [JupyterRequire] Loaded backend module://matplotlib_inline.backend_inline version unknown.
2023-04-20 18:19:49,530 [14452] DEBUG    matplotlib.pyplot:280: [JupyterRequire] Loaded backend module://matplotlib_inline.backend_inline version unknown.
2023-04-20 18:20:13,673 [14452] DEBUG    matplotlib.font_manager:1329: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2023-04-20 18:20:13,674 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:20:13,674 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:20:13,675 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,675 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2023-04-20 18:20:13,675 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2023-04-20 18:20:13,676 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:20:13,676 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:20:13,676 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:20:13,676 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,677 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:20:13,677 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,678 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:20:13,678 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,678 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,679 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,679 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:20:13,679 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:20:13,679 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,681 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,681 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2023-04-20 18:20:13,682 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,682 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,682 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:20:13,682 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:20:13,683 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:20:13,683 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,684 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,684 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:20:13,684 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:20:13,685 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,685 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,685 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,685 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:20:13,686 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,686 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:20:13,687 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,687 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,687 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2023-04-20 18:20:13,689 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLSNECB.TTF', name='Gill Sans MT Ext Condensed Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-20 18:20:13,689 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanz.ttf', name='Constantia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:20:13,689 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LEELAWAD.TTF', name='Leelawadee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,690 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\monbaiti.ttf', name='Mongolian Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,690 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-MEDIUM.TTF', name='Dubai', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-04-20 18:20:13,691 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-04-20 18:20:13,691 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FTLTLT.TTF', name='Footlight MT Light', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-20 18:20:13,691 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibril.ttf', name='Calibri', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-20 18:20:13,691 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSI.TTF', name='Goudy Old Style', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:20:13,692 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisbi.ttf', name='Segoe UI', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-20 18:20:13,692 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCCB___.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-04-20 18:20:13,692 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXD.TTF', name='Lucida Fax', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-20 18:20:13,693 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2023-04-20 18:20:13,693 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BSSYM7.TTF', name='Bookshelf Symbol 7', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,694 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAMDCN.TTF', name='Franklin Gothic Medium Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-20 18:20:13,694 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framdit.ttf', name='Franklin Gothic Medium', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:20:13,694 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSB.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:20:13,695 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-LIGHT.TTF', name='Dubai', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-20 18:20:13,695 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCC____.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-20 18:20:13,696 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_B.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:20:13,696 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COOPBL.TTF', name='Cooper Black', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,696 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNI.TTF', name='Arial', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 7.613636363636363
2023-04-20 18:20:13,697 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\INFROMAN.TTF', name='Informal Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,697 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSB.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-20 18:20:13,697 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BERNHC.TTF', name='Bernard MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-20 18:20:13,698 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEB.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-20 18:20:13,698 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCEDSCR.TTF', name='Edwardian Script ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,699 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consola.ttf', name='Consolas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,699 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,699 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\holomdl2.ttf', name='HoloLens MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,699 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COLONNA.TTF', name='Colonna MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,700 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYR.TTF', name='Agency FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,700 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRITANIC.TTF', name='Britannic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,701 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiai.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:20:13,701 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:20:13,702 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaS.ttf', name='Nirmala UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2023-04-20 18:20:13,702 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CHILLER.TTF', name='Chiller', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,702 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,703 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAB.TTF', name='Book Antiqua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:20:13,703 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothM.ttc', name='Yu Gothic', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-04-20 18:20:13,703 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG2.TTF', name='Wingdings 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,704 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Nirmala.ttf', name='Nirmala UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,704 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelUIsl.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2023-04-20 18:20:13,704 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriai.ttf', name='Cambria', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:20:13,705 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariali.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
2023-04-20 18:20:13,705 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARA.TTF', name='Garamond', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,706 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSPCL.TTF', name='MS Reference Specialty', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,706 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-REGULAR.TTF', name='Dubai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,707 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LHANDW.TTF', name='Lucida Handwriting', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:20:13,707 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:20:13,708 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comici.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:20:13,708 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTAUR.TTF', name='Centaur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,708 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEBO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-20 18:20:13,709 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ONYX.TTF', name='Onyx', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,709 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrima.ttf', name='Ebrima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,709 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFI.TTF', name='Californian FB', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:20:13,710 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERBI___.TTF', name='Perpetua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:20:13,710 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbell.ttf', name='Corbel', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-20 18:20:13,710 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILI____.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:20:13,711 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segmdl2.ttf', name='Segoe MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,711 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-BOLD.TTF', name='Dubai', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:20:13,711 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FELIXTI.TTF', name='Felix Titling', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,711 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbd.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
2023-04-20 18:20:13,713 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taileb.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:20:13,713 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeprb.ttf', name='Segoe Print', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:20:13,713 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoescb.ttf', name='Segoe Script', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:20:13,713 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITE.TTF', name='Lucida Bright', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,713 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhbd.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:20:13,714 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\times.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,714 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisb.ttf', name='Segoe UI', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-20 18:20:13,714 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSDB.TTF', name='Berlin Sans FB Demi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:20:13,714 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbi.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
2023-04-20 18:20:13,715 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesi.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:20:13,715 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADM.TTF', name='Franklin Gothic Demi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,715 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERTI.TTF', name='High Tower Text', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:20:13,716 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF-Italic.ttf', name='Sitka', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:20:13,716 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsun.ttc', name='SimSun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,716 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTI.TTF', name='Calisto MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:20:13,717 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCMI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:20:13,717 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaral.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,717 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\lucon.ttf', name='Lucida Console', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,718 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_I.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:20:13,718 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mvboli.ttf', name='MV Boli', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,719 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiab.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:20:13,719 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\l_10646.ttf', name='Lucida Sans Unicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,719 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTIBD.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:20:13,720 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNT.TTF', name='Elephant', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,720 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASMD.TTF', name='Eras Medium ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,720 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MSUIGHUR.TTF', name='Microsoft Uighur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,722 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYB.TTF', name='Agency FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:20:13,722 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MSUIGHUB.TTF', name='Microsoft Uighur', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:20:13,723 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicbd.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:20:13,723 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMIT.TTF', name='Franklin Gothic Demi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:20:13,723 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKEB.TTF', name='Rockwell Extra Bold', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
2023-04-20 18:20:13,723 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PER_____.TTF', name='Perpetua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,724 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VINERITC.TTF', name='Viner Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,724 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\marlett.ttf', name='Marlett', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-04-20 18:20:13,724 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrili.ttf', name='Calibri', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-04-20 18:20:13,724 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICBI.TTF', name='Century Gothic', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:20:13,725 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ALGER.TTF', name='Algerian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,725 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOS.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,726 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelz.ttf', name='Corbel', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:20:13,726 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILB____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:20:13,726 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUABI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:20:13,727 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\sylfaen.ttf', name='Sylfaen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,727 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriaz.ttf', name='Cambria', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:20:13,727 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanaz.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
2023-04-20 18:20:13,728 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constan.ttf', name='Constantia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,728 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTILI.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-20 18:20:13,729 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCM_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,729 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhl.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2023-04-20 18:20:13,729 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOS.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-20 18:20:13,730 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HATTEN.TTF', name='Haettenschweiler', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,730 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JOKERMAN.TTF', name='Jokerman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,730 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ENGR.TTF', name='Engravers MT', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-04-20 18:20:13,731 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARAIT.TTF', name='Garamond', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:20:13,731 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,731 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelli.ttf', name='Corbel', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-04-20 18:20:13,732 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constani.ttf', name='Constantia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:20:13,732 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIST.TTF', name='Calisto MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,733 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PARCHM.TTF', name='Parchment', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,733 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\himalaya.ttf', name='Microsoft Himalaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,734 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRADHITC.TTF', name='Bradley Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,734 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\wingding.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,734 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtextb.ttf', name='Myanmar Text', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:20:13,735 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG3.TTF', name='Wingdings 3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,735 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGSOL.TTF', name='Niagara Solid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,735 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarali.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:20:13,736 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKI.TTF', name='Rockwell', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:20:13,736 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolab.ttf', name='Consolas', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:20:13,737 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXDI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-20 18:20:13,737 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BAUHS93.TTF', name='Bauhaus 93', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,737 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisli.ttf', name='Segoe UI', style='italic', variant='normal', weight=350, stretch='normal', size='scalable')) = 11.0975
2023-04-20 18:20:13,739 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELL.TTF', name='Bell MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,739 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2023-04-20 18:20:13,739 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyi.ttf', name='Microsoft Yi Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,740 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSR.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,740 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHVIT.TTF', name='Franklin Gothic Heavy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:20:13,740 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OLDENGL.TTF', name='Old English Text MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,741 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbel.ttf', name='Corbel', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,741 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLB.TTF', name='Bell MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:20:13,741 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelaUIb.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:20:13,742 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHV.TTF', name='Franklin Gothic Heavy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,742 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OUTLOOK.TTF', name='MS Outlook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,743 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PRISTINA.TTF', name='Pristina', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,743 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERI____.TTF', name='Perpetua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:20:13,743 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtext.ttf', name='Myanmar Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,744 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSAN.TTF', name='MS Reference Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,744 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERB____.TTF', name='Perpetua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:20:13,744 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTEXTRA.TTF', name='MT Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,745 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKB.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:20:13,745 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARABD.TTF', name='Garamond', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:20:13,745 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cour.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,746 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mingliub.ttc', name='MingLiU-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,746 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICB.TTF', name='Century Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:20:13,746 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspa.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,747 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VIVALDII.TTF', name='Vivaldi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:20:13,747 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAGE.TTF', name='Rage Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:20:13,747 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-20 18:20:13,748 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2023-04-20 18:20:13,748 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MATURASC.TTF', name='Matura MT Script Capitals', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,749 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comic.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,749 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbi.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:20:13,749 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothR.ttc', name='Yu Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,750 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palai.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:20:13,750 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MOD20.TTF', name='Modern No. 20', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,750 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMCN.TTF', name='Franklin Gothic Demi Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-20 18:20:13,751 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrimabd.ttf', name='Ebrima', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:20:13,751 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\javatext.ttf', name='Javanese Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,751 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CASTELAR.TTF', name='Castellar', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,752 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSDI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-20 18:20:13,752 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelawUI.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,752 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAX.TTF', name='Lucida Fax', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,753 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunbd.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:20:13,753 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF.ttf', name='Sitka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,754 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTL.TTF', name='Copperplate Gothic Light', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,754 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
2023-04-20 18:20:13,754 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeui.ttf', name='Segoe UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,755 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Gabriola.ttf', name='Gabriola', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,755 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTBI.TTF', name='Calisto MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:20:13,755 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicz.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:20:13,756 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALN.TTF', name='Arial', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 6.613636363636363
2023-04-20 18:20:13,756 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKBI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:20:13,756 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FREESCPT.TTF', name='Freestyle Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,757 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTURY.TTF', name='Century', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,757 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaB.ttf', name='Nirmala UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:20:13,758 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSB.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:20:13,758 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSD.TTF', name='Lucida Sans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-20 18:20:13,758 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuisl.ttf', name='Segoe UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2023-04-20 18:20:13,759 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:20:13,759 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:20:13,759 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguihis.ttf', name='Segoe UI Historic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,760 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCB____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-04-20 18:20:13,760 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambria.ttc', name='Cambria', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,760 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKBI.TTF', name='Rockwell', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:20:13,761 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGENG.TTF', name='Niagara Engraved', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,761 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisym.ttf', name='Segoe UI Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,761 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inkfree.ttf', name='Ink Free', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,761 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASBD.TTF', name='Eras Bold ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,762 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILC____.TTF', name='Gill Sans MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-20 18:20:13,762 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candara.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,762 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\bahnschrift.ttf', name='Bahnschrift', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,763 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BROADW.TTF', name='Broadway', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,763 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolaz.ttf', name='Consolas', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:20:13,763 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CBI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2023-04-20 18:20:13,765 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuii.ttf', name='Segoe UI', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:20:13,765 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibli.ttf', name='Segoe UI', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2023-04-20 18:20:13,765 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEDI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-20 18:20:13,765 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucit.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:20:13,765 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BKANT.TTF', name='Book Antiqua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,766 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothL.ttc', name='Yu Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-20 18:20:13,766 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrii.ttf', name='Calibri', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:20:13,767 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CURLZ___.TTF', name='Curlz MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,767 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelb.ttf', name='Corbel', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:20:13,767 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARLRDBD.TTF', name='Arial Rounded MT Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,768 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothB.ttc', name='Yu Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:20:13,768 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASDEMI.TTF', name='Eras Demi ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,768 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
2023-04-20 18:20:13,769 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANS.TTF', name='Lucida Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,769 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariblk.ttf', name='Arial', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 6.888636363636364
2023-04-20 18:20:13,769 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCKRIST.TTF', name='Kristen ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,769 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\KUNSTLER.TTF', name='Kunstler Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,770 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanb.ttf', name='Constantia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:20:13,770 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PAPYRUS.TTF', name='Papyrus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,770 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JUICE___.TTF', name='Juice ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,771 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguili.ttf', name='Segoe UI', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-04-20 18:20:13,771 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:20:13,771 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarab.ttf', name='Candara', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:20:13,772 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\IMPRISHA.TTF', name='Imprint MT Shadow', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,772 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailu.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,772 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbi.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:20:13,773 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuil.ttf', name='Segoe UI', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-20 18:20:13,773 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanai.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
2023-04-20 18:20:13,773 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoepr.ttf', name='Segoe Print', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,774 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaraz.ttf', name='Candara', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:20:13,774 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNB.TTF', name='Arial', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 6.8986363636363635
2023-04-20 18:20:13,774 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspab.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:20:13,774 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,775 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCM____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-20 18:20:13,775 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARNGTON.TTF', name='Harrington', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,775 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbd.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:20:13,775 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:20:13,776 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILSANUB.TTF', name='Gill Sans Ultra Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,776 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibri.ttf', name='Calibri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,776 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiaz.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:20:13,776 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegoeIcons.ttf', name='Segoe Fluent Icons', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,776 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAGNETOB.TTF', name='Magneto', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:20:13,777 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICI.TTF', name='Century Gothic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:20:13,777 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCBLKAD.TTF', name='Blackadder ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,777 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahomabd.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:20:13,777 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugi.ttf', name='Gadugi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,777 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LCALLIG.TTF', name='Lucida Calligraphy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:20:13,779 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyh.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,779 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsunb.ttf', name='SimSun-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,779 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgun.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,780 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIL_____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,780 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VLADIMIR.TTF', name='Vladimir Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,780 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,780 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msgothic.ttc', name='MS Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,780 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRSCRIPT.TTF', name='French Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,781 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILBI___.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:20:13,781 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASLGHT.TTF', name='Eras Light ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,781 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTB.TTF', name='Calisto MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:20:13,781 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunsl.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-20 18:20:13,782 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRUSHSCI.TTF', name='Brush Script MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:20:13,782 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SNAP____.TTF', name='Snap ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,782 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuib.ttf', name='Segoe UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:20:13,782 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCBI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:20:13,784 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailub.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:20:13,784 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framd.ttf', name='Franklin Gothic Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,784 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolai.ttf', name='Consolas', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:20:13,785 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCEB.TTF', name='Tw Cen MT Condensed Extra Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-20 18:20:13,785 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\POORICH.TTF', name='Poor Richard', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,785 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDYSTO.TTF', name='Goudy Stout', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,785 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKB.TTF', name='Rockwell', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:20:13,786 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PALSCRI.TTF', name='Palace Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,786 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarai.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:20:13,786 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\micross.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,786 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LEELAWDB.TTF', name='Leelawadee', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:20:13,786 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABK.TTF', name='Franklin Gothic Book', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,786 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjh.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,788 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palabi.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:20:13,788 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAVIE.TTF', name='Ravie', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,788 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCK.TTF', name='Rockwell', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,789 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\pala.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,789 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibriz.ttf', name='Calibri', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:20:13,789 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugib.ttf', name='Gadugi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:20:13,789 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_PSTC.TTF', name='Bodoni MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-20 18:20:13,790 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENSCBK.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,790 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanab.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
2023-04-20 18:20:13,790 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LATINWD.TTF', name='Wide Latin', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
2023-04-20 18:20:13,791 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbeli.ttf', name='Corbel', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:20:13,791 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIGI.TTF', name='Gigi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,791 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITED.TTF', name='Lucida Bright', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-20 18:20:13,791 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbi.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:20:13,792 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhl.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2023-04-20 18:20:13,792 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguiemj.ttf', name='Segoe UI Emoji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,792 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OCRAEXT.TTF', name='OCR A Extended', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
2023-04-20 18:20:13,792 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebuc.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,793 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SHOWG.TTF', name='Showcard Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,793 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BASKVILL.TTF', name='Baskerville Old Face', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,793 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriab.ttf', name='Cambria', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:20:13,794 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAIAN.TTF', name='Maiandra GD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,794 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCRIPTBL.TTF', name='Script MT Bold', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:20:13,795 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLECB.TTF', name='Gloucester MT Extra Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-20 18:20:13,795 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNTI.TTF', name='Elephant', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:20:13,795 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFR.TTF', name='Californian FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,795 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHIC.TTF', name='Century Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,795 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PLAYBILL.TTF', name='Playbill', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,797 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABKIT.TTF', name='Franklin Gothic Book', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:20:13,797 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARLOWSI.TTF', name='Harlow Solid Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:20:13,797 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPE.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,797 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taile.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,797 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibl.ttf', name='Segoe UI', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2023-04-20 18:20:13,798 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNBI.TTF', name='Arial', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 7.8986363636363635
2023-04-20 18:20:13,798 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuiz.ttf', name='Segoe UI', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:20:13,798 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSBI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-20 18:20:13,799 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palab.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:20:13,799 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLI.TTF', name='Bell MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:20:13,799 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILLUBCD.TTF', name='Gill Sans Ultra Bold Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-20 18:20:13,800 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbd.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:20:13,800 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhbd.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:20:13,800 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoesc.ttf', name='Segoe Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,800 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\couri.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:20:13,801 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegUIVar.ttf', name='Segoe UI Variable', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,801 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_R.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,801 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTB.TTF', name='Copperplate Gothic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,802 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:20:13,802 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCB_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:20:13,802 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TEMPSITC.TTF', name='Tempus Sans ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,803 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MISTRAL.TTF', name='Mistral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,803 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FORTE.TTF', name='Forte', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,803 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CB.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-04-20 18:20:13,803 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbd.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:20:13,804 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STENCIL.TTF', name='Stencil', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,804 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrib.ttf', name='Calibri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:20:13,804 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERT.TTF', name='High Tower Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,805 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTCORSVA.TTF', name='Monotype Corsiva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:20:13,805 [14452] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFB.TTF', name='Californian FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:20:13,805 [14452] DEBUG    matplotlib.font_manager:1367: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
2023-04-20 18:23:34,410 [11464] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-04-20 18:23:34,411 [11464] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-04-20 18:23:34,411 [11464] INFO     root:247: [JupyterRequire] Initializing comms.
2023-04-20 18:23:34,416 [11464] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-04-20 18:23:34,417 [11464] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-04-20 18:23:34,417 [11464] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-04-20 18:23:37,699 [11464] INFO     numexpr.utils:147: [JupyterRequire] Note: NumExpr detected 12 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
2023-04-20 18:23:37,700 [11464] INFO     numexpr.utils:159: [JupyterRequire] NumExpr defaulting to 8 threads.
2023-04-20 18:23:38,384 [11464] DEBUG    matplotlib:275: [JupyterRequire] matplotlib data path: C:\Users\adity\anaconda3\lib\site-packages\matplotlib\mpl-data
2023-04-20 18:23:38,390 [11464] DEBUG    matplotlib:275: [JupyterRequire] CONFIGDIR=C:\Users\adity\.matplotlib
2023-04-20 18:23:38,394 [11464] DEBUG    matplotlib:1445: [JupyterRequire] interactive is False
2023-04-20 18:23:38,394 [11464] DEBUG    matplotlib:1446: [JupyterRequire] platform is win32
2023-04-20 18:23:38,395 [11464] DEBUG    matplotlib:1447: [JupyterRequire] loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', '_io', 'marshal', 'nt', 'winreg', '_frozen_importlib_external', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', 'encodings.cp1252', '_signal', 'encodings.latin_1', '_abc', 'abc', 'io', '__main__', '_stat', 'stat', '_collections_abc', 'genericpath', 'ntpath', 'os.path', 'os', '_sitebuiltins', '_locale', '_bootlocale', '_distutils_hack', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib.machinery', '_heapq', 'heapq', 'itertools', 'keyword', '_operator', 'operator', 'reprlib', '_collections', 'collections', 'collections.abc', '_functools', 'functools', 'contextlib', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', 'copyreg', 're', 'typing.io', 'typing.re', 'typing', 'importlib.abc', 'importlib.util', 'google', 'google.cloud', 'google.logging', 'mpl_toolkits', 'sphinxcontrib', 'zope', 'site', '_weakrefset', 'weakref', 'pkgutil', 'runpy', 'ipykernel._version', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'errno', 'signal', 'threading', 'msvcrt', '_winapi', 'subprocess', 'jupyter_client._version', 'posixpath', 'fnmatch', 'glob', '_socket', 'math', 'select', 'selectors', 'socket', 'zlib', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', '_bisect', 'bisect', '_random', '_sha512', 'random', 'tempfile', 'getpass', 'platform', 'zmq.libzmq', 'zmq.backend.select', 'cython_runtime', 'zmq.backend.cython.constants', '_cython_0_29_24', 'zmq.backend.cython.error', 'zmq.error', 'zmq.backend.cython.message', 'zmq.backend.cython.context', 'copy', '_struct', 'struct', '_compat_pickle', '_pickle', 'pickle', 'zmq.backend.cython.socket', 'zmq.backend.cython.utils', 'zmq.backend.cython._poll', 'zmq.backend.cython._version', 'zmq.backend.cython._device', 'zmq.backend.cython._proxy_steerable', 'zmq.backend.cython', 'zmq.backend', 'zmq.utils', 'zmq.utils.constant_names', 'zmq.sugar.constants', 'atexit', 'zmq.sugar.attrsettr', 'zmq.sugar.poll', 'zmq.utils.jsonapi', 'zmq.utils.strtypes', 'zmq.sugar.socket', 'zmq.sugar.context', 'zmq.sugar.frame', 'zmq.sugar.tracker', 'zmq.sugar.version', 'zmq.sugar.stopwatch', 'zmq.sugar', 'zmq', '_ast', 'ast', '_opcode', 'opcode', 'dis', 'token', 'tokenize', 'linecache', 'inspect', 'traitlets.utils', 'traitlets.utils.getargspec', 'traitlets.utils.importstring', 'traitlets.utils.sentinel', 'traitlets.utils.bunch', 'traitlets.utils.descriptions', 'traitlets.traitlets', 'traitlets.utils.decorators', 'traitlets._version', 'traitlets', 'traceback', '_string', 'string', 'logging', 'pprint', 'gettext', 'argparse', 'traitlets.config.loader', 'textwrap', 'traitlets.utils.text', 'traitlets.config.configurable', 'traitlets.config.application', 'traitlets.config', 'jupyter_client.localinterfaces', 'jupyter_core.version', 'jupyter_core', 'urllib', 'urllib.parse', 'pathlib', 'jupyter_core.paths', 'jupyter_client.utils', 'jupyter_client.connect', 'traitlets.log', 'jupyter_client.launcher', 'concurrent', 'concurrent.futures._base', 'concurrent.futures', '_ssl', 'binascii', 'base64', 'ssl', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', '_contextvars', 'contextvars', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.threads', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'asyncio.windows_events', 'asyncio', 'jupyter_client.channelsabc', 'jupyter_client.channels', 'jupyter_client.clientabc', 'jupyter_client.client', 'jupyter_client.kernelspec', 'jupyter_client.managerabc', 'jupyter_client.manager', '_queue', 'queue', 'jupyter_client.blocking.channels', 'jupyter_client.blocking.client', 'jupyter_client.blocking', 'zmq._future', 'zmq.asyncio', 'jupyter_client.asynchronous.channels', 'jupyter_client.asynchronous.client', 'jupyter_client.asynchronous', '_uuid', 'uuid', 'jupyter_client.multikernelmanager', 'jupyter_client', 'ipykernel.connect', 'ipykernel', 'tornado', '_datetime', 'datetime', 'numbers', 'logging.handlers', 'html.entities', 'html', 'array', 'tornado.speedups', 'tornado.util', 'tornado.escape', 'colorama.ansi', '_ctypes', 'ctypes._endian', 'ctypes', 'ctypes.wintypes', 'colorama.win32', 'colorama.winterm', 'colorama.ansitowin32', 'colorama.initialise', 'colorama', 'tornado.log', 'tornado.concurrent', 'tornado.ioloop', '__future__', 'tornado.platform', 'tornado.gen', 'tornado.platform.asyncio', 'zmq.eventloop.ioloop', 'zmq.eventloop', 'zmq.eventloop.zmqstream', 'IPython.core', 'IPython.core.getipython', 'IPython.core.release', 'sysconfig', 'pydoc', 'executing.executing', 'executing.version', 'executing', 'asttokens.line_numbers', 'six', 'six.moves', 'asttokens.util', 'asttokens.mark_tokens', 'asttokens.asttokens', 'asttokens', '_decimal', 'decimal', 'fractions', 'pure_eval.utils', 'pure_eval.my_getattr_static', 'pure_eval.core', 'pure_eval.version', 'pure_eval', 'stack_data.utils', 'stack_data.core', 'stack_data.formatting', 'stack_data.version', 'stack_data', 'pygments', 'pygments.formatters._mapping', 'pygments.plugin', 'pygments.util', 'pygments.formatters', 'pygments.styles', 'pygments.formatter', 'pygments.console', 'pygments.token', 'pygments.style', 'pygments.formatters.terminal256', 'bdb', 'IPython.utils', 'IPython.utils.ipstruct', 'IPython.utils.coloransi', 'IPython.utils.colorable', 'IPython.utils.PyColorize', 'locale', 'IPython.utils.encoding', 'IPython.utils.py3compat', 'IPython.core.excolors', 'cmd', 'codeop', 'code', 'pdb', 'IPython.core.debugger', 'IPython.core.display_trap', 'shlex', 'IPython.utils._process_common', 'IPython.utils._process_win32', 'IPython.utils.process', 'IPython.utils.decorators', 'IPython.utils.path', 'IPython.utils.terminal', 'IPython.core.ultratb', 'IPython.utils._sysinfo', 'IPython.utils.sysinfo', 'IPython.core.crashhandler', 'IPython.utils.importstring', 'IPython.paths', 'IPython.core.profiledir', 'IPython.core.application', 'IPython.terminal', '_hashlib', '_blake2', 'hashlib', 'IPython.core.compilerop', 'IPython.core.error', 'IPython.utils.text', 'IPython.core.magic_arguments', 'getopt', 'IPython.core.display_functions', 'mimetypes', 'IPython.testing', 'IPython.testing.skipdoctest', 'IPython.core.display', 'IPython.lib', 'IPython.lib.display', 'IPython.display', 'IPython.utils.data', 'IPython.core.page', 'IPython.lib.pretty', 'IPython.utils.openpy', 'IPython.utils.dir2', 'IPython.utils.wildcard', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.lexers', 'pygments.filter', 'pygments.filters', 'pygments.regexopt', 'pygments.lexer', 'pygments.unistring', 'pygments.lexers.python', 'pygments.formatters.html', 'IPython.core.oinspect', 'IPython.core.inputtransformer2', 'IPython.core.magic', 'pickleshare', 'IPython.core.hooks', 'IPython.core.autocall', 'IPython.core.macro', 'IPython.core.splitinput', 'IPython.core.prefilter', 'IPython.core.alias', 'IPython.core.builtin_trap', 'IPython.core.displayhook', 'IPython.core.displaypub', 'backcall.backcall', 'backcall', 'IPython.core.events', 'IPython.core.extensions', 'decorator', 'IPython.utils.sentinel', 'IPython.core.formatters', '_sqlite3', 'sqlite3.dbapi2', 'sqlite3', 'IPython.core.history', 'IPython.core.logger', 'IPython.core.payload', 'IPython.core.usage', 'IPython.utils.capture', 'IPython.utils.io', 'IPython.utils.strdispatch', 'IPython.utils.syspathcontext', 'IPython.core.async_helpers', 'IPython.core.interactiveshell', 'prompt_toolkit.application.current', 'prompt_toolkit.eventloop.utils', 'prompt_toolkit.eventloop.async_generator', 'wcwidth.table_wide', 'wcwidth.table_zero', 'wcwidth.unicode_versions', 'wcwidth.wcwidth', 'wcwidth', 'prompt_toolkit.utils', 'prompt_toolkit.eventloop.inputhook', 'prompt_toolkit.eventloop', 'prompt_toolkit.application.run_in_terminal', 'prompt_toolkit.selection', 'prompt_toolkit.clipboard.base', 'prompt_toolkit.clipboard.in_memory', 'prompt_toolkit.clipboard', 'prompt_toolkit.cache', 'prompt_toolkit.enums', 'prompt_toolkit.filters.base', 'prompt_toolkit.filters.app', 'prompt_toolkit.filters.cli', 'prompt_toolkit.filters.utils', 'prompt_toolkit.filters', 'prompt_toolkit.document', 'prompt_toolkit.auto_suggest', 'prompt_toolkit.data_structures', 'prompt_toolkit.styles.base', 'prompt_toolkit.styles.named_colors', 'prompt_toolkit.styles.style', 'prompt_toolkit.styles.defaults', 'prompt_toolkit.styles.pygments', 'colorsys', 'prompt_toolkit.styles.style_transformation', 'prompt_toolkit.styles', 'prompt_toolkit.output.color_depth', 'prompt_toolkit.output.base', 'prompt_toolkit.output.defaults', 'prompt_toolkit.output', 'prompt_toolkit.output.vt100', 'prompt_toolkit.mouse_events', 'prompt_toolkit.formatted_text.base', 'prompt_toolkit.formatted_text.ansi', 'xml', 'xml.dom.domreg', 'xml.dom', 'xml.dom.minicompat', 'xml.dom.NodeFilter', 'xml.dom.xmlbuilder', 'xml.dom.minidom', 'prompt_toolkit.formatted_text.html', 'prompt_toolkit.formatted_text.pygments', 'prompt_toolkit.formatted_text.utils', 'prompt_toolkit.formatted_text', 'prompt_toolkit.completion.base', 'prompt_toolkit.completion.deduplicate', 'prompt_toolkit.completion.filesystem', 'prompt_toolkit.completion.word_completer', 'prompt_toolkit.completion.fuzzy_completer', 'prompt_toolkit.completion.nested', 'prompt_toolkit.completion', 'prompt_toolkit.history', 'prompt_toolkit.keys', 'prompt_toolkit.key_binding.key_bindings', 'prompt_toolkit.key_binding.key_processor', 'prompt_toolkit.key_binding', 'prompt_toolkit.key_binding.vi_state', 'prompt_toolkit.search', 'prompt_toolkit.validation', 'prompt_toolkit.buffer', 'prompt_toolkit.input.base', 'prompt_toolkit.input.defaults', 'prompt_toolkit.input', 'prompt_toolkit.input.typeahead', 'prompt_toolkit.key_binding.bindings', 'prompt_toolkit.key_binding.bindings.scroll', 'prompt_toolkit.key_binding.bindings.page_navigation', 'prompt_toolkit.lexers.base', 'prompt_toolkit.lexers.pygments', 'prompt_toolkit.lexers', 'prompt_toolkit.layout.utils', 'prompt_toolkit.layout.processors', 'prompt_toolkit.layout.controls', 'prompt_toolkit.layout.dimension', 'prompt_toolkit.layout.margins', 'prompt_toolkit.layout.mouse_handlers', 'prompt_toolkit.layout.screen', 'prompt_toolkit.layout.containers', 'prompt_toolkit.layout.layout', 'prompt_toolkit.layout.menus', 'prompt_toolkit.layout.scrollable_pane', 'prompt_toolkit.layout', 'prompt_toolkit.key_binding.bindings.completion', 'prompt_toolkit.key_binding.bindings.named_commands', 'prompt_toolkit.key_binding.bindings.basic', 'prompt_toolkit.key_binding.bindings.cpr', 'prompt_toolkit.key_binding.bindings.emacs', 'prompt_toolkit.key_binding.bindings.mouse', 'prompt_toolkit.input.ansi_escape_sequences', 'prompt_toolkit.input.vt100_parser', 'prompt_toolkit.key_binding.digraphs', 'prompt_toolkit.key_binding.bindings.vi', 'prompt_toolkit.key_binding.defaults', 'prompt_toolkit.key_binding.emacs_state', 'prompt_toolkit.layout.dummy', 'prompt_toolkit.renderer', 'prompt_toolkit.application.application', 'prompt_toolkit.application.dummy', 'prompt_toolkit.application', 'prompt_toolkit.key_binding.bindings.focus', 'prompt_toolkit.widgets.toolbars', 'prompt_toolkit.widgets.base', 'prompt_toolkit.widgets.dialogs', 'prompt_toolkit.widgets.menus', 'prompt_toolkit.widgets', 'prompt_toolkit.shortcuts.dialogs', 'prompt_toolkit.shortcuts.progress_bar.formatters', 'prompt_toolkit.shortcuts.progress_bar.base', 'prompt_toolkit.shortcuts.progress_bar', 'prompt_toolkit.key_binding.bindings.auto_suggest', 'prompt_toolkit.key_binding.bindings.open_in_editor', 'prompt_toolkit.shortcuts.prompt', 'prompt_toolkit.shortcuts.utils', 'prompt_toolkit.shortcuts', 'prompt_toolkit', 'prompt_toolkit.patch_stdout', 'unicodedata', 'IPython.core.latex_symbols', 'IPython.utils.generics', 'parso.utils', 'parso.tree', 'parso.python', 'parso.python.token', 'parso.python.tokenize', 'parso.pgen2.grammar_parser', 'parso.pgen2.generator', 'parso.pgen2', 'parso.parser', 'parso._compatibility', 'difflib', 'parso.python.prefix', 'parso.python.tree', 'parso.python.parser', 'parso.python.diff', 'gc', 'parso.cache', 'parso.normalizer', 'parso.python.errors', 'parso.python.pep8', 'parso.file_io', 'parso.grammar', 'parso', 'jedi.parser_utils', 'jedi.debug', 'jedi.settings', 'jedi.cache', 'jedi.file_io', 'jedi.inference.cache', 'jedi.inference.helpers', 'jedi.inference.utils', 'jedi.inference.base_value', 'jedi.inference.sys_path', 'jedi.inference.recursion', 'jedi.inference.flow_analysis', 'jedi.common', 'jedi.inference.lazy_value', 'jedi.inference.docstrings', 'jedi.plugins', 'jedi.inference.names', 'jedi.inference.filters', 'jedi.inference.compiled.getattr_static', 'jedi.inference.compiled.access', 'jedi.inference.signature', 'jedi.inference.context', 'jedi.inference.compiled.value', 'jedi.inference.compiled', 'jedi.inference.analysis', 'jedi.inference.gradual', 'jedi.inference.value.module', 'jedi.inference.value.dynamic_arrays', 'jedi.inference.value.iterable', 'jedi.inference.arguments', 'jedi.inference.parser_cache', 'jedi.inference.gradual.generics', 'jedi.inference.value.function', 'jedi.inference.value.klass', 'jedi.inference.value.instance', 'jedi.inference.value', 'jedi.inference.gradual.base', 'jedi.inference.gradual.type_var', 'jedi.inference.gradual.typing', 'jedi.inference.gradual.stub_value', 'jedi.inference.gradual.typeshed', 'jedi._compatibility', 'zipfile', 'jedi.inference.compiled.subprocess.functions', 'jedi.api.exceptions', 'jedi.inference.compiled.subprocess', 'jedi.inference.imports', 'jedi.inference.param', 'jedi.inference.gradual.annotation', 'jedi.inference.value.decorator', 'jedi.inference.syntax_tree', 'jedi.inference', 'jedi.inference.gradual.conversion', 'jedi.inference.compiled.mixed', 'pydoc_data', 'pydoc_data.topics', 'jedi.api.keywords', 'jedi.api.completion_cache', 'jedi.api.helpers', 'jedi.api.classes', 'jedi.api.interpreter', 'jedi.api.strings', 'jedi.api.file_name', 'jedi.inference.docstring_utils', 'jedi.api.completion', 'filecmp', 'jedi.api.environment', 'jedi.inference.references', 'jedi.api.project', 'jedi.api.errors', 'jedi.api.refactoring', 'jedi.api.refactoring.extract', 'jedi.inference.gradual.utils', 'jedi.api', 'jedi.plugins.stdlib', 'jedi.plugins.flask', 'jedi.plugins.pytest', 'jedi.plugins.django', 'jedi.plugins.registry', 'jedi', 'IPython.core.completer', 'IPython.terminal.ptutils', 'IPython.lib.clipboard', 'IPython.terminal.shortcuts', 'concurrent.futures.thread', 'IPython.terminal.debugger', 'IPython.terminal.magics', 'IPython.terminal.pt_inputhooks', 'IPython.terminal.prompts', 'IPython.terminal.interactiveshell', 'IPython.core.magics.auto', 'IPython.core.magics.basic', 'email', 'http', 'email.errors', 'email.quoprimime', 'email.base64mime', 'quopri', 'email.encoders', 'email.charset', 'email.header', 'calendar', 'email._parseaddr', 'email.utils', 'email._policybase', 'email.feedparser', 'email.parser', 'uu', 'email._encoded_words', 'email.iterators', 'email.message', 'http.client', 'urllib.response', 'urllib.error', 'nturl2path', 'urllib.request', 'IPython.utils.contexts', 'IPython.core.magics.code', 'IPython.core.magics.config', 'IPython.core.magics.display', '_lsprof', 'profile', 'cProfile', 'dataclasses', 'pstats', 'timeit', 'IPython.utils.module_paths', 'IPython.utils.timing', 'IPython.core.magics.execution', 'IPython.core.magics.extension', 'IPython.core.magics.history', 'IPython.core.magics.logging', 'IPython.core.magics.namespace', 'IPython.core.magics.osm', 'IPython.core.magics.packaging', 'IPython.core.pylabtools', 'IPython.core.magics.pylab', 'IPython.core.magics.script', 'IPython.core.magics', 'IPython.core.shellapp', 'IPython.extensions', 'IPython.extensions.storemagic', 'IPython.terminal.ipapp', 'IPython.terminal.embed', 'IPython.utils.frame', 'IPython', 'imp', 'hmac', 'dateutil._version', 'dateutil', 'dateutil._common', 'dateutil.relativedelta', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.win', 'dateutil.tz.tz', 'dateutil.tz', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', '_strptime', 'jupyter_client.jsonutil', 'jupyter_client.adapter', 'jupyter_client.session', 'ipykernel.iostream', 'ipykernel.control', 'ipykernel.heartbeat', 'IPython.utils.tokenutil', 'psutil._common', 'psutil._compat', 'psutil._psutil_windows', 'psutil._pswindows', 'psutil', 'tornado.locks', 'tornado.queues', 'ipykernel.jsonutil', 'ipykernel.kernelbase', 'ipykernel.comm.comm', 'ipykernel.comm.manager', 'ipykernel.comm', 'IPython.core.payloadpage', 'ipykernel.displayhook', 'ipykernel.zmqshell', 'setuptools._distutils', 'distutils.debug', 'distutils.errors', 'distutils.fancy_getopt', 'distutils.dep_util', 'distutils.log', 'distutils.spawn', 'distutils.py35compat', 'distutils.util', 'distutils.dist', 'distutils.dir_util', 'distutils.file_util', 'distutils.archive_util', 'distutils.cmd', 'configparser', 'distutils.config', 'distutils.extension', 'distutils.core', '_distutils_hack.override', 'setuptools._deprecation_warning', 'xml.parsers', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'xml.parsers.expat', 'plistlib', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources._vendor.jaraco', 'pkg_resources.extern.jaraco', 'importlib._common', 'importlib.resources', 'pkg_resources._vendor.more_itertools.recipes', 'pkg_resources._vendor.more_itertools.more', 'pkg_resources._vendor.more_itertools', 'pkg_resources.extern.more_itertools', 'pkg_resources.extern.jaraco.functools', 'pkg_resources.extern.jaraco.context', 'pkg_resources.extern.jaraco.text', 'win32api', '_win32sysloader', 'pywintypes', 'pythoncom', 'win32com.gen_py', 'win32com', 'win32com.shell', 'pkg_resources._vendor.appdirs', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources._vendor.packaging', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.version', 'pkg_resources._vendor.packaging._manylinux', 'pkg_resources._vendor.packaging._musllinux', 'pkg_resources.extern.packaging.tags', 'pkg_resources.extern.packaging.utils', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources._vendor.pyparsing', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.packaging.markers', 'pkg_resources.extern.packaging.requirements', 'pkg_resources', 'setuptools.version', 'distutils.filelist', 'setuptools.monkey', 'setuptools.extension', 'distutils.command', 'setuptools.extern', 'setuptools._vendor', 'setuptools._vendor.packaging.__about__', 'setuptools._vendor.packaging', 'setuptools.extern.packaging', 'setuptools._vendor.ordered_set', 'setuptools.extern.ordered_set', 'setuptools._vendor.more_itertools.recipes', 'setuptools._vendor.more_itertools.more', 'setuptools._vendor.more_itertools', 'setuptools.extern.more_itertools', 'setuptools._vendor.pyparsing', 'setuptools.extern.pyparsing', 'setuptools._vendor.packaging._manylinux', 'setuptools._vendor.packaging._musllinux', 'setuptools.extern.packaging.tags', 'setuptools.extern.packaging._structures', 'setuptools.extern.packaging.version', 'setuptools.extern.packaging.utils', 'setuptools.extern.packaging.specifiers', 'setuptools.extern.packaging.markers', 'setuptools.extern.packaging.requirements', 'setuptools._vendor.jaraco', 'setuptools.extern.jaraco', 'setuptools.extern.jaraco.context', 'setuptools.extern.jaraco.functools', '_csv', 'csv', 'setuptools._vendor.zipp', 'setuptools._vendor.importlib_metadata._functools', 'setuptools._vendor.importlib_metadata._text', 'setuptools._vendor.importlib_metadata._adapters', 'setuptools._vendor.importlib_metadata._compat', 'setuptools._vendor.importlib_metadata._meta', 'setuptools._vendor.importlib_metadata._collections', 'setuptools._vendor.importlib_metadata._itertools', 'setuptools._vendor.importlib_metadata', 'setuptools.extern.importlib_metadata', 'setuptools._vendor.nspektr._compat', 'setuptools._vendor.nspektr', 'setuptools.extern.nspektr', 'zipp', 'importlib_metadata._functools', 'importlib_metadata._text', 'importlib_metadata._adapters', 'importlib_metadata._compat', 'importlib_metadata._meta', 'importlib_metadata._collections', 'importlib_metadata._itertools', 'importlib_metadata', 'setuptools._importlib', 'distutils.command.bdist', 'setuptools.command', 'setuptools.windows_support', 'setuptools.config.expand', 'setuptools.config.setupcfg', 'setuptools.config', 'setuptools.errors', 'email._header_value_parser', 'email.headerregistry', 'setuptools.config._apply_pyprojecttoml', 'setuptools.config.pyprojecttoml', 'setuptools.discovery', 'setuptools.extern.jaraco.text', 'setuptools._reqs', 'setuptools._itertools', 'setuptools._entry_points', 'setuptools.dist', 'setuptools.py34compat', 'setuptools._imp', 'setuptools.depends', 'setuptools.logging', 'distutils.ccompiler', 'distutils.msvc9compiler', 'setuptools.msvc', 'unittest.util', 'unittest.result', 'unittest.case', 'unittest.suite', 'unittest.loader', 'unittest.signals', 'unittest.runner', 'unittest.main', 'unittest', 'unittest.mock', 'distutils._msvccompiler', 'setuptools', 'distutils', 'distutils.version', 'ipykernel.eventloops', 'ipykernel.compiler', 'debugpy._version', 'debugpy.common', 'debugpy.common.json', 'debugpy.common.fmt', 'debugpy.common.compat', 'debugpy', 'debugpy._vendored._util', 'debugpy._vendored', '_pydevd_bundle', 'encodings.ascii', 'stringprep', 'encodings.idna', '_pydevd_bundle.pydevd_vm_type', '_pydev_imps', 'xmlrpc', 'gzip', 'xmlrpc.client', 'socketserver', 'http.server', 'xmlrpc.server', '_pydev_imps._pydev_saved_modules', '_pydevd_bundle.pydevd_constants', '_pydev_bundle', '_pydev_runfiles', '_pydevd_frame_eval', 'pydev_ipython', 'pydevd_concurrency_analyser', 'pydevd_plugins', '_pydev_bundle.pydev_log', '_pydev_bundle._pydev_filesystem_encoding', '_pydevd_bundle.pydevd_comm_constants', 'pydevd_file_utils', '_pydev_imps._pydev_execfile', '_pydevd_bundle.pydevd_exec2', '_pydev_bundle.pydev_imports', '_pydev_bundle.pydev_is_thread_alive', '_pydev_bundle.pydev_override', 'pydevd_plugins.extensions', '_pydevd_bundle.pydevd_extension_utils', '_pydevd_bundle.pydevd_frame_utils', '_pydevd_bundle.pydevd_filtering', '_pydevd_bundle.pydevd_io', '_pydevd_bundle.pydevd_utils', '_pydev_bundle._pydev_tipper_common', '_pydev_bundle._pydev_imports_tipper', '_pydev_bundle._pydev_calltip_util', '_pydevd_bundle.pydevd_safe_repr', '_pydevd_bundle.pydevd_resolver', '_pydevd_bundle.pydevd_extension_api', '_pydevd_bundle.pydevd_xml', '_pydevd_bundle.pydevd_dont_trace', '_pydevd_frame_eval.vendored', '_pydevd_frame_eval.vendored.bytecode.flags', '_pydevd_frame_eval.vendored.bytecode.instr', '_pydevd_frame_eval.vendored.bytecode.bytecode', '_pydevd_frame_eval.vendored.bytecode.concrete', '_pydevd_frame_eval.vendored.bytecode.cfg', '_pydevd_frame_eval.vendored.bytecode', '_pydevd_bundle.pydevd_bytecode_utils', '_pydevd_bundle.pydevd_cython', '_pydevd_bundle.pydevd_cython_wrapper', '_pydevd_bundle.pydevd_additional_thread_info', '_pydevd_bundle.pydevd_thread_lifecycle', '_pydevd_bundle.pydevd_save_locals', '_pydevd_bundle.pydevd_defaults', '_pydev_bundle.pydev_monkey', 'pydevd_tracing', '_pydevd_bundle.pydevd_daemon_thread', '_pydevd_bundle.pydevd_timeout', '_pydevd_bundle.pydevd_vars', '_pydev_bundle.pydev_console_utils', '_pydevd_bundle.pydevd_import_class', '_pydevd_bundle.pydevd_breakpoints', '_pydevd_bundle.pydevd_custom_frames', '_pydevd_bundle.pydevd_dont_trace_files', '_pydevd_bundle.pydevd_net_command', '_pydev_bundle.pydev_umd', 'pydevconsole', '_pydev_bundle._pydev_completer', '_pydevd_bundle.pydevd_net_command_factory_xml', '_pydevd_bundle.pydevd_frame', '_pydevd_bundle.pydevd_additional_thread_info_regular', '_pydevd_bundle.pydevd_trace_dispatch', '_pydevd_frame_eval.pydevd_frame_eval_main', '_pydevd_bundle.pydevd_source_mapping', 'pydevd_concurrency_analyser.pydevd_thread_wrappers', 'pydevd_concurrency_analyser.pydevd_concurrency_logger', '_pydevd_bundle._debug_adapter', '_pydevd_bundle._debug_adapter.pydevd_schema_log', '_pydevd_bundle._debug_adapter.pydevd_base_schema', '_pydevd_bundle._debug_adapter.pydevd_schema', '_pydevd_bundle.pydevd_reload', '_pydev_bundle.fsnotify', '_pydevd_bundle.pydevd_console', '_pydevd_bundle.pydevd_comm', '_pydevd_bundle.pydevd_net_command_factory_json', '_pydevd_bundle.pydevd_collect_bytecode_info', '_pydevd_bundle.pydevd_api', '_pydevd_bundle.pydevd_json_debug_options', '_pydevd_bundle.pydevd_process_net_command_json', '_pydevd_bundle.pydevd_traceproperty', '_pydevd_bundle.pydevd_process_net_command', '_pydevd_bundle.pydevd_suspended_frames', '_pydevd_bundle.pydevd_trace_api', 'pydevd_plugins.django_debug', 'pydevd_plugins.jinja2_debug', '_pydevd_bundle.pydevd_plugin_utils', 'pydevd_plugins.extensions.types', 'pydevd_plugins.extensions.types.pydevd_helpers', 'pydevd_plugins.extensions.types.pydevd_plugin_numpy_types', 'pydevd_plugins.extensions.types.pydevd_plugins_django_form_str', 'pydevd', 'debugpy._vendored.force_pydevd', 'debugpy.server', 'debugpy.adapter', 'debugpy.common.timestamp', 'debugpy.common.util', 'debugpy.common.log', 'debugpy.common.sockets', 'debugpy.server.api', 'ipykernel.debugger', 'ipykernel.ipkernel', 'ipykernel.parentpoller', 'ipykernel.kernelapp', 'win32security', 'ntsecuritycon', 'faulthandler', 'IPython.core.completerlib', 'logging.config', 'pythonjsonlogger', 'pythonjsonlogger.jsonlogger', 'daiquiri.types', 'daiquiri.formatter', 'daiquiri.handlers', 'daiquiri.output', 'daiquiri', 'jupyter_require.__about__', 'csscompressor', 'jupyter_require.core', 'jupyter_require.notebook', 'jupyter_require', 'jupyter_nbutils.__about__', 'jupyter_nbutils.config', 'jupyter_nbutils.utils', 'jupyter_nbutils', 'jupyter_require.magic', 'numpy._globals', 'numpy.__config__', 'numpy._distributor_init', 'numpy._version', 'numpy.version', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core._asarray', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core._machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.stride_tricks', 'numpy.lib.twodim_base', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', '_cython_0_29_30', 'numpy.random._common', 'secrets', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'pytz', 'pandas._typing', '_cython_0_29_28', 'pandas._libs.tslibs.dtypes', 'pandas._libs.tslibs.base', 'pandas._libs.tslibs.np_datetime', 'pandas._libs.tslibs.nattype', 'pandas._libs.tslibs.timezones', 'pandas._libs.tslibs.ccalendar', 'pandas._libs.tslibs.tzconversion', 'pandas._config.config', 'pandas._config.dates', 'pandas._config.display', 'pandas._config', 'pandas._config.localization', 'pandas._libs.tslibs.strptime', 'pandas._libs.tslibs.fields', 'pandas._libs.tslibs.timedeltas', 'pandas._libs.tslibs.timestamps', 'dateutil.easter', 'pandas._libs.properties', 'pandas._libs.tslibs.offsets', 'pandas._libs.tslibs.parsing', 'pandas._libs.tslibs.conversion', 'pandas._libs.tslibs.period', 'pandas._libs.tslibs.vectorized', 'pandas._libs.tslibs', 'pandas._libs.ops_dispatch', 'pandas._libs.missing', 'pandas._libs.hashtable', 'pandas._libs.algos', 'pandas._libs.interval', 'pandas._libs', 'pandas.util._decorators', 'pandas.core', 'pandas.core.util', 'pandas._libs.tslib', 'pandas._libs.lib', 'pandas._libs.hashing', 'pandas.core.dtypes', 'pandas.util._exceptions', 'pandas.errors', 'pandas.core.dtypes.generic', 'pandas.core.dtypes.base', 'pandas.core.dtypes.inference', 'pandas.core.dtypes.dtypes', 'pandas.core.dtypes.common', 'pandas.core.util.hashing', 'pandas.util', 'pandas.util.version', 'pandas.compat.numpy', 'pandas.compat.pyarrow', 'pandas.compat', 'pandas.core.config_init', 'pandas.core.dtypes.missing', 'pandas.util._validators', 'pandas.core.dtypes.cast', 'pandas.core.dtypes.concat', 'pandas.core.array_algos', 'pandas.core.common', 'pandas.core.construction', 'pandas.core.array_algos.take', 'pandas.core.indexers.utils', 'pandas.core.indexers', 'pandas.core.algorithms', 'pandas.compat.numpy.function', 'pandas.core.roperator', 'pandas._libs.ops', 'pandas.core.computation', 'pandas.compat._optional', 'numexpr.interpreter', 'packaging.__about__', 'packaging', 'packaging._structures', 'packaging.version', 'numexpr.expressions', 'numexpr.utils', 'numexpr.necompiler', 'numexpr.version', 'numexpr', 'pandas.core.computation.check', 'pandas.core.computation.expressions', 'pandas.core.ops.missing', 'pandas.core.ops.dispatch', 'pandas.core.ops.invalid', 'pandas.core.ops.array_ops', 'pandas.core.ops.common', 'pandas.core.ops.docstrings', 'pandas.core.ops.mask_ops', 'pandas.core.ops.methods', 'pandas.core.ops', 'pandas.core.arraylike', 'pandas.core.missing', 'pandas.core.array_algos.quantile', 'pandas.core.sorting', 'pandas.core.arrays.base', 'bottleneck.benchmark', 'bottleneck.benchmark.autotimeit', 'bottleneck.benchmark.bench', 'bottleneck.benchmark.bench_detailed', 'bottleneck.tests', 'bottleneck.tests.util', 'bottleneck.slow.reduce', 'bottleneck.slow.nonreduce', 'bottleneck.slow.nonreduce_axis', 'bottleneck.slow.move', 'bottleneck.slow', 'bottleneck._pytesttester', 'bottleneck.move', 'bottleneck.nonreduce', 'bottleneck.nonreduce_axis', 'bottleneck.reduce', 'bottleneck._version', 'bottleneck', 'pandas.core.nanops', 'pandas.core.array_algos.masked_reductions', 'pandas.core.arrays.masked', 'pandas.core.arrays.boolean', 'pandas._libs.arrays', 'pandas.core.accessor', 'pandas.core.array_algos.transforms', 'pandas.core.arrays._mixins', 'pandas.core.base', 'pandas.core.strings.accessor', 'pandas.core.strings.base', 'pandas.core.strings', 'pandas.core.strings.object_array', 'pandas.io', 'pandas.io.formats', 'pandas.io.formats.console', 'pandas.core.arrays.categorical', 'pandas.tseries', 'pandas.tseries.frequencies', 'pandas.core.arrays.datetimelike', 'pandas.core.arrays._ranges', 'pandas.core.arrays.numeric', 'pandas.core.tools', 'pandas.core.tools.numeric', 'pandas.core.arrays.integer', 'pandas.tseries.offsets', 'pandas.core.arrays.datetimes', 'pandas.core.arrays.floating', 'pandas.core.indexes', 'pandas._libs.index', 'pandas._libs.join', 'pandas.core.array_algos.putmask', 'pandas._libs.sparse', 'pandas.core.arrays.sparse.dtype', 'pandas.io.formats.printing', 'pandas.core.arrays.sparse.array', 'pandas.core.arrays.sparse.accessor', 'pandas.core.arrays.sparse', 'pandas.core.indexes.frozen', 'pandas.core.indexes.base', 'pandas.core.arrays.interval', 'pandas.core.arrays.numpy_', 'pandas.core.arrays.period', 'pandas.core.arrays.string_', 'pandas.core.arrays.string_arrow', 'pandas.core.arrays.timedeltas', 'pandas.core.arrays', 'pandas.core.flags', 'pandas._libs.reduction', 'pandas.core.apply', 'pandas._libs.indexing', 'pandas.core.indexes.extension', 'pandas.core.indexes.category', 'pandas.core.indexes.numeric', 'pandas.core.indexes.range', 'pandas.core.tools.timedeltas', 'pandas.core.indexes.datetimelike', 'pandas.core.tools.times', 'pandas.core.indexes.datetimes', 'pandas.core.indexes.multi', 'pandas.core.indexes.timedeltas', 'pandas.core.indexes.interval', 'pandas.core.indexes.period', 'pandas.core.indexes.api', 'pandas.core.indexing', 'pandas.core.array_algos.replace', 'pandas.core.reshape', 'pandas._libs.internals', 'pandas._libs.writers', 'pandas.core.internals.blocks', 'pandas.core.internals.api', 'pandas.core.internals.base', 'pandas.core.internals.array_manager', 'pandas.core.internals.ops', 'pandas.core.internals.managers', 'pandas.core.internals.concat', 'pandas.core.internals', 'pandas.core.reshape.concat', 'mmap', 'pandas.core.shared_docs', 'pandas.io.common', 'pandas.io.formats.format', 'pandas.core.describe', 'pandas.core.internals.construction', 'pandas.core.sample', 'pandas._libs.window', 'pandas._libs.window.aggregations', 'pandas._libs.window.indexers', 'pandas.core.indexers.objects', 'pandas.core.util.numba_', 'pandas.core.window.common', 'pandas.core.window.doc', 'pandas.core.window.numba_', 'pandas.core.window.online', 'pandas.core._numba', 'pandas.core._numba.executor', 'pandas.core.window.rolling', 'pandas.core.window.ewm', 'pandas.core.window.expanding', 'pandas.core.window', 'pandas.core.generic', 'pandas.core.reshape.util', 'pandas.core.reshape.melt', 'pandas._libs.reshape', 'pandas.core.indexes.accessors', 'pandas.arrays', 'pandas.core.tools.datetimes', 'pandas.io.formats.info', 'pandas.plotting._core', 'pandas.plotting._misc', 'pandas.plotting', 'pandas.core.series', 'pandas.core.frame', 'pandas.core.groupby.base', 'pandas._libs.groupby', 'pandas.core.groupby.numba_', 'pandas.core.groupby.categorical', 'pandas.core.groupby.grouper', 'pandas.core.groupby.ops', 'pandas.core.groupby.indexing', 'pandas.core.groupby.groupby', 'pandas.core.groupby.generic', 'pandas.core.groupby', 'pandas.core.api', 'pandas.tseries.api', 'pandas.core.computation.common', 'pandas.core.computation.align', 'pandas.compat.chainmap', 'pandas.core.computation.scope', 'pandas.core.computation.ops', 'pandas.core.computation.parsing', 'pandas.core.computation.expr', 'pandas.core.computation.engines', 'pandas.core.computation.eval', 'pandas.core.computation.api', 'pandas.core.reshape.merge', 'pandas.core.reshape.pivot', 'pandas.core.reshape.reshape', 'pandas.core.reshape.tile', 'pandas.core.reshape.api', 'pandas.api.extensions', 'pandas.api.indexers', 'pandas.core.dtypes.api', 'pandas.api.types', 'pandas.api', 'pandas._testing._random', 'pandas._testing.contexts', 'pandas._testing._io', 'pandas._testing._warnings', 'cmath', 'pandas._libs.testing', 'pandas._testing.asserters', 'pandas._testing.compat', 'pandas._testing', 'pandas.testing', 'pandas.util._print_versions', 'pandas.io.clipboards', 'pandas._libs.parsers', 'pandas.io.excel._util', 'pandas.io.date_converters', 'pandas.io.parsers.base_parser', 'pandas.io.parsers.arrow_parser_wrapper', 'pandas.io.parsers.c_parser_wrapper', 'pandas.io.parsers.python_parser', 'pandas.io.parsers.readers', 'pandas.io.parsers', 'pandas.io.excel._odfreader', 'pandas.io.excel._openpyxl', 'pandas.io.excel._pyxlsb', 'pandas.io.excel._xlrd', 'pandas.io.excel._base', 'pandas._libs.json', 'pandas.io.formats._color_data', 'pandas.io.formats.css', 'pandas.io.formats.excel', 'pandas.io.excel._odswriter', 'pandas.io.excel._xlsxwriter', 'pandas.io.excel._xlwt', 'pandas.io.excel', 'pandas.io.feather_format', 'pandas.io.gbq', 'pandas.io.html', 'pandas.io.json._normalize', 'pandas.io.json._table_schema', 'pandas.io.json._json', 'pandas.io.json', 'pandas.io.orc', 'pandas.io.parquet', 'pandas.compat.pickle_compat', 'pandas.io.pickle', 'pandas.core.computation.pytables', 'pandas.io.pytables', 'pandas.io.sas.sasreader', 'pandas.io.sas', 'pandas.io.spss', 'pandas.io.sql', 'pandas.io.stata', 'pandas.io.xml', 'pandas.io.api', 'pandas.util._tester', 'pandas._version', 'pandas', 'summarytools', 'summarytools.htmlwidgets', 'summarytools.summarytools', 'matplotlib', 'matplotlib._api.deprecation', 'matplotlib._api', 'matplotlib._version', 'matplotlib._c_internal_utils', 'matplotlib.cbook', 'matplotlib.docstring', 'PIL._version', 'PIL', 'defusedxml.common', 'defusedxml', 'xml.etree', 'xml.etree.ElementPath', '_elementtree', 'xml.etree.ElementTree', 'defusedxml.ElementTree', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._util', 'PIL._imaging', 'cffi.lock', 'cffi.error', 'cffi.model', 'cffi.api', 'cffi', 'PIL.Image', 'PIL.ImageChops', 'PIL.ImageFile', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'PIL.ImagePalette', 'PIL.ImageSequence', 'PIL.PngImagePlugin', 'matplotlib._path', 'matplotlib.bezier', 'matplotlib.path', 'matplotlib.transforms', 'matplotlib.ticker', 'matplotlib.scale', 'matplotlib._color_data', 'matplotlib.colors', 'pyparsing.util', 'pyparsing.unicode', 'pyparsing.exceptions', 'pyparsing.actions', 'pyparsing.results', 'pyparsing.core', 'pyparsing.helpers', 'pyparsing.testing', 'pyparsing.common', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib._enums', 'cycler', 'matplotlib.rcsetup', 'matplotlib.ft2font', 'kiwisolver']
2023-04-20 18:23:38,548 [11464] DEBUG    matplotlib:275: [JupyterRequire] CACHEDIR=C:\Users\adity\.matplotlib
2023-04-20 18:23:38,552 [11464] DEBUG    matplotlib.font_manager:1439: [JupyterRequire] Using fontManager instance from C:\Users\adity\.matplotlib\fontlist-v330.json
2023-04-20 18:23:39,155 [11464] DEBUG    matplotlib.pyplot:280: [JupyterRequire] Loaded backend module://matplotlib_inline.backend_inline version unknown.
2023-04-20 18:23:39,163 [11464] DEBUG    matplotlib.pyplot:280: [JupyterRequire] Loaded backend module://matplotlib_inline.backend_inline version unknown.
2023-04-20 18:23:45,872 [11464] DEBUG    matplotlib.font_manager:1329: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2023-04-20 18:23:45,873 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:23:45,873 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:23:45,873 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,874 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2023-04-20 18:23:45,874 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2023-04-20 18:23:45,874 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:23:45,875 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:23:45,875 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:23:45,875 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,876 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:23:45,876 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,876 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:23:45,877 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,877 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,878 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,878 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:23:45,878 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:23:45,879 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,879 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,879 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2023-04-20 18:23:45,879 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,881 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,881 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:23:45,881 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:23:45,881 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:23:45,882 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,882 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,882 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:23:45,882 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:23:45,883 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,883 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,883 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,884 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:23:45,884 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,884 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:23:45,885 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,885 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,885 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2023-04-20 18:23:45,886 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLSNECB.TTF', name='Gill Sans MT Ext Condensed Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-20 18:23:45,886 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanz.ttf', name='Constantia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:23:45,886 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LEELAWAD.TTF', name='Leelawadee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,887 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\monbaiti.ttf', name='Mongolian Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,887 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-MEDIUM.TTF', name='Dubai', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-04-20 18:23:45,887 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-04-20 18:23:45,888 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FTLTLT.TTF', name='Footlight MT Light', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-20 18:23:45,888 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibril.ttf', name='Calibri', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-20 18:23:45,888 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSI.TTF', name='Goudy Old Style', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:23:45,888 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisbi.ttf', name='Segoe UI', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-20 18:23:45,890 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCCB___.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-04-20 18:23:45,890 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXD.TTF', name='Lucida Fax', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-20 18:23:45,890 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2023-04-20 18:23:45,891 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BSSYM7.TTF', name='Bookshelf Symbol 7', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,891 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAMDCN.TTF', name='Franklin Gothic Medium Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-20 18:23:45,891 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framdit.ttf', name='Franklin Gothic Medium', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:23:45,892 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSB.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:23:45,892 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-LIGHT.TTF', name='Dubai', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-20 18:23:45,892 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCC____.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-20 18:23:45,893 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_B.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:23:45,893 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COOPBL.TTF', name='Cooper Black', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,893 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNI.TTF', name='Arial', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 7.613636363636363
2023-04-20 18:23:45,894 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\INFROMAN.TTF', name='Informal Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,894 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSB.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-20 18:23:45,894 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BERNHC.TTF', name='Bernard MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-20 18:23:45,894 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEB.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-20 18:23:45,895 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCEDSCR.TTF', name='Edwardian Script ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,896 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consola.ttf', name='Consolas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,896 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,896 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\holomdl2.ttf', name='HoloLens MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,897 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COLONNA.TTF', name='Colonna MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,897 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYR.TTF', name='Agency FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,898 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRITANIC.TTF', name='Britannic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,899 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiai.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:23:45,899 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:23:45,900 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaS.ttf', name='Nirmala UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2023-04-20 18:23:45,900 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CHILLER.TTF', name='Chiller', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,900 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,901 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAB.TTF', name='Book Antiqua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:23:45,901 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothM.ttc', name='Yu Gothic', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-04-20 18:23:45,901 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG2.TTF', name='Wingdings 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,902 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Nirmala.ttf', name='Nirmala UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,902 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelUIsl.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2023-04-20 18:23:45,902 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriai.ttf', name='Cambria', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:23:45,902 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariali.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
2023-04-20 18:23:45,903 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARA.TTF', name='Garamond', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,903 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSPCL.TTF', name='MS Reference Specialty', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,903 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-REGULAR.TTF', name='Dubai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,903 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LHANDW.TTF', name='Lucida Handwriting', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:23:45,904 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:23:45,904 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comici.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:23:45,904 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTAUR.TTF', name='Centaur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,905 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEBO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-20 18:23:45,905 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ONYX.TTF', name='Onyx', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,905 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrima.ttf', name='Ebrima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,905 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFI.TTF', name='Californian FB', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:23:45,907 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERBI___.TTF', name='Perpetua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:23:45,907 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbell.ttf', name='Corbel', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-20 18:23:45,907 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILI____.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:23:45,907 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segmdl2.ttf', name='Segoe MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,908 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-BOLD.TTF', name='Dubai', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:23:45,908 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FELIXTI.TTF', name='Felix Titling', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,908 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbd.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
2023-04-20 18:23:45,908 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taileb.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:23:45,909 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeprb.ttf', name='Segoe Print', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:23:45,909 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoescb.ttf', name='Segoe Script', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:23:45,910 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITE.TTF', name='Lucida Bright', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,910 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhbd.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:23:45,910 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\times.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,911 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisb.ttf', name='Segoe UI', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-20 18:23:45,911 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSDB.TTF', name='Berlin Sans FB Demi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:23:45,911 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbi.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
2023-04-20 18:23:45,912 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesi.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:23:45,912 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADM.TTF', name='Franklin Gothic Demi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,912 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERTI.TTF', name='High Tower Text', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:23:45,914 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF-Italic.ttf', name='Sitka', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:23:45,914 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsun.ttc', name='SimSun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,914 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTI.TTF', name='Calisto MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:23:45,914 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCMI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:23:45,915 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaral.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,915 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\lucon.ttf', name='Lucida Console', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,915 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_I.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:23:45,915 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mvboli.ttf', name='MV Boli', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,916 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiab.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:23:45,916 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\l_10646.ttf', name='Lucida Sans Unicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,916 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTIBD.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:23:45,916 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNT.TTF', name='Elephant', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,917 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASMD.TTF', name='Eras Medium ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,917 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MSUIGHUR.TTF', name='Microsoft Uighur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,918 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYB.TTF', name='Agency FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:23:45,918 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MSUIGHUB.TTF', name='Microsoft Uighur', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:23:45,918 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicbd.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:23:45,919 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMIT.TTF', name='Franklin Gothic Demi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:23:45,919 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKEB.TTF', name='Rockwell Extra Bold', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
2023-04-20 18:23:45,919 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PER_____.TTF', name='Perpetua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,920 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VINERITC.TTF', name='Viner Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,920 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\marlett.ttf', name='Marlett', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-04-20 18:23:45,920 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrili.ttf', name='Calibri', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-04-20 18:23:45,922 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICBI.TTF', name='Century Gothic', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:23:45,922 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ALGER.TTF', name='Algerian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,922 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOS.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,922 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelz.ttf', name='Corbel', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:23:45,922 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILB____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:23:45,922 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUABI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:23:45,924 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\sylfaen.ttf', name='Sylfaen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,924 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriaz.ttf', name='Cambria', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:23:45,924 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanaz.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
2023-04-20 18:23:45,924 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constan.ttf', name='Constantia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,925 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTILI.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-20 18:23:45,925 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCM_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,926 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhl.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2023-04-20 18:23:45,926 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOS.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-20 18:23:45,926 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HATTEN.TTF', name='Haettenschweiler', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,926 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JOKERMAN.TTF', name='Jokerman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,927 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ENGR.TTF', name='Engravers MT', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-04-20 18:23:45,927 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARAIT.TTF', name='Garamond', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:23:45,927 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,928 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelli.ttf', name='Corbel', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-04-20 18:23:45,928 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constani.ttf', name='Constantia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:23:45,928 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIST.TTF', name='Calisto MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,928 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PARCHM.TTF', name='Parchment', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,929 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\himalaya.ttf', name='Microsoft Himalaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,929 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRADHITC.TTF', name='Bradley Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,929 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\wingding.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,929 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtextb.ttf', name='Myanmar Text', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:23:45,931 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG3.TTF', name='Wingdings 3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,931 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGSOL.TTF', name='Niagara Solid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,931 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarali.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:23:45,931 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKI.TTF', name='Rockwell', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:23:45,932 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolab.ttf', name='Consolas', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:23:45,932 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXDI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-20 18:23:45,932 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BAUHS93.TTF', name='Bauhaus 93', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,932 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisli.ttf', name='Segoe UI', style='italic', variant='normal', weight=350, stretch='normal', size='scalable')) = 11.0975
2023-04-20 18:23:45,933 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELL.TTF', name='Bell MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,933 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2023-04-20 18:23:45,933 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyi.ttf', name='Microsoft Yi Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,934 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSR.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,934 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHVIT.TTF', name='Franklin Gothic Heavy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:23:45,934 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OLDENGL.TTF', name='Old English Text MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,936 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbel.ttf', name='Corbel', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,936 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLB.TTF', name='Bell MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:23:45,936 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelaUIb.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:23:45,937 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHV.TTF', name='Franklin Gothic Heavy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,937 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OUTLOOK.TTF', name='MS Outlook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,937 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PRISTINA.TTF', name='Pristina', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,938 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERI____.TTF', name='Perpetua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:23:45,938 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtext.ttf', name='Myanmar Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,938 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSAN.TTF', name='MS Reference Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,939 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERB____.TTF', name='Perpetua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:23:45,939 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTEXTRA.TTF', name='MT Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,939 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKB.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:23:45,940 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARABD.TTF', name='Garamond', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:23:45,941 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cour.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,941 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mingliub.ttc', name='MingLiU-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,941 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICB.TTF', name='Century Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:23:45,942 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspa.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,942 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VIVALDII.TTF', name='Vivaldi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:23:45,942 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAGE.TTF', name='Rage Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:23:45,943 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-20 18:23:45,943 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2023-04-20 18:23:45,943 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MATURASC.TTF', name='Matura MT Script Capitals', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,943 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comic.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,944 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbi.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:23:45,944 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothR.ttc', name='Yu Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,944 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palai.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:23:45,945 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MOD20.TTF', name='Modern No. 20', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,945 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMCN.TTF', name='Franklin Gothic Demi Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-20 18:23:45,945 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrimabd.ttf', name='Ebrima', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:23:45,945 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\javatext.ttf', name='Javanese Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,946 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CASTELAR.TTF', name='Castellar', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,946 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSDI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-20 18:23:45,946 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelawUI.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,946 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAX.TTF', name='Lucida Fax', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,947 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunbd.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:23:45,947 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF.ttf', name='Sitka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,947 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTL.TTF', name='Copperplate Gothic Light', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,948 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
2023-04-20 18:23:45,948 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeui.ttf', name='Segoe UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,948 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Gabriola.ttf', name='Gabriola', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,949 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTBI.TTF', name='Calisto MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:23:45,949 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicz.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:23:45,949 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALN.TTF', name='Arial', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 6.613636363636363
2023-04-20 18:23:45,950 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKBI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:23:45,950 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FREESCPT.TTF', name='Freestyle Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,950 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTURY.TTF', name='Century', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,952 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaB.ttf', name='Nirmala UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:23:45,952 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSB.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:23:45,952 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSD.TTF', name='Lucida Sans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-20 18:23:45,953 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuisl.ttf', name='Segoe UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2023-04-20 18:23:45,953 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:23:45,953 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:23:45,953 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguihis.ttf', name='Segoe UI Historic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,954 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCB____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-04-20 18:23:45,954 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambria.ttc', name='Cambria', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,954 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKBI.TTF', name='Rockwell', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:23:45,954 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGENG.TTF', name='Niagara Engraved', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,955 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisym.ttf', name='Segoe UI Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,955 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inkfree.ttf', name='Ink Free', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,955 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASBD.TTF', name='Eras Bold ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,955 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILC____.TTF', name='Gill Sans MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-20 18:23:45,957 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candara.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,957 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\bahnschrift.ttf', name='Bahnschrift', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,957 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BROADW.TTF', name='Broadway', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,957 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolaz.ttf', name='Consolas', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:23:45,957 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CBI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2023-04-20 18:23:45,958 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuii.ttf', name='Segoe UI', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:23:45,958 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibli.ttf', name='Segoe UI', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2023-04-20 18:23:45,958 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEDI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-20 18:23:45,959 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucit.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:23:45,959 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BKANT.TTF', name='Book Antiqua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,959 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothL.ttc', name='Yu Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-20 18:23:45,959 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrii.ttf', name='Calibri', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:23:45,959 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CURLZ___.TTF', name='Curlz MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,961 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelb.ttf', name='Corbel', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:23:45,961 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARLRDBD.TTF', name='Arial Rounded MT Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,961 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothB.ttc', name='Yu Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:23:45,961 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASDEMI.TTF', name='Eras Demi ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,962 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
2023-04-20 18:23:45,962 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANS.TTF', name='Lucida Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,962 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariblk.ttf', name='Arial', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 6.888636363636364
2023-04-20 18:23:45,962 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCKRIST.TTF', name='Kristen ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,963 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\KUNSTLER.TTF', name='Kunstler Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,963 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanb.ttf', name='Constantia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:23:45,963 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PAPYRUS.TTF', name='Papyrus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,964 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JUICE___.TTF', name='Juice ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,964 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguili.ttf', name='Segoe UI', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-04-20 18:23:45,965 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:23:45,965 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarab.ttf', name='Candara', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:23:45,965 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\IMPRISHA.TTF', name='Imprint MT Shadow', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,965 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailu.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,965 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbi.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:23:45,965 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuil.ttf', name='Segoe UI', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-20 18:23:45,965 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanai.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
2023-04-20 18:23:45,965 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoepr.ttf', name='Segoe Print', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,965 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaraz.ttf', name='Candara', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:23:45,965 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNB.TTF', name='Arial', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 6.8986363636363635
2023-04-20 18:23:45,969 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspab.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:23:45,969 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,969 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCM____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-20 18:23:45,969 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARNGTON.TTF', name='Harrington', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,969 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbd.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:23:45,969 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:23:45,969 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILSANUB.TTF', name='Gill Sans Ultra Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,969 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibri.ttf', name='Calibri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,971 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiaz.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:23:45,971 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegoeIcons.ttf', name='Segoe Fluent Icons', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,971 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAGNETOB.TTF', name='Magneto', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:23:45,971 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICI.TTF', name='Century Gothic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:23:45,971 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCBLKAD.TTF', name='Blackadder ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,973 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahomabd.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:23:45,973 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugi.ttf', name='Gadugi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,973 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LCALLIG.TTF', name='Lucida Calligraphy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:23:45,973 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyh.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,973 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsunb.ttf', name='SimSun-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,975 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgun.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,975 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIL_____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,976 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VLADIMIR.TTF', name='Vladimir Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,976 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,976 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msgothic.ttc', name='MS Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,977 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRSCRIPT.TTF', name='French Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,977 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILBI___.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:23:45,977 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASLGHT.TTF', name='Eras Light ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,978 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTB.TTF', name='Calisto MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:23:45,978 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunsl.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-20 18:23:45,978 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRUSHSCI.TTF', name='Brush Script MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:23:45,978 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SNAP____.TTF', name='Snap ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,979 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuib.ttf', name='Segoe UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:23:45,979 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCBI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:23:45,979 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailub.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:23:45,979 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framd.ttf', name='Franklin Gothic Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,981 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolai.ttf', name='Consolas', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:23:45,981 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCEB.TTF', name='Tw Cen MT Condensed Extra Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-20 18:23:45,981 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\POORICH.TTF', name='Poor Richard', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,981 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDYSTO.TTF', name='Goudy Stout', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,982 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKB.TTF', name='Rockwell', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:23:45,982 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PALSCRI.TTF', name='Palace Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,982 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarai.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:23:45,983 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\micross.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,983 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LEELAWDB.TTF', name='Leelawadee', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:23:45,984 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABK.TTF', name='Franklin Gothic Book', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,984 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjh.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,985 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palabi.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:23:45,985 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAVIE.TTF', name='Ravie', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,986 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCK.TTF', name='Rockwell', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,986 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\pala.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,986 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibriz.ttf', name='Calibri', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:23:45,987 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugib.ttf', name='Gadugi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:23:45,987 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_PSTC.TTF', name='Bodoni MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-20 18:23:45,987 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENSCBK.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,987 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanab.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
2023-04-20 18:23:45,989 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LATINWD.TTF', name='Wide Latin', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
2023-04-20 18:23:45,989 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbeli.ttf', name='Corbel', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:23:45,989 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIGI.TTF', name='Gigi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,990 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITED.TTF', name='Lucida Bright', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-20 18:23:45,990 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbi.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:23:45,990 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhl.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2023-04-20 18:23:45,990 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguiemj.ttf', name='Segoe UI Emoji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,991 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OCRAEXT.TTF', name='OCR A Extended', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
2023-04-20 18:23:45,991 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebuc.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,991 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SHOWG.TTF', name='Showcard Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,991 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BASKVILL.TTF', name='Baskerville Old Face', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,992 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriab.ttf', name='Cambria', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:23:45,992 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAIAN.TTF', name='Maiandra GD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,992 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCRIPTBL.TTF', name='Script MT Bold', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:23:45,992 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLECB.TTF', name='Gloucester MT Extra Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-20 18:23:45,994 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNTI.TTF', name='Elephant', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:23:45,994 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFR.TTF', name='Californian FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,994 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHIC.TTF', name='Century Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,995 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PLAYBILL.TTF', name='Playbill', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,995 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABKIT.TTF', name='Franklin Gothic Book', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:23:45,995 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARLOWSI.TTF', name='Harlow Solid Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:23:45,996 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPE.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,996 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taile.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:45,996 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibl.ttf', name='Segoe UI', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2023-04-20 18:23:45,996 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNBI.TTF', name='Arial', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 7.8986363636363635
2023-04-20 18:23:45,997 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuiz.ttf', name='Segoe UI', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:23:45,997 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSBI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-20 18:23:45,998 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palab.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:23:45,998 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLI.TTF', name='Bell MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:23:45,998 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILLUBCD.TTF', name='Gill Sans Ultra Bold Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-20 18:23:45,998 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbd.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:23:45,998 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhbd.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:23:46,000 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoesc.ttf', name='Segoe Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:46,000 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\couri.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:23:46,000 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegUIVar.ttf', name='Segoe UI Variable', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:46,001 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_R.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:46,001 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTB.TTF', name='Copperplate Gothic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:46,001 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:23:46,001 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCB_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:23:46,001 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TEMPSITC.TTF', name='Tempus Sans ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:46,002 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MISTRAL.TTF', name='Mistral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:46,002 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FORTE.TTF', name='Forte', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:46,002 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CB.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-04-20 18:23:46,004 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbd.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:23:46,004 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STENCIL.TTF', name='Stencil', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:46,004 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrib.ttf', name='Calibri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:23:46,004 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERT.TTF', name='High Tower Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:46,005 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTCORSVA.TTF', name='Monotype Corsiva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:23:46,005 [11464] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFB.TTF', name='Californian FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:23:46,005 [11464] DEBUG    matplotlib.font_manager:1367: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
2023-04-20 18:27:34,030 [31164] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-04-20 18:27:34,031 [31164] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-04-20 18:27:34,032 [31164] INFO     root:247: [JupyterRequire] Initializing comms.
2023-04-20 18:27:34,037 [31164] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-04-20 18:27:34,039 [31164] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-04-20 18:27:34,040 [31164] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-04-20 18:28:19,120 [31164] INFO     numexpr.utils:147: [JupyterRequire] Note: NumExpr detected 12 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
2023-04-20 18:28:19,121 [31164] INFO     numexpr.utils:159: [JupyterRequire] NumExpr defaulting to 8 threads.
2023-04-20 18:28:19,898 [31164] DEBUG    matplotlib:275: [JupyterRequire] matplotlib data path: C:\Users\adity\anaconda3\lib\site-packages\matplotlib\mpl-data
2023-04-20 18:28:19,905 [31164] DEBUG    matplotlib:275: [JupyterRequire] CONFIGDIR=C:\Users\adity\.matplotlib
2023-04-20 18:28:19,910 [31164] DEBUG    matplotlib:1445: [JupyterRequire] interactive is False
2023-04-20 18:28:19,911 [31164] DEBUG    matplotlib:1446: [JupyterRequire] platform is win32
2023-04-20 18:28:19,912 [31164] DEBUG    matplotlib:1447: [JupyterRequire] loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', '_io', 'marshal', 'nt', 'winreg', '_frozen_importlib_external', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', 'encodings.cp1252', '_signal', 'encodings.latin_1', '_abc', 'abc', 'io', '__main__', '_stat', 'stat', '_collections_abc', 'genericpath', 'ntpath', 'os.path', 'os', '_sitebuiltins', '_locale', '_bootlocale', '_distutils_hack', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib.machinery', '_heapq', 'heapq', 'itertools', 'keyword', '_operator', 'operator', 'reprlib', '_collections', 'collections', 'collections.abc', '_functools', 'functools', 'contextlib', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', 'copyreg', 're', 'typing.io', 'typing.re', 'typing', 'importlib.abc', 'importlib.util', 'google', 'google.cloud', 'google.logging', 'mpl_toolkits', 'sphinxcontrib', 'zope', 'site', '_weakrefset', 'weakref', 'pkgutil', 'runpy', 'ipykernel._version', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'errno', 'signal', 'threading', 'msvcrt', '_winapi', 'subprocess', 'jupyter_client._version', 'posixpath', 'fnmatch', 'glob', '_socket', 'math', 'select', 'selectors', 'socket', 'zlib', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', '_bisect', 'bisect', '_random', '_sha512', 'random', 'tempfile', 'getpass', 'platform', 'zmq.libzmq', 'zmq.backend.select', 'cython_runtime', 'zmq.backend.cython.constants', '_cython_0_29_24', 'zmq.backend.cython.error', 'zmq.error', 'zmq.backend.cython.message', 'zmq.backend.cython.context', 'copy', '_struct', 'struct', '_compat_pickle', '_pickle', 'pickle', 'zmq.backend.cython.socket', 'zmq.backend.cython.utils', 'zmq.backend.cython._poll', 'zmq.backend.cython._version', 'zmq.backend.cython._device', 'zmq.backend.cython._proxy_steerable', 'zmq.backend.cython', 'zmq.backend', 'zmq.utils', 'zmq.utils.constant_names', 'zmq.sugar.constants', 'atexit', 'zmq.sugar.attrsettr', 'zmq.sugar.poll', 'zmq.utils.jsonapi', 'zmq.utils.strtypes', 'zmq.sugar.socket', 'zmq.sugar.context', 'zmq.sugar.frame', 'zmq.sugar.tracker', 'zmq.sugar.version', 'zmq.sugar.stopwatch', 'zmq.sugar', 'zmq', '_ast', 'ast', '_opcode', 'opcode', 'dis', 'token', 'tokenize', 'linecache', 'inspect', 'traitlets.utils', 'traitlets.utils.getargspec', 'traitlets.utils.importstring', 'traitlets.utils.sentinel', 'traitlets.utils.bunch', 'traitlets.utils.descriptions', 'traitlets.traitlets', 'traitlets.utils.decorators', 'traitlets._version', 'traitlets', 'traceback', '_string', 'string', 'logging', 'pprint', 'gettext', 'argparse', 'traitlets.config.loader', 'textwrap', 'traitlets.utils.text', 'traitlets.config.configurable', 'traitlets.config.application', 'traitlets.config', 'jupyter_client.localinterfaces', 'jupyter_core.version', 'jupyter_core', 'urllib', 'urllib.parse', 'pathlib', 'jupyter_core.paths', 'jupyter_client.utils', 'jupyter_client.connect', 'traitlets.log', 'jupyter_client.launcher', 'concurrent', 'concurrent.futures._base', 'concurrent.futures', '_ssl', 'binascii', 'base64', 'ssl', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', '_contextvars', 'contextvars', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.threads', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'asyncio.windows_events', 'asyncio', 'jupyter_client.channelsabc', 'jupyter_client.channels', 'jupyter_client.clientabc', 'jupyter_client.client', 'jupyter_client.kernelspec', 'jupyter_client.managerabc', 'jupyter_client.manager', '_queue', 'queue', 'jupyter_client.blocking.channels', 'jupyter_client.blocking.client', 'jupyter_client.blocking', 'zmq._future', 'zmq.asyncio', 'jupyter_client.asynchronous.channels', 'jupyter_client.asynchronous.client', 'jupyter_client.asynchronous', '_uuid', 'uuid', 'jupyter_client.multikernelmanager', 'jupyter_client', 'ipykernel.connect', 'ipykernel', 'tornado', '_datetime', 'datetime', 'numbers', 'logging.handlers', 'html.entities', 'html', 'array', 'tornado.speedups', 'tornado.util', 'tornado.escape', 'colorama.ansi', '_ctypes', 'ctypes._endian', 'ctypes', 'ctypes.wintypes', 'colorama.win32', 'colorama.winterm', 'colorama.ansitowin32', 'colorama.initialise', 'colorama', 'tornado.log', 'tornado.concurrent', 'tornado.ioloop', '__future__', 'tornado.platform', 'tornado.gen', 'tornado.platform.asyncio', 'zmq.eventloop.ioloop', 'zmq.eventloop', 'zmq.eventloop.zmqstream', 'IPython.core', 'IPython.core.getipython', 'IPython.core.release', 'sysconfig', 'pydoc', 'executing.executing', 'executing.version', 'executing', 'asttokens.line_numbers', 'six', 'six.moves', 'asttokens.util', 'asttokens.mark_tokens', 'asttokens.asttokens', 'asttokens', '_decimal', 'decimal', 'fractions', 'pure_eval.utils', 'pure_eval.my_getattr_static', 'pure_eval.core', 'pure_eval.version', 'pure_eval', 'stack_data.utils', 'stack_data.core', 'stack_data.formatting', 'stack_data.version', 'stack_data', 'pygments', 'pygments.formatters._mapping', 'pygments.plugin', 'pygments.util', 'pygments.formatters', 'pygments.styles', 'pygments.formatter', 'pygments.console', 'pygments.token', 'pygments.style', 'pygments.formatters.terminal256', 'bdb', 'IPython.utils', 'IPython.utils.ipstruct', 'IPython.utils.coloransi', 'IPython.utils.colorable', 'IPython.utils.PyColorize', 'locale', 'IPython.utils.encoding', 'IPython.utils.py3compat', 'IPython.core.excolors', 'cmd', 'codeop', 'code', 'pdb', 'IPython.core.debugger', 'IPython.core.display_trap', 'shlex', 'IPython.utils._process_common', 'IPython.utils._process_win32', 'IPython.utils.process', 'IPython.utils.decorators', 'IPython.utils.path', 'IPython.utils.terminal', 'IPython.core.ultratb', 'IPython.utils._sysinfo', 'IPython.utils.sysinfo', 'IPython.core.crashhandler', 'IPython.utils.importstring', 'IPython.paths', 'IPython.core.profiledir', 'IPython.core.application', 'IPython.terminal', '_hashlib', '_blake2', 'hashlib', 'IPython.core.compilerop', 'IPython.core.error', 'IPython.utils.text', 'IPython.core.magic_arguments', 'getopt', 'IPython.core.display_functions', 'mimetypes', 'IPython.testing', 'IPython.testing.skipdoctest', 'IPython.core.display', 'IPython.lib', 'IPython.lib.display', 'IPython.display', 'IPython.utils.data', 'IPython.core.page', 'IPython.lib.pretty', 'IPython.utils.openpy', 'IPython.utils.dir2', 'IPython.utils.wildcard', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.lexers', 'pygments.filter', 'pygments.filters', 'pygments.regexopt', 'pygments.lexer', 'pygments.unistring', 'pygments.lexers.python', 'pygments.formatters.html', 'IPython.core.oinspect', 'IPython.core.inputtransformer2', 'IPython.core.magic', 'pickleshare', 'IPython.core.hooks', 'IPython.core.autocall', 'IPython.core.macro', 'IPython.core.splitinput', 'IPython.core.prefilter', 'IPython.core.alias', 'IPython.core.builtin_trap', 'IPython.core.displayhook', 'IPython.core.displaypub', 'backcall.backcall', 'backcall', 'IPython.core.events', 'IPython.core.extensions', 'decorator', 'IPython.utils.sentinel', 'IPython.core.formatters', '_sqlite3', 'sqlite3.dbapi2', 'sqlite3', 'IPython.core.history', 'IPython.core.logger', 'IPython.core.payload', 'IPython.core.usage', 'IPython.utils.capture', 'IPython.utils.io', 'IPython.utils.strdispatch', 'IPython.utils.syspathcontext', 'IPython.core.async_helpers', 'IPython.core.interactiveshell', 'prompt_toolkit.application.current', 'prompt_toolkit.eventloop.utils', 'prompt_toolkit.eventloop.async_generator', 'wcwidth.table_wide', 'wcwidth.table_zero', 'wcwidth.unicode_versions', 'wcwidth.wcwidth', 'wcwidth', 'prompt_toolkit.utils', 'prompt_toolkit.eventloop.inputhook', 'prompt_toolkit.eventloop', 'prompt_toolkit.application.run_in_terminal', 'prompt_toolkit.selection', 'prompt_toolkit.clipboard.base', 'prompt_toolkit.clipboard.in_memory', 'prompt_toolkit.clipboard', 'prompt_toolkit.cache', 'prompt_toolkit.enums', 'prompt_toolkit.filters.base', 'prompt_toolkit.filters.app', 'prompt_toolkit.filters.cli', 'prompt_toolkit.filters.utils', 'prompt_toolkit.filters', 'prompt_toolkit.document', 'prompt_toolkit.auto_suggest', 'prompt_toolkit.data_structures', 'prompt_toolkit.styles.base', 'prompt_toolkit.styles.named_colors', 'prompt_toolkit.styles.style', 'prompt_toolkit.styles.defaults', 'prompt_toolkit.styles.pygments', 'colorsys', 'prompt_toolkit.styles.style_transformation', 'prompt_toolkit.styles', 'prompt_toolkit.output.color_depth', 'prompt_toolkit.output.base', 'prompt_toolkit.output.defaults', 'prompt_toolkit.output', 'prompt_toolkit.output.vt100', 'prompt_toolkit.mouse_events', 'prompt_toolkit.formatted_text.base', 'prompt_toolkit.formatted_text.ansi', 'xml', 'xml.dom.domreg', 'xml.dom', 'xml.dom.minicompat', 'xml.dom.NodeFilter', 'xml.dom.xmlbuilder', 'xml.dom.minidom', 'prompt_toolkit.formatted_text.html', 'prompt_toolkit.formatted_text.pygments', 'prompt_toolkit.formatted_text.utils', 'prompt_toolkit.formatted_text', 'prompt_toolkit.completion.base', 'prompt_toolkit.completion.deduplicate', 'prompt_toolkit.completion.filesystem', 'prompt_toolkit.completion.word_completer', 'prompt_toolkit.completion.fuzzy_completer', 'prompt_toolkit.completion.nested', 'prompt_toolkit.completion', 'prompt_toolkit.history', 'prompt_toolkit.keys', 'prompt_toolkit.key_binding.key_bindings', 'prompt_toolkit.key_binding.key_processor', 'prompt_toolkit.key_binding', 'prompt_toolkit.key_binding.vi_state', 'prompt_toolkit.search', 'prompt_toolkit.validation', 'prompt_toolkit.buffer', 'prompt_toolkit.input.base', 'prompt_toolkit.input.defaults', 'prompt_toolkit.input', 'prompt_toolkit.input.typeahead', 'prompt_toolkit.key_binding.bindings', 'prompt_toolkit.key_binding.bindings.scroll', 'prompt_toolkit.key_binding.bindings.page_navigation', 'prompt_toolkit.lexers.base', 'prompt_toolkit.lexers.pygments', 'prompt_toolkit.lexers', 'prompt_toolkit.layout.utils', 'prompt_toolkit.layout.processors', 'prompt_toolkit.layout.controls', 'prompt_toolkit.layout.dimension', 'prompt_toolkit.layout.margins', 'prompt_toolkit.layout.mouse_handlers', 'prompt_toolkit.layout.screen', 'prompt_toolkit.layout.containers', 'prompt_toolkit.layout.layout', 'prompt_toolkit.layout.menus', 'prompt_toolkit.layout.scrollable_pane', 'prompt_toolkit.layout', 'prompt_toolkit.key_binding.bindings.completion', 'prompt_toolkit.key_binding.bindings.named_commands', 'prompt_toolkit.key_binding.bindings.basic', 'prompt_toolkit.key_binding.bindings.cpr', 'prompt_toolkit.key_binding.bindings.emacs', 'prompt_toolkit.key_binding.bindings.mouse', 'prompt_toolkit.input.ansi_escape_sequences', 'prompt_toolkit.input.vt100_parser', 'prompt_toolkit.key_binding.digraphs', 'prompt_toolkit.key_binding.bindings.vi', 'prompt_toolkit.key_binding.defaults', 'prompt_toolkit.key_binding.emacs_state', 'prompt_toolkit.layout.dummy', 'prompt_toolkit.renderer', 'prompt_toolkit.application.application', 'prompt_toolkit.application.dummy', 'prompt_toolkit.application', 'prompt_toolkit.key_binding.bindings.focus', 'prompt_toolkit.widgets.toolbars', 'prompt_toolkit.widgets.base', 'prompt_toolkit.widgets.dialogs', 'prompt_toolkit.widgets.menus', 'prompt_toolkit.widgets', 'prompt_toolkit.shortcuts.dialogs', 'prompt_toolkit.shortcuts.progress_bar.formatters', 'prompt_toolkit.shortcuts.progress_bar.base', 'prompt_toolkit.shortcuts.progress_bar', 'prompt_toolkit.key_binding.bindings.auto_suggest', 'prompt_toolkit.key_binding.bindings.open_in_editor', 'prompt_toolkit.shortcuts.prompt', 'prompt_toolkit.shortcuts.utils', 'prompt_toolkit.shortcuts', 'prompt_toolkit', 'prompt_toolkit.patch_stdout', 'unicodedata', 'IPython.core.latex_symbols', 'IPython.utils.generics', 'parso.utils', 'parso.tree', 'parso.python', 'parso.python.token', 'parso.python.tokenize', 'parso.pgen2.grammar_parser', 'parso.pgen2.generator', 'parso.pgen2', 'parso.parser', 'parso._compatibility', 'difflib', 'parso.python.prefix', 'parso.python.tree', 'parso.python.parser', 'parso.python.diff', 'gc', 'parso.cache', 'parso.normalizer', 'parso.python.errors', 'parso.python.pep8', 'parso.file_io', 'parso.grammar', 'parso', 'jedi.parser_utils', 'jedi.debug', 'jedi.settings', 'jedi.cache', 'jedi.file_io', 'jedi.inference.cache', 'jedi.inference.helpers', 'jedi.inference.utils', 'jedi.inference.base_value', 'jedi.inference.sys_path', 'jedi.inference.recursion', 'jedi.inference.flow_analysis', 'jedi.common', 'jedi.inference.lazy_value', 'jedi.inference.docstrings', 'jedi.plugins', 'jedi.inference.names', 'jedi.inference.filters', 'jedi.inference.compiled.getattr_static', 'jedi.inference.compiled.access', 'jedi.inference.signature', 'jedi.inference.context', 'jedi.inference.compiled.value', 'jedi.inference.compiled', 'jedi.inference.analysis', 'jedi.inference.gradual', 'jedi.inference.value.module', 'jedi.inference.value.dynamic_arrays', 'jedi.inference.value.iterable', 'jedi.inference.arguments', 'jedi.inference.parser_cache', 'jedi.inference.gradual.generics', 'jedi.inference.value.function', 'jedi.inference.value.klass', 'jedi.inference.value.instance', 'jedi.inference.value', 'jedi.inference.gradual.base', 'jedi.inference.gradual.type_var', 'jedi.inference.gradual.typing', 'jedi.inference.gradual.stub_value', 'jedi.inference.gradual.typeshed', 'jedi._compatibility', 'zipfile', 'jedi.inference.compiled.subprocess.functions', 'jedi.api.exceptions', 'jedi.inference.compiled.subprocess', 'jedi.inference.imports', 'jedi.inference.param', 'jedi.inference.gradual.annotation', 'jedi.inference.value.decorator', 'jedi.inference.syntax_tree', 'jedi.inference', 'jedi.inference.gradual.conversion', 'jedi.inference.compiled.mixed', 'pydoc_data', 'pydoc_data.topics', 'jedi.api.keywords', 'jedi.api.completion_cache', 'jedi.api.helpers', 'jedi.api.classes', 'jedi.api.interpreter', 'jedi.api.strings', 'jedi.api.file_name', 'jedi.inference.docstring_utils', 'jedi.api.completion', 'filecmp', 'jedi.api.environment', 'jedi.inference.references', 'jedi.api.project', 'jedi.api.errors', 'jedi.api.refactoring', 'jedi.api.refactoring.extract', 'jedi.inference.gradual.utils', 'jedi.api', 'jedi.plugins.stdlib', 'jedi.plugins.flask', 'jedi.plugins.pytest', 'jedi.plugins.django', 'jedi.plugins.registry', 'jedi', 'IPython.core.completer', 'IPython.terminal.ptutils', 'IPython.lib.clipboard', 'IPython.terminal.shortcuts', 'concurrent.futures.thread', 'IPython.terminal.debugger', 'IPython.terminal.magics', 'IPython.terminal.pt_inputhooks', 'IPython.terminal.prompts', 'IPython.terminal.interactiveshell', 'IPython.core.magics.auto', 'IPython.core.magics.basic', 'email', 'http', 'email.errors', 'email.quoprimime', 'email.base64mime', 'quopri', 'email.encoders', 'email.charset', 'email.header', 'calendar', 'email._parseaddr', 'email.utils', 'email._policybase', 'email.feedparser', 'email.parser', 'uu', 'email._encoded_words', 'email.iterators', 'email.message', 'http.client', 'urllib.response', 'urllib.error', 'nturl2path', 'urllib.request', 'IPython.utils.contexts', 'IPython.core.magics.code', 'IPython.core.magics.config', 'IPython.core.magics.display', '_lsprof', 'profile', 'cProfile', 'dataclasses', 'pstats', 'timeit', 'IPython.utils.module_paths', 'IPython.utils.timing', 'IPython.core.magics.execution', 'IPython.core.magics.extension', 'IPython.core.magics.history', 'IPython.core.magics.logging', 'IPython.core.magics.namespace', 'IPython.core.magics.osm', 'IPython.core.magics.packaging', 'IPython.core.pylabtools', 'IPython.core.magics.pylab', 'IPython.core.magics.script', 'IPython.core.magics', 'IPython.core.shellapp', 'IPython.extensions', 'IPython.extensions.storemagic', 'IPython.terminal.ipapp', 'IPython.terminal.embed', 'IPython.utils.frame', 'IPython', 'imp', 'hmac', 'dateutil._version', 'dateutil', 'dateutil._common', 'dateutil.relativedelta', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.win', 'dateutil.tz.tz', 'dateutil.tz', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', '_strptime', 'jupyter_client.jsonutil', 'jupyter_client.adapter', 'jupyter_client.session', 'ipykernel.iostream', 'ipykernel.control', 'ipykernel.heartbeat', 'IPython.utils.tokenutil', 'psutil._common', 'psutil._compat', 'psutil._psutil_windows', 'psutil._pswindows', 'psutil', 'tornado.locks', 'tornado.queues', 'ipykernel.jsonutil', 'ipykernel.kernelbase', 'ipykernel.comm.comm', 'ipykernel.comm.manager', 'ipykernel.comm', 'IPython.core.payloadpage', 'ipykernel.displayhook', 'ipykernel.zmqshell', 'setuptools._distutils', 'distutils.debug', 'distutils.errors', 'distutils.fancy_getopt', 'distutils.dep_util', 'distutils.log', 'distutils.spawn', 'distutils.py35compat', 'distutils.util', 'distutils.dist', 'distutils.dir_util', 'distutils.file_util', 'distutils.archive_util', 'distutils.cmd', 'configparser', 'distutils.config', 'distutils.extension', 'distutils.core', '_distutils_hack.override', 'setuptools._deprecation_warning', 'xml.parsers', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'xml.parsers.expat', 'plistlib', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources._vendor.jaraco', 'pkg_resources.extern.jaraco', 'importlib._common', 'importlib.resources', 'pkg_resources._vendor.more_itertools.recipes', 'pkg_resources._vendor.more_itertools.more', 'pkg_resources._vendor.more_itertools', 'pkg_resources.extern.more_itertools', 'pkg_resources.extern.jaraco.functools', 'pkg_resources.extern.jaraco.context', 'pkg_resources.extern.jaraco.text', 'win32api', '_win32sysloader', 'pywintypes', 'pythoncom', 'win32com.gen_py', 'win32com', 'win32com.shell', 'pkg_resources._vendor.appdirs', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources._vendor.packaging', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.version', 'pkg_resources._vendor.packaging._manylinux', 'pkg_resources._vendor.packaging._musllinux', 'pkg_resources.extern.packaging.tags', 'pkg_resources.extern.packaging.utils', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources._vendor.pyparsing', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.packaging.markers', 'pkg_resources.extern.packaging.requirements', 'pkg_resources', 'setuptools.version', 'distutils.filelist', 'setuptools.monkey', 'setuptools.extension', 'distutils.command', 'setuptools.extern', 'setuptools._vendor', 'setuptools._vendor.packaging.__about__', 'setuptools._vendor.packaging', 'setuptools.extern.packaging', 'setuptools._vendor.ordered_set', 'setuptools.extern.ordered_set', 'setuptools._vendor.more_itertools.recipes', 'setuptools._vendor.more_itertools.more', 'setuptools._vendor.more_itertools', 'setuptools.extern.more_itertools', 'setuptools._vendor.pyparsing', 'setuptools.extern.pyparsing', 'setuptools._vendor.packaging._manylinux', 'setuptools._vendor.packaging._musllinux', 'setuptools.extern.packaging.tags', 'setuptools.extern.packaging._structures', 'setuptools.extern.packaging.version', 'setuptools.extern.packaging.utils', 'setuptools.extern.packaging.specifiers', 'setuptools.extern.packaging.markers', 'setuptools.extern.packaging.requirements', 'setuptools._vendor.jaraco', 'setuptools.extern.jaraco', 'setuptools.extern.jaraco.context', 'setuptools.extern.jaraco.functools', '_csv', 'csv', 'setuptools._vendor.zipp', 'setuptools._vendor.importlib_metadata._functools', 'setuptools._vendor.importlib_metadata._text', 'setuptools._vendor.importlib_metadata._adapters', 'setuptools._vendor.importlib_metadata._compat', 'setuptools._vendor.importlib_metadata._meta', 'setuptools._vendor.importlib_metadata._collections', 'setuptools._vendor.importlib_metadata._itertools', 'setuptools._vendor.importlib_metadata', 'setuptools.extern.importlib_metadata', 'setuptools._vendor.nspektr._compat', 'setuptools._vendor.nspektr', 'setuptools.extern.nspektr', 'zipp', 'importlib_metadata._functools', 'importlib_metadata._text', 'importlib_metadata._adapters', 'importlib_metadata._compat', 'importlib_metadata._meta', 'importlib_metadata._collections', 'importlib_metadata._itertools', 'importlib_metadata', 'setuptools._importlib', 'distutils.command.bdist', 'setuptools.command', 'setuptools.windows_support', 'setuptools.config.expand', 'setuptools.config.setupcfg', 'setuptools.config', 'setuptools.errors', 'email._header_value_parser', 'email.headerregistry', 'setuptools.config._apply_pyprojecttoml', 'setuptools.config.pyprojecttoml', 'setuptools.discovery', 'setuptools.extern.jaraco.text', 'setuptools._reqs', 'setuptools._itertools', 'setuptools._entry_points', 'setuptools.dist', 'setuptools.py34compat', 'setuptools._imp', 'setuptools.depends', 'setuptools.logging', 'distutils.ccompiler', 'distutils.msvc9compiler', 'setuptools.msvc', 'unittest.util', 'unittest.result', 'unittest.case', 'unittest.suite', 'unittest.loader', 'unittest.signals', 'unittest.runner', 'unittest.main', 'unittest', 'unittest.mock', 'distutils._msvccompiler', 'setuptools', 'distutils', 'distutils.version', 'ipykernel.eventloops', 'ipykernel.compiler', 'debugpy._version', 'debugpy.common', 'debugpy.common.json', 'debugpy.common.fmt', 'debugpy.common.compat', 'debugpy', 'debugpy._vendored._util', 'debugpy._vendored', '_pydevd_bundle', 'encodings.ascii', 'stringprep', 'encodings.idna', '_pydevd_bundle.pydevd_vm_type', '_pydev_imps', 'xmlrpc', 'gzip', 'xmlrpc.client', 'socketserver', 'http.server', 'xmlrpc.server', '_pydev_imps._pydev_saved_modules', '_pydevd_bundle.pydevd_constants', '_pydev_bundle', '_pydev_runfiles', '_pydevd_frame_eval', 'pydev_ipython', 'pydevd_concurrency_analyser', 'pydevd_plugins', '_pydev_bundle.pydev_log', '_pydev_bundle._pydev_filesystem_encoding', '_pydevd_bundle.pydevd_comm_constants', 'pydevd_file_utils', '_pydev_imps._pydev_execfile', '_pydevd_bundle.pydevd_exec2', '_pydev_bundle.pydev_imports', '_pydev_bundle.pydev_is_thread_alive', '_pydev_bundle.pydev_override', 'pydevd_plugins.extensions', '_pydevd_bundle.pydevd_extension_utils', '_pydevd_bundle.pydevd_frame_utils', '_pydevd_bundle.pydevd_filtering', '_pydevd_bundle.pydevd_io', '_pydevd_bundle.pydevd_utils', '_pydev_bundle._pydev_tipper_common', '_pydev_bundle._pydev_imports_tipper', '_pydev_bundle._pydev_calltip_util', '_pydevd_bundle.pydevd_safe_repr', '_pydevd_bundle.pydevd_resolver', '_pydevd_bundle.pydevd_extension_api', '_pydevd_bundle.pydevd_xml', '_pydevd_bundle.pydevd_dont_trace', '_pydevd_frame_eval.vendored', '_pydevd_frame_eval.vendored.bytecode.flags', '_pydevd_frame_eval.vendored.bytecode.instr', '_pydevd_frame_eval.vendored.bytecode.bytecode', '_pydevd_frame_eval.vendored.bytecode.concrete', '_pydevd_frame_eval.vendored.bytecode.cfg', '_pydevd_frame_eval.vendored.bytecode', '_pydevd_bundle.pydevd_bytecode_utils', '_pydevd_bundle.pydevd_cython', '_pydevd_bundle.pydevd_cython_wrapper', '_pydevd_bundle.pydevd_additional_thread_info', '_pydevd_bundle.pydevd_thread_lifecycle', '_pydevd_bundle.pydevd_save_locals', '_pydevd_bundle.pydevd_defaults', '_pydev_bundle.pydev_monkey', 'pydevd_tracing', '_pydevd_bundle.pydevd_daemon_thread', '_pydevd_bundle.pydevd_timeout', '_pydevd_bundle.pydevd_vars', '_pydev_bundle.pydev_console_utils', '_pydevd_bundle.pydevd_import_class', '_pydevd_bundle.pydevd_breakpoints', '_pydevd_bundle.pydevd_custom_frames', '_pydevd_bundle.pydevd_dont_trace_files', '_pydevd_bundle.pydevd_net_command', '_pydev_bundle.pydev_umd', 'pydevconsole', '_pydev_bundle._pydev_completer', '_pydevd_bundle.pydevd_net_command_factory_xml', '_pydevd_bundle.pydevd_frame', '_pydevd_bundle.pydevd_additional_thread_info_regular', '_pydevd_bundle.pydevd_trace_dispatch', '_pydevd_frame_eval.pydevd_frame_eval_main', '_pydevd_bundle.pydevd_source_mapping', 'pydevd_concurrency_analyser.pydevd_thread_wrappers', 'pydevd_concurrency_analyser.pydevd_concurrency_logger', '_pydevd_bundle._debug_adapter', '_pydevd_bundle._debug_adapter.pydevd_schema_log', '_pydevd_bundle._debug_adapter.pydevd_base_schema', '_pydevd_bundle._debug_adapter.pydevd_schema', '_pydevd_bundle.pydevd_reload', '_pydev_bundle.fsnotify', '_pydevd_bundle.pydevd_console', '_pydevd_bundle.pydevd_comm', '_pydevd_bundle.pydevd_net_command_factory_json', '_pydevd_bundle.pydevd_collect_bytecode_info', '_pydevd_bundle.pydevd_api', '_pydevd_bundle.pydevd_json_debug_options', '_pydevd_bundle.pydevd_process_net_command_json', '_pydevd_bundle.pydevd_traceproperty', '_pydevd_bundle.pydevd_process_net_command', '_pydevd_bundle.pydevd_suspended_frames', '_pydevd_bundle.pydevd_trace_api', 'pydevd_plugins.django_debug', 'pydevd_plugins.jinja2_debug', '_pydevd_bundle.pydevd_plugin_utils', 'pydevd_plugins.extensions.types', 'pydevd_plugins.extensions.types.pydevd_helpers', 'pydevd_plugins.extensions.types.pydevd_plugin_numpy_types', 'pydevd_plugins.extensions.types.pydevd_plugins_django_form_str', 'pydevd', 'debugpy._vendored.force_pydevd', 'debugpy.server', 'debugpy.adapter', 'debugpy.common.timestamp', 'debugpy.common.util', 'debugpy.common.log', 'debugpy.common.sockets', 'debugpy.server.api', 'ipykernel.debugger', 'ipykernel.ipkernel', 'ipykernel.parentpoller', 'ipykernel.kernelapp', 'win32security', 'ntsecuritycon', 'faulthandler', 'IPython.core.completerlib', 'logging.config', 'pythonjsonlogger', 'pythonjsonlogger.jsonlogger', 'daiquiri.types', 'daiquiri.formatter', 'daiquiri.handlers', 'daiquiri.output', 'daiquiri', 'jupyter_require.__about__', 'csscompressor', 'jupyter_require.core', 'jupyter_require.notebook', 'jupyter_require', 'jupyter_nbutils.__about__', 'jupyter_nbutils.config', 'jupyter_nbutils.utils', 'jupyter_nbutils', 'jupyter_require.magic', 'numpy._globals', 'numpy.__config__', 'numpy._distributor_init', 'numpy._version', 'numpy.version', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core._asarray', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core._machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.stride_tricks', 'numpy.lib.twodim_base', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', '_cython_0_29_30', 'numpy.random._common', 'secrets', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'pytz', 'pandas._typing', '_cython_0_29_28', 'pandas._libs.tslibs.dtypes', 'pandas._libs.tslibs.base', 'pandas._libs.tslibs.np_datetime', 'pandas._libs.tslibs.nattype', 'pandas._libs.tslibs.timezones', 'pandas._libs.tslibs.ccalendar', 'pandas._libs.tslibs.tzconversion', 'pandas._config.config', 'pandas._config.dates', 'pandas._config.display', 'pandas._config', 'pandas._config.localization', 'pandas._libs.tslibs.strptime', 'pandas._libs.tslibs.fields', 'pandas._libs.tslibs.timedeltas', 'pandas._libs.tslibs.timestamps', 'dateutil.easter', 'pandas._libs.properties', 'pandas._libs.tslibs.offsets', 'pandas._libs.tslibs.parsing', 'pandas._libs.tslibs.conversion', 'pandas._libs.tslibs.period', 'pandas._libs.tslibs.vectorized', 'pandas._libs.tslibs', 'pandas._libs.ops_dispatch', 'pandas._libs.missing', 'pandas._libs.hashtable', 'pandas._libs.algos', 'pandas._libs.interval', 'pandas._libs', 'pandas.util._decorators', 'pandas.core', 'pandas.core.util', 'pandas._libs.tslib', 'pandas._libs.lib', 'pandas._libs.hashing', 'pandas.core.dtypes', 'pandas.util._exceptions', 'pandas.errors', 'pandas.core.dtypes.generic', 'pandas.core.dtypes.base', 'pandas.core.dtypes.inference', 'pandas.core.dtypes.dtypes', 'pandas.core.dtypes.common', 'pandas.core.util.hashing', 'pandas.util', 'pandas.util.version', 'pandas.compat.numpy', 'pandas.compat.pyarrow', 'pandas.compat', 'pandas.core.config_init', 'pandas.core.dtypes.missing', 'pandas.util._validators', 'pandas.core.dtypes.cast', 'pandas.core.dtypes.concat', 'pandas.core.array_algos', 'pandas.core.common', 'pandas.core.construction', 'pandas.core.array_algos.take', 'pandas.core.indexers.utils', 'pandas.core.indexers', 'pandas.core.algorithms', 'pandas.compat.numpy.function', 'pandas.core.roperator', 'pandas._libs.ops', 'pandas.core.computation', 'pandas.compat._optional', 'numexpr.interpreter', 'packaging.__about__', 'packaging', 'packaging._structures', 'packaging.version', 'numexpr.expressions', 'numexpr.utils', 'numexpr.necompiler', 'numexpr.version', 'numexpr', 'pandas.core.computation.check', 'pandas.core.computation.expressions', 'pandas.core.ops.missing', 'pandas.core.ops.dispatch', 'pandas.core.ops.invalid', 'pandas.core.ops.array_ops', 'pandas.core.ops.common', 'pandas.core.ops.docstrings', 'pandas.core.ops.mask_ops', 'pandas.core.ops.methods', 'pandas.core.ops', 'pandas.core.arraylike', 'pandas.core.missing', 'pandas.core.array_algos.quantile', 'pandas.core.sorting', 'pandas.core.arrays.base', 'bottleneck.benchmark', 'bottleneck.benchmark.autotimeit', 'bottleneck.benchmark.bench', 'bottleneck.benchmark.bench_detailed', 'bottleneck.tests', 'bottleneck.tests.util', 'bottleneck.slow.reduce', 'bottleneck.slow.nonreduce', 'bottleneck.slow.nonreduce_axis', 'bottleneck.slow.move', 'bottleneck.slow', 'bottleneck._pytesttester', 'bottleneck.move', 'bottleneck.nonreduce', 'bottleneck.nonreduce_axis', 'bottleneck.reduce', 'bottleneck._version', 'bottleneck', 'pandas.core.nanops', 'pandas.core.array_algos.masked_reductions', 'pandas.core.arrays.masked', 'pandas.core.arrays.boolean', 'pandas._libs.arrays', 'pandas.core.accessor', 'pandas.core.array_algos.transforms', 'pandas.core.arrays._mixins', 'pandas.core.base', 'pandas.core.strings.accessor', 'pandas.core.strings.base', 'pandas.core.strings', 'pandas.core.strings.object_array', 'pandas.io', 'pandas.io.formats', 'pandas.io.formats.console', 'pandas.core.arrays.categorical', 'pandas.tseries', 'pandas.tseries.frequencies', 'pandas.core.arrays.datetimelike', 'pandas.core.arrays._ranges', 'pandas.core.arrays.numeric', 'pandas.core.tools', 'pandas.core.tools.numeric', 'pandas.core.arrays.integer', 'pandas.tseries.offsets', 'pandas.core.arrays.datetimes', 'pandas.core.arrays.floating', 'pandas.core.indexes', 'pandas._libs.index', 'pandas._libs.join', 'pandas.core.array_algos.putmask', 'pandas._libs.sparse', 'pandas.core.arrays.sparse.dtype', 'pandas.io.formats.printing', 'pandas.core.arrays.sparse.array', 'pandas.core.arrays.sparse.accessor', 'pandas.core.arrays.sparse', 'pandas.core.indexes.frozen', 'pandas.core.indexes.base', 'pandas.core.arrays.interval', 'pandas.core.arrays.numpy_', 'pandas.core.arrays.period', 'pandas.core.arrays.string_', 'pandas.core.arrays.string_arrow', 'pandas.core.arrays.timedeltas', 'pandas.core.arrays', 'pandas.core.flags', 'pandas._libs.reduction', 'pandas.core.apply', 'pandas._libs.indexing', 'pandas.core.indexes.extension', 'pandas.core.indexes.category', 'pandas.core.indexes.numeric', 'pandas.core.indexes.range', 'pandas.core.tools.timedeltas', 'pandas.core.indexes.datetimelike', 'pandas.core.tools.times', 'pandas.core.indexes.datetimes', 'pandas.core.indexes.multi', 'pandas.core.indexes.timedeltas', 'pandas.core.indexes.interval', 'pandas.core.indexes.period', 'pandas.core.indexes.api', 'pandas.core.indexing', 'pandas.core.array_algos.replace', 'pandas.core.reshape', 'pandas._libs.internals', 'pandas._libs.writers', 'pandas.core.internals.blocks', 'pandas.core.internals.api', 'pandas.core.internals.base', 'pandas.core.internals.array_manager', 'pandas.core.internals.ops', 'pandas.core.internals.managers', 'pandas.core.internals.concat', 'pandas.core.internals', 'pandas.core.reshape.concat', 'mmap', 'pandas.core.shared_docs', 'pandas.io.common', 'pandas.io.formats.format', 'pandas.core.describe', 'pandas.core.internals.construction', 'pandas.core.sample', 'pandas._libs.window', 'pandas._libs.window.aggregations', 'pandas._libs.window.indexers', 'pandas.core.indexers.objects', 'pandas.core.util.numba_', 'pandas.core.window.common', 'pandas.core.window.doc', 'pandas.core.window.numba_', 'pandas.core.window.online', 'pandas.core._numba', 'pandas.core._numba.executor', 'pandas.core.window.rolling', 'pandas.core.window.ewm', 'pandas.core.window.expanding', 'pandas.core.window', 'pandas.core.generic', 'pandas.core.reshape.util', 'pandas.core.reshape.melt', 'pandas._libs.reshape', 'pandas.core.indexes.accessors', 'pandas.arrays', 'pandas.core.tools.datetimes', 'pandas.io.formats.info', 'pandas.plotting._core', 'pandas.plotting._misc', 'pandas.plotting', 'pandas.core.series', 'pandas.core.frame', 'pandas.core.groupby.base', 'pandas._libs.groupby', 'pandas.core.groupby.numba_', 'pandas.core.groupby.categorical', 'pandas.core.groupby.grouper', 'pandas.core.groupby.ops', 'pandas.core.groupby.indexing', 'pandas.core.groupby.groupby', 'pandas.core.groupby.generic', 'pandas.core.groupby', 'pandas.core.api', 'pandas.tseries.api', 'pandas.core.computation.common', 'pandas.core.computation.align', 'pandas.compat.chainmap', 'pandas.core.computation.scope', 'pandas.core.computation.ops', 'pandas.core.computation.parsing', 'pandas.core.computation.expr', 'pandas.core.computation.engines', 'pandas.core.computation.eval', 'pandas.core.computation.api', 'pandas.core.reshape.merge', 'pandas.core.reshape.pivot', 'pandas.core.reshape.reshape', 'pandas.core.reshape.tile', 'pandas.core.reshape.api', 'pandas.api.extensions', 'pandas.api.indexers', 'pandas.core.dtypes.api', 'pandas.api.types', 'pandas.api', 'pandas._testing._random', 'pandas._testing.contexts', 'pandas._testing._io', 'pandas._testing._warnings', 'cmath', 'pandas._libs.testing', 'pandas._testing.asserters', 'pandas._testing.compat', 'pandas._testing', 'pandas.testing', 'pandas.util._print_versions', 'pandas.io.clipboards', 'pandas._libs.parsers', 'pandas.io.excel._util', 'pandas.io.date_converters', 'pandas.io.parsers.base_parser', 'pandas.io.parsers.arrow_parser_wrapper', 'pandas.io.parsers.c_parser_wrapper', 'pandas.io.parsers.python_parser', 'pandas.io.parsers.readers', 'pandas.io.parsers', 'pandas.io.excel._odfreader', 'pandas.io.excel._openpyxl', 'pandas.io.excel._pyxlsb', 'pandas.io.excel._xlrd', 'pandas.io.excel._base', 'pandas._libs.json', 'pandas.io.formats._color_data', 'pandas.io.formats.css', 'pandas.io.formats.excel', 'pandas.io.excel._odswriter', 'pandas.io.excel._xlsxwriter', 'pandas.io.excel._xlwt', 'pandas.io.excel', 'pandas.io.feather_format', 'pandas.io.gbq', 'pandas.io.html', 'pandas.io.json._normalize', 'pandas.io.json._table_schema', 'pandas.io.json._json', 'pandas.io.json', 'pandas.io.orc', 'pandas.io.parquet', 'pandas.compat.pickle_compat', 'pandas.io.pickle', 'pandas.core.computation.pytables', 'pandas.io.pytables', 'pandas.io.sas.sasreader', 'pandas.io.sas', 'pandas.io.spss', 'pandas.io.sql', 'pandas.io.stata', 'pandas.io.xml', 'pandas.io.api', 'pandas.util._tester', 'pandas._version', 'pandas', 'summarytools', 'summarytools.htmlwidgets', 'summarytools.summarytools', 'matplotlib', 'matplotlib._api.deprecation', 'matplotlib._api', 'matplotlib._version', 'matplotlib._c_internal_utils', 'matplotlib.cbook', 'matplotlib.docstring', 'PIL._version', 'PIL', 'defusedxml.common', 'defusedxml', 'xml.etree', 'xml.etree.ElementPath', '_elementtree', 'xml.etree.ElementTree', 'defusedxml.ElementTree', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._util', 'PIL._imaging', 'cffi.lock', 'cffi.error', 'cffi.model', 'cffi.api', 'cffi', 'PIL.Image', 'PIL.ImageChops', 'PIL.ImageFile', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'PIL.ImagePalette', 'PIL.ImageSequence', 'PIL.PngImagePlugin', 'matplotlib._path', 'matplotlib.bezier', 'matplotlib.path', 'matplotlib.transforms', 'matplotlib.ticker', 'matplotlib.scale', 'matplotlib._color_data', 'matplotlib.colors', 'pyparsing.util', 'pyparsing.unicode', 'pyparsing.exceptions', 'pyparsing.actions', 'pyparsing.results', 'pyparsing.core', 'pyparsing.helpers', 'pyparsing.testing', 'pyparsing.common', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib._enums', 'cycler', 'matplotlib.rcsetup', 'matplotlib.ft2font', 'kiwisolver']
2023-04-20 18:28:20,058 [31164] DEBUG    matplotlib:275: [JupyterRequire] CACHEDIR=C:\Users\adity\.matplotlib
2023-04-20 18:28:20,063 [31164] DEBUG    matplotlib.font_manager:1439: [JupyterRequire] Using fontManager instance from C:\Users\adity\.matplotlib\fontlist-v330.json
2023-04-20 18:28:20,764 [31164] DEBUG    matplotlib.pyplot:280: [JupyterRequire] Loaded backend module://matplotlib_inline.backend_inline version unknown.
2023-04-20 18:28:20,768 [31164] DEBUG    matplotlib.pyplot:280: [JupyterRequire] Loaded backend module://matplotlib_inline.backend_inline version unknown.
2023-04-20 18:28:36,515 [31164] DEBUG    matplotlib.font_manager:1329: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2023-04-20 18:28:36,516 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:28:36,516 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:28:36,517 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,517 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2023-04-20 18:28:36,517 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2023-04-20 18:28:36,517 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:28:36,519 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:28:36,519 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:28:36,519 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,519 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:28:36,520 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,520 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:28:36,521 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,522 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,522 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,522 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:28:36,523 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:28:36,523 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,523 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,523 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2023-04-20 18:28:36,524 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,524 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,524 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:28:36,525 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:28:36,525 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:28:36,525 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,525 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,526 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:28:36,526 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:28:36,526 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,527 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,527 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,527 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:28:36,528 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,528 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:28:36,528 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,528 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,529 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2023-04-20 18:28:36,529 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLSNECB.TTF', name='Gill Sans MT Ext Condensed Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-20 18:28:36,530 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanz.ttf', name='Constantia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:28:36,530 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LEELAWAD.TTF', name='Leelawadee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,530 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\monbaiti.ttf', name='Mongolian Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,531 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-MEDIUM.TTF', name='Dubai', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-04-20 18:28:36,531 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-04-20 18:28:36,531 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FTLTLT.TTF', name='Footlight MT Light', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-20 18:28:36,533 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibril.ttf', name='Calibri', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-20 18:28:36,533 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSI.TTF', name='Goudy Old Style', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:28:36,534 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisbi.ttf', name='Segoe UI', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-20 18:28:36,534 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCCB___.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-04-20 18:28:36,534 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXD.TTF', name='Lucida Fax', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-20 18:28:36,535 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2023-04-20 18:28:36,535 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BSSYM7.TTF', name='Bookshelf Symbol 7', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,535 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAMDCN.TTF', name='Franklin Gothic Medium Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-20 18:28:36,536 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framdit.ttf', name='Franklin Gothic Medium', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:28:36,536 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSB.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:28:36,536 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-LIGHT.TTF', name='Dubai', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-20 18:28:36,537 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCC____.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-20 18:28:36,537 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_B.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:28:36,537 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COOPBL.TTF', name='Cooper Black', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,537 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNI.TTF', name='Arial', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 7.613636363636363
2023-04-20 18:28:36,538 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\INFROMAN.TTF', name='Informal Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,538 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSB.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-20 18:28:36,539 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BERNHC.TTF', name='Bernard MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-20 18:28:36,539 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEB.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-20 18:28:36,539 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCEDSCR.TTF', name='Edwardian Script ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,539 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consola.ttf', name='Consolas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,541 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,541 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\holomdl2.ttf', name='HoloLens MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,541 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COLONNA.TTF', name='Colonna MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,541 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYR.TTF', name='Agency FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,542 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRITANIC.TTF', name='Britannic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,542 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiai.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:28:36,542 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:28:36,543 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaS.ttf', name='Nirmala UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2023-04-20 18:28:36,543 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CHILLER.TTF', name='Chiller', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,544 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,544 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAB.TTF', name='Book Antiqua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:28:36,544 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothM.ttc', name='Yu Gothic', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-04-20 18:28:36,544 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG2.TTF', name='Wingdings 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,545 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Nirmala.ttf', name='Nirmala UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,545 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelUIsl.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2023-04-20 18:28:36,546 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriai.ttf', name='Cambria', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:28:36,546 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariali.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
2023-04-20 18:28:36,547 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARA.TTF', name='Garamond', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,547 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSPCL.TTF', name='MS Reference Specialty', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,547 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-REGULAR.TTF', name='Dubai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,548 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LHANDW.TTF', name='Lucida Handwriting', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:28:36,548 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:28:36,549 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comici.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:28:36,549 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTAUR.TTF', name='Centaur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,549 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEBO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-20 18:28:36,550 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ONYX.TTF', name='Onyx', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,550 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrima.ttf', name='Ebrima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,551 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFI.TTF', name='Californian FB', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:28:36,551 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERBI___.TTF', name='Perpetua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:28:36,552 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbell.ttf', name='Corbel', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-20 18:28:36,553 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILI____.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:28:36,553 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segmdl2.ttf', name='Segoe MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,554 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-BOLD.TTF', name='Dubai', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:28:36,555 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FELIXTI.TTF', name='Felix Titling', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,555 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbd.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
2023-04-20 18:28:36,555 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taileb.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:28:36,556 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeprb.ttf', name='Segoe Print', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:28:36,556 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoescb.ttf', name='Segoe Script', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:28:36,557 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITE.TTF', name='Lucida Bright', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,557 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhbd.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:28:36,557 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\times.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,558 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisb.ttf', name='Segoe UI', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-20 18:28:36,558 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSDB.TTF', name='Berlin Sans FB Demi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:28:36,558 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbi.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
2023-04-20 18:28:36,560 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesi.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:28:36,560 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADM.TTF', name='Franklin Gothic Demi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,560 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERTI.TTF', name='High Tower Text', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:28:36,561 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF-Italic.ttf', name='Sitka', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:28:36,561 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsun.ttc', name='SimSun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,561 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTI.TTF', name='Calisto MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:28:36,562 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCMI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:28:36,562 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaral.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,562 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\lucon.ttf', name='Lucida Console', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,563 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_I.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:28:36,563 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mvboli.ttf', name='MV Boli', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,563 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiab.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:28:36,564 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\l_10646.ttf', name='Lucida Sans Unicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,564 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTIBD.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:28:36,564 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNT.TTF', name='Elephant', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,565 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASMD.TTF', name='Eras Medium ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,565 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MSUIGHUR.TTF', name='Microsoft Uighur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,565 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYB.TTF', name='Agency FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:28:36,565 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MSUIGHUB.TTF', name='Microsoft Uighur', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:28:36,566 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicbd.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:28:36,566 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMIT.TTF', name='Franklin Gothic Demi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:28:36,566 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKEB.TTF', name='Rockwell Extra Bold', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
2023-04-20 18:28:36,567 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PER_____.TTF', name='Perpetua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,568 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VINERITC.TTF', name='Viner Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,568 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\marlett.ttf', name='Marlett', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-04-20 18:28:36,568 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrili.ttf', name='Calibri', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-04-20 18:28:36,569 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICBI.TTF', name='Century Gothic', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:28:36,569 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ALGER.TTF', name='Algerian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,569 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOS.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,569 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelz.ttf', name='Corbel', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:28:36,569 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILB____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:28:36,571 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUABI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:28:36,571 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\sylfaen.ttf', name='Sylfaen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,571 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriaz.ttf', name='Cambria', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:28:36,571 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanaz.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
2023-04-20 18:28:36,572 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constan.ttf', name='Constantia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,572 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTILI.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-20 18:28:36,572 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCM_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,572 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhl.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2023-04-20 18:28:36,573 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOS.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-20 18:28:36,573 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HATTEN.TTF', name='Haettenschweiler', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,573 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JOKERMAN.TTF', name='Jokerman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,574 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ENGR.TTF', name='Engravers MT', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-04-20 18:28:36,574 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARAIT.TTF', name='Garamond', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:28:36,574 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,575 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelli.ttf', name='Corbel', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-04-20 18:28:36,575 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constani.ttf', name='Constantia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:28:36,575 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIST.TTF', name='Calisto MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,576 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PARCHM.TTF', name='Parchment', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,576 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\himalaya.ttf', name='Microsoft Himalaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,576 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRADHITC.TTF', name='Bradley Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,578 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\wingding.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,578 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtextb.ttf', name='Myanmar Text', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:28:36,578 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG3.TTF', name='Wingdings 3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,579 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGSOL.TTF', name='Niagara Solid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,579 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarali.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:28:36,579 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKI.TTF', name='Rockwell', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:28:36,579 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolab.ttf', name='Consolas', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:28:36,580 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXDI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-20 18:28:36,580 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BAUHS93.TTF', name='Bauhaus 93', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,580 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisli.ttf', name='Segoe UI', style='italic', variant='normal', weight=350, stretch='normal', size='scalable')) = 11.0975
2023-04-20 18:28:36,580 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELL.TTF', name='Bell MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,582 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2023-04-20 18:28:36,582 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyi.ttf', name='Microsoft Yi Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,582 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSR.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,582 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHVIT.TTF', name='Franklin Gothic Heavy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:28:36,583 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OLDENGL.TTF', name='Old English Text MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,583 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbel.ttf', name='Corbel', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,583 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLB.TTF', name='Bell MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:28:36,584 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelaUIb.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:28:36,584 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHV.TTF', name='Franklin Gothic Heavy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,584 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OUTLOOK.TTF', name='MS Outlook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,585 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PRISTINA.TTF', name='Pristina', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,585 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERI____.TTF', name='Perpetua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:28:36,585 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtext.ttf', name='Myanmar Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,586 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSAN.TTF', name='MS Reference Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,586 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERB____.TTF', name='Perpetua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:28:36,587 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTEXTRA.TTF', name='MT Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,587 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKB.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:28:36,587 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARABD.TTF', name='Garamond', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:28:36,588 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cour.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,588 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mingliub.ttc', name='MingLiU-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,588 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICB.TTF', name='Century Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:28:36,589 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspa.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,589 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VIVALDII.TTF', name='Vivaldi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:28:36,589 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAGE.TTF', name='Rage Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:28:36,590 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-20 18:28:36,590 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2023-04-20 18:28:36,590 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MATURASC.TTF', name='Matura MT Script Capitals', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,591 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comic.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,591 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbi.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:28:36,591 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothR.ttc', name='Yu Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,592 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palai.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:28:36,592 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MOD20.TTF', name='Modern No. 20', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,592 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMCN.TTF', name='Franklin Gothic Demi Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-20 18:28:36,593 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrimabd.ttf', name='Ebrima', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:28:36,593 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\javatext.ttf', name='Javanese Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,594 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CASTELAR.TTF', name='Castellar', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,594 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSDI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-20 18:28:36,594 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelawUI.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,595 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAX.TTF', name='Lucida Fax', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,595 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunbd.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:28:36,595 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF.ttf', name='Sitka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,596 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTL.TTF', name='Copperplate Gothic Light', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,596 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
2023-04-20 18:28:36,596 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeui.ttf', name='Segoe UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,597 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Gabriola.ttf', name='Gabriola', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,597 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTBI.TTF', name='Calisto MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:28:36,598 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicz.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:28:36,598 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALN.TTF', name='Arial', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 6.613636363636363
2023-04-20 18:28:36,598 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKBI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:28:36,599 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FREESCPT.TTF', name='Freestyle Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,599 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTURY.TTF', name='Century', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,599 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaB.ttf', name='Nirmala UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:28:36,600 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSB.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:28:36,600 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSD.TTF', name='Lucida Sans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-20 18:28:36,601 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuisl.ttf', name='Segoe UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2023-04-20 18:28:36,601 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:28:36,601 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:28:36,601 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguihis.ttf', name='Segoe UI Historic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,602 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCB____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-04-20 18:28:36,602 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambria.ttc', name='Cambria', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,603 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKBI.TTF', name='Rockwell', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:28:36,603 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGENG.TTF', name='Niagara Engraved', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,603 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisym.ttf', name='Segoe UI Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,603 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inkfree.ttf', name='Ink Free', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,604 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASBD.TTF', name='Eras Bold ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,604 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILC____.TTF', name='Gill Sans MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-20 18:28:36,604 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candara.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,604 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\bahnschrift.ttf', name='Bahnschrift', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,606 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BROADW.TTF', name='Broadway', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,606 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolaz.ttf', name='Consolas', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:28:36,606 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CBI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2023-04-20 18:28:36,607 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuii.ttf', name='Segoe UI', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:28:36,607 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibli.ttf', name='Segoe UI', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2023-04-20 18:28:36,607 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEDI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-20 18:28:36,608 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucit.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:28:36,608 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BKANT.TTF', name='Book Antiqua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,608 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothL.ttc', name='Yu Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-20 18:28:36,609 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrii.ttf', name='Calibri', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:28:36,609 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CURLZ___.TTF', name='Curlz MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,609 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelb.ttf', name='Corbel', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:28:36,610 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARLRDBD.TTF', name='Arial Rounded MT Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,610 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothB.ttc', name='Yu Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:28:36,610 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASDEMI.TTF', name='Eras Demi ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,611 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
2023-04-20 18:28:36,611 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANS.TTF', name='Lucida Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,611 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariblk.ttf', name='Arial', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 6.888636363636364
2023-04-20 18:28:36,611 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCKRIST.TTF', name='Kristen ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,612 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\KUNSTLER.TTF', name='Kunstler Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,612 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanb.ttf', name='Constantia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:28:36,612 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PAPYRUS.TTF', name='Papyrus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,614 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JUICE___.TTF', name='Juice ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,614 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguili.ttf', name='Segoe UI', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-04-20 18:28:36,614 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:28:36,614 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarab.ttf', name='Candara', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:28:36,615 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\IMPRISHA.TTF', name='Imprint MT Shadow', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,615 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailu.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,616 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbi.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:28:36,616 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuil.ttf', name='Segoe UI', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-20 18:28:36,616 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanai.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
2023-04-20 18:28:36,617 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoepr.ttf', name='Segoe Print', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,617 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaraz.ttf', name='Candara', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:28:36,618 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNB.TTF', name='Arial', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 6.8986363636363635
2023-04-20 18:28:36,618 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspab.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:28:36,618 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,619 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCM____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-20 18:28:36,619 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARNGTON.TTF', name='Harrington', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,620 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbd.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:28:36,620 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:28:36,620 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILSANUB.TTF', name='Gill Sans Ultra Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,621 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibri.ttf', name='Calibri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,621 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiaz.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:28:36,621 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegoeIcons.ttf', name='Segoe Fluent Icons', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,622 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAGNETOB.TTF', name='Magneto', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:28:36,622 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICI.TTF', name='Century Gothic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:28:36,622 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCBLKAD.TTF', name='Blackadder ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,623 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahomabd.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:28:36,623 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugi.ttf', name='Gadugi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,623 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LCALLIG.TTF', name='Lucida Calligraphy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:28:36,624 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyh.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,624 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsunb.ttf', name='SimSun-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,624 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgun.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,625 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIL_____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,625 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VLADIMIR.TTF', name='Vladimir Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,625 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,626 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msgothic.ttc', name='MS Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,626 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRSCRIPT.TTF', name='French Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,627 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILBI___.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:28:36,627 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASLGHT.TTF', name='Eras Light ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,627 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTB.TTF', name='Calisto MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:28:36,628 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunsl.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-20 18:28:36,628 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRUSHSCI.TTF', name='Brush Script MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:28:36,628 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SNAP____.TTF', name='Snap ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,629 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuib.ttf', name='Segoe UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:28:36,629 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCBI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:28:36,629 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailub.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:28:36,630 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framd.ttf', name='Franklin Gothic Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,630 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolai.ttf', name='Consolas', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:28:36,630 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCEB.TTF', name='Tw Cen MT Condensed Extra Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-20 18:28:36,631 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\POORICH.TTF', name='Poor Richard', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,631 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDYSTO.TTF', name='Goudy Stout', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,632 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKB.TTF', name='Rockwell', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:28:36,632 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PALSCRI.TTF', name='Palace Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,632 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarai.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:28:36,633 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\micross.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,633 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LEELAWDB.TTF', name='Leelawadee', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:28:36,633 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABK.TTF', name='Franklin Gothic Book', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,634 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjh.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,634 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palabi.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:28:36,634 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAVIE.TTF', name='Ravie', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,634 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCK.TTF', name='Rockwell', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,636 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\pala.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,636 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibriz.ttf', name='Calibri', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:28:36,636 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugib.ttf', name='Gadugi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:28:36,636 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_PSTC.TTF', name='Bodoni MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-20 18:28:36,637 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENSCBK.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,637 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanab.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
2023-04-20 18:28:36,637 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LATINWD.TTF', name='Wide Latin', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
2023-04-20 18:28:36,638 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbeli.ttf', name='Corbel', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:28:36,638 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIGI.TTF', name='Gigi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,639 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITED.TTF', name='Lucida Bright', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-20 18:28:36,639 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbi.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:28:36,639 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhl.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2023-04-20 18:28:36,640 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguiemj.ttf', name='Segoe UI Emoji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,640 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OCRAEXT.TTF', name='OCR A Extended', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
2023-04-20 18:28:36,640 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebuc.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,641 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SHOWG.TTF', name='Showcard Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,641 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BASKVILL.TTF', name='Baskerville Old Face', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,641 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriab.ttf', name='Cambria', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:28:36,641 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAIAN.TTF', name='Maiandra GD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,642 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCRIPTBL.TTF', name='Script MT Bold', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:28:36,642 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLECB.TTF', name='Gloucester MT Extra Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-20 18:28:36,642 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNTI.TTF', name='Elephant', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:28:36,643 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFR.TTF', name='Californian FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,643 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHIC.TTF', name='Century Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,643 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PLAYBILL.TTF', name='Playbill', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,645 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABKIT.TTF', name='Franklin Gothic Book', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:28:36,645 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARLOWSI.TTF', name='Harlow Solid Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:28:36,645 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPE.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,646 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taile.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,646 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibl.ttf', name='Segoe UI', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2023-04-20 18:28:36,646 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNBI.TTF', name='Arial', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 7.8986363636363635
2023-04-20 18:28:36,646 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuiz.ttf', name='Segoe UI', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:28:36,647 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSBI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-20 18:28:36,647 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palab.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:28:36,647 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLI.TTF', name='Bell MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:28:36,648 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILLUBCD.TTF', name='Gill Sans Ultra Bold Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-20 18:28:36,648 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbd.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:28:36,649 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhbd.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:28:36,649 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoesc.ttf', name='Segoe Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,649 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\couri.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:28:36,650 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegUIVar.ttf', name='Segoe UI Variable', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,650 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_R.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,651 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTB.TTF', name='Copperplate Gothic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,651 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:28:36,651 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCB_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:28:36,652 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TEMPSITC.TTF', name='Tempus Sans ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,652 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MISTRAL.TTF', name='Mistral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,652 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FORTE.TTF', name='Forte', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,653 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CB.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-04-20 18:28:36,653 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbd.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:28:36,653 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STENCIL.TTF', name='Stencil', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,654 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrib.ttf', name='Calibri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:28:36,654 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERT.TTF', name='High Tower Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,654 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTCORSVA.TTF', name='Monotype Corsiva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:28:36,655 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFB.TTF', name='Californian FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:28:36,655 [31164] DEBUG    matplotlib.font_manager:1367: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
2023-04-20 18:30:51,714 [31164] DEBUG    matplotlib.font_manager:1329: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
2023-04-20 18:30:51,716 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:30:51,716 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:30:51,716 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,717 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2023-04-20 18:30:51,717 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2023-04-20 18:30:51,718 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:30:51,720 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:30:51,740 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:30:51,751 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,752 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:30:51,753 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,753 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:30:51,754 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,754 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,755 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,758 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:30:51,759 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:30:51,759 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,759 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,761 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2023-04-20 18:30:51,761 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,761 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,762 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:30:51,762 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:30:51,762 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:30:51,763 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,763 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,763 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:30:51,764 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:30:51,764 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,764 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,765 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,765 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:30:51,765 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,766 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:30:51,766 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,766 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,767 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2023-04-20 18:30:51,767 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLSNECB.TTF', name='Gill Sans MT Ext Condensed Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-20 18:30:51,768 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanz.ttf', name='Constantia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:30:51,768 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LEELAWAD.TTF', name='Leelawadee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,768 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\monbaiti.ttf', name='Mongolian Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,769 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-MEDIUM.TTF', name='Dubai', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-04-20 18:30:51,769 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-04-20 18:30:51,770 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FTLTLT.TTF', name='Footlight MT Light', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-20 18:30:51,771 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibril.ttf', name='Calibri', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-20 18:30:51,771 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSI.TTF', name='Goudy Old Style', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:30:51,771 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisbi.ttf', name='Segoe UI', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-20 18:30:51,772 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCCB___.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-04-20 18:30:51,773 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXD.TTF', name='Lucida Fax', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-20 18:30:51,773 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2023-04-20 18:30:51,773 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BSSYM7.TTF', name='Bookshelf Symbol 7', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,774 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAMDCN.TTF', name='Franklin Gothic Medium Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-20 18:30:51,774 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framdit.ttf', name='Franklin Gothic Medium', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:30:51,774 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSB.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:30:51,775 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-LIGHT.TTF', name='Dubai', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-20 18:30:51,775 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCC____.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-20 18:30:51,775 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_B.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:30:51,776 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COOPBL.TTF', name='Cooper Black', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,776 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNI.TTF', name='Arial', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 7.613636363636363
2023-04-20 18:30:51,777 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\INFROMAN.TTF', name='Informal Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,777 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSB.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-20 18:30:51,777 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BERNHC.TTF', name='Bernard MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-20 18:30:51,777 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEB.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-20 18:30:51,778 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCEDSCR.TTF', name='Edwardian Script ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,778 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consola.ttf', name='Consolas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,778 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,779 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\holomdl2.ttf', name='HoloLens MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,779 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COLONNA.TTF', name='Colonna MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,779 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYR.TTF', name='Agency FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,780 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRITANIC.TTF', name='Britannic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,780 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiai.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:30:51,780 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:30:51,781 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaS.ttf', name='Nirmala UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2023-04-20 18:30:51,781 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CHILLER.TTF', name='Chiller', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,781 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,782 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAB.TTF', name='Book Antiqua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:30:51,782 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothM.ttc', name='Yu Gothic', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-04-20 18:30:51,782 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG2.TTF', name='Wingdings 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,782 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Nirmala.ttf', name='Nirmala UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,783 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelUIsl.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2023-04-20 18:30:51,783 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriai.ttf', name='Cambria', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:30:51,783 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariali.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
2023-04-20 18:30:51,784 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARA.TTF', name='Garamond', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,784 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSPCL.TTF', name='MS Reference Specialty', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,784 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-REGULAR.TTF', name='Dubai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,785 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LHANDW.TTF', name='Lucida Handwriting', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:30:51,785 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:30:51,786 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comici.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:30:51,786 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTAUR.TTF', name='Centaur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,786 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEBO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-20 18:30:51,787 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ONYX.TTF', name='Onyx', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,787 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrima.ttf', name='Ebrima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,787 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFI.TTF', name='Californian FB', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:30:51,788 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERBI___.TTF', name='Perpetua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:30:51,788 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbell.ttf', name='Corbel', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-20 18:30:51,789 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILI____.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:30:51,789 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segmdl2.ttf', name='Segoe MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,789 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-BOLD.TTF', name='Dubai', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:30:51,790 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FELIXTI.TTF', name='Felix Titling', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,790 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbd.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
2023-04-20 18:30:51,790 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taileb.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:30:51,792 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeprb.ttf', name='Segoe Print', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:30:51,792 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoescb.ttf', name='Segoe Script', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:30:51,792 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITE.TTF', name='Lucida Bright', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,793 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhbd.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:30:51,793 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\times.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,793 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisb.ttf', name='Segoe UI', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-20 18:30:51,794 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSDB.TTF', name='Berlin Sans FB Demi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:30:51,794 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbi.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
2023-04-20 18:30:51,794 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesi.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:30:51,795 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADM.TTF', name='Franklin Gothic Demi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,795 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERTI.TTF', name='High Tower Text', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:30:51,795 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF-Italic.ttf', name='Sitka', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:30:51,796 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsun.ttc', name='SimSun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,796 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTI.TTF', name='Calisto MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:30:51,796 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCMI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:30:51,796 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaral.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,797 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\lucon.ttf', name='Lucida Console', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,797 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_I.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:30:51,798 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mvboli.ttf', name='MV Boli', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,798 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiab.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:30:51,798 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\l_10646.ttf', name='Lucida Sans Unicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,799 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTIBD.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:30:51,799 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNT.TTF', name='Elephant', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,799 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASMD.TTF', name='Eras Medium ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,799 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MSUIGHUR.TTF', name='Microsoft Uighur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,800 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYB.TTF', name='Agency FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:30:51,800 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MSUIGHUB.TTF', name='Microsoft Uighur', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:30:51,800 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicbd.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:30:51,800 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMIT.TTF', name='Franklin Gothic Demi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:30:51,800 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKEB.TTF', name='Rockwell Extra Bold', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
2023-04-20 18:30:51,802 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PER_____.TTF', name='Perpetua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,802 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VINERITC.TTF', name='Viner Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,802 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\marlett.ttf', name='Marlett', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-04-20 18:30:51,802 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrili.ttf', name='Calibri', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-04-20 18:30:51,803 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICBI.TTF', name='Century Gothic', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:30:51,803 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ALGER.TTF', name='Algerian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,804 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOS.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,804 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelz.ttf', name='Corbel', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:30:51,804 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILB____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:30:51,804 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUABI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:30:51,805 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\sylfaen.ttf', name='Sylfaen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,805 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriaz.ttf', name='Cambria', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:30:51,805 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanaz.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
2023-04-20 18:30:51,805 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constan.ttf', name='Constantia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,806 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTILI.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-20 18:30:51,806 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCM_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,806 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhl.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2023-04-20 18:30:51,806 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOS.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-20 18:30:51,808 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HATTEN.TTF', name='Haettenschweiler', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,808 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JOKERMAN.TTF', name='Jokerman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,808 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ENGR.TTF', name='Engravers MT', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-04-20 18:30:51,808 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARAIT.TTF', name='Garamond', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:30:51,809 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,809 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelli.ttf', name='Corbel', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-04-20 18:30:51,809 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constani.ttf', name='Constantia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:30:51,810 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIST.TTF', name='Calisto MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,810 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PARCHM.TTF', name='Parchment', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,810 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\himalaya.ttf', name='Microsoft Himalaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,811 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRADHITC.TTF', name='Bradley Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,811 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\wingding.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,811 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtextb.ttf', name='Myanmar Text', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:30:51,812 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG3.TTF', name='Wingdings 3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,812 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGSOL.TTF', name='Niagara Solid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,812 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarali.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:30:51,813 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKI.TTF', name='Rockwell', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:30:51,813 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolab.ttf', name='Consolas', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:30:51,813 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXDI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-20 18:30:51,814 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BAUHS93.TTF', name='Bauhaus 93', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,814 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisli.ttf', name='Segoe UI', style='italic', variant='normal', weight=350, stretch='normal', size='scalable')) = 11.0975
2023-04-20 18:30:51,814 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELL.TTF', name='Bell MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,815 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2023-04-20 18:30:51,815 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyi.ttf', name='Microsoft Yi Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,815 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSR.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,816 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHVIT.TTF', name='Franklin Gothic Heavy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:30:51,816 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OLDENGL.TTF', name='Old English Text MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,816 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbel.ttf', name='Corbel', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,817 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLB.TTF', name='Bell MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:30:51,817 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelaUIb.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:30:51,817 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHV.TTF', name='Franklin Gothic Heavy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,818 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OUTLOOK.TTF', name='MS Outlook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,818 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PRISTINA.TTF', name='Pristina', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,819 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERI____.TTF', name='Perpetua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:30:51,819 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtext.ttf', name='Myanmar Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,819 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSAN.TTF', name='MS Reference Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,820 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERB____.TTF', name='Perpetua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:30:51,820 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTEXTRA.TTF', name='MT Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,820 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKB.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:30:51,821 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARABD.TTF', name='Garamond', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:30:51,821 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cour.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,822 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mingliub.ttc', name='MingLiU-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,822 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICB.TTF', name='Century Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:30:51,822 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspa.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,823 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VIVALDII.TTF', name='Vivaldi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:30:51,823 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAGE.TTF', name='Rage Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:30:51,823 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-20 18:30:51,824 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2023-04-20 18:30:51,824 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MATURASC.TTF', name='Matura MT Script Capitals', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,825 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comic.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,825 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbi.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:30:51,825 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothR.ttc', name='Yu Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,826 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palai.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:30:51,826 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MOD20.TTF', name='Modern No. 20', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,826 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMCN.TTF', name='Franklin Gothic Demi Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-20 18:30:51,827 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrimabd.ttf', name='Ebrima', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:30:51,827 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\javatext.ttf', name='Javanese Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,828 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CASTELAR.TTF', name='Castellar', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,828 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSDI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-20 18:30:51,828 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelawUI.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,829 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAX.TTF', name='Lucida Fax', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,829 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunbd.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:30:51,829 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF.ttf', name='Sitka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,830 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTL.TTF', name='Copperplate Gothic Light', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,830 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
2023-04-20 18:30:51,831 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeui.ttf', name='Segoe UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,831 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Gabriola.ttf', name='Gabriola', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,831 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTBI.TTF', name='Calisto MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:30:51,832 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicz.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:30:51,832 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALN.TTF', name='Arial', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 6.613636363636363
2023-04-20 18:30:51,832 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKBI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:30:51,833 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FREESCPT.TTF', name='Freestyle Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,833 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTURY.TTF', name='Century', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,833 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaB.ttf', name='Nirmala UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:30:51,834 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSB.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:30:51,834 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSD.TTF', name='Lucida Sans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-20 18:30:51,834 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuisl.ttf', name='Segoe UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2023-04-20 18:30:51,835 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:30:51,835 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:30:51,836 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguihis.ttf', name='Segoe UI Historic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,836 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCB____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-04-20 18:30:51,836 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambria.ttc', name='Cambria', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,837 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKBI.TTF', name='Rockwell', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:30:51,837 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGENG.TTF', name='Niagara Engraved', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,838 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisym.ttf', name='Segoe UI Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,838 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inkfree.ttf', name='Ink Free', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,839 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASBD.TTF', name='Eras Bold ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,839 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILC____.TTF', name='Gill Sans MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-20 18:30:51,839 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candara.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,840 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\bahnschrift.ttf', name='Bahnschrift', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,840 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BROADW.TTF', name='Broadway', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,840 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolaz.ttf', name='Consolas', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:30:51,841 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CBI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2023-04-20 18:30:51,841 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuii.ttf', name='Segoe UI', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:30:51,841 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibli.ttf', name='Segoe UI', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2023-04-20 18:30:51,842 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEDI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-20 18:30:51,842 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucit.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:30:51,842 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BKANT.TTF', name='Book Antiqua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,842 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothL.ttc', name='Yu Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-20 18:30:51,844 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrii.ttf', name='Calibri', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:30:51,844 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CURLZ___.TTF', name='Curlz MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,845 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelb.ttf', name='Corbel', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:30:51,845 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARLRDBD.TTF', name='Arial Rounded MT Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,845 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothB.ttc', name='Yu Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:30:51,846 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASDEMI.TTF', name='Eras Demi ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,846 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
2023-04-20 18:30:51,846 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANS.TTF', name='Lucida Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,846 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariblk.ttf', name='Arial', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 6.888636363636364
2023-04-20 18:30:51,847 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCKRIST.TTF', name='Kristen ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,847 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\KUNSTLER.TTF', name='Kunstler Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,847 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanb.ttf', name='Constantia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:30:51,848 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PAPYRUS.TTF', name='Papyrus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,848 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JUICE___.TTF', name='Juice ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,848 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguili.ttf', name='Segoe UI', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-04-20 18:30:51,849 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:30:51,849 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarab.ttf', name='Candara', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:30:51,849 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\IMPRISHA.TTF', name='Imprint MT Shadow', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,851 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailu.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,851 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbi.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:30:51,851 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuil.ttf', name='Segoe UI', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-20 18:30:51,852 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanai.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
2023-04-20 18:30:51,852 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoepr.ttf', name='Segoe Print', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,852 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaraz.ttf', name='Candara', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:30:51,853 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNB.TTF', name='Arial', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 6.8986363636363635
2023-04-20 18:30:51,853 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspab.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:30:51,853 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,854 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCM____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-20 18:30:51,854 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARNGTON.TTF', name='Harrington', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,855 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbd.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:30:51,855 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:30:51,856 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILSANUB.TTF', name='Gill Sans Ultra Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,856 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibri.ttf', name='Calibri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,856 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiaz.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:30:51,856 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegoeIcons.ttf', name='Segoe Fluent Icons', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,857 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAGNETOB.TTF', name='Magneto', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:30:51,857 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICI.TTF', name='Century Gothic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:30:51,857 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCBLKAD.TTF', name='Blackadder ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,858 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahomabd.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:30:51,858 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugi.ttf', name='Gadugi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,858 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LCALLIG.TTF', name='Lucida Calligraphy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:30:51,859 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyh.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,859 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsunb.ttf', name='SimSun-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,859 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgun.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,860 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIL_____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,860 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VLADIMIR.TTF', name='Vladimir Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,861 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,861 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msgothic.ttc', name='MS Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,861 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRSCRIPT.TTF', name='French Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,861 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILBI___.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:30:51,862 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASLGHT.TTF', name='Eras Light ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,862 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTB.TTF', name='Calisto MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:30:51,862 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunsl.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-20 18:30:51,863 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRUSHSCI.TTF', name='Brush Script MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:30:51,863 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SNAP____.TTF', name='Snap ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,863 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuib.ttf', name='Segoe UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:30:51,864 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCBI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:30:51,864 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailub.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:30:51,864 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framd.ttf', name='Franklin Gothic Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,865 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolai.ttf', name='Consolas', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:30:51,865 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCEB.TTF', name='Tw Cen MT Condensed Extra Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-20 18:30:51,866 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\POORICH.TTF', name='Poor Richard', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,866 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDYSTO.TTF', name='Goudy Stout', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,866 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKB.TTF', name='Rockwell', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:30:51,866 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PALSCRI.TTF', name='Palace Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,867 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarai.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:30:51,867 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\micross.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,867 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LEELAWDB.TTF', name='Leelawadee', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:30:51,868 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABK.TTF', name='Franklin Gothic Book', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,868 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjh.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,869 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palabi.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:30:51,869 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAVIE.TTF', name='Ravie', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,869 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCK.TTF', name='Rockwell', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,869 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\pala.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,871 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibriz.ttf', name='Calibri', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:30:51,871 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugib.ttf', name='Gadugi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:30:51,871 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_PSTC.TTF', name='Bodoni MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-20 18:30:51,872 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENSCBK.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,872 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanab.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
2023-04-20 18:30:51,873 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LATINWD.TTF', name='Wide Latin', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
2023-04-20 18:30:51,873 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbeli.ttf', name='Corbel', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:30:51,873 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIGI.TTF', name='Gigi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,874 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITED.TTF', name='Lucida Bright', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-20 18:30:51,874 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbi.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:30:51,874 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhl.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2023-04-20 18:30:51,875 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguiemj.ttf', name='Segoe UI Emoji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,875 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OCRAEXT.TTF', name='OCR A Extended', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
2023-04-20 18:30:51,875 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebuc.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,876 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SHOWG.TTF', name='Showcard Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,876 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BASKVILL.TTF', name='Baskerville Old Face', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,876 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriab.ttf', name='Cambria', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:30:51,877 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAIAN.TTF', name='Maiandra GD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,877 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCRIPTBL.TTF', name='Script MT Bold', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:30:51,877 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLECB.TTF', name='Gloucester MT Extra Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-20 18:30:51,877 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNTI.TTF', name='Elephant', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:30:51,878 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFR.TTF', name='Californian FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,878 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHIC.TTF', name='Century Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,878 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PLAYBILL.TTF', name='Playbill', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,879 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABKIT.TTF', name='Franklin Gothic Book', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:30:51,879 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARLOWSI.TTF', name='Harlow Solid Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:30:51,879 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPE.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,881 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taile.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,881 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibl.ttf', name='Segoe UI', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2023-04-20 18:30:51,881 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNBI.TTF', name='Arial', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 7.8986363636363635
2023-04-20 18:30:51,882 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuiz.ttf', name='Segoe UI', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:30:51,882 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSBI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-20 18:30:51,882 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palab.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:30:51,883 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLI.TTF', name='Bell MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:30:51,883 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILLUBCD.TTF', name='Gill Sans Ultra Bold Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-20 18:30:51,883 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbd.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:30:51,884 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhbd.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:30:51,884 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoesc.ttf', name='Segoe Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,884 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\couri.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:30:51,885 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegUIVar.ttf', name='Segoe UI Variable', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,885 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_R.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,885 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTB.TTF', name='Copperplate Gothic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,886 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:30:51,886 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCB_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:30:51,886 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TEMPSITC.TTF', name='Tempus Sans ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,887 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MISTRAL.TTF', name='Mistral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,887 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FORTE.TTF', name='Forte', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,887 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CB.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-04-20 18:30:51,888 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbd.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:30:51,888 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STENCIL.TTF', name='Stencil', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,888 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrib.ttf', name='Calibri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:30:51,889 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERT.TTF', name='High Tower Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,889 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTCORSVA.TTF', name='Monotype Corsiva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,889 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFB.TTF', name='Californian FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:30:51,890 [31164] DEBUG    matplotlib.font_manager:1367: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to DejaVu Sans ('C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
2023-04-20 18:30:51,899 [31164] DEBUG    matplotlib.font_manager:1329: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2023-04-20 18:30:51,900 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:30:51,900 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:30:51,900 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,901 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2023-04-20 18:30:51,901 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2023-04-20 18:30:51,902 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:30:51,902 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:30:51,902 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:30:51,903 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,903 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:30:51,904 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,904 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:30:51,904 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,905 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,905 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,906 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:30:51,906 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:30:51,906 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,907 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,907 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2023-04-20 18:30:51,907 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,908 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,908 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:30:51,908 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:30:51,909 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:30:51,909 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,909 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,910 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:30:51,910 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:30:51,910 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,911 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,911 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,912 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:30:51,912 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,913 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:30:51,913 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,913 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,913 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2023-04-20 18:30:51,914 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLSNECB.TTF', name='Gill Sans MT Ext Condensed Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-20 18:30:51,914 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanz.ttf', name='Constantia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:30:51,914 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LEELAWAD.TTF', name='Leelawadee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,915 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\monbaiti.ttf', name='Mongolian Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,915 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-MEDIUM.TTF', name='Dubai', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-04-20 18:30:51,915 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-04-20 18:30:51,916 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FTLTLT.TTF', name='Footlight MT Light', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-20 18:30:51,916 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibril.ttf', name='Calibri', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-20 18:30:51,917 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSI.TTF', name='Goudy Old Style', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:30:51,917 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisbi.ttf', name='Segoe UI', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-20 18:30:51,917 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCCB___.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-04-20 18:30:51,917 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXD.TTF', name='Lucida Fax', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-20 18:30:51,919 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2023-04-20 18:30:51,919 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BSSYM7.TTF', name='Bookshelf Symbol 7', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,919 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAMDCN.TTF', name='Franklin Gothic Medium Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-20 18:30:51,919 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framdit.ttf', name='Franklin Gothic Medium', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:30:51,920 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSB.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:30:51,920 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-LIGHT.TTF', name='Dubai', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-20 18:30:51,920 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCC____.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-20 18:30:51,920 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_B.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:30:51,921 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COOPBL.TTF', name='Cooper Black', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,921 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNI.TTF', name='Arial', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 7.613636363636363
2023-04-20 18:30:51,921 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\INFROMAN.TTF', name='Informal Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,921 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSB.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-20 18:30:51,923 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BERNHC.TTF', name='Bernard MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-20 18:30:51,923 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEB.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-20 18:30:51,923 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCEDSCR.TTF', name='Edwardian Script ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,923 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consola.ttf', name='Consolas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,924 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,924 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\holomdl2.ttf', name='HoloLens MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,924 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COLONNA.TTF', name='Colonna MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,926 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYR.TTF', name='Agency FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,926 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRITANIC.TTF', name='Britannic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,926 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiai.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:30:51,926 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:30:51,927 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaS.ttf', name='Nirmala UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2023-04-20 18:30:51,927 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CHILLER.TTF', name='Chiller', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,927 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,928 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAB.TTF', name='Book Antiqua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:30:51,928 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothM.ttc', name='Yu Gothic', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-04-20 18:30:51,929 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG2.TTF', name='Wingdings 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,929 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Nirmala.ttf', name='Nirmala UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,929 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelUIsl.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2023-04-20 18:30:51,930 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriai.ttf', name='Cambria', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:30:51,930 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariali.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
2023-04-20 18:30:51,931 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARA.TTF', name='Garamond', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,931 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSPCL.TTF', name='MS Reference Specialty', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,931 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-REGULAR.TTF', name='Dubai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,932 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LHANDW.TTF', name='Lucida Handwriting', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:30:51,932 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:30:51,932 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comici.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:30:51,933 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTAUR.TTF', name='Centaur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,933 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEBO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-20 18:30:51,933 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ONYX.TTF', name='Onyx', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,934 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrima.ttf', name='Ebrima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,934 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFI.TTF', name='Californian FB', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:30:51,934 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERBI___.TTF', name='Perpetua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:30:51,935 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbell.ttf', name='Corbel', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-20 18:30:51,935 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILI____.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:30:51,936 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segmdl2.ttf', name='Segoe MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,936 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-BOLD.TTF', name='Dubai', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:30:51,936 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FELIXTI.TTF', name='Felix Titling', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,937 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbd.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
2023-04-20 18:30:51,937 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taileb.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:30:51,938 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeprb.ttf', name='Segoe Print', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:30:51,938 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoescb.ttf', name='Segoe Script', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:30:51,938 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITE.TTF', name='Lucida Bright', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,939 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhbd.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:30:51,939 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\times.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,939 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisb.ttf', name='Segoe UI', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-20 18:30:51,940 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSDB.TTF', name='Berlin Sans FB Demi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:30:51,940 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbi.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
2023-04-20 18:30:51,940 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesi.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:30:51,941 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADM.TTF', name='Franklin Gothic Demi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,941 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERTI.TTF', name='High Tower Text', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:30:51,941 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF-Italic.ttf', name='Sitka', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:30:51,942 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsun.ttc', name='SimSun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,942 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTI.TTF', name='Calisto MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:30:51,942 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCMI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:30:51,943 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaral.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,943 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\lucon.ttf', name='Lucida Console', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,943 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_I.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:30:51,944 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mvboli.ttf', name='MV Boli', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,944 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiab.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:30:51,945 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\l_10646.ttf', name='Lucida Sans Unicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,945 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTIBD.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:30:51,945 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNT.TTF', name='Elephant', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,946 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASMD.TTF', name='Eras Medium ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,947 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MSUIGHUR.TTF', name='Microsoft Uighur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,947 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYB.TTF', name='Agency FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:30:51,947 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MSUIGHUB.TTF', name='Microsoft Uighur', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:30:51,948 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicbd.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:30:51,948 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMIT.TTF', name='Franklin Gothic Demi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:30:51,948 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKEB.TTF', name='Rockwell Extra Bold', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
2023-04-20 18:30:51,949 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PER_____.TTF', name='Perpetua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,949 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VINERITC.TTF', name='Viner Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,949 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\marlett.ttf', name='Marlett', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-04-20 18:30:51,950 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrili.ttf', name='Calibri', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-04-20 18:30:51,950 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICBI.TTF', name='Century Gothic', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:30:51,951 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ALGER.TTF', name='Algerian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,951 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOS.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,951 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelz.ttf', name='Corbel', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:30:51,952 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILB____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:30:51,952 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUABI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:30:51,953 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\sylfaen.ttf', name='Sylfaen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,953 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriaz.ttf', name='Cambria', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:30:51,953 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanaz.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
2023-04-20 18:30:51,954 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constan.ttf', name='Constantia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,954 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTILI.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-20 18:30:51,955 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCM_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,955 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhl.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2023-04-20 18:30:51,955 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOS.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-20 18:30:51,956 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HATTEN.TTF', name='Haettenschweiler', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,956 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JOKERMAN.TTF', name='Jokerman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,956 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ENGR.TTF', name='Engravers MT', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-04-20 18:30:51,957 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARAIT.TTF', name='Garamond', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:30:51,957 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,957 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelli.ttf', name='Corbel', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-04-20 18:30:51,958 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constani.ttf', name='Constantia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:30:51,958 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIST.TTF', name='Calisto MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,958 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PARCHM.TTF', name='Parchment', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,958 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\himalaya.ttf', name='Microsoft Himalaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,960 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRADHITC.TTF', name='Bradley Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,960 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\wingding.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,961 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtextb.ttf', name='Myanmar Text', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:30:51,961 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG3.TTF', name='Wingdings 3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,961 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGSOL.TTF', name='Niagara Solid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,962 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarali.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:30:51,962 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKI.TTF', name='Rockwell', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:30:51,962 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolab.ttf', name='Consolas', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:30:51,963 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXDI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-20 18:30:51,963 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BAUHS93.TTF', name='Bauhaus 93', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,963 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisli.ttf', name='Segoe UI', style='italic', variant='normal', weight=350, stretch='normal', size='scalable')) = 11.0975
2023-04-20 18:30:51,965 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELL.TTF', name='Bell MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,965 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2023-04-20 18:30:51,965 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyi.ttf', name='Microsoft Yi Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,966 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSR.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,966 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHVIT.TTF', name='Franklin Gothic Heavy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:30:51,966 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OLDENGL.TTF', name='Old English Text MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,967 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbel.ttf', name='Corbel', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,967 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLB.TTF', name='Bell MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:30:51,967 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelaUIb.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:30:51,967 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHV.TTF', name='Franklin Gothic Heavy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,968 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OUTLOOK.TTF', name='MS Outlook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,968 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PRISTINA.TTF', name='Pristina', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,968 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERI____.TTF', name='Perpetua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:30:51,970 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtext.ttf', name='Myanmar Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,970 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSAN.TTF', name='MS Reference Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,970 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERB____.TTF', name='Perpetua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:30:51,971 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTEXTRA.TTF', name='MT Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,971 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKB.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:30:51,971 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARABD.TTF', name='Garamond', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:30:51,972 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cour.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,972 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mingliub.ttc', name='MingLiU-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,972 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICB.TTF', name='Century Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:30:51,972 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspa.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,973 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VIVALDII.TTF', name='Vivaldi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:30:51,973 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAGE.TTF', name='Rage Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:30:51,973 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-20 18:30:51,974 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2023-04-20 18:30:51,974 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MATURASC.TTF', name='Matura MT Script Capitals', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,974 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comic.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,975 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbi.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:30:51,976 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothR.ttc', name='Yu Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,976 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palai.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:30:51,977 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MOD20.TTF', name='Modern No. 20', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,977 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMCN.TTF', name='Franklin Gothic Demi Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-20 18:30:51,977 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrimabd.ttf', name='Ebrima', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:30:51,978 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\javatext.ttf', name='Javanese Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,978 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CASTELAR.TTF', name='Castellar', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,978 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSDI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-20 18:30:51,979 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelawUI.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,979 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAX.TTF', name='Lucida Fax', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,980 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunbd.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:30:51,980 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF.ttf', name='Sitka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,980 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTL.TTF', name='Copperplate Gothic Light', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,981 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
2023-04-20 18:30:51,981 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeui.ttf', name='Segoe UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,982 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Gabriola.ttf', name='Gabriola', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,982 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTBI.TTF', name='Calisto MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:30:51,982 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicz.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:30:51,983 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALN.TTF', name='Arial', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 6.613636363636363
2023-04-20 18:30:51,983 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKBI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:30:51,983 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FREESCPT.TTF', name='Freestyle Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,984 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTURY.TTF', name='Century', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,984 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaB.ttf', name='Nirmala UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:30:51,984 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSB.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:30:51,985 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSD.TTF', name='Lucida Sans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-20 18:30:51,985 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuisl.ttf', name='Segoe UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2023-04-20 18:30:51,986 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:30:51,986 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:30:51,986 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguihis.ttf', name='Segoe UI Historic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,987 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCB____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-04-20 18:30:51,987 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambria.ttc', name='Cambria', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,987 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKBI.TTF', name='Rockwell', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:30:51,988 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGENG.TTF', name='Niagara Engraved', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,988 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisym.ttf', name='Segoe UI Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,989 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inkfree.ttf', name='Ink Free', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,989 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASBD.TTF', name='Eras Bold ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,989 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILC____.TTF', name='Gill Sans MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-20 18:30:51,990 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candara.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,990 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\bahnschrift.ttf', name='Bahnschrift', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,990 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BROADW.TTF', name='Broadway', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,991 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolaz.ttf', name='Consolas', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:30:51,991 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CBI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2023-04-20 18:30:51,992 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuii.ttf', name='Segoe UI', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:30:51,992 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibli.ttf', name='Segoe UI', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2023-04-20 18:30:51,992 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEDI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-20 18:30:51,992 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucit.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:30:51,993 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BKANT.TTF', name='Book Antiqua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,993 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothL.ttc', name='Yu Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-20 18:30:51,994 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrii.ttf', name='Calibri', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:30:51,994 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CURLZ___.TTF', name='Curlz MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,994 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelb.ttf', name='Corbel', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:30:51,995 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARLRDBD.TTF', name='Arial Rounded MT Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,995 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothB.ttc', name='Yu Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:30:51,995 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASDEMI.TTF', name='Eras Demi ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,996 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
2023-04-20 18:30:51,996 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANS.TTF', name='Lucida Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,996 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariblk.ttf', name='Arial', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 6.888636363636364
2023-04-20 18:30:51,997 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCKRIST.TTF', name='Kristen ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,997 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\KUNSTLER.TTF', name='Kunstler Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,997 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanb.ttf', name='Constantia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:30:51,998 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PAPYRUS.TTF', name='Papyrus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,998 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JUICE___.TTF', name='Juice ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:51,998 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguili.ttf', name='Segoe UI', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-04-20 18:30:51,999 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:30:51,999 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarab.ttf', name='Candara', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:30:52,000 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\IMPRISHA.TTF', name='Imprint MT Shadow', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:52,000 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailu.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:52,000 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbi.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:30:52,000 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuil.ttf', name='Segoe UI', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-20 18:30:52,002 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanai.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
2023-04-20 18:30:52,002 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoepr.ttf', name='Segoe Print', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:52,002 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaraz.ttf', name='Candara', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:30:52,003 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNB.TTF', name='Arial', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 6.8986363636363635
2023-04-20 18:30:52,003 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspab.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:30:52,003 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:52,004 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCM____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-20 18:30:52,004 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARNGTON.TTF', name='Harrington', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:52,004 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbd.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:30:52,004 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:30:52,005 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILSANUB.TTF', name='Gill Sans Ultra Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:52,005 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibri.ttf', name='Calibri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:52,005 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiaz.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:30:52,006 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegoeIcons.ttf', name='Segoe Fluent Icons', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:52,006 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAGNETOB.TTF', name='Magneto', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:30:52,006 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICI.TTF', name='Century Gothic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:30:52,006 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCBLKAD.TTF', name='Blackadder ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:52,008 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahomabd.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:30:52,008 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugi.ttf', name='Gadugi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:52,008 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LCALLIG.TTF', name='Lucida Calligraphy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:30:52,009 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyh.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:52,009 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsunb.ttf', name='SimSun-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:52,010 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgun.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:52,010 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIL_____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:52,010 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VLADIMIR.TTF', name='Vladimir Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:52,011 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:52,011 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msgothic.ttc', name='MS Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:52,011 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRSCRIPT.TTF', name='French Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:52,011 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILBI___.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:30:52,012 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASLGHT.TTF', name='Eras Light ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:52,012 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTB.TTF', name='Calisto MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:30:52,012 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunsl.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-20 18:30:52,013 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRUSHSCI.TTF', name='Brush Script MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:30:52,013 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SNAP____.TTF', name='Snap ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:52,013 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuib.ttf', name='Segoe UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:30:52,014 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCBI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:30:52,014 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailub.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:30:52,014 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framd.ttf', name='Franklin Gothic Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:52,015 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolai.ttf', name='Consolas', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:30:52,015 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCEB.TTF', name='Tw Cen MT Condensed Extra Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-20 18:30:52,015 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\POORICH.TTF', name='Poor Richard', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:52,016 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDYSTO.TTF', name='Goudy Stout', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:52,016 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKB.TTF', name='Rockwell', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:30:52,016 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PALSCRI.TTF', name='Palace Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:52,017 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarai.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:30:52,017 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\micross.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:52,017 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LEELAWDB.TTF', name='Leelawadee', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:30:52,018 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABK.TTF', name='Franklin Gothic Book', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:52,018 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjh.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:52,019 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palabi.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:30:52,019 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAVIE.TTF', name='Ravie', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:52,019 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCK.TTF', name='Rockwell', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:52,019 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\pala.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:52,021 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibriz.ttf', name='Calibri', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:30:52,021 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugib.ttf', name='Gadugi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:30:52,021 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_PSTC.TTF', name='Bodoni MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-20 18:30:52,022 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENSCBK.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:52,022 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanab.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
2023-04-20 18:30:52,023 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LATINWD.TTF', name='Wide Latin', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
2023-04-20 18:30:52,023 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbeli.ttf', name='Corbel', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:30:52,023 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIGI.TTF', name='Gigi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:52,024 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITED.TTF', name='Lucida Bright', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-20 18:30:52,024 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbi.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:30:52,024 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhl.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2023-04-20 18:30:52,025 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguiemj.ttf', name='Segoe UI Emoji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:52,025 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OCRAEXT.TTF', name='OCR A Extended', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
2023-04-20 18:30:52,026 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebuc.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:52,026 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SHOWG.TTF', name='Showcard Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:52,026 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BASKVILL.TTF', name='Baskerville Old Face', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:52,027 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriab.ttf', name='Cambria', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:30:52,027 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAIAN.TTF', name='Maiandra GD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:52,027 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCRIPTBL.TTF', name='Script MT Bold', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:30:52,028 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLECB.TTF', name='Gloucester MT Extra Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-20 18:30:52,028 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNTI.TTF', name='Elephant', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:30:52,028 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFR.TTF', name='Californian FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:52,029 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHIC.TTF', name='Century Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:52,029 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PLAYBILL.TTF', name='Playbill', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:52,030 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABKIT.TTF', name='Franklin Gothic Book', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:30:52,030 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARLOWSI.TTF', name='Harlow Solid Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:30:52,030 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPE.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:52,031 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taile.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:52,031 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibl.ttf', name='Segoe UI', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2023-04-20 18:30:52,031 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNBI.TTF', name='Arial', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 7.8986363636363635
2023-04-20 18:30:52,032 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuiz.ttf', name='Segoe UI', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:30:52,032 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSBI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-20 18:30:52,032 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palab.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:30:52,033 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLI.TTF', name='Bell MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:30:52,033 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILLUBCD.TTF', name='Gill Sans Ultra Bold Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-20 18:30:52,033 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbd.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:30:52,034 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhbd.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:30:52,034 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoesc.ttf', name='Segoe Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:52,034 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\couri.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:30:52,034 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegUIVar.ttf', name='Segoe UI Variable', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:52,035 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_R.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:52,035 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTB.TTF', name='Copperplate Gothic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:52,035 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:30:52,036 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCB_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:30:52,036 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TEMPSITC.TTF', name='Tempus Sans ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:52,036 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MISTRAL.TTF', name='Mistral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:52,036 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FORTE.TTF', name='Forte', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:52,037 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CB.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-04-20 18:30:52,037 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbd.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:30:52,038 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STENCIL.TTF', name='Stencil', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:52,038 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrib.ttf', name='Calibri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:30:52,039 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERT.TTF', name='High Tower Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:52,039 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTCORSVA.TTF', name='Monotype Corsiva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:30:52,039 [31164] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFB.TTF', name='Californian FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:30:52,039 [31164] DEBUG    matplotlib.font_manager:1367: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
2023-04-20 18:34:44,504 [33004] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-04-20 18:34:44,505 [33004] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-04-20 18:34:44,505 [33004] INFO     root:247: [JupyterRequire] Initializing comms.
2023-04-20 18:34:44,510 [33004] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-04-20 18:34:44,511 [33004] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-04-20 18:34:44,511 [33004] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-04-20 18:48:06,339 [33004] INFO     numexpr.utils:147: [JupyterRequire] Note: NumExpr detected 12 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
2023-04-20 18:48:06,339 [33004] INFO     numexpr.utils:159: [JupyterRequire] NumExpr defaulting to 8 threads.
2023-04-20 18:48:07,002 [33004] DEBUG    matplotlib:275: [JupyterRequire] matplotlib data path: C:\Users\adity\anaconda3\lib\site-packages\matplotlib\mpl-data
2023-04-20 18:48:07,008 [33004] DEBUG    matplotlib:275: [JupyterRequire] CONFIGDIR=C:\Users\adity\.matplotlib
2023-04-20 18:48:07,012 [33004] DEBUG    matplotlib:1445: [JupyterRequire] interactive is False
2023-04-20 18:48:07,012 [33004] DEBUG    matplotlib:1446: [JupyterRequire] platform is win32
2023-04-20 18:48:07,013 [33004] DEBUG    matplotlib:1447: [JupyterRequire] loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', '_io', 'marshal', 'nt', 'winreg', '_frozen_importlib_external', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', 'encodings.cp1252', '_signal', 'encodings.latin_1', '_abc', 'abc', 'io', '__main__', '_stat', 'stat', '_collections_abc', 'genericpath', 'ntpath', 'os.path', 'os', '_sitebuiltins', '_locale', '_bootlocale', '_distutils_hack', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib.machinery', '_heapq', 'heapq', 'itertools', 'keyword', '_operator', 'operator', 'reprlib', '_collections', 'collections', 'collections.abc', '_functools', 'functools', 'contextlib', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', 'copyreg', 're', 'typing.io', 'typing.re', 'typing', 'importlib.abc', 'importlib.util', 'google', 'google.cloud', 'google.logging', 'mpl_toolkits', 'sphinxcontrib', 'zope', 'site', '_weakrefset', 'weakref', 'pkgutil', 'runpy', 'ipykernel._version', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'errno', 'signal', 'threading', 'msvcrt', '_winapi', 'subprocess', 'jupyter_client._version', 'posixpath', 'fnmatch', 'glob', '_socket', 'math', 'select', 'selectors', 'socket', 'zlib', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', '_bisect', 'bisect', '_random', '_sha512', 'random', 'tempfile', 'getpass', 'platform', 'zmq.libzmq', 'zmq.backend.select', 'cython_runtime', 'zmq.backend.cython.constants', '_cython_0_29_24', 'zmq.backend.cython.error', 'zmq.error', 'zmq.backend.cython.message', 'zmq.backend.cython.context', 'copy', '_struct', 'struct', '_compat_pickle', '_pickle', 'pickle', 'zmq.backend.cython.socket', 'zmq.backend.cython.utils', 'zmq.backend.cython._poll', 'zmq.backend.cython._version', 'zmq.backend.cython._device', 'zmq.backend.cython._proxy_steerable', 'zmq.backend.cython', 'zmq.backend', 'zmq.utils', 'zmq.utils.constant_names', 'zmq.sugar.constants', 'atexit', 'zmq.sugar.attrsettr', 'zmq.sugar.poll', 'zmq.utils.jsonapi', 'zmq.utils.strtypes', 'zmq.sugar.socket', 'zmq.sugar.context', 'zmq.sugar.frame', 'zmq.sugar.tracker', 'zmq.sugar.version', 'zmq.sugar.stopwatch', 'zmq.sugar', 'zmq', '_ast', 'ast', '_opcode', 'opcode', 'dis', 'token', 'tokenize', 'linecache', 'inspect', 'traitlets.utils', 'traitlets.utils.getargspec', 'traitlets.utils.importstring', 'traitlets.utils.sentinel', 'traitlets.utils.bunch', 'traitlets.utils.descriptions', 'traitlets.traitlets', 'traitlets.utils.decorators', 'traitlets._version', 'traitlets', 'traceback', '_string', 'string', 'logging', 'pprint', 'gettext', 'argparse', 'traitlets.config.loader', 'textwrap', 'traitlets.utils.text', 'traitlets.config.configurable', 'traitlets.config.application', 'traitlets.config', 'jupyter_client.localinterfaces', 'jupyter_core.version', 'jupyter_core', 'urllib', 'urllib.parse', 'pathlib', 'jupyter_core.paths', 'jupyter_client.utils', 'jupyter_client.connect', 'traitlets.log', 'jupyter_client.launcher', 'concurrent', 'concurrent.futures._base', 'concurrent.futures', '_ssl', 'binascii', 'base64', 'ssl', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', '_contextvars', 'contextvars', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.threads', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'asyncio.windows_events', 'asyncio', 'jupyter_client.channelsabc', 'jupyter_client.channels', 'jupyter_client.clientabc', 'jupyter_client.client', 'jupyter_client.kernelspec', 'jupyter_client.managerabc', 'jupyter_client.manager', '_queue', 'queue', 'jupyter_client.blocking.channels', 'jupyter_client.blocking.client', 'jupyter_client.blocking', 'zmq._future', 'zmq.asyncio', 'jupyter_client.asynchronous.channels', 'jupyter_client.asynchronous.client', 'jupyter_client.asynchronous', '_uuid', 'uuid', 'jupyter_client.multikernelmanager', 'jupyter_client', 'ipykernel.connect', 'ipykernel', 'tornado', '_datetime', 'datetime', 'numbers', 'logging.handlers', 'html.entities', 'html', 'array', 'tornado.speedups', 'tornado.util', 'tornado.escape', 'colorama.ansi', '_ctypes', 'ctypes._endian', 'ctypes', 'ctypes.wintypes', 'colorama.win32', 'colorama.winterm', 'colorama.ansitowin32', 'colorama.initialise', 'colorama', 'tornado.log', 'tornado.concurrent', 'tornado.ioloop', '__future__', 'tornado.platform', 'tornado.gen', 'tornado.platform.asyncio', 'zmq.eventloop.ioloop', 'zmq.eventloop', 'zmq.eventloop.zmqstream', 'IPython.core', 'IPython.core.getipython', 'IPython.core.release', 'sysconfig', 'pydoc', 'executing.executing', 'executing.version', 'executing', 'asttokens.line_numbers', 'six', 'six.moves', 'asttokens.util', 'asttokens.mark_tokens', 'asttokens.asttokens', 'asttokens', '_decimal', 'decimal', 'fractions', 'pure_eval.utils', 'pure_eval.my_getattr_static', 'pure_eval.core', 'pure_eval.version', 'pure_eval', 'stack_data.utils', 'stack_data.core', 'stack_data.formatting', 'stack_data.version', 'stack_data', 'pygments', 'pygments.formatters._mapping', 'pygments.plugin', 'pygments.util', 'pygments.formatters', 'pygments.styles', 'pygments.formatter', 'pygments.console', 'pygments.token', 'pygments.style', 'pygments.formatters.terminal256', 'bdb', 'IPython.utils', 'IPython.utils.ipstruct', 'IPython.utils.coloransi', 'IPython.utils.colorable', 'IPython.utils.PyColorize', 'locale', 'IPython.utils.encoding', 'IPython.utils.py3compat', 'IPython.core.excolors', 'cmd', 'codeop', 'code', 'pdb', 'IPython.core.debugger', 'IPython.core.display_trap', 'shlex', 'IPython.utils._process_common', 'IPython.utils._process_win32', 'IPython.utils.process', 'IPython.utils.decorators', 'IPython.utils.path', 'IPython.utils.terminal', 'IPython.core.ultratb', 'IPython.utils._sysinfo', 'IPython.utils.sysinfo', 'IPython.core.crashhandler', 'IPython.utils.importstring', 'IPython.paths', 'IPython.core.profiledir', 'IPython.core.application', 'IPython.terminal', '_hashlib', '_blake2', 'hashlib', 'IPython.core.compilerop', 'IPython.core.error', 'IPython.utils.text', 'IPython.core.magic_arguments', 'getopt', 'IPython.core.display_functions', 'mimetypes', 'IPython.testing', 'IPython.testing.skipdoctest', 'IPython.core.display', 'IPython.lib', 'IPython.lib.display', 'IPython.display', 'IPython.utils.data', 'IPython.core.page', 'IPython.lib.pretty', 'IPython.utils.openpy', 'IPython.utils.dir2', 'IPython.utils.wildcard', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.lexers', 'pygments.filter', 'pygments.filters', 'pygments.regexopt', 'pygments.lexer', 'pygments.unistring', 'pygments.lexers.python', 'pygments.formatters.html', 'IPython.core.oinspect', 'IPython.core.inputtransformer2', 'IPython.core.magic', 'pickleshare', 'IPython.core.hooks', 'IPython.core.autocall', 'IPython.core.macro', 'IPython.core.splitinput', 'IPython.core.prefilter', 'IPython.core.alias', 'IPython.core.builtin_trap', 'IPython.core.displayhook', 'IPython.core.displaypub', 'backcall.backcall', 'backcall', 'IPython.core.events', 'IPython.core.extensions', 'decorator', 'IPython.utils.sentinel', 'IPython.core.formatters', '_sqlite3', 'sqlite3.dbapi2', 'sqlite3', 'IPython.core.history', 'IPython.core.logger', 'IPython.core.payload', 'IPython.core.usage', 'IPython.utils.capture', 'IPython.utils.io', 'IPython.utils.strdispatch', 'IPython.utils.syspathcontext', 'IPython.core.async_helpers', 'IPython.core.interactiveshell', 'prompt_toolkit.application.current', 'prompt_toolkit.eventloop.utils', 'prompt_toolkit.eventloop.async_generator', 'wcwidth.table_wide', 'wcwidth.table_zero', 'wcwidth.unicode_versions', 'wcwidth.wcwidth', 'wcwidth', 'prompt_toolkit.utils', 'prompt_toolkit.eventloop.inputhook', 'prompt_toolkit.eventloop', 'prompt_toolkit.application.run_in_terminal', 'prompt_toolkit.selection', 'prompt_toolkit.clipboard.base', 'prompt_toolkit.clipboard.in_memory', 'prompt_toolkit.clipboard', 'prompt_toolkit.cache', 'prompt_toolkit.enums', 'prompt_toolkit.filters.base', 'prompt_toolkit.filters.app', 'prompt_toolkit.filters.cli', 'prompt_toolkit.filters.utils', 'prompt_toolkit.filters', 'prompt_toolkit.document', 'prompt_toolkit.auto_suggest', 'prompt_toolkit.data_structures', 'prompt_toolkit.styles.base', 'prompt_toolkit.styles.named_colors', 'prompt_toolkit.styles.style', 'prompt_toolkit.styles.defaults', 'prompt_toolkit.styles.pygments', 'colorsys', 'prompt_toolkit.styles.style_transformation', 'prompt_toolkit.styles', 'prompt_toolkit.output.color_depth', 'prompt_toolkit.output.base', 'prompt_toolkit.output.defaults', 'prompt_toolkit.output', 'prompt_toolkit.output.vt100', 'prompt_toolkit.mouse_events', 'prompt_toolkit.formatted_text.base', 'prompt_toolkit.formatted_text.ansi', 'xml', 'xml.dom.domreg', 'xml.dom', 'xml.dom.minicompat', 'xml.dom.NodeFilter', 'xml.dom.xmlbuilder', 'xml.dom.minidom', 'prompt_toolkit.formatted_text.html', 'prompt_toolkit.formatted_text.pygments', 'prompt_toolkit.formatted_text.utils', 'prompt_toolkit.formatted_text', 'prompt_toolkit.completion.base', 'prompt_toolkit.completion.deduplicate', 'prompt_toolkit.completion.filesystem', 'prompt_toolkit.completion.word_completer', 'prompt_toolkit.completion.fuzzy_completer', 'prompt_toolkit.completion.nested', 'prompt_toolkit.completion', 'prompt_toolkit.history', 'prompt_toolkit.keys', 'prompt_toolkit.key_binding.key_bindings', 'prompt_toolkit.key_binding.key_processor', 'prompt_toolkit.key_binding', 'prompt_toolkit.key_binding.vi_state', 'prompt_toolkit.search', 'prompt_toolkit.validation', 'prompt_toolkit.buffer', 'prompt_toolkit.input.base', 'prompt_toolkit.input.defaults', 'prompt_toolkit.input', 'prompt_toolkit.input.typeahead', 'prompt_toolkit.key_binding.bindings', 'prompt_toolkit.key_binding.bindings.scroll', 'prompt_toolkit.key_binding.bindings.page_navigation', 'prompt_toolkit.lexers.base', 'prompt_toolkit.lexers.pygments', 'prompt_toolkit.lexers', 'prompt_toolkit.layout.utils', 'prompt_toolkit.layout.processors', 'prompt_toolkit.layout.controls', 'prompt_toolkit.layout.dimension', 'prompt_toolkit.layout.margins', 'prompt_toolkit.layout.mouse_handlers', 'prompt_toolkit.layout.screen', 'prompt_toolkit.layout.containers', 'prompt_toolkit.layout.layout', 'prompt_toolkit.layout.menus', 'prompt_toolkit.layout.scrollable_pane', 'prompt_toolkit.layout', 'prompt_toolkit.key_binding.bindings.completion', 'prompt_toolkit.key_binding.bindings.named_commands', 'prompt_toolkit.key_binding.bindings.basic', 'prompt_toolkit.key_binding.bindings.cpr', 'prompt_toolkit.key_binding.bindings.emacs', 'prompt_toolkit.key_binding.bindings.mouse', 'prompt_toolkit.input.ansi_escape_sequences', 'prompt_toolkit.input.vt100_parser', 'prompt_toolkit.key_binding.digraphs', 'prompt_toolkit.key_binding.bindings.vi', 'prompt_toolkit.key_binding.defaults', 'prompt_toolkit.key_binding.emacs_state', 'prompt_toolkit.layout.dummy', 'prompt_toolkit.renderer', 'prompt_toolkit.application.application', 'prompt_toolkit.application.dummy', 'prompt_toolkit.application', 'prompt_toolkit.key_binding.bindings.focus', 'prompt_toolkit.widgets.toolbars', 'prompt_toolkit.widgets.base', 'prompt_toolkit.widgets.dialogs', 'prompt_toolkit.widgets.menus', 'prompt_toolkit.widgets', 'prompt_toolkit.shortcuts.dialogs', 'prompt_toolkit.shortcuts.progress_bar.formatters', 'prompt_toolkit.shortcuts.progress_bar.base', 'prompt_toolkit.shortcuts.progress_bar', 'prompt_toolkit.key_binding.bindings.auto_suggest', 'prompt_toolkit.key_binding.bindings.open_in_editor', 'prompt_toolkit.shortcuts.prompt', 'prompt_toolkit.shortcuts.utils', 'prompt_toolkit.shortcuts', 'prompt_toolkit', 'prompt_toolkit.patch_stdout', 'unicodedata', 'IPython.core.latex_symbols', 'IPython.utils.generics', 'parso.utils', 'parso.tree', 'parso.python', 'parso.python.token', 'parso.python.tokenize', 'parso.pgen2.grammar_parser', 'parso.pgen2.generator', 'parso.pgen2', 'parso.parser', 'parso._compatibility', 'difflib', 'parso.python.prefix', 'parso.python.tree', 'parso.python.parser', 'parso.python.diff', 'gc', 'parso.cache', 'parso.normalizer', 'parso.python.errors', 'parso.python.pep8', 'parso.file_io', 'parso.grammar', 'parso', 'jedi.parser_utils', 'jedi.debug', 'jedi.settings', 'jedi.cache', 'jedi.file_io', 'jedi.inference.cache', 'jedi.inference.helpers', 'jedi.inference.utils', 'jedi.inference.base_value', 'jedi.inference.sys_path', 'jedi.inference.recursion', 'jedi.inference.flow_analysis', 'jedi.common', 'jedi.inference.lazy_value', 'jedi.inference.docstrings', 'jedi.plugins', 'jedi.inference.names', 'jedi.inference.filters', 'jedi.inference.compiled.getattr_static', 'jedi.inference.compiled.access', 'jedi.inference.signature', 'jedi.inference.context', 'jedi.inference.compiled.value', 'jedi.inference.compiled', 'jedi.inference.analysis', 'jedi.inference.gradual', 'jedi.inference.value.module', 'jedi.inference.value.dynamic_arrays', 'jedi.inference.value.iterable', 'jedi.inference.arguments', 'jedi.inference.parser_cache', 'jedi.inference.gradual.generics', 'jedi.inference.value.function', 'jedi.inference.value.klass', 'jedi.inference.value.instance', 'jedi.inference.value', 'jedi.inference.gradual.base', 'jedi.inference.gradual.type_var', 'jedi.inference.gradual.typing', 'jedi.inference.gradual.stub_value', 'jedi.inference.gradual.typeshed', 'jedi._compatibility', 'zipfile', 'jedi.inference.compiled.subprocess.functions', 'jedi.api.exceptions', 'jedi.inference.compiled.subprocess', 'jedi.inference.imports', 'jedi.inference.param', 'jedi.inference.gradual.annotation', 'jedi.inference.value.decorator', 'jedi.inference.syntax_tree', 'jedi.inference', 'jedi.inference.gradual.conversion', 'jedi.inference.compiled.mixed', 'pydoc_data', 'pydoc_data.topics', 'jedi.api.keywords', 'jedi.api.completion_cache', 'jedi.api.helpers', 'jedi.api.classes', 'jedi.api.interpreter', 'jedi.api.strings', 'jedi.api.file_name', 'jedi.inference.docstring_utils', 'jedi.api.completion', 'filecmp', 'jedi.api.environment', 'jedi.inference.references', 'jedi.api.project', 'jedi.api.errors', 'jedi.api.refactoring', 'jedi.api.refactoring.extract', 'jedi.inference.gradual.utils', 'jedi.api', 'jedi.plugins.stdlib', 'jedi.plugins.flask', 'jedi.plugins.pytest', 'jedi.plugins.django', 'jedi.plugins.registry', 'jedi', 'IPython.core.completer', 'IPython.terminal.ptutils', 'IPython.lib.clipboard', 'IPython.terminal.shortcuts', 'concurrent.futures.thread', 'IPython.terminal.debugger', 'IPython.terminal.magics', 'IPython.terminal.pt_inputhooks', 'IPython.terminal.prompts', 'IPython.terminal.interactiveshell', 'IPython.core.magics.auto', 'IPython.core.magics.basic', 'email', 'http', 'email.errors', 'email.quoprimime', 'email.base64mime', 'quopri', 'email.encoders', 'email.charset', 'email.header', 'calendar', 'email._parseaddr', 'email.utils', 'email._policybase', 'email.feedparser', 'email.parser', 'uu', 'email._encoded_words', 'email.iterators', 'email.message', 'http.client', 'urllib.response', 'urllib.error', 'nturl2path', 'urllib.request', 'IPython.utils.contexts', 'IPython.core.magics.code', 'IPython.core.magics.config', 'IPython.core.magics.display', '_lsprof', 'profile', 'cProfile', 'dataclasses', 'pstats', 'timeit', 'IPython.utils.module_paths', 'IPython.utils.timing', 'IPython.core.magics.execution', 'IPython.core.magics.extension', 'IPython.core.magics.history', 'IPython.core.magics.logging', 'IPython.core.magics.namespace', 'IPython.core.magics.osm', 'IPython.core.magics.packaging', 'IPython.core.pylabtools', 'IPython.core.magics.pylab', 'IPython.core.magics.script', 'IPython.core.magics', 'IPython.core.shellapp', 'IPython.extensions', 'IPython.extensions.storemagic', 'IPython.terminal.ipapp', 'IPython.terminal.embed', 'IPython.utils.frame', 'IPython', 'imp', 'hmac', 'dateutil._version', 'dateutil', 'dateutil._common', 'dateutil.relativedelta', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.win', 'dateutil.tz.tz', 'dateutil.tz', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', '_strptime', 'jupyter_client.jsonutil', 'jupyter_client.adapter', 'jupyter_client.session', 'ipykernel.iostream', 'ipykernel.control', 'ipykernel.heartbeat', 'IPython.utils.tokenutil', 'psutil._common', 'psutil._compat', 'psutil._psutil_windows', 'psutil._pswindows', 'psutil', 'tornado.locks', 'tornado.queues', 'ipykernel.jsonutil', 'ipykernel.kernelbase', 'ipykernel.comm.comm', 'ipykernel.comm.manager', 'ipykernel.comm', 'IPython.core.payloadpage', 'ipykernel.displayhook', 'ipykernel.zmqshell', 'setuptools._distutils', 'distutils.debug', 'distutils.errors', 'distutils.fancy_getopt', 'distutils.dep_util', 'distutils.log', 'distutils.spawn', 'distutils.py35compat', 'distutils.util', 'distutils.dist', 'distutils.dir_util', 'distutils.file_util', 'distutils.archive_util', 'distutils.cmd', 'configparser', 'distutils.config', 'distutils.extension', 'distutils.core', '_distutils_hack.override', 'setuptools._deprecation_warning', 'xml.parsers', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'xml.parsers.expat', 'plistlib', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources._vendor.jaraco', 'pkg_resources.extern.jaraco', 'importlib._common', 'importlib.resources', 'pkg_resources._vendor.more_itertools.recipes', 'pkg_resources._vendor.more_itertools.more', 'pkg_resources._vendor.more_itertools', 'pkg_resources.extern.more_itertools', 'pkg_resources.extern.jaraco.functools', 'pkg_resources.extern.jaraco.context', 'pkg_resources.extern.jaraco.text', 'win32api', '_win32sysloader', 'pywintypes', 'pythoncom', 'win32com.gen_py', 'win32com', 'win32com.shell', 'pkg_resources._vendor.appdirs', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources._vendor.packaging', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.version', 'pkg_resources._vendor.packaging._manylinux', 'pkg_resources._vendor.packaging._musllinux', 'pkg_resources.extern.packaging.tags', 'pkg_resources.extern.packaging.utils', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources._vendor.pyparsing', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.packaging.markers', 'pkg_resources.extern.packaging.requirements', 'pkg_resources', 'setuptools.version', 'distutils.filelist', 'setuptools.monkey', 'setuptools.extension', 'distutils.command', 'setuptools.extern', 'setuptools._vendor', 'setuptools._vendor.packaging.__about__', 'setuptools._vendor.packaging', 'setuptools.extern.packaging', 'setuptools._vendor.ordered_set', 'setuptools.extern.ordered_set', 'setuptools._vendor.more_itertools.recipes', 'setuptools._vendor.more_itertools.more', 'setuptools._vendor.more_itertools', 'setuptools.extern.more_itertools', 'setuptools._vendor.pyparsing', 'setuptools.extern.pyparsing', 'setuptools._vendor.packaging._manylinux', 'setuptools._vendor.packaging._musllinux', 'setuptools.extern.packaging.tags', 'setuptools.extern.packaging._structures', 'setuptools.extern.packaging.version', 'setuptools.extern.packaging.utils', 'setuptools.extern.packaging.specifiers', 'setuptools.extern.packaging.markers', 'setuptools.extern.packaging.requirements', 'setuptools._vendor.jaraco', 'setuptools.extern.jaraco', 'setuptools.extern.jaraco.context', 'setuptools.extern.jaraco.functools', '_csv', 'csv', 'setuptools._vendor.zipp', 'setuptools._vendor.importlib_metadata._functools', 'setuptools._vendor.importlib_metadata._text', 'setuptools._vendor.importlib_metadata._adapters', 'setuptools._vendor.importlib_metadata._compat', 'setuptools._vendor.importlib_metadata._meta', 'setuptools._vendor.importlib_metadata._collections', 'setuptools._vendor.importlib_metadata._itertools', 'setuptools._vendor.importlib_metadata', 'setuptools.extern.importlib_metadata', 'setuptools._vendor.nspektr._compat', 'setuptools._vendor.nspektr', 'setuptools.extern.nspektr', 'zipp', 'importlib_metadata._functools', 'importlib_metadata._text', 'importlib_metadata._adapters', 'importlib_metadata._compat', 'importlib_metadata._meta', 'importlib_metadata._collections', 'importlib_metadata._itertools', 'importlib_metadata', 'setuptools._importlib', 'distutils.command.bdist', 'setuptools.command', 'setuptools.windows_support', 'setuptools.config.expand', 'setuptools.config.setupcfg', 'setuptools.config', 'setuptools.errors', 'email._header_value_parser', 'email.headerregistry', 'setuptools.config._apply_pyprojecttoml', 'setuptools.config.pyprojecttoml', 'setuptools.discovery', 'setuptools.extern.jaraco.text', 'setuptools._reqs', 'setuptools._itertools', 'setuptools._entry_points', 'setuptools.dist', 'setuptools.py34compat', 'setuptools._imp', 'setuptools.depends', 'setuptools.logging', 'distutils.ccompiler', 'distutils.msvc9compiler', 'setuptools.msvc', 'unittest.util', 'unittest.result', 'unittest.case', 'unittest.suite', 'unittest.loader', 'unittest.signals', 'unittest.runner', 'unittest.main', 'unittest', 'unittest.mock', 'distutils._msvccompiler', 'setuptools', 'distutils', 'distutils.version', 'ipykernel.eventloops', 'ipykernel.compiler', 'debugpy._version', 'debugpy.common', 'debugpy.common.json', 'debugpy.common.fmt', 'debugpy.common.compat', 'debugpy', 'debugpy._vendored._util', 'debugpy._vendored', '_pydevd_bundle', 'encodings.ascii', 'stringprep', 'encodings.idna', '_pydevd_bundle.pydevd_vm_type', '_pydev_imps', 'xmlrpc', 'gzip', 'xmlrpc.client', 'socketserver', 'http.server', 'xmlrpc.server', '_pydev_imps._pydev_saved_modules', '_pydevd_bundle.pydevd_constants', '_pydev_bundle', '_pydev_runfiles', '_pydevd_frame_eval', 'pydev_ipython', 'pydevd_concurrency_analyser', 'pydevd_plugins', '_pydev_bundle.pydev_log', '_pydev_bundle._pydev_filesystem_encoding', '_pydevd_bundle.pydevd_comm_constants', 'pydevd_file_utils', '_pydev_imps._pydev_execfile', '_pydevd_bundle.pydevd_exec2', '_pydev_bundle.pydev_imports', '_pydev_bundle.pydev_is_thread_alive', '_pydev_bundle.pydev_override', 'pydevd_plugins.extensions', '_pydevd_bundle.pydevd_extension_utils', '_pydevd_bundle.pydevd_frame_utils', '_pydevd_bundle.pydevd_filtering', '_pydevd_bundle.pydevd_io', '_pydevd_bundle.pydevd_utils', '_pydev_bundle._pydev_tipper_common', '_pydev_bundle._pydev_imports_tipper', '_pydev_bundle._pydev_calltip_util', '_pydevd_bundle.pydevd_safe_repr', '_pydevd_bundle.pydevd_resolver', '_pydevd_bundle.pydevd_extension_api', '_pydevd_bundle.pydevd_xml', '_pydevd_bundle.pydevd_dont_trace', '_pydevd_frame_eval.vendored', '_pydevd_frame_eval.vendored.bytecode.flags', '_pydevd_frame_eval.vendored.bytecode.instr', '_pydevd_frame_eval.vendored.bytecode.bytecode', '_pydevd_frame_eval.vendored.bytecode.concrete', '_pydevd_frame_eval.vendored.bytecode.cfg', '_pydevd_frame_eval.vendored.bytecode', '_pydevd_bundle.pydevd_bytecode_utils', '_pydevd_bundle.pydevd_cython', '_pydevd_bundle.pydevd_cython_wrapper', '_pydevd_bundle.pydevd_additional_thread_info', '_pydevd_bundle.pydevd_thread_lifecycle', '_pydevd_bundle.pydevd_save_locals', '_pydevd_bundle.pydevd_defaults', '_pydev_bundle.pydev_monkey', 'pydevd_tracing', '_pydevd_bundle.pydevd_daemon_thread', '_pydevd_bundle.pydevd_timeout', '_pydevd_bundle.pydevd_vars', '_pydev_bundle.pydev_console_utils', '_pydevd_bundle.pydevd_import_class', '_pydevd_bundle.pydevd_breakpoints', '_pydevd_bundle.pydevd_custom_frames', '_pydevd_bundle.pydevd_dont_trace_files', '_pydevd_bundle.pydevd_net_command', '_pydev_bundle.pydev_umd', 'pydevconsole', '_pydev_bundle._pydev_completer', '_pydevd_bundle.pydevd_net_command_factory_xml', '_pydevd_bundle.pydevd_frame', '_pydevd_bundle.pydevd_additional_thread_info_regular', '_pydevd_bundle.pydevd_trace_dispatch', '_pydevd_frame_eval.pydevd_frame_eval_main', '_pydevd_bundle.pydevd_source_mapping', 'pydevd_concurrency_analyser.pydevd_thread_wrappers', 'pydevd_concurrency_analyser.pydevd_concurrency_logger', '_pydevd_bundle._debug_adapter', '_pydevd_bundle._debug_adapter.pydevd_schema_log', '_pydevd_bundle._debug_adapter.pydevd_base_schema', '_pydevd_bundle._debug_adapter.pydevd_schema', '_pydevd_bundle.pydevd_reload', '_pydev_bundle.fsnotify', '_pydevd_bundle.pydevd_console', '_pydevd_bundle.pydevd_comm', '_pydevd_bundle.pydevd_net_command_factory_json', '_pydevd_bundle.pydevd_collect_bytecode_info', '_pydevd_bundle.pydevd_api', '_pydevd_bundle.pydevd_json_debug_options', '_pydevd_bundle.pydevd_process_net_command_json', '_pydevd_bundle.pydevd_traceproperty', '_pydevd_bundle.pydevd_process_net_command', '_pydevd_bundle.pydevd_suspended_frames', '_pydevd_bundle.pydevd_trace_api', 'pydevd_plugins.django_debug', 'pydevd_plugins.jinja2_debug', '_pydevd_bundle.pydevd_plugin_utils', 'pydevd_plugins.extensions.types', 'pydevd_plugins.extensions.types.pydevd_helpers', 'pydevd_plugins.extensions.types.pydevd_plugin_numpy_types', 'pydevd_plugins.extensions.types.pydevd_plugins_django_form_str', 'pydevd', 'debugpy._vendored.force_pydevd', 'debugpy.server', 'debugpy.adapter', 'debugpy.common.timestamp', 'debugpy.common.util', 'debugpy.common.log', 'debugpy.common.sockets', 'debugpy.server.api', 'ipykernel.debugger', 'ipykernel.ipkernel', 'ipykernel.parentpoller', 'ipykernel.kernelapp', 'win32security', 'ntsecuritycon', 'faulthandler', 'IPython.core.completerlib', 'logging.config', 'pythonjsonlogger', 'pythonjsonlogger.jsonlogger', 'daiquiri.types', 'daiquiri.formatter', 'daiquiri.handlers', 'daiquiri.output', 'daiquiri', 'jupyter_require.__about__', 'csscompressor', 'jupyter_require.core', 'jupyter_require.notebook', 'jupyter_require', 'jupyter_nbutils.__about__', 'jupyter_nbutils.config', 'jupyter_nbutils.utils', 'jupyter_nbutils', 'jupyter_require.magic', 'numpy._globals', 'numpy.__config__', 'numpy._distributor_init', 'numpy._version', 'numpy.version', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core._asarray', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core._machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.stride_tricks', 'numpy.lib.twodim_base', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', '_cython_0_29_30', 'numpy.random._common', 'secrets', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'pytz', 'pandas._typing', '_cython_0_29_28', 'pandas._libs.tslibs.dtypes', 'pandas._libs.tslibs.base', 'pandas._libs.tslibs.np_datetime', 'pandas._libs.tslibs.nattype', 'pandas._libs.tslibs.timezones', 'pandas._libs.tslibs.ccalendar', 'pandas._libs.tslibs.tzconversion', 'pandas._config.config', 'pandas._config.dates', 'pandas._config.display', 'pandas._config', 'pandas._config.localization', 'pandas._libs.tslibs.strptime', 'pandas._libs.tslibs.fields', 'pandas._libs.tslibs.timedeltas', 'pandas._libs.tslibs.timestamps', 'dateutil.easter', 'pandas._libs.properties', 'pandas._libs.tslibs.offsets', 'pandas._libs.tslibs.parsing', 'pandas._libs.tslibs.conversion', 'pandas._libs.tslibs.period', 'pandas._libs.tslibs.vectorized', 'pandas._libs.tslibs', 'pandas._libs.ops_dispatch', 'pandas._libs.missing', 'pandas._libs.hashtable', 'pandas._libs.algos', 'pandas._libs.interval', 'pandas._libs', 'pandas.util._decorators', 'pandas.core', 'pandas.core.util', 'pandas._libs.tslib', 'pandas._libs.lib', 'pandas._libs.hashing', 'pandas.core.dtypes', 'pandas.util._exceptions', 'pandas.errors', 'pandas.core.dtypes.generic', 'pandas.core.dtypes.base', 'pandas.core.dtypes.inference', 'pandas.core.dtypes.dtypes', 'pandas.core.dtypes.common', 'pandas.core.util.hashing', 'pandas.util', 'pandas.util.version', 'pandas.compat.numpy', 'pandas.compat.pyarrow', 'pandas.compat', 'pandas.core.config_init', 'pandas.core.dtypes.missing', 'pandas.util._validators', 'pandas.core.dtypes.cast', 'pandas.core.dtypes.concat', 'pandas.core.array_algos', 'pandas.core.common', 'pandas.core.construction', 'pandas.core.array_algos.take', 'pandas.core.indexers.utils', 'pandas.core.indexers', 'pandas.core.algorithms', 'pandas.compat.numpy.function', 'pandas.core.roperator', 'pandas._libs.ops', 'pandas.core.computation', 'pandas.compat._optional', 'numexpr.interpreter', 'packaging.__about__', 'packaging', 'packaging._structures', 'packaging.version', 'numexpr.expressions', 'numexpr.utils', 'numexpr.necompiler', 'numexpr.version', 'numexpr', 'pandas.core.computation.check', 'pandas.core.computation.expressions', 'pandas.core.ops.missing', 'pandas.core.ops.dispatch', 'pandas.core.ops.invalid', 'pandas.core.ops.array_ops', 'pandas.core.ops.common', 'pandas.core.ops.docstrings', 'pandas.core.ops.mask_ops', 'pandas.core.ops.methods', 'pandas.core.ops', 'pandas.core.arraylike', 'pandas.core.missing', 'pandas.core.array_algos.quantile', 'pandas.core.sorting', 'pandas.core.arrays.base', 'bottleneck.benchmark', 'bottleneck.benchmark.autotimeit', 'bottleneck.benchmark.bench', 'bottleneck.benchmark.bench_detailed', 'bottleneck.tests', 'bottleneck.tests.util', 'bottleneck.slow.reduce', 'bottleneck.slow.nonreduce', 'bottleneck.slow.nonreduce_axis', 'bottleneck.slow.move', 'bottleneck.slow', 'bottleneck._pytesttester', 'bottleneck.move', 'bottleneck.nonreduce', 'bottleneck.nonreduce_axis', 'bottleneck.reduce', 'bottleneck._version', 'bottleneck', 'pandas.core.nanops', 'pandas.core.array_algos.masked_reductions', 'pandas.core.arrays.masked', 'pandas.core.arrays.boolean', 'pandas._libs.arrays', 'pandas.core.accessor', 'pandas.core.array_algos.transforms', 'pandas.core.arrays._mixins', 'pandas.core.base', 'pandas.core.strings.accessor', 'pandas.core.strings.base', 'pandas.core.strings', 'pandas.core.strings.object_array', 'pandas.io', 'pandas.io.formats', 'pandas.io.formats.console', 'pandas.core.arrays.categorical', 'pandas.tseries', 'pandas.tseries.frequencies', 'pandas.core.arrays.datetimelike', 'pandas.core.arrays._ranges', 'pandas.core.arrays.numeric', 'pandas.core.tools', 'pandas.core.tools.numeric', 'pandas.core.arrays.integer', 'pandas.tseries.offsets', 'pandas.core.arrays.datetimes', 'pandas.core.arrays.floating', 'pandas.core.indexes', 'pandas._libs.index', 'pandas._libs.join', 'pandas.core.array_algos.putmask', 'pandas._libs.sparse', 'pandas.core.arrays.sparse.dtype', 'pandas.io.formats.printing', 'pandas.core.arrays.sparse.array', 'pandas.core.arrays.sparse.accessor', 'pandas.core.arrays.sparse', 'pandas.core.indexes.frozen', 'pandas.core.indexes.base', 'pandas.core.arrays.interval', 'pandas.core.arrays.numpy_', 'pandas.core.arrays.period', 'pandas.core.arrays.string_', 'pandas.core.arrays.string_arrow', 'pandas.core.arrays.timedeltas', 'pandas.core.arrays', 'pandas.core.flags', 'pandas._libs.reduction', 'pandas.core.apply', 'pandas._libs.indexing', 'pandas.core.indexes.extension', 'pandas.core.indexes.category', 'pandas.core.indexes.numeric', 'pandas.core.indexes.range', 'pandas.core.tools.timedeltas', 'pandas.core.indexes.datetimelike', 'pandas.core.tools.times', 'pandas.core.indexes.datetimes', 'pandas.core.indexes.multi', 'pandas.core.indexes.timedeltas', 'pandas.core.indexes.interval', 'pandas.core.indexes.period', 'pandas.core.indexes.api', 'pandas.core.indexing', 'pandas.core.array_algos.replace', 'pandas.core.reshape', 'pandas._libs.internals', 'pandas._libs.writers', 'pandas.core.internals.blocks', 'pandas.core.internals.api', 'pandas.core.internals.base', 'pandas.core.internals.array_manager', 'pandas.core.internals.ops', 'pandas.core.internals.managers', 'pandas.core.internals.concat', 'pandas.core.internals', 'pandas.core.reshape.concat', 'mmap', 'pandas.core.shared_docs', 'pandas.io.common', 'pandas.io.formats.format', 'pandas.core.describe', 'pandas.core.internals.construction', 'pandas.core.sample', 'pandas._libs.window', 'pandas._libs.window.aggregations', 'pandas._libs.window.indexers', 'pandas.core.indexers.objects', 'pandas.core.util.numba_', 'pandas.core.window.common', 'pandas.core.window.doc', 'pandas.core.window.numba_', 'pandas.core.window.online', 'pandas.core._numba', 'pandas.core._numba.executor', 'pandas.core.window.rolling', 'pandas.core.window.ewm', 'pandas.core.window.expanding', 'pandas.core.window', 'pandas.core.generic', 'pandas.core.reshape.util', 'pandas.core.reshape.melt', 'pandas._libs.reshape', 'pandas.core.indexes.accessors', 'pandas.arrays', 'pandas.core.tools.datetimes', 'pandas.io.formats.info', 'pandas.plotting._core', 'pandas.plotting._misc', 'pandas.plotting', 'pandas.core.series', 'pandas.core.frame', 'pandas.core.groupby.base', 'pandas._libs.groupby', 'pandas.core.groupby.numba_', 'pandas.core.groupby.categorical', 'pandas.core.groupby.grouper', 'pandas.core.groupby.ops', 'pandas.core.groupby.indexing', 'pandas.core.groupby.groupby', 'pandas.core.groupby.generic', 'pandas.core.groupby', 'pandas.core.api', 'pandas.tseries.api', 'pandas.core.computation.common', 'pandas.core.computation.align', 'pandas.compat.chainmap', 'pandas.core.computation.scope', 'pandas.core.computation.ops', 'pandas.core.computation.parsing', 'pandas.core.computation.expr', 'pandas.core.computation.engines', 'pandas.core.computation.eval', 'pandas.core.computation.api', 'pandas.core.reshape.merge', 'pandas.core.reshape.pivot', 'pandas.core.reshape.reshape', 'pandas.core.reshape.tile', 'pandas.core.reshape.api', 'pandas.api.extensions', 'pandas.api.indexers', 'pandas.core.dtypes.api', 'pandas.api.types', 'pandas.api', 'pandas._testing._random', 'pandas._testing.contexts', 'pandas._testing._io', 'pandas._testing._warnings', 'cmath', 'pandas._libs.testing', 'pandas._testing.asserters', 'pandas._testing.compat', 'pandas._testing', 'pandas.testing', 'pandas.util._print_versions', 'pandas.io.clipboards', 'pandas._libs.parsers', 'pandas.io.excel._util', 'pandas.io.date_converters', 'pandas.io.parsers.base_parser', 'pandas.io.parsers.arrow_parser_wrapper', 'pandas.io.parsers.c_parser_wrapper', 'pandas.io.parsers.python_parser', 'pandas.io.parsers.readers', 'pandas.io.parsers', 'pandas.io.excel._odfreader', 'pandas.io.excel._openpyxl', 'pandas.io.excel._pyxlsb', 'pandas.io.excel._xlrd', 'pandas.io.excel._base', 'pandas._libs.json', 'pandas.io.formats._color_data', 'pandas.io.formats.css', 'pandas.io.formats.excel', 'pandas.io.excel._odswriter', 'pandas.io.excel._xlsxwriter', 'pandas.io.excel._xlwt', 'pandas.io.excel', 'pandas.io.feather_format', 'pandas.io.gbq', 'pandas.io.html', 'pandas.io.json._normalize', 'pandas.io.json._table_schema', 'pandas.io.json._json', 'pandas.io.json', 'pandas.io.orc', 'pandas.io.parquet', 'pandas.compat.pickle_compat', 'pandas.io.pickle', 'pandas.core.computation.pytables', 'pandas.io.pytables', 'pandas.io.sas.sasreader', 'pandas.io.sas', 'pandas.io.spss', 'pandas.io.sql', 'pandas.io.stata', 'pandas.io.xml', 'pandas.io.api', 'pandas.util._tester', 'pandas._version', 'pandas', 'summarytools', 'summarytools.htmlwidgets', 'summarytools.summarytools', 'matplotlib', 'matplotlib._api.deprecation', 'matplotlib._api', 'matplotlib._version', 'matplotlib._c_internal_utils', 'matplotlib.cbook', 'matplotlib.docstring', 'PIL._version', 'PIL', 'defusedxml.common', 'defusedxml', 'xml.etree', 'xml.etree.ElementPath', '_elementtree', 'xml.etree.ElementTree', 'defusedxml.ElementTree', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._util', 'PIL._imaging', 'cffi.lock', 'cffi.error', 'cffi.model', 'cffi.api', 'cffi', 'PIL.Image', 'PIL.ImageChops', 'PIL.ImageFile', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'PIL.ImagePalette', 'PIL.ImageSequence', 'PIL.PngImagePlugin', 'matplotlib._path', 'matplotlib.bezier', 'matplotlib.path', 'matplotlib.transforms', 'matplotlib.ticker', 'matplotlib.scale', 'matplotlib._color_data', 'matplotlib.colors', 'pyparsing.util', 'pyparsing.unicode', 'pyparsing.exceptions', 'pyparsing.actions', 'pyparsing.results', 'pyparsing.core', 'pyparsing.helpers', 'pyparsing.testing', 'pyparsing.common', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib._enums', 'cycler', 'matplotlib.rcsetup', 'matplotlib.ft2font', 'kiwisolver']
2023-04-20 18:48:07,175 [33004] DEBUG    matplotlib:275: [JupyterRequire] CACHEDIR=C:\Users\adity\.matplotlib
2023-04-20 18:48:07,178 [33004] DEBUG    matplotlib.font_manager:1439: [JupyterRequire] Using fontManager instance from C:\Users\adity\.matplotlib\fontlist-v330.json
2023-04-20 18:48:07,825 [33004] DEBUG    matplotlib.pyplot:280: [JupyterRequire] Loaded backend module://matplotlib_inline.backend_inline version unknown.
2023-04-20 18:48:07,830 [33004] DEBUG    matplotlib.pyplot:280: [JupyterRequire] Loaded backend module://matplotlib_inline.backend_inline version unknown.
2023-04-20 18:49:06,439 [33004] DEBUG    matplotlib.font_manager:1329: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2023-04-20 18:49:06,440 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:49:06,441 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:49:06,441 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,442 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2023-04-20 18:49:06,442 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2023-04-20 18:49:06,443 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:49:06,443 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:49:06,444 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:49:06,445 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,445 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:49:06,446 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,447 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:49:06,447 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,447 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,448 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,448 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:49:06,448 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:49:06,449 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,449 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,449 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2023-04-20 18:49:06,450 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,451 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,451 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:49:06,452 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:49:06,453 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:49:06,453 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,453 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,454 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:49:06,454 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:49:06,454 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,455 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,455 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,456 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:49:06,456 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,457 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:49:06,457 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,457 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,458 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2023-04-20 18:49:06,458 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLSNECB.TTF', name='Gill Sans MT Ext Condensed Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-20 18:49:06,459 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanz.ttf', name='Constantia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:49:06,459 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LEELAWAD.TTF', name='Leelawadee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,459 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\monbaiti.ttf', name='Mongolian Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,460 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-MEDIUM.TTF', name='Dubai', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-04-20 18:49:06,460 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-04-20 18:49:06,460 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FTLTLT.TTF', name='Footlight MT Light', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-20 18:49:06,461 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibril.ttf', name='Calibri', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-20 18:49:06,461 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSI.TTF', name='Goudy Old Style', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:49:06,462 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisbi.ttf', name='Segoe UI', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-20 18:49:06,462 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCCB___.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-04-20 18:49:06,462 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXD.TTF', name='Lucida Fax', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-20 18:49:06,462 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2023-04-20 18:49:06,463 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BSSYM7.TTF', name='Bookshelf Symbol 7', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,463 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAMDCN.TTF', name='Franklin Gothic Medium Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-20 18:49:06,464 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framdit.ttf', name='Franklin Gothic Medium', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:49:06,464 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSB.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:49:06,464 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-LIGHT.TTF', name='Dubai', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-20 18:49:06,464 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCC____.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-20 18:49:06,465 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_B.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:49:06,465 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COOPBL.TTF', name='Cooper Black', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,465 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNI.TTF', name='Arial', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 7.613636363636363
2023-04-20 18:49:06,466 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\INFROMAN.TTF', name='Informal Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,466 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSB.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-20 18:49:06,467 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BERNHC.TTF', name='Bernard MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-20 18:49:06,467 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEB.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-20 18:49:06,468 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCEDSCR.TTF', name='Edwardian Script ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,468 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consola.ttf', name='Consolas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,469 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,469 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\holomdl2.ttf', name='HoloLens MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,469 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COLONNA.TTF', name='Colonna MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,470 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYR.TTF', name='Agency FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,470 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRITANIC.TTF', name='Britannic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,470 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiai.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:49:06,470 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:49:06,471 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaS.ttf', name='Nirmala UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2023-04-20 18:49:06,471 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CHILLER.TTF', name='Chiller', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,472 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,472 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAB.TTF', name='Book Antiqua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:49:06,473 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothM.ttc', name='Yu Gothic', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-04-20 18:49:06,473 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG2.TTF', name='Wingdings 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,473 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Nirmala.ttf', name='Nirmala UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,474 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelUIsl.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2023-04-20 18:49:06,474 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriai.ttf', name='Cambria', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:49:06,474 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariali.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
2023-04-20 18:49:06,475 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARA.TTF', name='Garamond', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,475 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSPCL.TTF', name='MS Reference Specialty', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,475 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-REGULAR.TTF', name='Dubai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,476 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LHANDW.TTF', name='Lucida Handwriting', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:49:06,476 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:49:06,476 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comici.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:49:06,477 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTAUR.TTF', name='Centaur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,477 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEBO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-20 18:49:06,477 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ONYX.TTF', name='Onyx', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,478 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrima.ttf', name='Ebrima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,478 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFI.TTF', name='Californian FB', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:49:06,478 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERBI___.TTF', name='Perpetua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:49:06,478 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbell.ttf', name='Corbel', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-20 18:49:06,479 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILI____.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:49:06,479 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segmdl2.ttf', name='Segoe MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,479 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-BOLD.TTF', name='Dubai', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:49:06,479 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FELIXTI.TTF', name='Felix Titling', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,480 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbd.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
2023-04-20 18:49:06,480 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taileb.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:49:06,480 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeprb.ttf', name='Segoe Print', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:49:06,480 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoescb.ttf', name='Segoe Script', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:49:06,482 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITE.TTF', name='Lucida Bright', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,482 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhbd.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:49:06,482 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\times.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,482 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisb.ttf', name='Segoe UI', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-20 18:49:06,483 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSDB.TTF', name='Berlin Sans FB Demi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:49:06,484 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbi.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
2023-04-20 18:49:06,484 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesi.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:49:06,485 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADM.TTF', name='Franklin Gothic Demi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,485 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERTI.TTF', name='High Tower Text', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:49:06,485 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF-Italic.ttf', name='Sitka', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:49:06,486 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsun.ttc', name='SimSun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,486 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTI.TTF', name='Calisto MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:49:06,486 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCMI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:49:06,486 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaral.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,488 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\lucon.ttf', name='Lucida Console', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,488 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_I.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:49:06,488 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mvboli.ttf', name='MV Boli', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,489 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiab.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:49:06,489 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\l_10646.ttf', name='Lucida Sans Unicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,489 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTIBD.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:49:06,490 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNT.TTF', name='Elephant', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,490 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASMD.TTF', name='Eras Medium ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,490 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MSUIGHUR.TTF', name='Microsoft Uighur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,491 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYB.TTF', name='Agency FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:49:06,491 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MSUIGHUB.TTF', name='Microsoft Uighur', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:49:06,492 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicbd.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:49:06,492 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMIT.TTF', name='Franklin Gothic Demi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:49:06,492 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKEB.TTF', name='Rockwell Extra Bold', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
2023-04-20 18:49:06,492 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PER_____.TTF', name='Perpetua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,493 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VINERITC.TTF', name='Viner Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,493 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\marlett.ttf', name='Marlett', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-04-20 18:49:06,493 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrili.ttf', name='Calibri', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-04-20 18:49:06,494 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICBI.TTF', name='Century Gothic', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:49:06,494 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ALGER.TTF', name='Algerian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,494 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOS.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,494 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelz.ttf', name='Corbel', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:49:06,495 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILB____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:49:06,495 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUABI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:49:06,495 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\sylfaen.ttf', name='Sylfaen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,495 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriaz.ttf', name='Cambria', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:49:06,496 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanaz.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
2023-04-20 18:49:06,496 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constan.ttf', name='Constantia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,496 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTILI.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-20 18:49:06,497 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCM_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,497 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhl.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2023-04-20 18:49:06,497 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOS.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-20 18:49:06,498 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HATTEN.TTF', name='Haettenschweiler', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,498 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JOKERMAN.TTF', name='Jokerman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,498 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ENGR.TTF', name='Engravers MT', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-04-20 18:49:06,499 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARAIT.TTF', name='Garamond', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:49:06,499 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,499 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelli.ttf', name='Corbel', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-04-20 18:49:06,499 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constani.ttf', name='Constantia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:49:06,501 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIST.TTF', name='Calisto MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,501 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PARCHM.TTF', name='Parchment', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,501 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\himalaya.ttf', name='Microsoft Himalaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,501 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRADHITC.TTF', name='Bradley Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,502 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\wingding.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,502 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtextb.ttf', name='Myanmar Text', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:49:06,502 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG3.TTF', name='Wingdings 3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,503 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGSOL.TTF', name='Niagara Solid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,503 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarali.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:49:06,503 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKI.TTF', name='Rockwell', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:49:06,503 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolab.ttf', name='Consolas', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:49:06,505 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXDI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-20 18:49:06,505 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BAUHS93.TTF', name='Bauhaus 93', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,505 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisli.ttf', name='Segoe UI', style='italic', variant='normal', weight=350, stretch='normal', size='scalable')) = 11.0975
2023-04-20 18:49:06,506 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELL.TTF', name='Bell MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,506 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2023-04-20 18:49:06,506 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyi.ttf', name='Microsoft Yi Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,507 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSR.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,507 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHVIT.TTF', name='Franklin Gothic Heavy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:49:06,507 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OLDENGL.TTF', name='Old English Text MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,508 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbel.ttf', name='Corbel', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,508 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLB.TTF', name='Bell MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:49:06,508 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelaUIb.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:49:06,508 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHV.TTF', name='Franklin Gothic Heavy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,509 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OUTLOOK.TTF', name='MS Outlook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,509 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PRISTINA.TTF', name='Pristina', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,509 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERI____.TTF', name='Perpetua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:49:06,510 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtext.ttf', name='Myanmar Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,510 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSAN.TTF', name='MS Reference Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,510 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERB____.TTF', name='Perpetua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:49:06,511 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTEXTRA.TTF', name='MT Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,511 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKB.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:49:06,511 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARABD.TTF', name='Garamond', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:49:06,513 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cour.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,513 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mingliub.ttc', name='MingLiU-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,513 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICB.TTF', name='Century Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:49:06,513 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspa.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,514 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VIVALDII.TTF', name='Vivaldi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:49:06,514 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAGE.TTF', name='Rage Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:49:06,514 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-20 18:49:06,514 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2023-04-20 18:49:06,515 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MATURASC.TTF', name='Matura MT Script Capitals', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,515 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comic.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,515 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbi.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:49:06,516 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothR.ttc', name='Yu Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,516 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palai.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:49:06,517 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MOD20.TTF', name='Modern No. 20', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,517 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMCN.TTF', name='Franklin Gothic Demi Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-20 18:49:06,517 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrimabd.ttf', name='Ebrima', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:49:06,517 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\javatext.ttf', name='Javanese Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,518 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CASTELAR.TTF', name='Castellar', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,518 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSDI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-20 18:49:06,518 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelawUI.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,519 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAX.TTF', name='Lucida Fax', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,519 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunbd.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:49:06,519 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF.ttf', name='Sitka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,521 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTL.TTF', name='Copperplate Gothic Light', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,521 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
2023-04-20 18:49:06,521 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeui.ttf', name='Segoe UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,521 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Gabriola.ttf', name='Gabriola', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,521 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTBI.TTF', name='Calisto MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:49:06,521 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicz.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:49:06,522 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALN.TTF', name='Arial', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 6.613636363636363
2023-04-20 18:49:06,522 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKBI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:49:06,522 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FREESCPT.TTF', name='Freestyle Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,523 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTURY.TTF', name='Century', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,523 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaB.ttf', name='Nirmala UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:49:06,523 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSB.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:49:06,524 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSD.TTF', name='Lucida Sans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-20 18:49:06,524 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuisl.ttf', name='Segoe UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2023-04-20 18:49:06,524 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:49:06,525 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:49:06,525 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguihis.ttf', name='Segoe UI Historic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,525 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCB____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-04-20 18:49:06,526 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambria.ttc', name='Cambria', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,526 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKBI.TTF', name='Rockwell', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:49:06,526 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGENG.TTF', name='Niagara Engraved', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,527 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisym.ttf', name='Segoe UI Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,527 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inkfree.ttf', name='Ink Free', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,527 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASBD.TTF', name='Eras Bold ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,528 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILC____.TTF', name='Gill Sans MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-20 18:49:06,528 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candara.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,528 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\bahnschrift.ttf', name='Bahnschrift', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,529 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BROADW.TTF', name='Broadway', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,531 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolaz.ttf', name='Consolas', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:49:06,531 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CBI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2023-04-20 18:49:06,532 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuii.ttf', name='Segoe UI', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:49:06,532 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibli.ttf', name='Segoe UI', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2023-04-20 18:49:06,532 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEDI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-20 18:49:06,533 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucit.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:49:06,533 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BKANT.TTF', name='Book Antiqua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,533 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothL.ttc', name='Yu Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-20 18:49:06,534 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrii.ttf', name='Calibri', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:49:06,534 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CURLZ___.TTF', name='Curlz MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,534 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelb.ttf', name='Corbel', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:49:06,536 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARLRDBD.TTF', name='Arial Rounded MT Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,536 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothB.ttc', name='Yu Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:49:06,536 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASDEMI.TTF', name='Eras Demi ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,537 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
2023-04-20 18:49:06,537 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANS.TTF', name='Lucida Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,537 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariblk.ttf', name='Arial', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 6.888636363636364
2023-04-20 18:49:06,538 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCKRIST.TTF', name='Kristen ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,538 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\KUNSTLER.TTF', name='Kunstler Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,538 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanb.ttf', name='Constantia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:49:06,538 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PAPYRUS.TTF', name='Papyrus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,539 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JUICE___.TTF', name='Juice ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,539 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguili.ttf', name='Segoe UI', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-04-20 18:49:06,539 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:49:06,540 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarab.ttf', name='Candara', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:49:06,540 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\IMPRISHA.TTF', name='Imprint MT Shadow', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,540 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailu.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,540 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbi.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:49:06,541 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuil.ttf', name='Segoe UI', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-20 18:49:06,541 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanai.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
2023-04-20 18:49:06,541 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoepr.ttf', name='Segoe Print', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,542 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaraz.ttf', name='Candara', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:49:06,542 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNB.TTF', name='Arial', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 6.8986363636363635
2023-04-20 18:49:06,542 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspab.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:49:06,542 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,544 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCM____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-20 18:49:06,544 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARNGTON.TTF', name='Harrington', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,544 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbd.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:49:06,545 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:49:06,545 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILSANUB.TTF', name='Gill Sans Ultra Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,545 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibri.ttf', name='Calibri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,545 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiaz.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:49:06,546 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegoeIcons.ttf', name='Segoe Fluent Icons', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,546 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAGNETOB.TTF', name='Magneto', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:49:06,546 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICI.TTF', name='Century Gothic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:49:06,547 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCBLKAD.TTF', name='Blackadder ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,547 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahomabd.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:49:06,548 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugi.ttf', name='Gadugi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,548 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LCALLIG.TTF', name='Lucida Calligraphy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:49:06,548 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyh.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,549 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsunb.ttf', name='SimSun-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,549 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgun.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,549 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIL_____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,550 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VLADIMIR.TTF', name='Vladimir Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,550 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,550 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msgothic.ttc', name='MS Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,551 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRSCRIPT.TTF', name='French Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,551 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILBI___.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:49:06,552 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASLGHT.TTF', name='Eras Light ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,552 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTB.TTF', name='Calisto MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:49:06,552 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunsl.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-20 18:49:06,552 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRUSHSCI.TTF', name='Brush Script MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:49:06,552 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SNAP____.TTF', name='Snap ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,554 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuib.ttf', name='Segoe UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:49:06,554 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCBI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:49:06,554 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailub.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:49:06,554 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framd.ttf', name='Franklin Gothic Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,555 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolai.ttf', name='Consolas', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:49:06,555 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCEB.TTF', name='Tw Cen MT Condensed Extra Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-20 18:49:06,555 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\POORICH.TTF', name='Poor Richard', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,555 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDYSTO.TTF', name='Goudy Stout', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,557 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKB.TTF', name='Rockwell', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:49:06,557 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PALSCRI.TTF', name='Palace Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,557 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarai.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:49:06,558 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\micross.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,558 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LEELAWDB.TTF', name='Leelawadee', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:49:06,558 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABK.TTF', name='Franklin Gothic Book', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,559 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjh.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,559 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palabi.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:49:06,559 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAVIE.TTF', name='Ravie', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,560 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCK.TTF', name='Rockwell', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,560 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\pala.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,561 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibriz.ttf', name='Calibri', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:49:06,561 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugib.ttf', name='Gadugi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:49:06,562 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_PSTC.TTF', name='Bodoni MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-20 18:49:06,562 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENSCBK.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,562 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanab.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
2023-04-20 18:49:06,562 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LATINWD.TTF', name='Wide Latin', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
2023-04-20 18:49:06,563 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbeli.ttf', name='Corbel', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:49:06,563 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIGI.TTF', name='Gigi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,563 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITED.TTF', name='Lucida Bright', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-20 18:49:06,563 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbi.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:49:06,565 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhl.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2023-04-20 18:49:06,565 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguiemj.ttf', name='Segoe UI Emoji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,565 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OCRAEXT.TTF', name='OCR A Extended', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
2023-04-20 18:49:06,566 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebuc.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,566 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SHOWG.TTF', name='Showcard Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,567 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BASKVILL.TTF', name='Baskerville Old Face', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,567 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriab.ttf', name='Cambria', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:49:06,568 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAIAN.TTF', name='Maiandra GD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,568 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCRIPTBL.TTF', name='Script MT Bold', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:49:06,568 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLECB.TTF', name='Gloucester MT Extra Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-20 18:49:06,568 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNTI.TTF', name='Elephant', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:49:06,569 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFR.TTF', name='Californian FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,569 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHIC.TTF', name='Century Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,570 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PLAYBILL.TTF', name='Playbill', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,570 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABKIT.TTF', name='Franklin Gothic Book', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:49:06,570 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARLOWSI.TTF', name='Harlow Solid Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:49:06,570 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPE.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,570 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taile.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,571 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibl.ttf', name='Segoe UI', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2023-04-20 18:49:06,571 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNBI.TTF', name='Arial', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 7.8986363636363635
2023-04-20 18:49:06,571 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuiz.ttf', name='Segoe UI', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:49:06,571 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSBI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-20 18:49:06,572 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palab.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:49:06,572 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLI.TTF', name='Bell MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:49:06,572 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILLUBCD.TTF', name='Gill Sans Ultra Bold Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-20 18:49:06,572 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbd.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:49:06,572 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhbd.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:49:06,574 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoesc.ttf', name='Segoe Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,574 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\couri.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:49:06,574 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegUIVar.ttf', name='Segoe UI Variable', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,575 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_R.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,575 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTB.TTF', name='Copperplate Gothic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,575 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:49:06,575 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCB_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:49:06,575 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TEMPSITC.TTF', name='Tempus Sans ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,576 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MISTRAL.TTF', name='Mistral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,577 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FORTE.TTF', name='Forte', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,577 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CB.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-04-20 18:49:06,578 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbd.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:49:06,578 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STENCIL.TTF', name='Stencil', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,578 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrib.ttf', name='Calibri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:49:06,578 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERT.TTF', name='High Tower Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,579 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTCORSVA.TTF', name='Monotype Corsiva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:49:06,579 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFB.TTF', name='Californian FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:49:06,579 [33004] DEBUG    matplotlib.font_manager:1367: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
2023-04-20 18:50:00,538 [33004] DEBUG    matplotlib.font_manager:1329: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
2023-04-20 18:50:00,539 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:50:00,539 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:50:00,540 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,540 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2023-04-20 18:50:00,540 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2023-04-20 18:50:00,541 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:50:00,541 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:50:00,541 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:50:00,542 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,542 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:50:00,542 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,543 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:50:00,543 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,543 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,544 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,544 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:50:00,545 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:50:00,545 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,545 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,546 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2023-04-20 18:50:00,546 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,547 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,547 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:50:00,548 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:50:00,548 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:50:00,548 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,549 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,549 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:50:00,550 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:50:00,550 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,550 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,551 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,551 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:50:00,551 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,553 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:50:00,553 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,553 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,553 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2023-04-20 18:50:00,554 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLSNECB.TTF', name='Gill Sans MT Ext Condensed Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-20 18:50:00,555 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanz.ttf', name='Constantia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:50:00,555 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LEELAWAD.TTF', name='Leelawadee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,555 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\monbaiti.ttf', name='Mongolian Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,555 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-MEDIUM.TTF', name='Dubai', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-04-20 18:50:00,556 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-04-20 18:50:00,556 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FTLTLT.TTF', name='Footlight MT Light', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-20 18:50:00,556 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibril.ttf', name='Calibri', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-20 18:50:00,557 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSI.TTF', name='Goudy Old Style', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:50:00,557 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisbi.ttf', name='Segoe UI', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-20 18:50:00,557 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCCB___.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-04-20 18:50:00,558 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXD.TTF', name='Lucida Fax', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-20 18:50:00,558 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2023-04-20 18:50:00,558 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BSSYM7.TTF', name='Bookshelf Symbol 7', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,559 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAMDCN.TTF', name='Franklin Gothic Medium Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-20 18:50:00,559 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framdit.ttf', name='Franklin Gothic Medium', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:50:00,560 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSB.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:50:00,560 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-LIGHT.TTF', name='Dubai', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-20 18:50:00,560 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCC____.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-20 18:50:00,561 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_B.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:50:00,561 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COOPBL.TTF', name='Cooper Black', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,561 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNI.TTF', name='Arial', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 7.613636363636363
2023-04-20 18:50:00,562 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\INFROMAN.TTF', name='Informal Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,562 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSB.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-20 18:50:00,562 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BERNHC.TTF', name='Bernard MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-20 18:50:00,564 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEB.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-20 18:50:00,564 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCEDSCR.TTF', name='Edwardian Script ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,565 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consola.ttf', name='Consolas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,565 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,565 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\holomdl2.ttf', name='HoloLens MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,566 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COLONNA.TTF', name='Colonna MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,566 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYR.TTF', name='Agency FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,566 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRITANIC.TTF', name='Britannic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,566 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiai.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:50:00,567 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:50:00,567 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaS.ttf', name='Nirmala UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2023-04-20 18:50:00,567 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CHILLER.TTF', name='Chiller', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,569 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,569 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAB.TTF', name='Book Antiqua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:50:00,569 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothM.ttc', name='Yu Gothic', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-04-20 18:50:00,569 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG2.TTF', name='Wingdings 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,570 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Nirmala.ttf', name='Nirmala UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,570 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelUIsl.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2023-04-20 18:50:00,570 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriai.ttf', name='Cambria', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:50:00,571 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariali.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
2023-04-20 18:50:00,571 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARA.TTF', name='Garamond', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,571 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSPCL.TTF', name='MS Reference Specialty', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,572 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-REGULAR.TTF', name='Dubai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,572 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LHANDW.TTF', name='Lucida Handwriting', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:50:00,572 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:50:00,573 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comici.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:50:00,573 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTAUR.TTF', name='Centaur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,574 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEBO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-20 18:50:00,574 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ONYX.TTF', name='Onyx', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,574 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrima.ttf', name='Ebrima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,575 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFI.TTF', name='Californian FB', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:50:00,575 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERBI___.TTF', name='Perpetua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:50:00,576 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbell.ttf', name='Corbel', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-20 18:50:00,576 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILI____.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:50:00,576 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segmdl2.ttf', name='Segoe MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,576 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-BOLD.TTF', name='Dubai', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:50:00,577 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FELIXTI.TTF', name='Felix Titling', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,577 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbd.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
2023-04-20 18:50:00,577 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taileb.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:50:00,579 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeprb.ttf', name='Segoe Print', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:50:00,579 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoescb.ttf', name='Segoe Script', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:50:00,579 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITE.TTF', name='Lucida Bright', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,579 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhbd.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:50:00,580 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\times.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,580 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisb.ttf', name='Segoe UI', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-20 18:50:00,581 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSDB.TTF', name='Berlin Sans FB Demi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:50:00,581 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbi.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
2023-04-20 18:50:00,581 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesi.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:50:00,581 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADM.TTF', name='Franklin Gothic Demi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,582 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERTI.TTF', name='High Tower Text', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:50:00,582 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF-Italic.ttf', name='Sitka', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:50:00,582 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsun.ttc', name='SimSun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,582 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTI.TTF', name='Calisto MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:50:00,584 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCMI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:50:00,584 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaral.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,584 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\lucon.ttf', name='Lucida Console', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,585 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_I.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:50:00,585 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mvboli.ttf', name='MV Boli', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,585 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiab.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:50:00,586 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\l_10646.ttf', name='Lucida Sans Unicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,586 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTIBD.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:50:00,586 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNT.TTF', name='Elephant', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,587 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASMD.TTF', name='Eras Medium ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,587 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MSUIGHUR.TTF', name='Microsoft Uighur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,587 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYB.TTF', name='Agency FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:50:00,588 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MSUIGHUB.TTF', name='Microsoft Uighur', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:50:00,588 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicbd.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:50:00,589 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMIT.TTF', name='Franklin Gothic Demi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:50:00,589 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKEB.TTF', name='Rockwell Extra Bold', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
2023-04-20 18:50:00,589 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PER_____.TTF', name='Perpetua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,590 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VINERITC.TTF', name='Viner Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,590 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\marlett.ttf', name='Marlett', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-04-20 18:50:00,590 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrili.ttf', name='Calibri', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-04-20 18:50:00,591 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICBI.TTF', name='Century Gothic', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:50:00,591 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ALGER.TTF', name='Algerian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,592 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOS.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,592 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelz.ttf', name='Corbel', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:50:00,592 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILB____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:50:00,593 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUABI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:50:00,593 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\sylfaen.ttf', name='Sylfaen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,594 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriaz.ttf', name='Cambria', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:50:00,594 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanaz.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
2023-04-20 18:50:00,594 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constan.ttf', name='Constantia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,595 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTILI.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-20 18:50:00,595 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCM_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,596 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhl.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2023-04-20 18:50:00,596 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOS.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-20 18:50:00,597 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HATTEN.TTF', name='Haettenschweiler', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,597 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JOKERMAN.TTF', name='Jokerman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,597 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ENGR.TTF', name='Engravers MT', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-04-20 18:50:00,598 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARAIT.TTF', name='Garamond', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:50:00,598 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,598 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelli.ttf', name='Corbel', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-04-20 18:50:00,599 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constani.ttf', name='Constantia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:50:00,599 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIST.TTF', name='Calisto MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,599 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PARCHM.TTF', name='Parchment', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,600 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\himalaya.ttf', name='Microsoft Himalaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,600 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRADHITC.TTF', name='Bradley Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,600 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\wingding.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,601 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtextb.ttf', name='Myanmar Text', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:50:00,601 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG3.TTF', name='Wingdings 3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,602 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGSOL.TTF', name='Niagara Solid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,602 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarali.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:50:00,602 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKI.TTF', name='Rockwell', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:50:00,603 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolab.ttf', name='Consolas', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:50:00,603 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXDI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-20 18:50:00,603 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BAUHS93.TTF', name='Bauhaus 93', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,605 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisli.ttf', name='Segoe UI', style='italic', variant='normal', weight=350, stretch='normal', size='scalable')) = 11.0975
2023-04-20 18:50:00,605 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELL.TTF', name='Bell MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,605 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2023-04-20 18:50:00,606 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyi.ttf', name='Microsoft Yi Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,606 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSR.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,606 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHVIT.TTF', name='Franklin Gothic Heavy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:50:00,607 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OLDENGL.TTF', name='Old English Text MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,607 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbel.ttf', name='Corbel', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,608 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLB.TTF', name='Bell MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:50:00,608 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelaUIb.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:50:00,608 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHV.TTF', name='Franklin Gothic Heavy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,608 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OUTLOOK.TTF', name='MS Outlook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,608 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PRISTINA.TTF', name='Pristina', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,610 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERI____.TTF', name='Perpetua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:50:00,610 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtext.ttf', name='Myanmar Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,611 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSAN.TTF', name='MS Reference Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,611 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERB____.TTF', name='Perpetua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:50:00,611 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTEXTRA.TTF', name='MT Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,611 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKB.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:50:00,612 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARABD.TTF', name='Garamond', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:50:00,612 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cour.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,612 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mingliub.ttc', name='MingLiU-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,613 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICB.TTF', name='Century Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:50:00,613 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspa.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,614 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VIVALDII.TTF', name='Vivaldi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:50:00,614 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAGE.TTF', name='Rage Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:50:00,614 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-20 18:50:00,614 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2023-04-20 18:50:00,614 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MATURASC.TTF', name='Matura MT Script Capitals', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,615 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comic.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,615 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbi.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:50:00,615 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothR.ttc', name='Yu Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,615 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palai.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:50:00,617 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MOD20.TTF', name='Modern No. 20', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,617 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMCN.TTF', name='Franklin Gothic Demi Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-20 18:50:00,617 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrimabd.ttf', name='Ebrima', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:50:00,617 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\javatext.ttf', name='Javanese Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,617 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CASTELAR.TTF', name='Castellar', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,617 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSDI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-20 18:50:00,619 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelawUI.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,619 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAX.TTF', name='Lucida Fax', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,619 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunbd.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:50:00,620 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF.ttf', name='Sitka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,620 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTL.TTF', name='Copperplate Gothic Light', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,620 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
2023-04-20 18:50:00,620 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeui.ttf', name='Segoe UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,620 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Gabriola.ttf', name='Gabriola', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,622 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTBI.TTF', name='Calisto MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:50:00,622 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicz.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:50:00,622 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALN.TTF', name='Arial', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 6.613636363636363
2023-04-20 18:50:00,622 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKBI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:50:00,623 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FREESCPT.TTF', name='Freestyle Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,623 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTURY.TTF', name='Century', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,623 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaB.ttf', name='Nirmala UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:50:00,623 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSB.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:50:00,623 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSD.TTF', name='Lucida Sans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-20 18:50:00,623 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuisl.ttf', name='Segoe UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2023-04-20 18:50:00,623 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:50:00,623 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:50:00,623 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguihis.ttf', name='Segoe UI Historic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,623 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCB____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-04-20 18:50:00,623 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambria.ttc', name='Cambria', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,623 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKBI.TTF', name='Rockwell', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:50:00,623 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGENG.TTF', name='Niagara Engraved', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,623 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisym.ttf', name='Segoe UI Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,623 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inkfree.ttf', name='Ink Free', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,627 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASBD.TTF', name='Eras Bold ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,627 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILC____.TTF', name='Gill Sans MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-20 18:50:00,627 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candara.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,627 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\bahnschrift.ttf', name='Bahnschrift', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,627 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BROADW.TTF', name='Broadway', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,627 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolaz.ttf', name='Consolas', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:50:00,627 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CBI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2023-04-20 18:50:00,627 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuii.ttf', name='Segoe UI', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:50:00,627 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibli.ttf', name='Segoe UI', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2023-04-20 18:50:00,627 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEDI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-20 18:50:00,627 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucit.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:50:00,627 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BKANT.TTF', name='Book Antiqua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,627 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothL.ttc', name='Yu Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-20 18:50:00,627 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrii.ttf', name='Calibri', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:50:00,631 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CURLZ___.TTF', name='Curlz MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,631 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelb.ttf', name='Corbel', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:50:00,631 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARLRDBD.TTF', name='Arial Rounded MT Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,631 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothB.ttc', name='Yu Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:50:00,631 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASDEMI.TTF', name='Eras Demi ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,631 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
2023-04-20 18:50:00,631 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANS.TTF', name='Lucida Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,633 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariblk.ttf', name='Arial', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 6.888636363636364
2023-04-20 18:50:00,633 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCKRIST.TTF', name='Kristen ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,633 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\KUNSTLER.TTF', name='Kunstler Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,634 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanb.ttf', name='Constantia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:50:00,634 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PAPYRUS.TTF', name='Papyrus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,635 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JUICE___.TTF', name='Juice ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,635 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguili.ttf', name='Segoe UI', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-04-20 18:50:00,635 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:50:00,636 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarab.ttf', name='Candara', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:50:00,636 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\IMPRISHA.TTF', name='Imprint MT Shadow', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,636 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailu.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,637 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbi.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:50:00,637 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuil.ttf', name='Segoe UI', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-20 18:50:00,637 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanai.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
2023-04-20 18:50:00,637 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoepr.ttf', name='Segoe Print', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,638 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaraz.ttf', name='Candara', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:50:00,638 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNB.TTF', name='Arial', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 6.8986363636363635
2023-04-20 18:50:00,639 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspab.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:50:00,639 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,639 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCM____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-20 18:50:00,640 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARNGTON.TTF', name='Harrington', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,640 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbd.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:50:00,640 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:50:00,641 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILSANUB.TTF', name='Gill Sans Ultra Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,641 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibri.ttf', name='Calibri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,641 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiaz.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:50:00,641 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegoeIcons.ttf', name='Segoe Fluent Icons', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,642 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAGNETOB.TTF', name='Magneto', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:50:00,642 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICI.TTF', name='Century Gothic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:50:00,642 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCBLKAD.TTF', name='Blackadder ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,643 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahomabd.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:50:00,643 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugi.ttf', name='Gadugi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,643 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LCALLIG.TTF', name='Lucida Calligraphy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:50:00,643 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyh.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,644 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsunb.ttf', name='SimSun-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,644 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgun.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,644 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIL_____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,645 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VLADIMIR.TTF', name='Vladimir Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,645 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,645 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msgothic.ttc', name='MS Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,645 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRSCRIPT.TTF', name='French Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,646 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILBI___.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:50:00,646 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASLGHT.TTF', name='Eras Light ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,646 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTB.TTF', name='Calisto MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:50:00,647 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunsl.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-20 18:50:00,647 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRUSHSCI.TTF', name='Brush Script MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:50:00,647 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SNAP____.TTF', name='Snap ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,647 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuib.ttf', name='Segoe UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:50:00,648 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCBI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:50:00,648 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailub.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:50:00,648 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framd.ttf', name='Franklin Gothic Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,649 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolai.ttf', name='Consolas', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:50:00,649 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCEB.TTF', name='Tw Cen MT Condensed Extra Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-20 18:50:00,649 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\POORICH.TTF', name='Poor Richard', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,649 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDYSTO.TTF', name='Goudy Stout', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,650 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKB.TTF', name='Rockwell', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:50:00,650 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PALSCRI.TTF', name='Palace Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,650 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarai.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:50:00,651 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\micross.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,651 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LEELAWDB.TTF', name='Leelawadee', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:50:00,651 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABK.TTF', name='Franklin Gothic Book', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,651 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjh.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,652 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palabi.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:50:00,652 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAVIE.TTF', name='Ravie', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,652 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCK.TTF', name='Rockwell', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,653 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\pala.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,653 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibriz.ttf', name='Calibri', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:50:00,653 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugib.ttf', name='Gadugi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:50:00,653 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_PSTC.TTF', name='Bodoni MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-20 18:50:00,653 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENSCBK.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,655 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanab.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
2023-04-20 18:50:00,655 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LATINWD.TTF', name='Wide Latin', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
2023-04-20 18:50:00,655 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbeli.ttf', name='Corbel', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:50:00,655 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIGI.TTF', name='Gigi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,655 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITED.TTF', name='Lucida Bright', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-20 18:50:00,657 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbi.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:50:00,657 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhl.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2023-04-20 18:50:00,657 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguiemj.ttf', name='Segoe UI Emoji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,657 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OCRAEXT.TTF', name='OCR A Extended', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
2023-04-20 18:50:00,658 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebuc.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,658 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SHOWG.TTF', name='Showcard Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,658 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BASKVILL.TTF', name='Baskerville Old Face', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,658 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriab.ttf', name='Cambria', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:50:00,659 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAIAN.TTF', name='Maiandra GD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,659 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCRIPTBL.TTF', name='Script MT Bold', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:50:00,659 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLECB.TTF', name='Gloucester MT Extra Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-20 18:50:00,660 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNTI.TTF', name='Elephant', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:50:00,660 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFR.TTF', name='Californian FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,660 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHIC.TTF', name='Century Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,661 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PLAYBILL.TTF', name='Playbill', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,661 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABKIT.TTF', name='Franklin Gothic Book', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:50:00,661 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARLOWSI.TTF', name='Harlow Solid Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:50:00,661 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPE.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,662 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taile.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,662 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibl.ttf', name='Segoe UI', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2023-04-20 18:50:00,662 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNBI.TTF', name='Arial', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 7.8986363636363635
2023-04-20 18:50:00,662 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuiz.ttf', name='Segoe UI', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:50:00,663 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSBI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-20 18:50:00,663 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palab.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:50:00,663 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLI.TTF', name='Bell MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:50:00,663 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILLUBCD.TTF', name='Gill Sans Ultra Bold Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-20 18:50:00,665 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbd.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:50:00,665 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhbd.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:50:00,665 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoesc.ttf', name='Segoe Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,665 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\couri.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:50:00,666 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegUIVar.ttf', name='Segoe UI Variable', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,666 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_R.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,666 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTB.TTF', name='Copperplate Gothic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,666 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:50:00,667 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCB_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:50:00,667 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TEMPSITC.TTF', name='Tempus Sans ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,667 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MISTRAL.TTF', name='Mistral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,667 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FORTE.TTF', name='Forte', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,668 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CB.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-04-20 18:50:00,668 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbd.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:50:00,668 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STENCIL.TTF', name='Stencil', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,668 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrib.ttf', name='Calibri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:50:00,669 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERT.TTF', name='High Tower Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,669 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTCORSVA.TTF', name='Monotype Corsiva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,669 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFB.TTF', name='Californian FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:50:00,669 [33004] DEBUG    matplotlib.font_manager:1367: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to DejaVu Sans ('C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
2023-04-20 18:50:00,678 [33004] DEBUG    matplotlib.font_manager:1329: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2023-04-20 18:50:00,679 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:50:00,679 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:50:00,679 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,680 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2023-04-20 18:50:00,680 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2023-04-20 18:50:00,680 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:50:00,681 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:50:00,681 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:50:00,681 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,682 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:50:00,682 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,682 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:50:00,683 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,683 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,683 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,683 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:50:00,685 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:50:00,685 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,685 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,685 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2023-04-20 18:50:00,686 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,686 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,686 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:50:00,687 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:50:00,687 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:50:00,687 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,688 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,688 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:50:00,688 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:50:00,688 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,690 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,690 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,690 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:50:00,690 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,691 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:50:00,691 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,691 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,692 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2023-04-20 18:50:00,692 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLSNECB.TTF', name='Gill Sans MT Ext Condensed Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-20 18:50:00,692 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanz.ttf', name='Constantia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:50:00,693 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LEELAWAD.TTF', name='Leelawadee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,693 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\monbaiti.ttf', name='Mongolian Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,693 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-MEDIUM.TTF', name='Dubai', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-04-20 18:50:00,693 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-04-20 18:50:00,694 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FTLTLT.TTF', name='Footlight MT Light', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-20 18:50:00,694 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibril.ttf', name='Calibri', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-20 18:50:00,694 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSI.TTF', name='Goudy Old Style', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:50:00,695 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisbi.ttf', name='Segoe UI', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-20 18:50:00,695 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCCB___.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-04-20 18:50:00,695 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXD.TTF', name='Lucida Fax', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-20 18:50:00,695 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2023-04-20 18:50:00,696 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BSSYM7.TTF', name='Bookshelf Symbol 7', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,696 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAMDCN.TTF', name='Franklin Gothic Medium Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-20 18:50:00,696 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framdit.ttf', name='Franklin Gothic Medium', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:50:00,697 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSB.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:50:00,697 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-LIGHT.TTF', name='Dubai', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-20 18:50:00,697 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCC____.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-20 18:50:00,697 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_B.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:50:00,698 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COOPBL.TTF', name='Cooper Black', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,698 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNI.TTF', name='Arial', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 7.613636363636363
2023-04-20 18:50:00,698 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\INFROMAN.TTF', name='Informal Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,699 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSB.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-20 18:50:00,699 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BERNHC.TTF', name='Bernard MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-20 18:50:00,699 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEB.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-20 18:50:00,699 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCEDSCR.TTF', name='Edwardian Script ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,700 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consola.ttf', name='Consolas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,700 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,700 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\holomdl2.ttf', name='HoloLens MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,701 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COLONNA.TTF', name='Colonna MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,701 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYR.TTF', name='Agency FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,702 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRITANIC.TTF', name='Britannic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,702 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiai.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:50:00,702 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:50:00,702 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaS.ttf', name='Nirmala UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2023-04-20 18:50:00,702 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CHILLER.TTF', name='Chiller', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,704 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,704 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAB.TTF', name='Book Antiqua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:50:00,704 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothM.ttc', name='Yu Gothic', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-04-20 18:50:00,705 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG2.TTF', name='Wingdings 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,705 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Nirmala.ttf', name='Nirmala UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,705 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelUIsl.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2023-04-20 18:50:00,705 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriai.ttf', name='Cambria', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:50:00,706 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariali.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
2023-04-20 18:50:00,706 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARA.TTF', name='Garamond', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,706 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSPCL.TTF', name='MS Reference Specialty', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,707 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-REGULAR.TTF', name='Dubai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,707 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LHANDW.TTF', name='Lucida Handwriting', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:50:00,708 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:50:00,708 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comici.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:50:00,708 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTAUR.TTF', name='Centaur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,708 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEBO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-20 18:50:00,709 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ONYX.TTF', name='Onyx', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,709 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrima.ttf', name='Ebrima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,709 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFI.TTF', name='Californian FB', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:50:00,709 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERBI___.TTF', name='Perpetua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:50:00,710 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbell.ttf', name='Corbel', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-20 18:50:00,710 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILI____.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:50:00,710 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segmdl2.ttf', name='Segoe MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,710 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-BOLD.TTF', name='Dubai', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:50:00,711 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FELIXTI.TTF', name='Felix Titling', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,711 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbd.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
2023-04-20 18:50:00,711 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taileb.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:50:00,711 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeprb.ttf', name='Segoe Print', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:50:00,713 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoescb.ttf', name='Segoe Script', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:50:00,713 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITE.TTF', name='Lucida Bright', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,713 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhbd.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:50:00,713 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\times.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,713 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisb.ttf', name='Segoe UI', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-20 18:50:00,714 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSDB.TTF', name='Berlin Sans FB Demi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:50:00,714 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbi.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
2023-04-20 18:50:00,714 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesi.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:50:00,714 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADM.TTF', name='Franklin Gothic Demi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,715 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERTI.TTF', name='High Tower Text', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:50:00,715 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF-Italic.ttf', name='Sitka', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:50:00,715 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsun.ttc', name='SimSun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,716 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTI.TTF', name='Calisto MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:50:00,716 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCMI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:50:00,716 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaral.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,716 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\lucon.ttf', name='Lucida Console', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,718 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_I.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:50:00,718 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mvboli.ttf', name='MV Boli', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,718 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiab.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:50:00,719 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\l_10646.ttf', name='Lucida Sans Unicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,719 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTIBD.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:50:00,719 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNT.TTF', name='Elephant', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,719 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASMD.TTF', name='Eras Medium ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,720 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MSUIGHUR.TTF', name='Microsoft Uighur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,720 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYB.TTF', name='Agency FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:50:00,720 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MSUIGHUB.TTF', name='Microsoft Uighur', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:50:00,721 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicbd.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:50:00,721 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMIT.TTF', name='Franklin Gothic Demi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:50:00,721 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKEB.TTF', name='Rockwell Extra Bold', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
2023-04-20 18:50:00,722 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PER_____.TTF', name='Perpetua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,722 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VINERITC.TTF', name='Viner Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,722 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\marlett.ttf', name='Marlett', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-04-20 18:50:00,722 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrili.ttf', name='Calibri', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-04-20 18:50:00,724 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICBI.TTF', name='Century Gothic', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:50:00,724 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ALGER.TTF', name='Algerian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,724 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOS.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,725 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelz.ttf', name='Corbel', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:50:00,725 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILB____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:50:00,725 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUABI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:50:00,726 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\sylfaen.ttf', name='Sylfaen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,726 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriaz.ttf', name='Cambria', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:50:00,726 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanaz.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
2023-04-20 18:50:00,727 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constan.ttf', name='Constantia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,727 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTILI.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-20 18:50:00,727 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCM_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,728 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhl.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2023-04-20 18:50:00,728 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOS.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-20 18:50:00,728 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HATTEN.TTF', name='Haettenschweiler', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,729 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JOKERMAN.TTF', name='Jokerman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,729 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ENGR.TTF', name='Engravers MT', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-04-20 18:50:00,729 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARAIT.TTF', name='Garamond', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:50:00,730 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,730 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelli.ttf', name='Corbel', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-04-20 18:50:00,730 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constani.ttf', name='Constantia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:50:00,731 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIST.TTF', name='Calisto MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,731 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PARCHM.TTF', name='Parchment', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,731 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\himalaya.ttf', name='Microsoft Himalaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,732 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRADHITC.TTF', name='Bradley Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,732 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\wingding.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,732 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtextb.ttf', name='Myanmar Text', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:50:00,732 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG3.TTF', name='Wingdings 3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,733 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGSOL.TTF', name='Niagara Solid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,733 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarali.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:50:00,733 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKI.TTF', name='Rockwell', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:50:00,734 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolab.ttf', name='Consolas', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:50:00,734 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXDI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-20 18:50:00,734 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BAUHS93.TTF', name='Bauhaus 93', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,734 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisli.ttf', name='Segoe UI', style='italic', variant='normal', weight=350, stretch='normal', size='scalable')) = 11.0975
2023-04-20 18:50:00,736 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELL.TTF', name='Bell MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,736 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2023-04-20 18:50:00,736 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyi.ttf', name='Microsoft Yi Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,737 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSR.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,737 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHVIT.TTF', name='Franklin Gothic Heavy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:50:00,737 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OLDENGL.TTF', name='Old English Text MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,738 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbel.ttf', name='Corbel', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,738 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLB.TTF', name='Bell MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:50:00,738 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelaUIb.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:50:00,739 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHV.TTF', name='Franklin Gothic Heavy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,739 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OUTLOOK.TTF', name='MS Outlook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,739 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PRISTINA.TTF', name='Pristina', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,740 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERI____.TTF', name='Perpetua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:50:00,740 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtext.ttf', name='Myanmar Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,741 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSAN.TTF', name='MS Reference Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,741 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERB____.TTF', name='Perpetua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:50:00,741 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTEXTRA.TTF', name='MT Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,742 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKB.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:50:00,742 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARABD.TTF', name='Garamond', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:50:00,742 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cour.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,743 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mingliub.ttc', name='MingLiU-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,743 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICB.TTF', name='Century Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:50:00,743 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspa.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,744 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VIVALDII.TTF', name='Vivaldi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:50:00,744 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAGE.TTF', name='Rage Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:50:00,744 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-20 18:50:00,745 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2023-04-20 18:50:00,745 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MATURASC.TTF', name='Matura MT Script Capitals', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,745 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comic.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,746 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbi.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:50:00,746 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothR.ttc', name='Yu Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,746 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palai.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:50:00,746 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MOD20.TTF', name='Modern No. 20', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,748 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMCN.TTF', name='Franklin Gothic Demi Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-20 18:50:00,748 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrimabd.ttf', name='Ebrima', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:50:00,748 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\javatext.ttf', name='Javanese Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,749 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CASTELAR.TTF', name='Castellar', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,749 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSDI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-20 18:50:00,749 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelawUI.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,750 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAX.TTF', name='Lucida Fax', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,750 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunbd.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:50:00,750 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF.ttf', name='Sitka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,750 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTL.TTF', name='Copperplate Gothic Light', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,751 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
2023-04-20 18:50:00,751 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeui.ttf', name='Segoe UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,751 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Gabriola.ttf', name='Gabriola', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,753 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTBI.TTF', name='Calisto MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:50:00,753 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicz.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:50:00,753 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALN.TTF', name='Arial', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 6.613636363636363
2023-04-20 18:50:00,754 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKBI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:50:00,754 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FREESCPT.TTF', name='Freestyle Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,754 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTURY.TTF', name='Century', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,754 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaB.ttf', name='Nirmala UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:50:00,755 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSB.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:50:00,755 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSD.TTF', name='Lucida Sans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-20 18:50:00,755 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuisl.ttf', name='Segoe UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2023-04-20 18:50:00,756 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:50:00,756 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:50:00,756 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguihis.ttf', name='Segoe UI Historic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,756 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCB____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-04-20 18:50:00,758 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambria.ttc', name='Cambria', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,758 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKBI.TTF', name='Rockwell', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:50:00,758 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGENG.TTF', name='Niagara Engraved', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,759 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisym.ttf', name='Segoe UI Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,759 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inkfree.ttf', name='Ink Free', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,759 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASBD.TTF', name='Eras Bold ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,760 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILC____.TTF', name='Gill Sans MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-20 18:50:00,760 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candara.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,760 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\bahnschrift.ttf', name='Bahnschrift', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,760 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BROADW.TTF', name='Broadway', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,761 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolaz.ttf', name='Consolas', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:50:00,761 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CBI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2023-04-20 18:50:00,761 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuii.ttf', name='Segoe UI', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:50:00,762 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibli.ttf', name='Segoe UI', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2023-04-20 18:50:00,762 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEDI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-20 18:50:00,762 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucit.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:50:00,762 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BKANT.TTF', name='Book Antiqua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,764 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothL.ttc', name='Yu Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-20 18:50:00,764 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrii.ttf', name='Calibri', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:50:00,764 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CURLZ___.TTF', name='Curlz MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,765 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelb.ttf', name='Corbel', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:50:00,765 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARLRDBD.TTF', name='Arial Rounded MT Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,765 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothB.ttc', name='Yu Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:50:00,765 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASDEMI.TTF', name='Eras Demi ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,766 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
2023-04-20 18:50:00,766 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANS.TTF', name='Lucida Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,767 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariblk.ttf', name='Arial', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 6.888636363636364
2023-04-20 18:50:00,767 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCKRIST.TTF', name='Kristen ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,767 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\KUNSTLER.TTF', name='Kunstler Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,767 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanb.ttf', name='Constantia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:50:00,769 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PAPYRUS.TTF', name='Papyrus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,769 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JUICE___.TTF', name='Juice ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,769 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguili.ttf', name='Segoe UI', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-04-20 18:50:00,770 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:50:00,770 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarab.ttf', name='Candara', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:50:00,770 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\IMPRISHA.TTF', name='Imprint MT Shadow', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,771 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailu.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,771 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbi.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:50:00,771 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuil.ttf', name='Segoe UI', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-20 18:50:00,772 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanai.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
2023-04-20 18:50:00,772 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoepr.ttf', name='Segoe Print', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,772 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaraz.ttf', name='Candara', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:50:00,773 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNB.TTF', name='Arial', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 6.8986363636363635
2023-04-20 18:50:00,773 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspab.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:50:00,773 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,774 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCM____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-20 18:50:00,774 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARNGTON.TTF', name='Harrington', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,774 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbd.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:50:00,775 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:50:00,775 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILSANUB.TTF', name='Gill Sans Ultra Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,775 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibri.ttf', name='Calibri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,776 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiaz.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:50:00,776 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegoeIcons.ttf', name='Segoe Fluent Icons', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,776 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAGNETOB.TTF', name='Magneto', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:50:00,776 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICI.TTF', name='Century Gothic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:50:00,778 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCBLKAD.TTF', name='Blackadder ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,778 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahomabd.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:50:00,778 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugi.ttf', name='Gadugi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,779 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LCALLIG.TTF', name='Lucida Calligraphy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:50:00,779 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyh.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,779 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsunb.ttf', name='SimSun-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,779 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgun.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,780 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIL_____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,780 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VLADIMIR.TTF', name='Vladimir Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,780 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,781 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msgothic.ttc', name='MS Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,781 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRSCRIPT.TTF', name='French Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,781 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILBI___.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:50:00,781 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASLGHT.TTF', name='Eras Light ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,782 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTB.TTF', name='Calisto MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:50:00,782 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunsl.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-20 18:50:00,782 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRUSHSCI.TTF', name='Brush Script MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:50:00,783 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SNAP____.TTF', name='Snap ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,783 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuib.ttf', name='Segoe UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:50:00,783 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCBI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:50:00,783 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailub.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:50:00,784 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framd.ttf', name='Franklin Gothic Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,784 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolai.ttf', name='Consolas', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:50:00,784 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCEB.TTF', name='Tw Cen MT Condensed Extra Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-20 18:50:00,785 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\POORICH.TTF', name='Poor Richard', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,785 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDYSTO.TTF', name='Goudy Stout', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,785 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKB.TTF', name='Rockwell', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:50:00,786 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PALSCRI.TTF', name='Palace Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,786 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarai.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:50:00,786 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\micross.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,786 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LEELAWDB.TTF', name='Leelawadee', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:50:00,786 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABK.TTF', name='Franklin Gothic Book', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,788 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjh.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,788 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palabi.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:50:00,788 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAVIE.TTF', name='Ravie', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,788 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCK.TTF', name='Rockwell', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,789 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\pala.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,789 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibriz.ttf', name='Calibri', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:50:00,789 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugib.ttf', name='Gadugi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:50:00,790 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_PSTC.TTF', name='Bodoni MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-20 18:50:00,790 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENSCBK.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,790 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanab.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
2023-04-20 18:50:00,791 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LATINWD.TTF', name='Wide Latin', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
2023-04-20 18:50:00,791 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbeli.ttf', name='Corbel', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:50:00,791 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIGI.TTF', name='Gigi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,791 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITED.TTF', name='Lucida Bright', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-20 18:50:00,792 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbi.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:50:00,792 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhl.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2023-04-20 18:50:00,792 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguiemj.ttf', name='Segoe UI Emoji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,792 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OCRAEXT.TTF', name='OCR A Extended', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
2023-04-20 18:50:00,793 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebuc.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,793 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SHOWG.TTF', name='Showcard Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,793 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BASKVILL.TTF', name='Baskerville Old Face', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,794 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriab.ttf', name='Cambria', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:50:00,794 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAIAN.TTF', name='Maiandra GD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,794 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCRIPTBL.TTF', name='Script MT Bold', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:50:00,795 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLECB.TTF', name='Gloucester MT Extra Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-20 18:50:00,795 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNTI.TTF', name='Elephant', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:50:00,795 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFR.TTF', name='Californian FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,796 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHIC.TTF', name='Century Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,796 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PLAYBILL.TTF', name='Playbill', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,796 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABKIT.TTF', name='Franklin Gothic Book', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:50:00,796 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARLOWSI.TTF', name='Harlow Solid Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:50:00,796 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPE.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,796 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taile.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,797 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibl.ttf', name='Segoe UI', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2023-04-20 18:50:00,797 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNBI.TTF', name='Arial', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 7.8986363636363635
2023-04-20 18:50:00,797 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuiz.ttf', name='Segoe UI', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-20 18:50:00,798 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSBI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-20 18:50:00,798 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palab.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:50:00,798 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLI.TTF', name='Bell MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:50:00,798 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILLUBCD.TTF', name='Gill Sans Ultra Bold Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-20 18:50:00,800 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbd.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:50:00,800 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhbd.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:50:00,800 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoesc.ttf', name='Segoe Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,800 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\couri.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:50:00,800 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegUIVar.ttf', name='Segoe UI Variable', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,800 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_R.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,800 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTB.TTF', name='Copperplate Gothic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,802 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-20 18:50:00,802 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCB_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:50:00,802 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TEMPSITC.TTF', name='Tempus Sans ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,802 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MISTRAL.TTF', name='Mistral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,803 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FORTE.TTF', name='Forte', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,803 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CB.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-04-20 18:50:00,803 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbd.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:50:00,804 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STENCIL.TTF', name='Stencil', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,804 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrib.ttf', name='Calibri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:50:00,804 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERT.TTF', name='High Tower Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,805 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTCORSVA.TTF', name='Monotype Corsiva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-20 18:50:00,805 [33004] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFB.TTF', name='Californian FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-20 18:50:00,805 [33004] DEBUG    matplotlib.font_manager:1367: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
2023-04-20 19:12:49,520 [33956] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-04-20 19:12:49,522 [33956] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-04-20 19:12:49,522 [33956] INFO     root:247: [JupyterRequire] Initializing comms.
2023-04-20 19:12:49,525 [33956] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-04-20 19:12:49,526 [33956] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-04-20 19:12:49,527 [33956] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-04-20 19:13:16,698 [28176] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-04-20 19:13:16,698 [28176] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-04-20 19:13:16,699 [28176] INFO     root:247: [JupyterRequire] Initializing comms.
2023-04-20 19:13:16,703 [28176] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-04-20 19:13:16,704 [28176] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-04-20 19:13:16,704 [28176] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-04-20 19:44:38,235 [28176] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-04-20 19:44:38,236 [28176] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-04-20 19:44:38,236 [28176] INFO     root:247: [JupyterRequire] Initializing comms.
2023-04-20 19:44:38,240 [28176] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-04-20 19:44:38,242 [28176] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-04-20 19:44:38,242 [28176] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-04-20 19:44:38,292 [1948] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-04-20 19:44:38,294 [1948] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-04-20 19:44:38,294 [1948] INFO     root:247: [JupyterRequire] Initializing comms.
2023-04-20 19:44:38,302 [1948] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-04-20 19:44:38,304 [1948] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-04-20 19:44:38,305 [1948] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-04-20 20:33:54,760 [1948] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-04-20 20:33:54,762 [1948] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-04-20 20:33:54,763 [1948] INFO     root:247: [JupyterRequire] Initializing comms.
2023-04-20 20:33:54,767 [1948] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-04-20 20:33:54,769 [1948] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-04-20 20:33:54,769 [1948] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-04-20 20:33:54,779 [28176] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-04-20 20:33:54,780 [28176] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-04-20 20:33:54,781 [28176] INFO     root:247: [JupyterRequire] Initializing comms.
2023-04-20 20:33:54,784 [28176] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-04-20 20:33:54,785 [28176] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-04-20 20:33:54,785 [28176] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-04-20 21:47:16,882 [28176] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-04-20 21:47:16,886 [28176] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-04-20 21:47:16,886 [28176] INFO     root:247: [JupyterRequire] Initializing comms.
2023-04-20 21:47:16,890 [28176] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-04-20 21:47:16,890 [28176] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-04-20 21:47:16,894 [28176] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-04-20 21:47:16,914 [1948] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-04-20 21:47:16,914 [1948] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-04-20 21:47:16,914 [1948] INFO     root:247: [JupyterRequire] Initializing comms.
2023-04-20 21:47:16,918 [1948] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-04-20 21:47:16,918 [1948] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-04-20 21:47:16,923 [1948] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-04-21 11:11:20,834 [1948] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-04-21 11:11:20,836 [1948] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-04-21 11:11:20,837 [1948] INFO     root:247: [JupyterRequire] Initializing comms.
2023-04-21 11:11:20,843 [1948] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-04-21 11:11:20,845 [1948] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-04-21 11:11:20,845 [1948] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-04-21 11:11:20,947 [28176] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-04-21 11:11:20,949 [28176] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-04-21 11:11:20,950 [28176] INFO     root:247: [JupyterRequire] Initializing comms.
2023-04-21 11:11:20,957 [28176] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-04-21 11:11:20,959 [28176] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-04-21 11:11:20,960 [28176] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-04-21 12:19:44,101 [28176] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-04-21 12:19:44,102 [28176] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-04-21 12:19:44,102 [28176] INFO     root:247: [JupyterRequire] Initializing comms.
2023-04-21 12:19:44,107 [28176] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-04-21 12:19:44,108 [28176] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-04-21 12:19:44,108 [28176] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-04-21 12:19:44,119 [1948] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-04-21 12:19:44,119 [1948] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-04-21 12:19:44,119 [1948] INFO     root:247: [JupyterRequire] Initializing comms.
2023-04-21 12:19:44,122 [1948] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-04-21 12:19:44,123 [1948] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-04-21 12:19:44,123 [1948] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-04-21 12:41:48,196 [1948] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-04-21 12:41:48,197 [1948] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-04-21 12:41:48,197 [1948] INFO     root:247: [JupyterRequire] Initializing comms.
2023-04-21 12:41:48,201 [1948] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-04-21 12:41:48,205 [1948] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-04-21 12:41:48,205 [1948] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-04-21 12:41:48,245 [28176] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-04-21 12:41:48,245 [28176] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-04-21 12:41:48,245 [28176] INFO     root:247: [JupyterRequire] Initializing comms.
2023-04-21 12:41:48,253 [28176] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-04-21 12:41:48,253 [28176] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-04-21 12:41:48,253 [28176] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-04-21 16:35:22,274 [5108] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-04-21 16:35:22,275 [5108] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-04-21 16:35:22,276 [5108] INFO     root:247: [JupyterRequire] Initializing comms.
2023-04-21 16:35:22,281 [5108] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-04-21 16:35:22,282 [5108] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-04-21 16:35:22,283 [5108] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-04-21 16:35:22,817 [5108] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-04-21 16:35:22,818 [5108] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-04-21 16:35:22,818 [5108] INFO     root:247: [JupyterRequire] Initializing comms.
2023-04-21 16:35:22,821 [5108] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-04-21 16:35:22,822 [5108] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-04-21 16:35:22,822 [5108] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-04-21 16:40:06,054 [19200] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-04-21 16:40:06,055 [19200] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-04-21 16:40:06,056 [19200] INFO     root:247: [JupyterRequire] Initializing comms.
2023-04-21 16:40:06,060 [19200] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-04-21 16:40:06,061 [19200] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-04-21 16:40:06,061 [19200] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-04-21 16:40:07,969 [19200] INFO     numexpr.utils:147: [JupyterRequire] Note: NumExpr detected 12 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
2023-04-21 16:40:07,970 [19200] INFO     numexpr.utils:159: [JupyterRequire] NumExpr defaulting to 8 threads.
2023-04-21 16:40:08,924 [19200] DEBUG    matplotlib:275: [JupyterRequire] matplotlib data path: C:\Users\adity\anaconda3\lib\site-packages\matplotlib\mpl-data
2023-04-21 16:40:08,931 [19200] DEBUG    matplotlib:275: [JupyterRequire] CONFIGDIR=C:\Users\adity\.matplotlib
2023-04-21 16:40:08,933 [19200] DEBUG    matplotlib:1445: [JupyterRequire] interactive is False
2023-04-21 16:40:08,935 [19200] DEBUG    matplotlib:1446: [JupyterRequire] platform is win32
2023-04-21 16:40:08,935 [19200] DEBUG    matplotlib:1447: [JupyterRequire] loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', '_io', 'marshal', 'nt', 'winreg', '_frozen_importlib_external', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', 'encodings.cp1252', '_signal', 'encodings.latin_1', '_abc', 'abc', 'io', '__main__', '_stat', 'stat', '_collections_abc', 'genericpath', 'ntpath', 'os.path', 'os', '_sitebuiltins', '_locale', '_bootlocale', '_distutils_hack', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib.machinery', '_heapq', 'heapq', 'itertools', 'keyword', '_operator', 'operator', 'reprlib', '_collections', 'collections', 'collections.abc', '_functools', 'functools', 'contextlib', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', 'copyreg', 're', 'typing.io', 'typing.re', 'typing', 'importlib.abc', 'importlib.util', 'google', 'google.cloud', 'google.logging', 'mpl_toolkits', 'sphinxcontrib', 'zope', 'site', '_weakrefset', 'weakref', 'pkgutil', 'runpy', 'ipykernel._version', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'errno', 'signal', 'threading', 'msvcrt', '_winapi', 'subprocess', 'jupyter_client._version', 'posixpath', 'fnmatch', 'glob', '_socket', 'math', 'select', 'selectors', 'socket', 'zlib', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', '_bisect', 'bisect', '_random', '_sha512', 'random', 'tempfile', 'getpass', 'platform', 'zmq.libzmq', 'zmq.backend.select', 'cython_runtime', 'zmq.backend.cython.constants', '_cython_0_29_24', 'zmq.backend.cython.error', 'zmq.error', 'zmq.backend.cython.message', 'zmq.backend.cython.context', 'copy', '_struct', 'struct', '_compat_pickle', '_pickle', 'pickle', 'zmq.backend.cython.socket', 'zmq.backend.cython.utils', 'zmq.backend.cython._poll', 'zmq.backend.cython._version', 'zmq.backend.cython._device', 'zmq.backend.cython._proxy_steerable', 'zmq.backend.cython', 'zmq.backend', 'zmq.utils', 'zmq.utils.constant_names', 'zmq.sugar.constants', 'atexit', 'zmq.sugar.attrsettr', 'zmq.sugar.poll', 'zmq.utils.jsonapi', 'zmq.utils.strtypes', 'zmq.sugar.socket', 'zmq.sugar.context', 'zmq.sugar.frame', 'zmq.sugar.tracker', 'zmq.sugar.version', 'zmq.sugar.stopwatch', 'zmq.sugar', 'zmq', '_ast', 'ast', '_opcode', 'opcode', 'dis', 'token', 'tokenize', 'linecache', 'inspect', 'traitlets.utils', 'traitlets.utils.getargspec', 'traitlets.utils.importstring', 'traitlets.utils.sentinel', 'traitlets.utils.bunch', 'traitlets.utils.descriptions', 'traitlets.traitlets', 'traitlets.utils.decorators', 'traitlets._version', 'traitlets', 'traceback', '_string', 'string', 'logging', 'pprint', 'gettext', 'argparse', 'traitlets.config.loader', 'textwrap', 'traitlets.utils.text', 'traitlets.config.configurable', 'traitlets.config.application', 'traitlets.config', 'jupyter_client.localinterfaces', 'jupyter_core.version', 'jupyter_core', 'urllib', 'urllib.parse', 'pathlib', 'jupyter_core.paths', 'jupyter_client.utils', 'jupyter_client.connect', 'traitlets.log', 'jupyter_client.launcher', 'concurrent', 'concurrent.futures._base', 'concurrent.futures', '_ssl', 'binascii', 'base64', 'ssl', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', '_contextvars', 'contextvars', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.threads', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'asyncio.windows_events', 'asyncio', 'jupyter_client.channelsabc', 'jupyter_client.channels', 'jupyter_client.clientabc', 'jupyter_client.client', 'jupyter_client.kernelspec', 'jupyter_client.managerabc', 'jupyter_client.manager', '_queue', 'queue', 'jupyter_client.blocking.channels', 'jupyter_client.blocking.client', 'jupyter_client.blocking', 'zmq._future', 'zmq.asyncio', 'jupyter_client.asynchronous.channels', 'jupyter_client.asynchronous.client', 'jupyter_client.asynchronous', '_uuid', 'uuid', 'jupyter_client.multikernelmanager', 'jupyter_client', 'ipykernel.connect', 'ipykernel', 'tornado', '_datetime', 'datetime', 'numbers', 'logging.handlers', 'html.entities', 'html', 'array', 'tornado.speedups', 'tornado.util', 'tornado.escape', 'colorama.ansi', '_ctypes', 'ctypes._endian', 'ctypes', 'ctypes.wintypes', 'colorama.win32', 'colorama.winterm', 'colorama.ansitowin32', 'colorama.initialise', 'colorama', 'tornado.log', 'tornado.concurrent', 'tornado.ioloop', '__future__', 'tornado.platform', 'tornado.gen', 'tornado.platform.asyncio', 'zmq.eventloop.ioloop', 'zmq.eventloop', 'zmq.eventloop.zmqstream', 'IPython.core', 'IPython.core.getipython', 'IPython.core.release', 'sysconfig', 'pydoc', 'executing.executing', 'executing.version', 'executing', 'asttokens.line_numbers', 'six', 'six.moves', 'asttokens.util', 'asttokens.mark_tokens', 'asttokens.asttokens', 'asttokens', '_decimal', 'decimal', 'fractions', 'pure_eval.utils', 'pure_eval.my_getattr_static', 'pure_eval.core', 'pure_eval.version', 'pure_eval', 'stack_data.utils', 'stack_data.core', 'stack_data.formatting', 'stack_data.version', 'stack_data', 'pygments', 'pygments.formatters._mapping', 'pygments.plugin', 'pygments.util', 'pygments.formatters', 'pygments.styles', 'pygments.formatter', 'pygments.console', 'pygments.token', 'pygments.style', 'pygments.formatters.terminal256', 'bdb', 'IPython.utils', 'IPython.utils.ipstruct', 'IPython.utils.coloransi', 'IPython.utils.colorable', 'IPython.utils.PyColorize', 'locale', 'IPython.utils.encoding', 'IPython.utils.py3compat', 'IPython.core.excolors', 'cmd', 'codeop', 'code', 'pdb', 'IPython.core.debugger', 'IPython.core.display_trap', 'shlex', 'IPython.utils._process_common', 'IPython.utils._process_win32', 'IPython.utils.process', 'IPython.utils.decorators', 'IPython.utils.path', 'IPython.utils.terminal', 'IPython.core.ultratb', 'IPython.utils._sysinfo', 'IPython.utils.sysinfo', 'IPython.core.crashhandler', 'IPython.utils.importstring', 'IPython.paths', 'IPython.core.profiledir', 'IPython.core.application', 'IPython.terminal', '_hashlib', '_blake2', 'hashlib', 'IPython.core.compilerop', 'IPython.core.error', 'IPython.utils.text', 'IPython.core.magic_arguments', 'getopt', 'IPython.core.display_functions', 'mimetypes', 'IPython.testing', 'IPython.testing.skipdoctest', 'IPython.core.display', 'IPython.lib', 'IPython.lib.display', 'IPython.display', 'IPython.utils.data', 'IPython.core.page', 'IPython.lib.pretty', 'IPython.utils.openpy', 'IPython.utils.dir2', 'IPython.utils.wildcard', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.lexers', 'pygments.filter', 'pygments.filters', 'pygments.regexopt', 'pygments.lexer', 'pygments.unistring', 'pygments.lexers.python', 'pygments.formatters.html', 'IPython.core.oinspect', 'IPython.core.inputtransformer2', 'IPython.core.magic', 'pickleshare', 'IPython.core.hooks', 'IPython.core.autocall', 'IPython.core.macro', 'IPython.core.splitinput', 'IPython.core.prefilter', 'IPython.core.alias', 'IPython.core.builtin_trap', 'IPython.core.displayhook', 'IPython.core.displaypub', 'backcall.backcall', 'backcall', 'IPython.core.events', 'IPython.core.extensions', 'decorator', 'IPython.utils.sentinel', 'IPython.core.formatters', '_sqlite3', 'sqlite3.dbapi2', 'sqlite3', 'IPython.core.history', 'IPython.core.logger', 'IPython.core.payload', 'IPython.core.usage', 'IPython.utils.capture', 'IPython.utils.io', 'IPython.utils.strdispatch', 'IPython.utils.syspathcontext', 'IPython.core.async_helpers', 'IPython.core.interactiveshell', 'prompt_toolkit.application.current', 'prompt_toolkit.eventloop.utils', 'prompt_toolkit.eventloop.async_generator', 'wcwidth.table_wide', 'wcwidth.table_zero', 'wcwidth.unicode_versions', 'wcwidth.wcwidth', 'wcwidth', 'prompt_toolkit.utils', 'prompt_toolkit.eventloop.inputhook', 'prompt_toolkit.eventloop', 'prompt_toolkit.application.run_in_terminal', 'prompt_toolkit.selection', 'prompt_toolkit.clipboard.base', 'prompt_toolkit.clipboard.in_memory', 'prompt_toolkit.clipboard', 'prompt_toolkit.cache', 'prompt_toolkit.enums', 'prompt_toolkit.filters.base', 'prompt_toolkit.filters.app', 'prompt_toolkit.filters.cli', 'prompt_toolkit.filters.utils', 'prompt_toolkit.filters', 'prompt_toolkit.document', 'prompt_toolkit.auto_suggest', 'prompt_toolkit.data_structures', 'prompt_toolkit.styles.base', 'prompt_toolkit.styles.named_colors', 'prompt_toolkit.styles.style', 'prompt_toolkit.styles.defaults', 'prompt_toolkit.styles.pygments', 'colorsys', 'prompt_toolkit.styles.style_transformation', 'prompt_toolkit.styles', 'prompt_toolkit.output.color_depth', 'prompt_toolkit.output.base', 'prompt_toolkit.output.defaults', 'prompt_toolkit.output', 'prompt_toolkit.output.vt100', 'prompt_toolkit.mouse_events', 'prompt_toolkit.formatted_text.base', 'prompt_toolkit.formatted_text.ansi', 'xml', 'xml.dom.domreg', 'xml.dom', 'xml.dom.minicompat', 'xml.dom.NodeFilter', 'xml.dom.xmlbuilder', 'xml.dom.minidom', 'prompt_toolkit.formatted_text.html', 'prompt_toolkit.formatted_text.pygments', 'prompt_toolkit.formatted_text.utils', 'prompt_toolkit.formatted_text', 'prompt_toolkit.completion.base', 'prompt_toolkit.completion.deduplicate', 'prompt_toolkit.completion.filesystem', 'prompt_toolkit.completion.word_completer', 'prompt_toolkit.completion.fuzzy_completer', 'prompt_toolkit.completion.nested', 'prompt_toolkit.completion', 'prompt_toolkit.history', 'prompt_toolkit.keys', 'prompt_toolkit.key_binding.key_bindings', 'prompt_toolkit.key_binding.key_processor', 'prompt_toolkit.key_binding', 'prompt_toolkit.key_binding.vi_state', 'prompt_toolkit.search', 'prompt_toolkit.validation', 'prompt_toolkit.buffer', 'prompt_toolkit.input.base', 'prompt_toolkit.input.defaults', 'prompt_toolkit.input', 'prompt_toolkit.input.typeahead', 'prompt_toolkit.key_binding.bindings', 'prompt_toolkit.key_binding.bindings.scroll', 'prompt_toolkit.key_binding.bindings.page_navigation', 'prompt_toolkit.lexers.base', 'prompt_toolkit.lexers.pygments', 'prompt_toolkit.lexers', 'prompt_toolkit.layout.utils', 'prompt_toolkit.layout.processors', 'prompt_toolkit.layout.controls', 'prompt_toolkit.layout.dimension', 'prompt_toolkit.layout.margins', 'prompt_toolkit.layout.mouse_handlers', 'prompt_toolkit.layout.screen', 'prompt_toolkit.layout.containers', 'prompt_toolkit.layout.layout', 'prompt_toolkit.layout.menus', 'prompt_toolkit.layout.scrollable_pane', 'prompt_toolkit.layout', 'prompt_toolkit.key_binding.bindings.completion', 'prompt_toolkit.key_binding.bindings.named_commands', 'prompt_toolkit.key_binding.bindings.basic', 'prompt_toolkit.key_binding.bindings.cpr', 'prompt_toolkit.key_binding.bindings.emacs', 'prompt_toolkit.key_binding.bindings.mouse', 'prompt_toolkit.input.ansi_escape_sequences', 'prompt_toolkit.input.vt100_parser', 'prompt_toolkit.key_binding.digraphs', 'prompt_toolkit.key_binding.bindings.vi', 'prompt_toolkit.key_binding.defaults', 'prompt_toolkit.key_binding.emacs_state', 'prompt_toolkit.layout.dummy', 'prompt_toolkit.renderer', 'prompt_toolkit.application.application', 'prompt_toolkit.application.dummy', 'prompt_toolkit.application', 'prompt_toolkit.key_binding.bindings.focus', 'prompt_toolkit.widgets.toolbars', 'prompt_toolkit.widgets.base', 'prompt_toolkit.widgets.dialogs', 'prompt_toolkit.widgets.menus', 'prompt_toolkit.widgets', 'prompt_toolkit.shortcuts.dialogs', 'prompt_toolkit.shortcuts.progress_bar.formatters', 'prompt_toolkit.shortcuts.progress_bar.base', 'prompt_toolkit.shortcuts.progress_bar', 'prompt_toolkit.key_binding.bindings.auto_suggest', 'prompt_toolkit.key_binding.bindings.open_in_editor', 'prompt_toolkit.shortcuts.prompt', 'prompt_toolkit.shortcuts.utils', 'prompt_toolkit.shortcuts', 'prompt_toolkit', 'prompt_toolkit.patch_stdout', 'unicodedata', 'IPython.core.latex_symbols', 'IPython.utils.generics', 'parso.utils', 'parso.tree', 'parso.python', 'parso.python.token', 'parso.python.tokenize', 'parso.pgen2.grammar_parser', 'parso.pgen2.generator', 'parso.pgen2', 'parso.parser', 'parso._compatibility', 'difflib', 'parso.python.prefix', 'parso.python.tree', 'parso.python.parser', 'parso.python.diff', 'gc', 'parso.cache', 'parso.normalizer', 'parso.python.errors', 'parso.python.pep8', 'parso.file_io', 'parso.grammar', 'parso', 'jedi.parser_utils', 'jedi.debug', 'jedi.settings', 'jedi.cache', 'jedi.file_io', 'jedi.inference.cache', 'jedi.inference.helpers', 'jedi.inference.utils', 'jedi.inference.base_value', 'jedi.inference.sys_path', 'jedi.inference.recursion', 'jedi.inference.flow_analysis', 'jedi.common', 'jedi.inference.lazy_value', 'jedi.inference.docstrings', 'jedi.plugins', 'jedi.inference.names', 'jedi.inference.filters', 'jedi.inference.compiled.getattr_static', 'jedi.inference.compiled.access', 'jedi.inference.signature', 'jedi.inference.context', 'jedi.inference.compiled.value', 'jedi.inference.compiled', 'jedi.inference.analysis', 'jedi.inference.gradual', 'jedi.inference.value.module', 'jedi.inference.value.dynamic_arrays', 'jedi.inference.value.iterable', 'jedi.inference.arguments', 'jedi.inference.parser_cache', 'jedi.inference.gradual.generics', 'jedi.inference.value.function', 'jedi.inference.value.klass', 'jedi.inference.value.instance', 'jedi.inference.value', 'jedi.inference.gradual.base', 'jedi.inference.gradual.type_var', 'jedi.inference.gradual.typing', 'jedi.inference.gradual.stub_value', 'jedi.inference.gradual.typeshed', 'jedi._compatibility', 'zipfile', 'jedi.inference.compiled.subprocess.functions', 'jedi.api.exceptions', 'jedi.inference.compiled.subprocess', 'jedi.inference.imports', 'jedi.inference.param', 'jedi.inference.gradual.annotation', 'jedi.inference.value.decorator', 'jedi.inference.syntax_tree', 'jedi.inference', 'jedi.inference.gradual.conversion', 'jedi.inference.compiled.mixed', 'pydoc_data', 'pydoc_data.topics', 'jedi.api.keywords', 'jedi.api.completion_cache', 'jedi.api.helpers', 'jedi.api.classes', 'jedi.api.interpreter', 'jedi.api.strings', 'jedi.api.file_name', 'jedi.inference.docstring_utils', 'jedi.api.completion', 'filecmp', 'jedi.api.environment', 'jedi.inference.references', 'jedi.api.project', 'jedi.api.errors', 'jedi.api.refactoring', 'jedi.api.refactoring.extract', 'jedi.inference.gradual.utils', 'jedi.api', 'jedi.plugins.stdlib', 'jedi.plugins.flask', 'jedi.plugins.pytest', 'jedi.plugins.django', 'jedi.plugins.registry', 'jedi', 'IPython.core.completer', 'IPython.terminal.ptutils', 'IPython.lib.clipboard', 'IPython.terminal.shortcuts', 'concurrent.futures.thread', 'IPython.terminal.debugger', 'IPython.terminal.magics', 'IPython.terminal.pt_inputhooks', 'IPython.terminal.prompts', 'IPython.terminal.interactiveshell', 'IPython.core.magics.auto', 'IPython.core.magics.basic', 'email', 'http', 'email.errors', 'email.quoprimime', 'email.base64mime', 'quopri', 'email.encoders', 'email.charset', 'email.header', 'calendar', 'email._parseaddr', 'email.utils', 'email._policybase', 'email.feedparser', 'email.parser', 'uu', 'email._encoded_words', 'email.iterators', 'email.message', 'http.client', 'urllib.response', 'urllib.error', 'nturl2path', 'urllib.request', 'IPython.utils.contexts', 'IPython.core.magics.code', 'IPython.core.magics.config', 'IPython.core.magics.display', '_lsprof', 'profile', 'cProfile', 'dataclasses', 'pstats', 'timeit', 'IPython.utils.module_paths', 'IPython.utils.timing', 'IPython.core.magics.execution', 'IPython.core.magics.extension', 'IPython.core.magics.history', 'IPython.core.magics.logging', 'IPython.core.magics.namespace', 'IPython.core.magics.osm', 'IPython.core.magics.packaging', 'IPython.core.pylabtools', 'IPython.core.magics.pylab', 'IPython.core.magics.script', 'IPython.core.magics', 'IPython.core.shellapp', 'IPython.extensions', 'IPython.extensions.storemagic', 'IPython.terminal.ipapp', 'IPython.terminal.embed', 'IPython.utils.frame', 'IPython', 'imp', 'hmac', 'dateutil._version', 'dateutil', 'dateutil._common', 'dateutil.relativedelta', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.win', 'dateutil.tz.tz', 'dateutil.tz', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', '_strptime', 'jupyter_client.jsonutil', 'jupyter_client.adapter', 'jupyter_client.session', 'ipykernel.iostream', 'ipykernel.control', 'ipykernel.heartbeat', 'IPython.utils.tokenutil', 'psutil._common', 'psutil._compat', 'psutil._psutil_windows', 'psutil._pswindows', 'psutil', 'tornado.locks', 'tornado.queues', 'ipykernel.jsonutil', 'ipykernel.kernelbase', 'ipykernel.comm.comm', 'ipykernel.comm.manager', 'ipykernel.comm', 'IPython.core.payloadpage', 'ipykernel.displayhook', 'ipykernel.zmqshell', 'setuptools._distutils', 'distutils.debug', 'distutils.errors', 'distutils.fancy_getopt', 'distutils.dep_util', 'distutils.log', 'distutils.spawn', 'distutils.py35compat', 'distutils.util', 'distutils.dist', 'distutils.dir_util', 'distutils.file_util', 'distutils.archive_util', 'distutils.cmd', 'configparser', 'distutils.config', 'distutils.extension', 'distutils.core', '_distutils_hack.override', 'setuptools._deprecation_warning', 'xml.parsers', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'xml.parsers.expat', 'plistlib', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources._vendor.jaraco', 'pkg_resources.extern.jaraco', 'importlib._common', 'importlib.resources', 'pkg_resources._vendor.more_itertools.recipes', 'pkg_resources._vendor.more_itertools.more', 'pkg_resources._vendor.more_itertools', 'pkg_resources.extern.more_itertools', 'pkg_resources.extern.jaraco.functools', 'pkg_resources.extern.jaraco.context', 'pkg_resources.extern.jaraco.text', 'win32api', '_win32sysloader', 'pywintypes', 'pythoncom', 'win32com.gen_py', 'win32com', 'win32com.shell', 'pkg_resources._vendor.appdirs', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources._vendor.packaging', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.version', 'pkg_resources._vendor.packaging._manylinux', 'pkg_resources._vendor.packaging._musllinux', 'pkg_resources.extern.packaging.tags', 'pkg_resources.extern.packaging.utils', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources._vendor.pyparsing', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.packaging.markers', 'pkg_resources.extern.packaging.requirements', 'pkg_resources', 'setuptools.version', 'distutils.filelist', 'setuptools.monkey', 'setuptools.extension', 'distutils.command', 'setuptools.extern', 'setuptools._vendor', 'setuptools._vendor.packaging.__about__', 'setuptools._vendor.packaging', 'setuptools.extern.packaging', 'setuptools._vendor.ordered_set', 'setuptools.extern.ordered_set', 'setuptools._vendor.more_itertools.recipes', 'setuptools._vendor.more_itertools.more', 'setuptools._vendor.more_itertools', 'setuptools.extern.more_itertools', 'setuptools._vendor.pyparsing', 'setuptools.extern.pyparsing', 'setuptools._vendor.packaging._manylinux', 'setuptools._vendor.packaging._musllinux', 'setuptools.extern.packaging.tags', 'setuptools.extern.packaging._structures', 'setuptools.extern.packaging.version', 'setuptools.extern.packaging.utils', 'setuptools.extern.packaging.specifiers', 'setuptools.extern.packaging.markers', 'setuptools.extern.packaging.requirements', 'setuptools._vendor.jaraco', 'setuptools.extern.jaraco', 'setuptools.extern.jaraco.context', 'setuptools.extern.jaraco.functools', '_csv', 'csv', 'setuptools._vendor.zipp', 'setuptools._vendor.importlib_metadata._functools', 'setuptools._vendor.importlib_metadata._text', 'setuptools._vendor.importlib_metadata._adapters', 'setuptools._vendor.importlib_metadata._compat', 'setuptools._vendor.importlib_metadata._meta', 'setuptools._vendor.importlib_metadata._collections', 'setuptools._vendor.importlib_metadata._itertools', 'setuptools._vendor.importlib_metadata', 'setuptools.extern.importlib_metadata', 'setuptools._vendor.nspektr._compat', 'setuptools._vendor.nspektr', 'setuptools.extern.nspektr', 'zipp', 'importlib_metadata._functools', 'importlib_metadata._text', 'importlib_metadata._adapters', 'importlib_metadata._compat', 'importlib_metadata._meta', 'importlib_metadata._collections', 'importlib_metadata._itertools', 'importlib_metadata', 'setuptools._importlib', 'distutils.command.bdist', 'setuptools.command', 'setuptools.windows_support', 'setuptools.config.expand', 'setuptools.config.setupcfg', 'setuptools.config', 'setuptools.errors', 'email._header_value_parser', 'email.headerregistry', 'setuptools.config._apply_pyprojecttoml', 'setuptools.config.pyprojecttoml', 'setuptools.discovery', 'setuptools.extern.jaraco.text', 'setuptools._reqs', 'setuptools._itertools', 'setuptools._entry_points', 'setuptools.dist', 'setuptools.py34compat', 'setuptools._imp', 'setuptools.depends', 'setuptools.logging', 'distutils.ccompiler', 'distutils.msvc9compiler', 'setuptools.msvc', 'unittest.util', 'unittest.result', 'unittest.case', 'unittest.suite', 'unittest.loader', 'unittest.signals', 'unittest.runner', 'unittest.main', 'unittest', 'unittest.mock', 'distutils._msvccompiler', 'setuptools', 'distutils', 'distutils.version', 'ipykernel.eventloops', 'ipykernel.compiler', 'debugpy._version', 'debugpy.common', 'debugpy.common.json', 'debugpy.common.fmt', 'debugpy.common.compat', 'debugpy', 'debugpy._vendored._util', 'debugpy._vendored', '_pydevd_bundle', 'encodings.ascii', 'stringprep', 'encodings.idna', '_pydevd_bundle.pydevd_vm_type', '_pydev_imps', 'xmlrpc', 'gzip', 'xmlrpc.client', 'socketserver', 'http.server', 'xmlrpc.server', '_pydev_imps._pydev_saved_modules', '_pydevd_bundle.pydevd_constants', '_pydev_bundle', '_pydev_runfiles', '_pydevd_frame_eval', 'pydev_ipython', 'pydevd_concurrency_analyser', 'pydevd_plugins', '_pydev_bundle.pydev_log', '_pydev_bundle._pydev_filesystem_encoding', '_pydevd_bundle.pydevd_comm_constants', 'pydevd_file_utils', '_pydev_imps._pydev_execfile', '_pydevd_bundle.pydevd_exec2', '_pydev_bundle.pydev_imports', '_pydev_bundle.pydev_is_thread_alive', '_pydev_bundle.pydev_override', 'pydevd_plugins.extensions', '_pydevd_bundle.pydevd_extension_utils', '_pydevd_bundle.pydevd_frame_utils', '_pydevd_bundle.pydevd_filtering', '_pydevd_bundle.pydevd_io', '_pydevd_bundle.pydevd_utils', '_pydev_bundle._pydev_tipper_common', '_pydev_bundle._pydev_imports_tipper', '_pydev_bundle._pydev_calltip_util', '_pydevd_bundle.pydevd_safe_repr', '_pydevd_bundle.pydevd_resolver', '_pydevd_bundle.pydevd_extension_api', '_pydevd_bundle.pydevd_xml', '_pydevd_bundle.pydevd_dont_trace', '_pydevd_frame_eval.vendored', '_pydevd_frame_eval.vendored.bytecode.flags', '_pydevd_frame_eval.vendored.bytecode.instr', '_pydevd_frame_eval.vendored.bytecode.bytecode', '_pydevd_frame_eval.vendored.bytecode.concrete', '_pydevd_frame_eval.vendored.bytecode.cfg', '_pydevd_frame_eval.vendored.bytecode', '_pydevd_bundle.pydevd_bytecode_utils', '_pydevd_bundle.pydevd_cython', '_pydevd_bundle.pydevd_cython_wrapper', '_pydevd_bundle.pydevd_additional_thread_info', '_pydevd_bundle.pydevd_thread_lifecycle', '_pydevd_bundle.pydevd_save_locals', '_pydevd_bundle.pydevd_defaults', '_pydev_bundle.pydev_monkey', 'pydevd_tracing', '_pydevd_bundle.pydevd_daemon_thread', '_pydevd_bundle.pydevd_timeout', '_pydevd_bundle.pydevd_vars', '_pydev_bundle.pydev_console_utils', '_pydevd_bundle.pydevd_import_class', '_pydevd_bundle.pydevd_breakpoints', '_pydevd_bundle.pydevd_custom_frames', '_pydevd_bundle.pydevd_dont_trace_files', '_pydevd_bundle.pydevd_net_command', '_pydev_bundle.pydev_umd', 'pydevconsole', '_pydev_bundle._pydev_completer', '_pydevd_bundle.pydevd_net_command_factory_xml', '_pydevd_bundle.pydevd_frame', '_pydevd_bundle.pydevd_additional_thread_info_regular', '_pydevd_bundle.pydevd_trace_dispatch', '_pydevd_frame_eval.pydevd_frame_eval_main', '_pydevd_bundle.pydevd_source_mapping', 'pydevd_concurrency_analyser.pydevd_thread_wrappers', 'pydevd_concurrency_analyser.pydevd_concurrency_logger', '_pydevd_bundle._debug_adapter', '_pydevd_bundle._debug_adapter.pydevd_schema_log', '_pydevd_bundle._debug_adapter.pydevd_base_schema', '_pydevd_bundle._debug_adapter.pydevd_schema', '_pydevd_bundle.pydevd_reload', '_pydev_bundle.fsnotify', '_pydevd_bundle.pydevd_console', '_pydevd_bundle.pydevd_comm', '_pydevd_bundle.pydevd_net_command_factory_json', '_pydevd_bundle.pydevd_collect_bytecode_info', '_pydevd_bundle.pydevd_api', '_pydevd_bundle.pydevd_json_debug_options', '_pydevd_bundle.pydevd_process_net_command_json', '_pydevd_bundle.pydevd_traceproperty', '_pydevd_bundle.pydevd_process_net_command', '_pydevd_bundle.pydevd_suspended_frames', '_pydevd_bundle.pydevd_trace_api', 'pydevd_plugins.django_debug', 'pydevd_plugins.jinja2_debug', '_pydevd_bundle.pydevd_plugin_utils', 'pydevd_plugins.extensions.types', 'pydevd_plugins.extensions.types.pydevd_helpers', 'pydevd_plugins.extensions.types.pydevd_plugin_numpy_types', 'pydevd_plugins.extensions.types.pydevd_plugins_django_form_str', 'pydevd', 'debugpy._vendored.force_pydevd', 'debugpy.server', 'debugpy.adapter', 'debugpy.common.timestamp', 'debugpy.common.util', 'debugpy.common.log', 'debugpy.common.sockets', 'debugpy.server.api', 'ipykernel.debugger', 'ipykernel.ipkernel', 'ipykernel.parentpoller', 'ipykernel.kernelapp', 'win32security', 'ntsecuritycon', 'faulthandler', 'IPython.core.completerlib', 'logging.config', 'pythonjsonlogger', 'pythonjsonlogger.jsonlogger', 'daiquiri.types', 'daiquiri.formatter', 'daiquiri.handlers', 'daiquiri.output', 'daiquiri', 'jupyter_require.__about__', 'csscompressor', 'jupyter_require.core', 'jupyter_require.notebook', 'jupyter_require', 'jupyter_nbutils.__about__', 'jupyter_nbutils.config', 'jupyter_nbutils.utils', 'jupyter_nbutils', 'jupyter_require.magic', 'numpy._globals', 'numpy.__config__', 'numpy._distributor_init', 'numpy._version', 'numpy.version', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core._asarray', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core._machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.stride_tricks', 'numpy.lib.twodim_base', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', '_cython_0_29_30', 'numpy.random._common', 'secrets', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'pytz', 'pandas._typing', '_cython_0_29_28', 'pandas._libs.tslibs.dtypes', 'pandas._libs.tslibs.base', 'pandas._libs.tslibs.np_datetime', 'pandas._libs.tslibs.nattype', 'pandas._libs.tslibs.timezones', 'pandas._libs.tslibs.ccalendar', 'pandas._libs.tslibs.tzconversion', 'pandas._config.config', 'pandas._config.dates', 'pandas._config.display', 'pandas._config', 'pandas._config.localization', 'pandas._libs.tslibs.strptime', 'pandas._libs.tslibs.fields', 'pandas._libs.tslibs.timedeltas', 'pandas._libs.tslibs.timestamps', 'dateutil.easter', 'pandas._libs.properties', 'pandas._libs.tslibs.offsets', 'pandas._libs.tslibs.parsing', 'pandas._libs.tslibs.conversion', 'pandas._libs.tslibs.period', 'pandas._libs.tslibs.vectorized', 'pandas._libs.tslibs', 'pandas._libs.ops_dispatch', 'pandas._libs.missing', 'pandas._libs.hashtable', 'pandas._libs.algos', 'pandas._libs.interval', 'pandas._libs', 'pandas.util._decorators', 'pandas.core', 'pandas.core.util', 'pandas._libs.tslib', 'pandas._libs.lib', 'pandas._libs.hashing', 'pandas.core.dtypes', 'pandas.util._exceptions', 'pandas.errors', 'pandas.core.dtypes.generic', 'pandas.core.dtypes.base', 'pandas.core.dtypes.inference', 'pandas.core.dtypes.dtypes', 'pandas.core.dtypes.common', 'pandas.core.util.hashing', 'pandas.util', 'pandas.util.version', 'pandas.compat.numpy', 'pandas.compat.pyarrow', 'pandas.compat', 'pandas.core.config_init', 'pandas.core.dtypes.missing', 'pandas.util._validators', 'pandas.core.dtypes.cast', 'pandas.core.dtypes.concat', 'pandas.core.array_algos', 'pandas.core.common', 'pandas.core.construction', 'pandas.core.array_algos.take', 'pandas.core.indexers.utils', 'pandas.core.indexers', 'pandas.core.algorithms', 'pandas.compat.numpy.function', 'pandas.core.roperator', 'pandas._libs.ops', 'pandas.core.computation', 'pandas.compat._optional', 'numexpr.interpreter', 'packaging.__about__', 'packaging', 'packaging._structures', 'packaging.version', 'numexpr.expressions', 'numexpr.utils', 'numexpr.necompiler', 'numexpr.version', 'numexpr', 'pandas.core.computation.check', 'pandas.core.computation.expressions', 'pandas.core.ops.missing', 'pandas.core.ops.dispatch', 'pandas.core.ops.invalid', 'pandas.core.ops.array_ops', 'pandas.core.ops.common', 'pandas.core.ops.docstrings', 'pandas.core.ops.mask_ops', 'pandas.core.ops.methods', 'pandas.core.ops', 'pandas.core.arraylike', 'pandas.core.missing', 'pandas.core.array_algos.quantile', 'pandas.core.sorting', 'pandas.core.arrays.base', 'bottleneck.benchmark', 'bottleneck.benchmark.autotimeit', 'bottleneck.benchmark.bench', 'bottleneck.benchmark.bench_detailed', 'bottleneck.tests', 'bottleneck.tests.util', 'bottleneck.slow.reduce', 'bottleneck.slow.nonreduce', 'bottleneck.slow.nonreduce_axis', 'bottleneck.slow.move', 'bottleneck.slow', 'bottleneck._pytesttester', 'bottleneck.move', 'bottleneck.nonreduce', 'bottleneck.nonreduce_axis', 'bottleneck.reduce', 'bottleneck._version', 'bottleneck', 'pandas.core.nanops', 'pandas.core.array_algos.masked_reductions', 'pandas.core.arrays.masked', 'pandas.core.arrays.boolean', 'pandas._libs.arrays', 'pandas.core.accessor', 'pandas.core.array_algos.transforms', 'pandas.core.arrays._mixins', 'pandas.core.base', 'pandas.core.strings.accessor', 'pandas.core.strings.base', 'pandas.core.strings', 'pandas.core.strings.object_array', 'pandas.io', 'pandas.io.formats', 'pandas.io.formats.console', 'pandas.core.arrays.categorical', 'pandas.tseries', 'pandas.tseries.frequencies', 'pandas.core.arrays.datetimelike', 'pandas.core.arrays._ranges', 'pandas.core.arrays.numeric', 'pandas.core.tools', 'pandas.core.tools.numeric', 'pandas.core.arrays.integer', 'pandas.tseries.offsets', 'pandas.core.arrays.datetimes', 'pandas.core.arrays.floating', 'pandas.core.indexes', 'pandas._libs.index', 'pandas._libs.join', 'pandas.core.array_algos.putmask', 'pandas._libs.sparse', 'pandas.core.arrays.sparse.dtype', 'pandas.io.formats.printing', 'pandas.core.arrays.sparse.array', 'pandas.core.arrays.sparse.accessor', 'pandas.core.arrays.sparse', 'pandas.core.indexes.frozen', 'pandas.core.indexes.base', 'pandas.core.arrays.interval', 'pandas.core.arrays.numpy_', 'pandas.core.arrays.period', 'pandas.core.arrays.string_', 'pandas.core.arrays.string_arrow', 'pandas.core.arrays.timedeltas', 'pandas.core.arrays', 'pandas.core.flags', 'pandas._libs.reduction', 'pandas.core.apply', 'pandas._libs.indexing', 'pandas.core.indexes.extension', 'pandas.core.indexes.category', 'pandas.core.indexes.numeric', 'pandas.core.indexes.range', 'pandas.core.tools.timedeltas', 'pandas.core.indexes.datetimelike', 'pandas.core.tools.times', 'pandas.core.indexes.datetimes', 'pandas.core.indexes.multi', 'pandas.core.indexes.timedeltas', 'pandas.core.indexes.interval', 'pandas.core.indexes.period', 'pandas.core.indexes.api', 'pandas.core.indexing', 'pandas.core.array_algos.replace', 'pandas.core.reshape', 'pandas._libs.internals', 'pandas._libs.writers', 'pandas.core.internals.blocks', 'pandas.core.internals.api', 'pandas.core.internals.base', 'pandas.core.internals.array_manager', 'pandas.core.internals.ops', 'pandas.core.internals.managers', 'pandas.core.internals.concat', 'pandas.core.internals', 'pandas.core.reshape.concat', 'mmap', 'pandas.core.shared_docs', 'pandas.io.common', 'pandas.io.formats.format', 'pandas.core.describe', 'pandas.core.internals.construction', 'pandas.core.sample', 'pandas._libs.window', 'pandas._libs.window.aggregations', 'pandas._libs.window.indexers', 'pandas.core.indexers.objects', 'pandas.core.util.numba_', 'pandas.core.window.common', 'pandas.core.window.doc', 'pandas.core.window.numba_', 'pandas.core.window.online', 'pandas.core._numba', 'pandas.core._numba.executor', 'pandas.core.window.rolling', 'pandas.core.window.ewm', 'pandas.core.window.expanding', 'pandas.core.window', 'pandas.core.generic', 'pandas.core.reshape.util', 'pandas.core.reshape.melt', 'pandas._libs.reshape', 'pandas.core.indexes.accessors', 'pandas.arrays', 'pandas.core.tools.datetimes', 'pandas.io.formats.info', 'pandas.plotting._core', 'pandas.plotting._misc', 'pandas.plotting', 'pandas.core.series', 'pandas.core.frame', 'pandas.core.groupby.base', 'pandas._libs.groupby', 'pandas.core.groupby.numba_', 'pandas.core.groupby.categorical', 'pandas.core.groupby.grouper', 'pandas.core.groupby.ops', 'pandas.core.groupby.indexing', 'pandas.core.groupby.groupby', 'pandas.core.groupby.generic', 'pandas.core.groupby', 'pandas.core.api', 'pandas.tseries.api', 'pandas.core.computation.common', 'pandas.core.computation.align', 'pandas.compat.chainmap', 'pandas.core.computation.scope', 'pandas.core.computation.ops', 'pandas.core.computation.parsing', 'pandas.core.computation.expr', 'pandas.core.computation.engines', 'pandas.core.computation.eval', 'pandas.core.computation.api', 'pandas.core.reshape.merge', 'pandas.core.reshape.pivot', 'pandas.core.reshape.reshape', 'pandas.core.reshape.tile', 'pandas.core.reshape.api', 'pandas.api.extensions', 'pandas.api.indexers', 'pandas.core.dtypes.api', 'pandas.api.types', 'pandas.api', 'pandas._testing._random', 'pandas._testing.contexts', 'pandas._testing._io', 'pandas._testing._warnings', 'cmath', 'pandas._libs.testing', 'pandas._testing.asserters', 'pandas._testing.compat', 'pandas._testing', 'pandas.testing', 'pandas.util._print_versions', 'pandas.io.clipboards', 'pandas._libs.parsers', 'pandas.io.excel._util', 'pandas.io.date_converters', 'pandas.io.parsers.base_parser', 'pandas.io.parsers.arrow_parser_wrapper', 'pandas.io.parsers.c_parser_wrapper', 'pandas.io.parsers.python_parser', 'pandas.io.parsers.readers', 'pandas.io.parsers', 'pandas.io.excel._odfreader', 'pandas.io.excel._openpyxl', 'pandas.io.excel._pyxlsb', 'pandas.io.excel._xlrd', 'pandas.io.excel._base', 'pandas._libs.json', 'pandas.io.formats._color_data', 'pandas.io.formats.css', 'pandas.io.formats.excel', 'pandas.io.excel._odswriter', 'pandas.io.excel._xlsxwriter', 'pandas.io.excel._xlwt', 'pandas.io.excel', 'pandas.io.feather_format', 'pandas.io.gbq', 'pandas.io.html', 'pandas.io.json._normalize', 'pandas.io.json._table_schema', 'pandas.io.json._json', 'pandas.io.json', 'pandas.io.orc', 'pandas.io.parquet', 'pandas.compat.pickle_compat', 'pandas.io.pickle', 'pandas.core.computation.pytables', 'pandas.io.pytables', 'pandas.io.sas.sasreader', 'pandas.io.sas', 'pandas.io.spss', 'pandas.io.sql', 'pandas.io.stata', 'pandas.io.xml', 'pandas.io.api', 'pandas.util._tester', 'pandas._version', 'pandas', 'summarytools', 'summarytools.htmlwidgets', 'summarytools.summarytools', 'matplotlib', 'matplotlib._api.deprecation', 'matplotlib._api', 'matplotlib._version', 'matplotlib._c_internal_utils', 'matplotlib.cbook', 'matplotlib.docstring', 'PIL._version', 'PIL', 'defusedxml.common', 'defusedxml', 'xml.etree', 'xml.etree.ElementPath', '_elementtree', 'xml.etree.ElementTree', 'defusedxml.ElementTree', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._util', 'PIL._imaging', 'cffi.lock', 'cffi.error', 'cffi.model', 'cffi.api', 'cffi', 'PIL.Image', 'PIL.ImageChops', 'PIL.ImageFile', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'PIL.ImagePalette', 'PIL.ImageSequence', 'PIL.PngImagePlugin', 'matplotlib._path', 'matplotlib.bezier', 'matplotlib.path', 'matplotlib.transforms', 'matplotlib.ticker', 'matplotlib.scale', 'matplotlib._color_data', 'matplotlib.colors', 'pyparsing.util', 'pyparsing.unicode', 'pyparsing.exceptions', 'pyparsing.actions', 'pyparsing.results', 'pyparsing.core', 'pyparsing.helpers', 'pyparsing.testing', 'pyparsing.common', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib._enums', 'cycler', 'matplotlib.rcsetup', 'matplotlib.ft2font', 'kiwisolver']
2023-04-21 16:40:09,121 [19200] DEBUG    matplotlib:275: [JupyterRequire] CACHEDIR=C:\Users\adity\.matplotlib
2023-04-21 16:40:09,135 [19200] DEBUG    matplotlib.font_manager:1439: [JupyterRequire] Using fontManager instance from C:\Users\adity\.matplotlib\fontlist-v330.json
2023-04-21 16:40:09,897 [19200] DEBUG    matplotlib.pyplot:280: [JupyterRequire] Loaded backend module://matplotlib_inline.backend_inline version unknown.
2023-04-21 16:40:09,905 [19200] DEBUG    matplotlib.pyplot:280: [JupyterRequire] Loaded backend module://matplotlib_inline.backend_inline version unknown.
2023-04-21 16:40:17,427 [19200] DEBUG    matplotlib.font_manager:1329: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2023-04-21 16:40:17,428 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:40:17,428 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:40:17,429 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,429 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2023-04-21 16:40:17,429 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2023-04-21 16:40:17,430 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:17,430 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:17,430 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:17,431 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,431 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:40:17,431 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,432 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:17,432 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,432 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,432 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,434 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:17,434 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:17,434 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,435 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,435 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2023-04-21 16:40:17,435 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,436 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,436 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:40:17,436 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:17,437 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:17,439 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,440 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,440 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:17,441 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:17,442 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,442 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,442 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,443 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:17,443 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,444 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:17,444 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,445 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,445 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2023-04-21 16:40:17,445 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLSNECB.TTF', name='Gill Sans MT Ext Condensed Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-21 16:40:17,446 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanz.ttf', name='Constantia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:40:17,446 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LEELAWAD.TTF', name='Leelawadee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,446 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\monbaiti.ttf', name='Mongolian Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,447 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-MEDIUM.TTF', name='Dubai', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-04-21 16:40:17,447 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-04-21 16:40:17,447 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FTLTLT.TTF', name='Footlight MT Light', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-21 16:40:17,448 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibril.ttf', name='Calibri', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-21 16:40:17,448 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSI.TTF', name='Goudy Old Style', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:17,449 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisbi.ttf', name='Segoe UI', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-21 16:40:17,449 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCCB___.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-04-21 16:40:17,450 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXD.TTF', name='Lucida Fax', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-21 16:40:17,450 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2023-04-21 16:40:17,450 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BSSYM7.TTF', name='Bookshelf Symbol 7', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,451 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAMDCN.TTF', name='Franklin Gothic Medium Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-21 16:40:17,451 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framdit.ttf', name='Franklin Gothic Medium', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:17,452 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSB.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:17,452 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-LIGHT.TTF', name='Dubai', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-21 16:40:17,452 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCC____.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-21 16:40:17,453 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_B.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:17,454 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COOPBL.TTF', name='Cooper Black', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,454 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNI.TTF', name='Arial', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 7.613636363636363
2023-04-21 16:40:17,454 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\INFROMAN.TTF', name='Informal Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,455 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSB.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-21 16:40:17,455 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BERNHC.TTF', name='Bernard MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-21 16:40:17,456 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEB.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-21 16:40:17,456 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCEDSCR.TTF', name='Edwardian Script ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,456 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consola.ttf', name='Consolas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,457 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,457 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\holomdl2.ttf', name='HoloLens MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,458 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COLONNA.TTF', name='Colonna MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,458 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYR.TTF', name='Agency FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,459 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRITANIC.TTF', name='Britannic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,459 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiai.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:17,459 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:17,460 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaS.ttf', name='Nirmala UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2023-04-21 16:40:17,460 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CHILLER.TTF', name='Chiller', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,460 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,461 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAB.TTF', name='Book Antiqua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:17,461 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothM.ttc', name='Yu Gothic', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-04-21 16:40:17,461 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG2.TTF', name='Wingdings 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,462 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Nirmala.ttf', name='Nirmala UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,462 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelUIsl.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2023-04-21 16:40:17,463 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriai.ttf', name='Cambria', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:17,463 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariali.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
2023-04-21 16:40:17,463 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARA.TTF', name='Garamond', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,464 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSPCL.TTF', name='MS Reference Specialty', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,464 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-REGULAR.TTF', name='Dubai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,465 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LHANDW.TTF', name='Lucida Handwriting', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:17,465 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:17,465 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comici.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:17,466 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTAUR.TTF', name='Centaur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,466 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEBO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-21 16:40:17,466 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ONYX.TTF', name='Onyx', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,467 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrima.ttf', name='Ebrima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,467 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFI.TTF', name='Californian FB', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:17,468 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERBI___.TTF', name='Perpetua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:40:17,469 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbell.ttf', name='Corbel', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-21 16:40:17,469 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILI____.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:17,470 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segmdl2.ttf', name='Segoe MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,470 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-BOLD.TTF', name='Dubai', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:17,470 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FELIXTI.TTF', name='Felix Titling', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,471 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbd.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
2023-04-21 16:40:17,471 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taileb.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:17,472 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeprb.ttf', name='Segoe Print', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:17,472 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoescb.ttf', name='Segoe Script', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:17,473 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITE.TTF', name='Lucida Bright', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,473 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhbd.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:17,473 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\times.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,474 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisb.ttf', name='Segoe UI', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-21 16:40:17,474 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSDB.TTF', name='Berlin Sans FB Demi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:17,474 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbi.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
2023-04-21 16:40:17,475 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesi.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:17,475 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADM.TTF', name='Franklin Gothic Demi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,476 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERTI.TTF', name='High Tower Text', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:17,476 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF-Italic.ttf', name='Sitka', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:17,476 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsun.ttc', name='SimSun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,477 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTI.TTF', name='Calisto MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:17,477 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCMI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:17,478 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaral.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,478 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\lucon.ttf', name='Lucida Console', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,478 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_I.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:17,480 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mvboli.ttf', name='MV Boli', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,480 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiab.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:17,480 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\l_10646.ttf', name='Lucida Sans Unicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,480 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTIBD.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:17,481 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNT.TTF', name='Elephant', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,481 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASMD.TTF', name='Eras Medium ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,481 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MSUIGHUR.TTF', name='Microsoft Uighur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,482 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYB.TTF', name='Agency FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:17,482 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MSUIGHUB.TTF', name='Microsoft Uighur', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:17,482 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicbd.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:17,483 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMIT.TTF', name='Franklin Gothic Demi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:17,483 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKEB.TTF', name='Rockwell Extra Bold', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
2023-04-21 16:40:17,483 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PER_____.TTF', name='Perpetua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,485 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VINERITC.TTF', name='Viner Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,485 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\marlett.ttf', name='Marlett', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-04-21 16:40:17,486 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrili.ttf', name='Calibri', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-04-21 16:40:17,486 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICBI.TTF', name='Century Gothic', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:40:17,487 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ALGER.TTF', name='Algerian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,487 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOS.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,488 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelz.ttf', name='Corbel', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:40:17,488 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILB____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:17,488 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUABI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:40:17,489 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\sylfaen.ttf', name='Sylfaen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,489 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriaz.ttf', name='Cambria', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:40:17,489 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanaz.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
2023-04-21 16:40:17,490 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constan.ttf', name='Constantia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,490 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTILI.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-21 16:40:17,491 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCM_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,491 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhl.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2023-04-21 16:40:17,491 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOS.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-21 16:40:17,492 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HATTEN.TTF', name='Haettenschweiler', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,492 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JOKERMAN.TTF', name='Jokerman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,493 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ENGR.TTF', name='Engravers MT', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-04-21 16:40:17,493 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARAIT.TTF', name='Garamond', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:17,493 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,494 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelli.ttf', name='Corbel', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-04-21 16:40:17,494 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constani.ttf', name='Constantia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:17,494 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIST.TTF', name='Calisto MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,495 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PARCHM.TTF', name='Parchment', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,495 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\himalaya.ttf', name='Microsoft Himalaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,495 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRADHITC.TTF', name='Bradley Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,496 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\wingding.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,496 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtextb.ttf', name='Myanmar Text', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:17,496 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG3.TTF', name='Wingdings 3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,496 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGSOL.TTF', name='Niagara Solid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,497 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarali.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:17,497 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKI.TTF', name='Rockwell', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:17,498 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolab.ttf', name='Consolas', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:17,498 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXDI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-21 16:40:17,498 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BAUHS93.TTF', name='Bauhaus 93', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,499 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisli.ttf', name='Segoe UI', style='italic', variant='normal', weight=350, stretch='normal', size='scalable')) = 11.0975
2023-04-21 16:40:17,499 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELL.TTF', name='Bell MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,500 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2023-04-21 16:40:17,500 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyi.ttf', name='Microsoft Yi Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,501 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSR.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,501 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHVIT.TTF', name='Franklin Gothic Heavy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:17,501 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OLDENGL.TTF', name='Old English Text MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,502 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbel.ttf', name='Corbel', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,502 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLB.TTF', name='Bell MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:17,502 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelaUIb.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:17,502 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHV.TTF', name='Franklin Gothic Heavy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,504 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OUTLOOK.TTF', name='MS Outlook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,504 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PRISTINA.TTF', name='Pristina', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,504 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERI____.TTF', name='Perpetua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:17,505 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtext.ttf', name='Myanmar Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,505 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSAN.TTF', name='MS Reference Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,505 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERB____.TTF', name='Perpetua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:17,506 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTEXTRA.TTF', name='MT Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,506 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKB.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:17,506 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARABD.TTF', name='Garamond', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:17,507 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cour.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,507 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mingliub.ttc', name='MingLiU-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,507 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICB.TTF', name='Century Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:17,508 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspa.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,508 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VIVALDII.TTF', name='Vivaldi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:17,508 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAGE.TTF', name='Rage Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:17,508 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-21 16:40:17,509 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2023-04-21 16:40:17,509 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MATURASC.TTF', name='Matura MT Script Capitals', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,509 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comic.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,511 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbi.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:40:17,511 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothR.ttc', name='Yu Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,511 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palai.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:17,512 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MOD20.TTF', name='Modern No. 20', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,512 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMCN.TTF', name='Franklin Gothic Demi Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-21 16:40:17,512 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrimabd.ttf', name='Ebrima', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:17,513 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\javatext.ttf', name='Javanese Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,513 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CASTELAR.TTF', name='Castellar', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,513 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSDI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-21 16:40:17,514 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelawUI.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,514 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAX.TTF', name='Lucida Fax', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,514 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunbd.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:17,515 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF.ttf', name='Sitka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,515 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTL.TTF', name='Copperplate Gothic Light', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,515 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
2023-04-21 16:40:17,516 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeui.ttf', name='Segoe UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,516 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Gabriola.ttf', name='Gabriola', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,517 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTBI.TTF', name='Calisto MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:40:17,517 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicz.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:40:17,518 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALN.TTF', name='Arial', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 6.613636363636363
2023-04-21 16:40:17,518 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKBI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:40:17,518 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FREESCPT.TTF', name='Freestyle Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,518 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTURY.TTF', name='Century', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,519 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaB.ttf', name='Nirmala UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:17,519 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSB.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:17,519 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSD.TTF', name='Lucida Sans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-21 16:40:17,520 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuisl.ttf', name='Segoe UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2023-04-21 16:40:17,520 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:17,520 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:40:17,521 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguihis.ttf', name='Segoe UI Historic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,521 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCB____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-04-21 16:40:17,521 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambria.ttc', name='Cambria', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,522 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKBI.TTF', name='Rockwell', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:40:17,522 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGENG.TTF', name='Niagara Engraved', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,522 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisym.ttf', name='Segoe UI Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,523 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inkfree.ttf', name='Ink Free', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,523 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASBD.TTF', name='Eras Bold ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,524 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILC____.TTF', name='Gill Sans MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-21 16:40:17,524 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candara.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,524 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\bahnschrift.ttf', name='Bahnschrift', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,525 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BROADW.TTF', name='Broadway', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,525 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolaz.ttf', name='Consolas', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:40:17,525 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CBI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2023-04-21 16:40:17,526 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuii.ttf', name='Segoe UI', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:17,526 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibli.ttf', name='Segoe UI', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2023-04-21 16:40:17,526 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEDI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-21 16:40:17,527 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucit.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:17,527 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BKANT.TTF', name='Book Antiqua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,527 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothL.ttc', name='Yu Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-21 16:40:17,528 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrii.ttf', name='Calibri', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:17,528 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CURLZ___.TTF', name='Curlz MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,528 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelb.ttf', name='Corbel', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:17,529 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARLRDBD.TTF', name='Arial Rounded MT Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,529 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothB.ttc', name='Yu Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:17,529 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASDEMI.TTF', name='Eras Demi ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,530 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
2023-04-21 16:40:17,530 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANS.TTF', name='Lucida Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,530 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariblk.ttf', name='Arial', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 6.888636363636364
2023-04-21 16:40:17,531 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCKRIST.TTF', name='Kristen ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,531 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\KUNSTLER.TTF', name='Kunstler Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,532 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanb.ttf', name='Constantia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:17,532 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PAPYRUS.TTF', name='Papyrus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,532 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JUICE___.TTF', name='Juice ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,532 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguili.ttf', name='Segoe UI', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-04-21 16:40:17,532 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:17,534 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarab.ttf', name='Candara', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:17,534 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\IMPRISHA.TTF', name='Imprint MT Shadow', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,534 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailu.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,535 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbi.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:40:17,535 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuil.ttf', name='Segoe UI', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-21 16:40:17,535 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanai.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
2023-04-21 16:40:17,536 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoepr.ttf', name='Segoe Print', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,536 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaraz.ttf', name='Candara', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:40:17,536 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNB.TTF', name='Arial', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 6.8986363636363635
2023-04-21 16:40:17,537 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspab.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:17,537 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,537 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCM____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-21 16:40:17,537 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARNGTON.TTF', name='Harrington', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,538 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbd.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:17,538 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:17,538 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILSANUB.TTF', name='Gill Sans Ultra Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,539 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibri.ttf', name='Calibri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,539 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiaz.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:40:17,539 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegoeIcons.ttf', name='Segoe Fluent Icons', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,540 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAGNETOB.TTF', name='Magneto', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:17,540 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICI.TTF', name='Century Gothic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:17,541 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCBLKAD.TTF', name='Blackadder ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,541 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahomabd.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:17,541 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugi.ttf', name='Gadugi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,541 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LCALLIG.TTF', name='Lucida Calligraphy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:17,542 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyh.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,542 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsunb.ttf', name='SimSun-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,542 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgun.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,543 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIL_____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,543 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VLADIMIR.TTF', name='Vladimir Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,543 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,544 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msgothic.ttc', name='MS Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,544 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRSCRIPT.TTF', name='French Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,544 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILBI___.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:40:17,545 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASLGHT.TTF', name='Eras Light ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,545 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTB.TTF', name='Calisto MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:17,545 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunsl.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-21 16:40:17,546 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRUSHSCI.TTF', name='Brush Script MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:17,546 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SNAP____.TTF', name='Snap ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,546 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuib.ttf', name='Segoe UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:17,547 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCBI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:40:17,547 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailub.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:17,548 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framd.ttf', name='Franklin Gothic Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,548 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolai.ttf', name='Consolas', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:17,549 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCEB.TTF', name='Tw Cen MT Condensed Extra Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-21 16:40:17,549 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\POORICH.TTF', name='Poor Richard', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,549 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDYSTO.TTF', name='Goudy Stout', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,550 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKB.TTF', name='Rockwell', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:17,550 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PALSCRI.TTF', name='Palace Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,550 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarai.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:17,551 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\micross.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,551 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LEELAWDB.TTF', name='Leelawadee', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:17,551 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABK.TTF', name='Franklin Gothic Book', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,552 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjh.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,552 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palabi.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:40:17,553 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAVIE.TTF', name='Ravie', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,553 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCK.TTF', name='Rockwell', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,553 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\pala.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,554 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibriz.ttf', name='Calibri', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:40:17,554 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugib.ttf', name='Gadugi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:17,554 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_PSTC.TTF', name='Bodoni MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-21 16:40:17,555 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENSCBK.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,555 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanab.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
2023-04-21 16:40:17,555 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LATINWD.TTF', name='Wide Latin', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
2023-04-21 16:40:17,556 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbeli.ttf', name='Corbel', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:17,556 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIGI.TTF', name='Gigi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,556 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITED.TTF', name='Lucida Bright', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-21 16:40:17,557 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbi.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:40:17,557 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhl.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2023-04-21 16:40:17,558 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguiemj.ttf', name='Segoe UI Emoji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,558 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OCRAEXT.TTF', name='OCR A Extended', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
2023-04-21 16:40:17,559 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebuc.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,559 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SHOWG.TTF', name='Showcard Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,560 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BASKVILL.TTF', name='Baskerville Old Face', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,560 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriab.ttf', name='Cambria', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:17,561 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAIAN.TTF', name='Maiandra GD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,561 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCRIPTBL.TTF', name='Script MT Bold', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:17,561 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLECB.TTF', name='Gloucester MT Extra Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-21 16:40:17,562 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNTI.TTF', name='Elephant', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:17,569 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFR.TTF', name='Californian FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,570 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHIC.TTF', name='Century Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,570 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PLAYBILL.TTF', name='Playbill', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,571 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABKIT.TTF', name='Franklin Gothic Book', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:17,571 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARLOWSI.TTF', name='Harlow Solid Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:17,571 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPE.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,571 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taile.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,573 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibl.ttf', name='Segoe UI', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2023-04-21 16:40:17,573 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNBI.TTF', name='Arial', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 7.8986363636363635
2023-04-21 16:40:17,573 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuiz.ttf', name='Segoe UI', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:40:17,573 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSBI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-21 16:40:17,574 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palab.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:17,574 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLI.TTF', name='Bell MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:17,574 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILLUBCD.TTF', name='Gill Sans Ultra Bold Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-21 16:40:17,574 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbd.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:17,575 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhbd.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:17,575 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoesc.ttf', name='Segoe Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,575 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\couri.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:17,575 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegUIVar.ttf', name='Segoe UI Variable', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,577 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_R.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,577 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTB.TTF', name='Copperplate Gothic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,577 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:17,577 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCB_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:17,578 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TEMPSITC.TTF', name='Tempus Sans ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,578 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MISTRAL.TTF', name='Mistral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,579 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FORTE.TTF', name='Forte', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,579 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CB.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-04-21 16:40:17,580 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbd.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:17,580 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STENCIL.TTF', name='Stencil', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,580 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrib.ttf', name='Calibri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:17,581 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERT.TTF', name='High Tower Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,581 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTCORSVA.TTF', name='Monotype Corsiva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:17,581 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFB.TTF', name='Californian FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:17,582 [19200] DEBUG    matplotlib.font_manager:1367: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
2023-04-21 16:40:57,409 [19200] DEBUG    matplotlib.font_manager:1329: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
2023-04-21 16:40:57,410 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:40:57,410 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:40:57,410 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,411 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2023-04-21 16:40:57,411 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2023-04-21 16:40:57,411 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:57,412 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:57,412 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:57,412 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,413 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:40:57,413 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,414 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:57,414 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,414 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,415 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,415 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:57,415 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:57,416 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,416 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,416 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2023-04-21 16:40:57,416 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,417 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,417 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:40:57,418 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:57,418 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:57,418 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,420 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,420 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:57,421 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:57,421 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,422 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,422 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,422 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:57,423 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,423 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:57,423 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,424 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,424 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2023-04-21 16:40:57,424 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLSNECB.TTF', name='Gill Sans MT Ext Condensed Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-21 16:40:57,425 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanz.ttf', name='Constantia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:40:57,425 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LEELAWAD.TTF', name='Leelawadee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,425 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\monbaiti.ttf', name='Mongolian Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,426 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-MEDIUM.TTF', name='Dubai', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-04-21 16:40:57,426 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-04-21 16:40:57,426 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FTLTLT.TTF', name='Footlight MT Light', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-21 16:40:57,427 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibril.ttf', name='Calibri', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-21 16:40:57,427 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSI.TTF', name='Goudy Old Style', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:57,428 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisbi.ttf', name='Segoe UI', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-21 16:40:57,428 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCCB___.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-04-21 16:40:57,428 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXD.TTF', name='Lucida Fax', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-21 16:40:57,428 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2023-04-21 16:40:57,430 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BSSYM7.TTF', name='Bookshelf Symbol 7', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,430 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAMDCN.TTF', name='Franklin Gothic Medium Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-21 16:40:57,430 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framdit.ttf', name='Franklin Gothic Medium', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:57,431 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSB.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:57,431 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-LIGHT.TTF', name='Dubai', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-21 16:40:57,431 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCC____.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-21 16:40:57,431 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_B.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:57,432 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COOPBL.TTF', name='Cooper Black', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,432 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNI.TTF', name='Arial', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 7.613636363636363
2023-04-21 16:40:57,432 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\INFROMAN.TTF', name='Informal Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,433 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSB.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-21 16:40:57,433 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BERNHC.TTF', name='Bernard MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-21 16:40:57,433 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEB.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-21 16:40:57,435 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCEDSCR.TTF', name='Edwardian Script ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,435 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consola.ttf', name='Consolas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,436 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,437 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\holomdl2.ttf', name='HoloLens MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,437 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COLONNA.TTF', name='Colonna MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,438 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYR.TTF', name='Agency FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,438 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRITANIC.TTF', name='Britannic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,438 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiai.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:57,439 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:57,439 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaS.ttf', name='Nirmala UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2023-04-21 16:40:57,440 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CHILLER.TTF', name='Chiller', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,440 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,440 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAB.TTF', name='Book Antiqua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:57,441 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothM.ttc', name='Yu Gothic', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-04-21 16:40:57,441 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG2.TTF', name='Wingdings 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,441 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Nirmala.ttf', name='Nirmala UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,442 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelUIsl.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2023-04-21 16:40:57,442 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriai.ttf', name='Cambria', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:57,442 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariali.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
2023-04-21 16:40:57,442 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARA.TTF', name='Garamond', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,444 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSPCL.TTF', name='MS Reference Specialty', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,444 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-REGULAR.TTF', name='Dubai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,444 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LHANDW.TTF', name='Lucida Handwriting', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:57,444 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:57,445 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comici.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:57,445 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTAUR.TTF', name='Centaur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,446 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEBO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-21 16:40:57,446 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ONYX.TTF', name='Onyx', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,446 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrima.ttf', name='Ebrima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,446 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFI.TTF', name='Californian FB', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:57,448 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERBI___.TTF', name='Perpetua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:40:57,448 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbell.ttf', name='Corbel', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-21 16:40:57,448 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILI____.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:57,448 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segmdl2.ttf', name='Segoe MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,449 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-BOLD.TTF', name='Dubai', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:57,449 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FELIXTI.TTF', name='Felix Titling', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,450 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbd.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
2023-04-21 16:40:57,450 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taileb.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:57,451 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeprb.ttf', name='Segoe Print', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:57,451 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoescb.ttf', name='Segoe Script', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:57,452 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITE.TTF', name='Lucida Bright', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,452 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhbd.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:57,452 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\times.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,453 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisb.ttf', name='Segoe UI', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-21 16:40:57,453 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSDB.TTF', name='Berlin Sans FB Demi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:57,453 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbi.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
2023-04-21 16:40:57,454 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesi.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:57,454 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADM.TTF', name='Franklin Gothic Demi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,454 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERTI.TTF', name='High Tower Text', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:57,456 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF-Italic.ttf', name='Sitka', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:57,456 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsun.ttc', name='SimSun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,456 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTI.TTF', name='Calisto MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:57,456 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCMI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:57,457 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaral.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,457 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\lucon.ttf', name='Lucida Console', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,457 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_I.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:57,457 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mvboli.ttf', name='MV Boli', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,458 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiab.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:57,458 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\l_10646.ttf', name='Lucida Sans Unicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,460 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTIBD.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:57,460 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNT.TTF', name='Elephant', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,461 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASMD.TTF', name='Eras Medium ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,461 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MSUIGHUR.TTF', name='Microsoft Uighur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,461 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYB.TTF', name='Agency FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:57,462 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MSUIGHUB.TTF', name='Microsoft Uighur', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:57,462 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicbd.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:57,463 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMIT.TTF', name='Franklin Gothic Demi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:57,463 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKEB.TTF', name='Rockwell Extra Bold', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
2023-04-21 16:40:57,464 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PER_____.TTF', name='Perpetua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,464 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VINERITC.TTF', name='Viner Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,464 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\marlett.ttf', name='Marlett', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-04-21 16:40:57,465 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrili.ttf', name='Calibri', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-04-21 16:40:57,465 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICBI.TTF', name='Century Gothic', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:40:57,466 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ALGER.TTF', name='Algerian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,466 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOS.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,466 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelz.ttf', name='Corbel', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:40:57,467 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILB____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:57,467 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUABI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:40:57,468 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\sylfaen.ttf', name='Sylfaen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,468 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriaz.ttf', name='Cambria', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:40:57,468 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanaz.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
2023-04-21 16:40:57,469 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constan.ttf', name='Constantia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,469 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTILI.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-21 16:40:57,470 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCM_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,470 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhl.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2023-04-21 16:40:57,470 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOS.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-21 16:40:57,471 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HATTEN.TTF', name='Haettenschweiler', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,471 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JOKERMAN.TTF', name='Jokerman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,471 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ENGR.TTF', name='Engravers MT', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-04-21 16:40:57,472 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARAIT.TTF', name='Garamond', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:57,472 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,473 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelli.ttf', name='Corbel', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-04-21 16:40:57,473 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constani.ttf', name='Constantia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:57,473 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIST.TTF', name='Calisto MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,474 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PARCHM.TTF', name='Parchment', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,474 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\himalaya.ttf', name='Microsoft Himalaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,474 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRADHITC.TTF', name='Bradley Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,476 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\wingding.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,476 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtextb.ttf', name='Myanmar Text', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:57,476 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG3.TTF', name='Wingdings 3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,477 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGSOL.TTF', name='Niagara Solid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,477 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarali.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:57,477 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKI.TTF', name='Rockwell', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:57,478 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolab.ttf', name='Consolas', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:57,479 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXDI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-21 16:40:57,479 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BAUHS93.TTF', name='Bauhaus 93', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,480 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisli.ttf', name='Segoe UI', style='italic', variant='normal', weight=350, stretch='normal', size='scalable')) = 11.0975
2023-04-21 16:40:57,480 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELL.TTF', name='Bell MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,480 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2023-04-21 16:40:57,481 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyi.ttf', name='Microsoft Yi Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,481 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSR.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,481 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHVIT.TTF', name='Franklin Gothic Heavy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:57,483 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OLDENGL.TTF', name='Old English Text MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,483 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbel.ttf', name='Corbel', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,483 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLB.TTF', name='Bell MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:57,483 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelaUIb.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:57,483 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHV.TTF', name='Franklin Gothic Heavy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,485 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OUTLOOK.TTF', name='MS Outlook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,485 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PRISTINA.TTF', name='Pristina', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,485 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERI____.TTF', name='Perpetua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:57,485 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtext.ttf', name='Myanmar Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,486 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSAN.TTF', name='MS Reference Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,486 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERB____.TTF', name='Perpetua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:57,486 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTEXTRA.TTF', name='MT Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,487 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKB.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:57,487 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARABD.TTF', name='Garamond', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:57,487 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cour.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,487 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mingliub.ttc', name='MingLiU-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,489 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICB.TTF', name='Century Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:57,489 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspa.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,489 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VIVALDII.TTF', name='Vivaldi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:57,490 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAGE.TTF', name='Rage Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:57,490 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-21 16:40:57,490 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2023-04-21 16:40:57,490 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MATURASC.TTF', name='Matura MT Script Capitals', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,491 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comic.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,491 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbi.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:40:57,491 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothR.ttc', name='Yu Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,492 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palai.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:57,492 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MOD20.TTF', name='Modern No. 20', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,493 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMCN.TTF', name='Franklin Gothic Demi Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-21 16:40:57,493 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrimabd.ttf', name='Ebrima', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:57,493 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\javatext.ttf', name='Javanese Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,494 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CASTELAR.TTF', name='Castellar', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,494 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSDI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-21 16:40:57,494 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelawUI.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,495 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAX.TTF', name='Lucida Fax', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,495 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunbd.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:57,495 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF.ttf', name='Sitka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,496 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTL.TTF', name='Copperplate Gothic Light', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,496 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
2023-04-21 16:40:57,496 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeui.ttf', name='Segoe UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,496 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Gabriola.ttf', name='Gabriola', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,498 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTBI.TTF', name='Calisto MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:40:57,498 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicz.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:40:57,498 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALN.TTF', name='Arial', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 6.613636363636363
2023-04-21 16:40:57,499 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKBI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:40:57,499 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FREESCPT.TTF', name='Freestyle Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,499 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTURY.TTF', name='Century', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,500 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaB.ttf', name='Nirmala UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:57,500 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSB.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:57,500 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSD.TTF', name='Lucida Sans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-21 16:40:57,501 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuisl.ttf', name='Segoe UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2023-04-21 16:40:57,501 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:57,501 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:40:57,502 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguihis.ttf', name='Segoe UI Historic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,502 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCB____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-04-21 16:40:57,502 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambria.ttc', name='Cambria', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,503 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKBI.TTF', name='Rockwell', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:40:57,503 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGENG.TTF', name='Niagara Engraved', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,503 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisym.ttf', name='Segoe UI Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,504 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inkfree.ttf', name='Ink Free', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,504 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASBD.TTF', name='Eras Bold ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,505 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILC____.TTF', name='Gill Sans MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-21 16:40:57,505 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candara.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,505 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\bahnschrift.ttf', name='Bahnschrift', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,505 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BROADW.TTF', name='Broadway', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,507 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolaz.ttf', name='Consolas', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:40:57,507 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CBI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2023-04-21 16:40:57,507 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuii.ttf', name='Segoe UI', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:57,507 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibli.ttf', name='Segoe UI', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2023-04-21 16:40:57,508 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEDI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-21 16:40:57,508 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucit.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:57,508 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BKANT.TTF', name='Book Antiqua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,508 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothL.ttc', name='Yu Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-21 16:40:57,510 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrii.ttf', name='Calibri', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:57,510 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CURLZ___.TTF', name='Curlz MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,510 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelb.ttf', name='Corbel', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:57,511 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARLRDBD.TTF', name='Arial Rounded MT Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,511 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothB.ttc', name='Yu Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:57,511 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASDEMI.TTF', name='Eras Demi ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,511 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
2023-04-21 16:40:57,512 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANS.TTF', name='Lucida Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,512 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariblk.ttf', name='Arial', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 6.888636363636364
2023-04-21 16:40:57,512 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCKRIST.TTF', name='Kristen ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,512 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\KUNSTLER.TTF', name='Kunstler Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,513 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanb.ttf', name='Constantia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:57,513 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PAPYRUS.TTF', name='Papyrus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,513 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JUICE___.TTF', name='Juice ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,514 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguili.ttf', name='Segoe UI', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-04-21 16:40:57,514 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:57,514 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarab.ttf', name='Candara', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:57,515 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\IMPRISHA.TTF', name='Imprint MT Shadow', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,515 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailu.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,515 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbi.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:40:57,515 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuil.ttf', name='Segoe UI', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-21 16:40:57,515 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanai.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
2023-04-21 16:40:57,517 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoepr.ttf', name='Segoe Print', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,517 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaraz.ttf', name='Candara', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:40:57,518 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNB.TTF', name='Arial', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 6.8986363636363635
2023-04-21 16:40:57,518 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspab.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:57,518 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,519 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCM____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-21 16:40:57,519 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARNGTON.TTF', name='Harrington', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,519 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbd.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:57,519 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:57,520 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILSANUB.TTF', name='Gill Sans Ultra Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,520 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibri.ttf', name='Calibri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,520 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiaz.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:40:57,521 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegoeIcons.ttf', name='Segoe Fluent Icons', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,521 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAGNETOB.TTF', name='Magneto', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:57,521 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICI.TTF', name='Century Gothic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:57,521 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCBLKAD.TTF', name='Blackadder ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,523 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahomabd.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:57,523 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugi.ttf', name='Gadugi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,523 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LCALLIG.TTF', name='Lucida Calligraphy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:57,524 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyh.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,524 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsunb.ttf', name='SimSun-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,524 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgun.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,524 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIL_____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,525 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VLADIMIR.TTF', name='Vladimir Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,525 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,525 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msgothic.ttc', name='MS Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,526 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRSCRIPT.TTF', name='French Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,526 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILBI___.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:40:57,526 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASLGHT.TTF', name='Eras Light ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,527 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTB.TTF', name='Calisto MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:57,527 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunsl.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-21 16:40:57,527 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRUSHSCI.TTF', name='Brush Script MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:57,528 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SNAP____.TTF', name='Snap ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,528 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuib.ttf', name='Segoe UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:57,528 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCBI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:40:57,528 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailub.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:57,530 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framd.ttf', name='Franklin Gothic Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,530 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolai.ttf', name='Consolas', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:57,530 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCEB.TTF', name='Tw Cen MT Condensed Extra Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-21 16:40:57,531 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\POORICH.TTF', name='Poor Richard', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,531 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDYSTO.TTF', name='Goudy Stout', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,531 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKB.TTF', name='Rockwell', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:57,531 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PALSCRI.TTF', name='Palace Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,531 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarai.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:57,532 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\micross.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,532 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LEELAWDB.TTF', name='Leelawadee', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:57,532 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABK.TTF', name='Franklin Gothic Book', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,534 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjh.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,534 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palabi.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:40:57,534 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAVIE.TTF', name='Ravie', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,534 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCK.TTF', name='Rockwell', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,535 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\pala.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,535 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibriz.ttf', name='Calibri', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:40:57,535 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugib.ttf', name='Gadugi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:57,536 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_PSTC.TTF', name='Bodoni MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-21 16:40:57,536 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENSCBK.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,536 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanab.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
2023-04-21 16:40:57,536 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LATINWD.TTF', name='Wide Latin', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
2023-04-21 16:40:57,538 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbeli.ttf', name='Corbel', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:57,538 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIGI.TTF', name='Gigi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,538 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITED.TTF', name='Lucida Bright', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-21 16:40:57,539 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbi.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:40:57,539 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhl.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2023-04-21 16:40:57,539 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguiemj.ttf', name='Segoe UI Emoji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,539 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OCRAEXT.TTF', name='OCR A Extended', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
2023-04-21 16:40:57,540 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebuc.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,540 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SHOWG.TTF', name='Showcard Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,540 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BASKVILL.TTF', name='Baskerville Old Face', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,540 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriab.ttf', name='Cambria', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:57,541 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAIAN.TTF', name='Maiandra GD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,541 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCRIPTBL.TTF', name='Script MT Bold', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:57,541 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLECB.TTF', name='Gloucester MT Extra Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-21 16:40:57,541 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNTI.TTF', name='Elephant', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:57,543 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFR.TTF', name='Californian FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,543 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHIC.TTF', name='Century Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,543 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PLAYBILL.TTF', name='Playbill', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,543 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABKIT.TTF', name='Franklin Gothic Book', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:57,544 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARLOWSI.TTF', name='Harlow Solid Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:57,544 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPE.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,544 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taile.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,544 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibl.ttf', name='Segoe UI', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2023-04-21 16:40:57,546 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNBI.TTF', name='Arial', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 7.8986363636363635
2023-04-21 16:40:57,546 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuiz.ttf', name='Segoe UI', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:40:57,547 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSBI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-21 16:40:57,547 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palab.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:57,547 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLI.TTF', name='Bell MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:57,548 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILLUBCD.TTF', name='Gill Sans Ultra Bold Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-21 16:40:57,548 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbd.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:57,548 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhbd.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:57,549 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoesc.ttf', name='Segoe Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,549 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\couri.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:57,550 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegUIVar.ttf', name='Segoe UI Variable', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,550 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_R.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,550 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTB.TTF', name='Copperplate Gothic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,551 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:57,551 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCB_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:57,551 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TEMPSITC.TTF', name='Tempus Sans ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,552 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MISTRAL.TTF', name='Mistral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,552 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FORTE.TTF', name='Forte', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,552 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CB.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-04-21 16:40:57,553 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbd.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:57,553 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STENCIL.TTF', name='Stencil', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,553 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrib.ttf', name='Calibri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:57,554 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERT.TTF', name='High Tower Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,554 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTCORSVA.TTF', name='Monotype Corsiva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,555 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFB.TTF', name='Californian FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:57,555 [19200] DEBUG    matplotlib.font_manager:1367: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to DejaVu Sans ('C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
2023-04-21 16:40:57,578 [19200] DEBUG    matplotlib.font_manager:1329: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2023-04-21 16:40:57,579 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:40:57,579 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:40:57,579 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,579 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2023-04-21 16:40:57,579 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2023-04-21 16:40:57,580 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:57,581 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:57,581 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:57,581 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,581 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:40:57,581 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,582 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:57,582 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,582 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,582 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,583 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:57,583 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:57,583 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,583 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,584 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2023-04-21 16:40:57,584 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,584 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,586 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:40:57,586 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:57,586 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:57,586 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,587 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,587 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:57,587 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:57,587 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,587 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,587 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,587 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:57,588 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,588 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:57,588 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,589 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,589 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2023-04-21 16:40:57,589 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLSNECB.TTF', name='Gill Sans MT Ext Condensed Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-21 16:40:57,589 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanz.ttf', name='Constantia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:40:57,590 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LEELAWAD.TTF', name='Leelawadee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,590 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\monbaiti.ttf', name='Mongolian Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,590 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-MEDIUM.TTF', name='Dubai', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-04-21 16:40:57,591 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-04-21 16:40:57,591 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FTLTLT.TTF', name='Footlight MT Light', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-21 16:40:57,591 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibril.ttf', name='Calibri', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-21 16:40:57,591 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSI.TTF', name='Goudy Old Style', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:57,593 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisbi.ttf', name='Segoe UI', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-21 16:40:57,593 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCCB___.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-04-21 16:40:57,593 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXD.TTF', name='Lucida Fax', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-21 16:40:57,593 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2023-04-21 16:40:57,595 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BSSYM7.TTF', name='Bookshelf Symbol 7', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,595 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAMDCN.TTF', name='Franklin Gothic Medium Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-21 16:40:57,595 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framdit.ttf', name='Franklin Gothic Medium', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:57,596 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSB.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:57,596 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-LIGHT.TTF', name='Dubai', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-21 16:40:57,596 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCC____.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-21 16:40:57,596 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_B.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:57,597 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COOPBL.TTF', name='Cooper Black', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,597 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNI.TTF', name='Arial', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 7.613636363636363
2023-04-21 16:40:57,597 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\INFROMAN.TTF', name='Informal Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,597 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSB.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-21 16:40:57,598 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BERNHC.TTF', name='Bernard MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-21 16:40:57,598 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEB.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-21 16:40:57,598 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCEDSCR.TTF', name='Edwardian Script ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,599 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consola.ttf', name='Consolas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,599 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,599 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\holomdl2.ttf', name='HoloLens MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,599 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COLONNA.TTF', name='Colonna MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,601 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYR.TTF', name='Agency FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,601 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRITANIC.TTF', name='Britannic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,601 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiai.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:57,601 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:57,602 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaS.ttf', name='Nirmala UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2023-04-21 16:40:57,602 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CHILLER.TTF', name='Chiller', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,602 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,602 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAB.TTF', name='Book Antiqua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:57,603 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothM.ttc', name='Yu Gothic', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-04-21 16:40:57,603 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG2.TTF', name='Wingdings 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,603 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Nirmala.ttf', name='Nirmala UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,605 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelUIsl.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2023-04-21 16:40:57,605 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriai.ttf', name='Cambria', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:57,605 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariali.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
2023-04-21 16:40:57,605 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARA.TTF', name='Garamond', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,605 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSPCL.TTF', name='MS Reference Specialty', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,606 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-REGULAR.TTF', name='Dubai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,606 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LHANDW.TTF', name='Lucida Handwriting', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:57,606 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:57,607 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comici.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:57,607 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTAUR.TTF', name='Centaur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,607 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEBO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-21 16:40:57,608 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ONYX.TTF', name='Onyx', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,608 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrima.ttf', name='Ebrima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,608 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFI.TTF', name='Californian FB', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:57,608 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERBI___.TTF', name='Perpetua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:40:57,610 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbell.ttf', name='Corbel', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-21 16:40:57,610 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILI____.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:57,610 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segmdl2.ttf', name='Segoe MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,611 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-BOLD.TTF', name='Dubai', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:57,611 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FELIXTI.TTF', name='Felix Titling', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,611 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbd.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
2023-04-21 16:40:57,612 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taileb.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:57,612 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeprb.ttf', name='Segoe Print', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:57,612 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoescb.ttf', name='Segoe Script', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:57,613 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITE.TTF', name='Lucida Bright', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,613 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhbd.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:57,613 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\times.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,614 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisb.ttf', name='Segoe UI', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-21 16:40:57,614 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSDB.TTF', name='Berlin Sans FB Demi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:57,614 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbi.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
2023-04-21 16:40:57,615 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesi.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:57,615 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADM.TTF', name='Franklin Gothic Demi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,615 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERTI.TTF', name='High Tower Text', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:57,616 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF-Italic.ttf', name='Sitka', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:57,616 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsun.ttc', name='SimSun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,616 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTI.TTF', name='Calisto MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:57,617 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCMI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:57,617 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaral.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,617 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\lucon.ttf', name='Lucida Console', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,618 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_I.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:57,618 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mvboli.ttf', name='MV Boli', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,618 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiab.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:57,619 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\l_10646.ttf', name='Lucida Sans Unicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,619 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTIBD.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:57,619 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNT.TTF', name='Elephant', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,620 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASMD.TTF', name='Eras Medium ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,620 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MSUIGHUR.TTF', name='Microsoft Uighur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,621 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYB.TTF', name='Agency FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:57,621 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MSUIGHUB.TTF', name='Microsoft Uighur', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:57,621 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicbd.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:57,622 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMIT.TTF', name='Franklin Gothic Demi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:57,622 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKEB.TTF', name='Rockwell Extra Bold', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
2023-04-21 16:40:57,622 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PER_____.TTF', name='Perpetua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,623 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VINERITC.TTF', name='Viner Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,623 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\marlett.ttf', name='Marlett', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-04-21 16:40:57,623 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrili.ttf', name='Calibri', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-04-21 16:40:57,625 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICBI.TTF', name='Century Gothic', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:40:57,625 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ALGER.TTF', name='Algerian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,626 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOS.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,626 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelz.ttf', name='Corbel', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:40:57,626 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILB____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:57,627 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUABI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:40:57,627 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\sylfaen.ttf', name='Sylfaen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,627 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriaz.ttf', name='Cambria', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:40:57,628 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanaz.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
2023-04-21 16:40:57,628 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constan.ttf', name='Constantia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,628 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTILI.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-21 16:40:57,629 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCM_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,629 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhl.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2023-04-21 16:40:57,629 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOS.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-21 16:40:57,630 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HATTEN.TTF', name='Haettenschweiler', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,630 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JOKERMAN.TTF', name='Jokerman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,630 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ENGR.TTF', name='Engravers MT', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-04-21 16:40:57,630 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARAIT.TTF', name='Garamond', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:57,631 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,631 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelli.ttf', name='Corbel', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-04-21 16:40:57,631 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constani.ttf', name='Constantia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:57,632 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIST.TTF', name='Calisto MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,632 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PARCHM.TTF', name='Parchment', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,632 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\himalaya.ttf', name='Microsoft Himalaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,633 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRADHITC.TTF', name='Bradley Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,633 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\wingding.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,633 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtextb.ttf', name='Myanmar Text', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:57,633 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG3.TTF', name='Wingdings 3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,635 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGSOL.TTF', name='Niagara Solid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,635 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarali.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:57,635 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKI.TTF', name='Rockwell', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:57,636 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolab.ttf', name='Consolas', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:57,636 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXDI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-21 16:40:57,637 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BAUHS93.TTF', name='Bauhaus 93', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,637 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisli.ttf', name='Segoe UI', style='italic', variant='normal', weight=350, stretch='normal', size='scalable')) = 11.0975
2023-04-21 16:40:57,637 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELL.TTF', name='Bell MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,638 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2023-04-21 16:40:57,638 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyi.ttf', name='Microsoft Yi Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,638 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSR.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,639 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHVIT.TTF', name='Franklin Gothic Heavy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:57,639 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OLDENGL.TTF', name='Old English Text MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,640 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbel.ttf', name='Corbel', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,640 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLB.TTF', name='Bell MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:57,640 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelaUIb.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:57,641 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHV.TTF', name='Franklin Gothic Heavy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,641 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OUTLOOK.TTF', name='MS Outlook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,642 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PRISTINA.TTF', name='Pristina', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,642 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERI____.TTF', name='Perpetua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:57,642 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtext.ttf', name='Myanmar Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,643 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSAN.TTF', name='MS Reference Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,643 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERB____.TTF', name='Perpetua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:57,643 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTEXTRA.TTF', name='MT Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,644 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKB.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:57,644 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARABD.TTF', name='Garamond', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:57,644 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cour.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,645 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mingliub.ttc', name='MingLiU-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,645 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICB.TTF', name='Century Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:57,645 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspa.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,646 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VIVALDII.TTF', name='Vivaldi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:57,646 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAGE.TTF', name='Rage Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:57,647 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-21 16:40:57,647 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2023-04-21 16:40:57,647 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MATURASC.TTF', name='Matura MT Script Capitals', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,648 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comic.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,648 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbi.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:40:57,648 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothR.ttc', name='Yu Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,649 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palai.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:57,649 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MOD20.TTF', name='Modern No. 20', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,649 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMCN.TTF', name='Franklin Gothic Demi Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-21 16:40:57,650 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrimabd.ttf', name='Ebrima', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:57,650 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\javatext.ttf', name='Javanese Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,650 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CASTELAR.TTF', name='Castellar', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,651 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSDI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-21 16:40:57,651 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelawUI.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,651 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAX.TTF', name='Lucida Fax', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,652 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunbd.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:57,652 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF.ttf', name='Sitka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,653 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTL.TTF', name='Copperplate Gothic Light', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,653 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
2023-04-21 16:40:57,653 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeui.ttf', name='Segoe UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,654 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Gabriola.ttf', name='Gabriola', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,654 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTBI.TTF', name='Calisto MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:40:57,655 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicz.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:40:57,655 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALN.TTF', name='Arial', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 6.613636363636363
2023-04-21 16:40:57,655 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKBI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:40:57,656 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FREESCPT.TTF', name='Freestyle Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,656 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTURY.TTF', name='Century', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,656 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaB.ttf', name='Nirmala UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:57,656 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSB.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:57,658 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSD.TTF', name='Lucida Sans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-21 16:40:57,658 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuisl.ttf', name='Segoe UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2023-04-21 16:40:57,658 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:57,659 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:40:57,659 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguihis.ttf', name='Segoe UI Historic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,659 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCB____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-04-21 16:40:57,660 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambria.ttc', name='Cambria', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,660 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKBI.TTF', name='Rockwell', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:40:57,660 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGENG.TTF', name='Niagara Engraved', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,661 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisym.ttf', name='Segoe UI Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,661 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inkfree.ttf', name='Ink Free', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,661 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASBD.TTF', name='Eras Bold ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,662 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILC____.TTF', name='Gill Sans MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-21 16:40:57,662 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candara.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,663 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\bahnschrift.ttf', name='Bahnschrift', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,663 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BROADW.TTF', name='Broadway', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,663 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolaz.ttf', name='Consolas', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:40:57,664 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CBI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2023-04-21 16:40:57,664 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuii.ttf', name='Segoe UI', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:57,664 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibli.ttf', name='Segoe UI', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2023-04-21 16:40:57,665 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEDI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-21 16:40:57,665 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucit.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:57,665 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BKANT.TTF', name='Book Antiqua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,666 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothL.ttc', name='Yu Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-21 16:40:57,666 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrii.ttf', name='Calibri', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:57,666 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CURLZ___.TTF', name='Curlz MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,667 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelb.ttf', name='Corbel', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:57,667 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARLRDBD.TTF', name='Arial Rounded MT Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,667 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothB.ttc', name='Yu Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:57,668 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASDEMI.TTF', name='Eras Demi ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,668 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
2023-04-21 16:40:57,668 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANS.TTF', name='Lucida Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,668 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariblk.ttf', name='Arial', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 6.888636363636364
2023-04-21 16:40:57,669 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCKRIST.TTF', name='Kristen ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,669 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\KUNSTLER.TTF', name='Kunstler Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,669 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanb.ttf', name='Constantia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:57,670 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PAPYRUS.TTF', name='Papyrus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,670 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JUICE___.TTF', name='Juice ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,670 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguili.ttf', name='Segoe UI', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-04-21 16:40:57,671 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:57,672 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarab.ttf', name='Candara', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:57,672 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\IMPRISHA.TTF', name='Imprint MT Shadow', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,672 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailu.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,673 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbi.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:40:57,673 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuil.ttf', name='Segoe UI', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-21 16:40:57,673 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanai.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
2023-04-21 16:40:57,673 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoepr.ttf', name='Segoe Print', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,674 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaraz.ttf', name='Candara', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:40:57,674 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNB.TTF', name='Arial', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 6.8986363636363635
2023-04-21 16:40:57,674 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspab.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:57,674 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,676 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCM____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-21 16:40:57,676 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARNGTON.TTF', name='Harrington', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,677 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbd.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:57,677 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:57,678 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILSANUB.TTF', name='Gill Sans Ultra Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,678 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibri.ttf', name='Calibri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,678 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiaz.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:40:57,679 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegoeIcons.ttf', name='Segoe Fluent Icons', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,679 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAGNETOB.TTF', name='Magneto', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:57,679 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICI.TTF', name='Century Gothic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:57,679 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCBLKAD.TTF', name='Blackadder ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,679 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahomabd.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:57,680 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugi.ttf', name='Gadugi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,680 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LCALLIG.TTF', name='Lucida Calligraphy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:57,680 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyh.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,681 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsunb.ttf', name='SimSun-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,681 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgun.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,681 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIL_____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,682 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VLADIMIR.TTF', name='Vladimir Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,682 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,682 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msgothic.ttc', name='MS Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,683 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRSCRIPT.TTF', name='French Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,683 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILBI___.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:40:57,683 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASLGHT.TTF', name='Eras Light ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,684 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTB.TTF', name='Calisto MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:57,684 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunsl.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-21 16:40:57,684 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRUSHSCI.TTF', name='Brush Script MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:57,686 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SNAP____.TTF', name='Snap ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,686 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuib.ttf', name='Segoe UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:57,686 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCBI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:40:57,686 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailub.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:57,687 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framd.ttf', name='Franklin Gothic Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,687 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolai.ttf', name='Consolas', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:57,687 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCEB.TTF', name='Tw Cen MT Condensed Extra Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-21 16:40:57,688 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\POORICH.TTF', name='Poor Richard', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,688 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDYSTO.TTF', name='Goudy Stout', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,688 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKB.TTF', name='Rockwell', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:57,689 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PALSCRI.TTF', name='Palace Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,689 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarai.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:57,689 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\micross.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,690 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LEELAWDB.TTF', name='Leelawadee', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:57,690 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABK.TTF', name='Franklin Gothic Book', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,690 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjh.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,691 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palabi.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:40:57,691 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAVIE.TTF', name='Ravie', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,691 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCK.TTF', name='Rockwell', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,692 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\pala.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,692 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibriz.ttf', name='Calibri', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:40:57,692 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugib.ttf', name='Gadugi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:57,693 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_PSTC.TTF', name='Bodoni MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-21 16:40:57,693 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENSCBK.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,694 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanab.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
2023-04-21 16:40:57,694 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LATINWD.TTF', name='Wide Latin', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
2023-04-21 16:40:57,694 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbeli.ttf', name='Corbel', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:57,695 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIGI.TTF', name='Gigi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,695 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITED.TTF', name='Lucida Bright', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-21 16:40:57,695 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbi.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:40:57,696 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhl.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2023-04-21 16:40:57,696 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguiemj.ttf', name='Segoe UI Emoji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,696 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OCRAEXT.TTF', name='OCR A Extended', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
2023-04-21 16:40:57,697 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebuc.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,697 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SHOWG.TTF', name='Showcard Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,697 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BASKVILL.TTF', name='Baskerville Old Face', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,698 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriab.ttf', name='Cambria', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:57,698 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAIAN.TTF', name='Maiandra GD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,698 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCRIPTBL.TTF', name='Script MT Bold', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:57,698 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLECB.TTF', name='Gloucester MT Extra Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-21 16:40:57,700 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNTI.TTF', name='Elephant', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:57,700 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFR.TTF', name='Californian FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,700 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHIC.TTF', name='Century Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,700 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PLAYBILL.TTF', name='Playbill', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,701 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABKIT.TTF', name='Franklin Gothic Book', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:57,702 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARLOWSI.TTF', name='Harlow Solid Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:57,702 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPE.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,702 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taile.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,703 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibl.ttf', name='Segoe UI', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2023-04-21 16:40:57,703 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNBI.TTF', name='Arial', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 7.8986363636363635
2023-04-21 16:40:57,703 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuiz.ttf', name='Segoe UI', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:40:57,703 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSBI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-21 16:40:57,704 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palab.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:57,704 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLI.TTF', name='Bell MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:57,704 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILLUBCD.TTF', name='Gill Sans Ultra Bold Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-21 16:40:57,705 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbd.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:57,705 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhbd.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:57,705 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoesc.ttf', name='Segoe Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,706 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\couri.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:57,706 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegUIVar.ttf', name='Segoe UI Variable', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,706 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_R.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,706 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTB.TTF', name='Copperplate Gothic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,707 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:40:57,707 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCB_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:57,707 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TEMPSITC.TTF', name='Tempus Sans ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,708 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MISTRAL.TTF', name='Mistral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,708 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FORTE.TTF', name='Forte', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,708 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CB.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-04-21 16:40:57,708 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbd.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:57,709 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STENCIL.TTF', name='Stencil', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,709 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrib.ttf', name='Calibri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:57,709 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERT.TTF', name='High Tower Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,709 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTCORSVA.TTF', name='Monotype Corsiva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:40:57,710 [19200] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFB.TTF', name='Californian FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:40:57,710 [19200] DEBUG    matplotlib.font_manager:1367: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
2023-04-21 16:54:25,266 [17696] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-04-21 16:54:25,267 [17696] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-04-21 16:54:25,268 [17696] INFO     root:247: [JupyterRequire] Initializing comms.
2023-04-21 16:54:25,272 [17696] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-04-21 16:54:25,272 [17696] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-04-21 16:54:25,273 [17696] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-04-21 16:54:28,489 [17696] INFO     numexpr.utils:147: [JupyterRequire] Note: NumExpr detected 12 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
2023-04-21 16:54:28,489 [17696] INFO     numexpr.utils:159: [JupyterRequire] NumExpr defaulting to 8 threads.
2023-04-21 16:54:29,203 [17696] DEBUG    matplotlib:275: [JupyterRequire] matplotlib data path: C:\Users\adity\anaconda3\lib\site-packages\matplotlib\mpl-data
2023-04-21 16:54:29,211 [17696] DEBUG    matplotlib:275: [JupyterRequire] CONFIGDIR=C:\Users\adity\.matplotlib
2023-04-21 16:54:29,220 [17696] DEBUG    matplotlib:1445: [JupyterRequire] interactive is False
2023-04-21 16:54:29,221 [17696] DEBUG    matplotlib:1446: [JupyterRequire] platform is win32
2023-04-21 16:54:29,221 [17696] DEBUG    matplotlib:1447: [JupyterRequire] loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', '_io', 'marshal', 'nt', 'winreg', '_frozen_importlib_external', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', 'encodings.cp1252', '_signal', 'encodings.latin_1', '_abc', 'abc', 'io', '__main__', '_stat', 'stat', '_collections_abc', 'genericpath', 'ntpath', 'os.path', 'os', '_sitebuiltins', '_locale', '_bootlocale', '_distutils_hack', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib.machinery', '_heapq', 'heapq', 'itertools', 'keyword', '_operator', 'operator', 'reprlib', '_collections', 'collections', 'collections.abc', '_functools', 'functools', 'contextlib', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', 'copyreg', 're', 'typing.io', 'typing.re', 'typing', 'importlib.abc', 'importlib.util', 'google', 'google.cloud', 'google.logging', 'mpl_toolkits', 'sphinxcontrib', 'zope', 'site', '_weakrefset', 'weakref', 'pkgutil', 'runpy', 'ipykernel._version', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'errno', 'signal', 'threading', 'msvcrt', '_winapi', 'subprocess', 'jupyter_client._version', 'posixpath', 'fnmatch', 'glob', '_socket', 'math', 'select', 'selectors', 'socket', 'zlib', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', '_bisect', 'bisect', '_random', '_sha512', 'random', 'tempfile', 'getpass', 'platform', 'zmq.libzmq', 'zmq.backend.select', 'cython_runtime', 'zmq.backend.cython.constants', '_cython_0_29_24', 'zmq.backend.cython.error', 'zmq.error', 'zmq.backend.cython.message', 'zmq.backend.cython.context', 'copy', '_struct', 'struct', '_compat_pickle', '_pickle', 'pickle', 'zmq.backend.cython.socket', 'zmq.backend.cython.utils', 'zmq.backend.cython._poll', 'zmq.backend.cython._version', 'zmq.backend.cython._device', 'zmq.backend.cython._proxy_steerable', 'zmq.backend.cython', 'zmq.backend', 'zmq.utils', 'zmq.utils.constant_names', 'zmq.sugar.constants', 'atexit', 'zmq.sugar.attrsettr', 'zmq.sugar.poll', 'zmq.utils.jsonapi', 'zmq.utils.strtypes', 'zmq.sugar.socket', 'zmq.sugar.context', 'zmq.sugar.frame', 'zmq.sugar.tracker', 'zmq.sugar.version', 'zmq.sugar.stopwatch', 'zmq.sugar', 'zmq', '_ast', 'ast', '_opcode', 'opcode', 'dis', 'token', 'tokenize', 'linecache', 'inspect', 'traitlets.utils', 'traitlets.utils.getargspec', 'traitlets.utils.importstring', 'traitlets.utils.sentinel', 'traitlets.utils.bunch', 'traitlets.utils.descriptions', 'traitlets.traitlets', 'traitlets.utils.decorators', 'traitlets._version', 'traitlets', 'traceback', '_string', 'string', 'logging', 'pprint', 'gettext', 'argparse', 'traitlets.config.loader', 'textwrap', 'traitlets.utils.text', 'traitlets.config.configurable', 'traitlets.config.application', 'traitlets.config', 'jupyter_client.localinterfaces', 'jupyter_core.version', 'jupyter_core', 'urllib', 'urllib.parse', 'pathlib', 'jupyter_core.paths', 'jupyter_client.utils', 'jupyter_client.connect', 'traitlets.log', 'jupyter_client.launcher', 'concurrent', 'concurrent.futures._base', 'concurrent.futures', '_ssl', 'binascii', 'base64', 'ssl', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', '_contextvars', 'contextvars', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.threads', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'asyncio.windows_events', 'asyncio', 'jupyter_client.channelsabc', 'jupyter_client.channels', 'jupyter_client.clientabc', 'jupyter_client.client', 'jupyter_client.kernelspec', 'jupyter_client.managerabc', 'jupyter_client.manager', '_queue', 'queue', 'jupyter_client.blocking.channels', 'jupyter_client.blocking.client', 'jupyter_client.blocking', 'zmq._future', 'zmq.asyncio', 'jupyter_client.asynchronous.channels', 'jupyter_client.asynchronous.client', 'jupyter_client.asynchronous', '_uuid', 'uuid', 'jupyter_client.multikernelmanager', 'jupyter_client', 'ipykernel.connect', 'ipykernel', 'tornado', '_datetime', 'datetime', 'numbers', 'logging.handlers', 'html.entities', 'html', 'array', 'tornado.speedups', 'tornado.util', 'tornado.escape', 'colorama.ansi', '_ctypes', 'ctypes._endian', 'ctypes', 'ctypes.wintypes', 'colorama.win32', 'colorama.winterm', 'colorama.ansitowin32', 'colorama.initialise', 'colorama', 'tornado.log', 'tornado.concurrent', 'tornado.ioloop', '__future__', 'tornado.platform', 'tornado.gen', 'tornado.platform.asyncio', 'zmq.eventloop.ioloop', 'zmq.eventloop', 'zmq.eventloop.zmqstream', 'IPython.core', 'IPython.core.getipython', 'IPython.core.release', 'sysconfig', 'pydoc', 'executing.executing', 'executing.version', 'executing', 'asttokens.line_numbers', 'six', 'six.moves', 'asttokens.util', 'asttokens.mark_tokens', 'asttokens.asttokens', 'asttokens', '_decimal', 'decimal', 'fractions', 'pure_eval.utils', 'pure_eval.my_getattr_static', 'pure_eval.core', 'pure_eval.version', 'pure_eval', 'stack_data.utils', 'stack_data.core', 'stack_data.formatting', 'stack_data.version', 'stack_data', 'pygments', 'pygments.formatters._mapping', 'pygments.plugin', 'pygments.util', 'pygments.formatters', 'pygments.styles', 'pygments.formatter', 'pygments.console', 'pygments.token', 'pygments.style', 'pygments.formatters.terminal256', 'bdb', 'IPython.utils', 'IPython.utils.ipstruct', 'IPython.utils.coloransi', 'IPython.utils.colorable', 'IPython.utils.PyColorize', 'locale', 'IPython.utils.encoding', 'IPython.utils.py3compat', 'IPython.core.excolors', 'cmd', 'codeop', 'code', 'pdb', 'IPython.core.debugger', 'IPython.core.display_trap', 'shlex', 'IPython.utils._process_common', 'IPython.utils._process_win32', 'IPython.utils.process', 'IPython.utils.decorators', 'IPython.utils.path', 'IPython.utils.terminal', 'IPython.core.ultratb', 'IPython.utils._sysinfo', 'IPython.utils.sysinfo', 'IPython.core.crashhandler', 'IPython.utils.importstring', 'IPython.paths', 'IPython.core.profiledir', 'IPython.core.application', 'IPython.terminal', '_hashlib', '_blake2', 'hashlib', 'IPython.core.compilerop', 'IPython.core.error', 'IPython.utils.text', 'IPython.core.magic_arguments', 'getopt', 'IPython.core.display_functions', 'mimetypes', 'IPython.testing', 'IPython.testing.skipdoctest', 'IPython.core.display', 'IPython.lib', 'IPython.lib.display', 'IPython.display', 'IPython.utils.data', 'IPython.core.page', 'IPython.lib.pretty', 'IPython.utils.openpy', 'IPython.utils.dir2', 'IPython.utils.wildcard', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.lexers', 'pygments.filter', 'pygments.filters', 'pygments.regexopt', 'pygments.lexer', 'pygments.unistring', 'pygments.lexers.python', 'pygments.formatters.html', 'IPython.core.oinspect', 'IPython.core.inputtransformer2', 'IPython.core.magic', 'pickleshare', 'IPython.core.hooks', 'IPython.core.autocall', 'IPython.core.macro', 'IPython.core.splitinput', 'IPython.core.prefilter', 'IPython.core.alias', 'IPython.core.builtin_trap', 'IPython.core.displayhook', 'IPython.core.displaypub', 'backcall.backcall', 'backcall', 'IPython.core.events', 'IPython.core.extensions', 'decorator', 'IPython.utils.sentinel', 'IPython.core.formatters', '_sqlite3', 'sqlite3.dbapi2', 'sqlite3', 'IPython.core.history', 'IPython.core.logger', 'IPython.core.payload', 'IPython.core.usage', 'IPython.utils.capture', 'IPython.utils.io', 'IPython.utils.strdispatch', 'IPython.utils.syspathcontext', 'IPython.core.async_helpers', 'IPython.core.interactiveshell', 'prompt_toolkit.application.current', 'prompt_toolkit.eventloop.utils', 'prompt_toolkit.eventloop.async_generator', 'wcwidth.table_wide', 'wcwidth.table_zero', 'wcwidth.unicode_versions', 'wcwidth.wcwidth', 'wcwidth', 'prompt_toolkit.utils', 'prompt_toolkit.eventloop.inputhook', 'prompt_toolkit.eventloop', 'prompt_toolkit.application.run_in_terminal', 'prompt_toolkit.selection', 'prompt_toolkit.clipboard.base', 'prompt_toolkit.clipboard.in_memory', 'prompt_toolkit.clipboard', 'prompt_toolkit.cache', 'prompt_toolkit.enums', 'prompt_toolkit.filters.base', 'prompt_toolkit.filters.app', 'prompt_toolkit.filters.cli', 'prompt_toolkit.filters.utils', 'prompt_toolkit.filters', 'prompt_toolkit.document', 'prompt_toolkit.auto_suggest', 'prompt_toolkit.data_structures', 'prompt_toolkit.styles.base', 'prompt_toolkit.styles.named_colors', 'prompt_toolkit.styles.style', 'prompt_toolkit.styles.defaults', 'prompt_toolkit.styles.pygments', 'colorsys', 'prompt_toolkit.styles.style_transformation', 'prompt_toolkit.styles', 'prompt_toolkit.output.color_depth', 'prompt_toolkit.output.base', 'prompt_toolkit.output.defaults', 'prompt_toolkit.output', 'prompt_toolkit.output.vt100', 'prompt_toolkit.mouse_events', 'prompt_toolkit.formatted_text.base', 'prompt_toolkit.formatted_text.ansi', 'xml', 'xml.dom.domreg', 'xml.dom', 'xml.dom.minicompat', 'xml.dom.NodeFilter', 'xml.dom.xmlbuilder', 'xml.dom.minidom', 'prompt_toolkit.formatted_text.html', 'prompt_toolkit.formatted_text.pygments', 'prompt_toolkit.formatted_text.utils', 'prompt_toolkit.formatted_text', 'prompt_toolkit.completion.base', 'prompt_toolkit.completion.deduplicate', 'prompt_toolkit.completion.filesystem', 'prompt_toolkit.completion.word_completer', 'prompt_toolkit.completion.fuzzy_completer', 'prompt_toolkit.completion.nested', 'prompt_toolkit.completion', 'prompt_toolkit.history', 'prompt_toolkit.keys', 'prompt_toolkit.key_binding.key_bindings', 'prompt_toolkit.key_binding.key_processor', 'prompt_toolkit.key_binding', 'prompt_toolkit.key_binding.vi_state', 'prompt_toolkit.search', 'prompt_toolkit.validation', 'prompt_toolkit.buffer', 'prompt_toolkit.input.base', 'prompt_toolkit.input.defaults', 'prompt_toolkit.input', 'prompt_toolkit.input.typeahead', 'prompt_toolkit.key_binding.bindings', 'prompt_toolkit.key_binding.bindings.scroll', 'prompt_toolkit.key_binding.bindings.page_navigation', 'prompt_toolkit.lexers.base', 'prompt_toolkit.lexers.pygments', 'prompt_toolkit.lexers', 'prompt_toolkit.layout.utils', 'prompt_toolkit.layout.processors', 'prompt_toolkit.layout.controls', 'prompt_toolkit.layout.dimension', 'prompt_toolkit.layout.margins', 'prompt_toolkit.layout.mouse_handlers', 'prompt_toolkit.layout.screen', 'prompt_toolkit.layout.containers', 'prompt_toolkit.layout.layout', 'prompt_toolkit.layout.menus', 'prompt_toolkit.layout.scrollable_pane', 'prompt_toolkit.layout', 'prompt_toolkit.key_binding.bindings.completion', 'prompt_toolkit.key_binding.bindings.named_commands', 'prompt_toolkit.key_binding.bindings.basic', 'prompt_toolkit.key_binding.bindings.cpr', 'prompt_toolkit.key_binding.bindings.emacs', 'prompt_toolkit.key_binding.bindings.mouse', 'prompt_toolkit.input.ansi_escape_sequences', 'prompt_toolkit.input.vt100_parser', 'prompt_toolkit.key_binding.digraphs', 'prompt_toolkit.key_binding.bindings.vi', 'prompt_toolkit.key_binding.defaults', 'prompt_toolkit.key_binding.emacs_state', 'prompt_toolkit.layout.dummy', 'prompt_toolkit.renderer', 'prompt_toolkit.application.application', 'prompt_toolkit.application.dummy', 'prompt_toolkit.application', 'prompt_toolkit.key_binding.bindings.focus', 'prompt_toolkit.widgets.toolbars', 'prompt_toolkit.widgets.base', 'prompt_toolkit.widgets.dialogs', 'prompt_toolkit.widgets.menus', 'prompt_toolkit.widgets', 'prompt_toolkit.shortcuts.dialogs', 'prompt_toolkit.shortcuts.progress_bar.formatters', 'prompt_toolkit.shortcuts.progress_bar.base', 'prompt_toolkit.shortcuts.progress_bar', 'prompt_toolkit.key_binding.bindings.auto_suggest', 'prompt_toolkit.key_binding.bindings.open_in_editor', 'prompt_toolkit.shortcuts.prompt', 'prompt_toolkit.shortcuts.utils', 'prompt_toolkit.shortcuts', 'prompt_toolkit', 'prompt_toolkit.patch_stdout', 'unicodedata', 'IPython.core.latex_symbols', 'IPython.utils.generics', 'parso.utils', 'parso.tree', 'parso.python', 'parso.python.token', 'parso.python.tokenize', 'parso.pgen2.grammar_parser', 'parso.pgen2.generator', 'parso.pgen2', 'parso.parser', 'parso._compatibility', 'difflib', 'parso.python.prefix', 'parso.python.tree', 'parso.python.parser', 'parso.python.diff', 'gc', 'parso.cache', 'parso.normalizer', 'parso.python.errors', 'parso.python.pep8', 'parso.file_io', 'parso.grammar', 'parso', 'jedi.parser_utils', 'jedi.debug', 'jedi.settings', 'jedi.cache', 'jedi.file_io', 'jedi.inference.cache', 'jedi.inference.helpers', 'jedi.inference.utils', 'jedi.inference.base_value', 'jedi.inference.sys_path', 'jedi.inference.recursion', 'jedi.inference.flow_analysis', 'jedi.common', 'jedi.inference.lazy_value', 'jedi.inference.docstrings', 'jedi.plugins', 'jedi.inference.names', 'jedi.inference.filters', 'jedi.inference.compiled.getattr_static', 'jedi.inference.compiled.access', 'jedi.inference.signature', 'jedi.inference.context', 'jedi.inference.compiled.value', 'jedi.inference.compiled', 'jedi.inference.analysis', 'jedi.inference.gradual', 'jedi.inference.value.module', 'jedi.inference.value.dynamic_arrays', 'jedi.inference.value.iterable', 'jedi.inference.arguments', 'jedi.inference.parser_cache', 'jedi.inference.gradual.generics', 'jedi.inference.value.function', 'jedi.inference.value.klass', 'jedi.inference.value.instance', 'jedi.inference.value', 'jedi.inference.gradual.base', 'jedi.inference.gradual.type_var', 'jedi.inference.gradual.typing', 'jedi.inference.gradual.stub_value', 'jedi.inference.gradual.typeshed', 'jedi._compatibility', 'zipfile', 'jedi.inference.compiled.subprocess.functions', 'jedi.api.exceptions', 'jedi.inference.compiled.subprocess', 'jedi.inference.imports', 'jedi.inference.param', 'jedi.inference.gradual.annotation', 'jedi.inference.value.decorator', 'jedi.inference.syntax_tree', 'jedi.inference', 'jedi.inference.gradual.conversion', 'jedi.inference.compiled.mixed', 'pydoc_data', 'pydoc_data.topics', 'jedi.api.keywords', 'jedi.api.completion_cache', 'jedi.api.helpers', 'jedi.api.classes', 'jedi.api.interpreter', 'jedi.api.strings', 'jedi.api.file_name', 'jedi.inference.docstring_utils', 'jedi.api.completion', 'filecmp', 'jedi.api.environment', 'jedi.inference.references', 'jedi.api.project', 'jedi.api.errors', 'jedi.api.refactoring', 'jedi.api.refactoring.extract', 'jedi.inference.gradual.utils', 'jedi.api', 'jedi.plugins.stdlib', 'jedi.plugins.flask', 'jedi.plugins.pytest', 'jedi.plugins.django', 'jedi.plugins.registry', 'jedi', 'IPython.core.completer', 'IPython.terminal.ptutils', 'IPython.lib.clipboard', 'IPython.terminal.shortcuts', 'concurrent.futures.thread', 'IPython.terminal.debugger', 'IPython.terminal.magics', 'IPython.terminal.pt_inputhooks', 'IPython.terminal.prompts', 'IPython.terminal.interactiveshell', 'IPython.core.magics.auto', 'IPython.core.magics.basic', 'email', 'http', 'email.errors', 'email.quoprimime', 'email.base64mime', 'quopri', 'email.encoders', 'email.charset', 'email.header', 'calendar', 'email._parseaddr', 'email.utils', 'email._policybase', 'email.feedparser', 'email.parser', 'uu', 'email._encoded_words', 'email.iterators', 'email.message', 'http.client', 'urllib.response', 'urllib.error', 'nturl2path', 'urllib.request', 'IPython.utils.contexts', 'IPython.core.magics.code', 'IPython.core.magics.config', 'IPython.core.magics.display', '_lsprof', 'profile', 'cProfile', 'dataclasses', 'pstats', 'timeit', 'IPython.utils.module_paths', 'IPython.utils.timing', 'IPython.core.magics.execution', 'IPython.core.magics.extension', 'IPython.core.magics.history', 'IPython.core.magics.logging', 'IPython.core.magics.namespace', 'IPython.core.magics.osm', 'IPython.core.magics.packaging', 'IPython.core.pylabtools', 'IPython.core.magics.pylab', 'IPython.core.magics.script', 'IPython.core.magics', 'IPython.core.shellapp', 'IPython.extensions', 'IPython.extensions.storemagic', 'IPython.terminal.ipapp', 'IPython.terminal.embed', 'IPython.utils.frame', 'IPython', 'imp', 'hmac', 'dateutil._version', 'dateutil', 'dateutil._common', 'dateutil.relativedelta', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.win', 'dateutil.tz.tz', 'dateutil.tz', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', '_strptime', 'jupyter_client.jsonutil', 'jupyter_client.adapter', 'jupyter_client.session', 'ipykernel.iostream', 'ipykernel.control', 'ipykernel.heartbeat', 'IPython.utils.tokenutil', 'psutil._common', 'psutil._compat', 'psutil._psutil_windows', 'psutil._pswindows', 'psutil', 'tornado.locks', 'tornado.queues', 'ipykernel.jsonutil', 'ipykernel.kernelbase', 'ipykernel.comm.comm', 'ipykernel.comm.manager', 'ipykernel.comm', 'IPython.core.payloadpage', 'ipykernel.displayhook', 'ipykernel.zmqshell', 'setuptools._distutils', 'distutils.debug', 'distutils.errors', 'distutils.fancy_getopt', 'distutils.dep_util', 'distutils.log', 'distutils.spawn', 'distutils.py35compat', 'distutils.util', 'distutils.dist', 'distutils.dir_util', 'distutils.file_util', 'distutils.archive_util', 'distutils.cmd', 'configparser', 'distutils.config', 'distutils.extension', 'distutils.core', '_distutils_hack.override', 'setuptools._deprecation_warning', 'xml.parsers', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'xml.parsers.expat', 'plistlib', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources._vendor.jaraco', 'pkg_resources.extern.jaraco', 'importlib._common', 'importlib.resources', 'pkg_resources._vendor.more_itertools.recipes', 'pkg_resources._vendor.more_itertools.more', 'pkg_resources._vendor.more_itertools', 'pkg_resources.extern.more_itertools', 'pkg_resources.extern.jaraco.functools', 'pkg_resources.extern.jaraco.context', 'pkg_resources.extern.jaraco.text', 'win32api', '_win32sysloader', 'pywintypes', 'pythoncom', 'win32com.gen_py', 'win32com', 'win32com.shell', 'pkg_resources._vendor.appdirs', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources._vendor.packaging', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.version', 'pkg_resources._vendor.packaging._manylinux', 'pkg_resources._vendor.packaging._musllinux', 'pkg_resources.extern.packaging.tags', 'pkg_resources.extern.packaging.utils', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources._vendor.pyparsing', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.packaging.markers', 'pkg_resources.extern.packaging.requirements', 'pkg_resources', 'setuptools.version', 'distutils.filelist', 'setuptools.monkey', 'setuptools.extension', 'distutils.command', 'setuptools.extern', 'setuptools._vendor', 'setuptools._vendor.packaging.__about__', 'setuptools._vendor.packaging', 'setuptools.extern.packaging', 'setuptools._vendor.ordered_set', 'setuptools.extern.ordered_set', 'setuptools._vendor.more_itertools.recipes', 'setuptools._vendor.more_itertools.more', 'setuptools._vendor.more_itertools', 'setuptools.extern.more_itertools', 'setuptools._vendor.pyparsing', 'setuptools.extern.pyparsing', 'setuptools._vendor.packaging._manylinux', 'setuptools._vendor.packaging._musllinux', 'setuptools.extern.packaging.tags', 'setuptools.extern.packaging._structures', 'setuptools.extern.packaging.version', 'setuptools.extern.packaging.utils', 'setuptools.extern.packaging.specifiers', 'setuptools.extern.packaging.markers', 'setuptools.extern.packaging.requirements', 'setuptools._vendor.jaraco', 'setuptools.extern.jaraco', 'setuptools.extern.jaraco.context', 'setuptools.extern.jaraco.functools', '_csv', 'csv', 'setuptools._vendor.zipp', 'setuptools._vendor.importlib_metadata._functools', 'setuptools._vendor.importlib_metadata._text', 'setuptools._vendor.importlib_metadata._adapters', 'setuptools._vendor.importlib_metadata._compat', 'setuptools._vendor.importlib_metadata._meta', 'setuptools._vendor.importlib_metadata._collections', 'setuptools._vendor.importlib_metadata._itertools', 'setuptools._vendor.importlib_metadata', 'setuptools.extern.importlib_metadata', 'setuptools._vendor.nspektr._compat', 'setuptools._vendor.nspektr', 'setuptools.extern.nspektr', 'zipp', 'importlib_metadata._functools', 'importlib_metadata._text', 'importlib_metadata._adapters', 'importlib_metadata._compat', 'importlib_metadata._meta', 'importlib_metadata._collections', 'importlib_metadata._itertools', 'importlib_metadata', 'setuptools._importlib', 'distutils.command.bdist', 'setuptools.command', 'setuptools.windows_support', 'setuptools.config.expand', 'setuptools.config.setupcfg', 'setuptools.config', 'setuptools.errors', 'email._header_value_parser', 'email.headerregistry', 'setuptools.config._apply_pyprojecttoml', 'setuptools.config.pyprojecttoml', 'setuptools.discovery', 'setuptools.extern.jaraco.text', 'setuptools._reqs', 'setuptools._itertools', 'setuptools._entry_points', 'setuptools.dist', 'setuptools.py34compat', 'setuptools._imp', 'setuptools.depends', 'setuptools.logging', 'distutils.ccompiler', 'distutils.msvc9compiler', 'setuptools.msvc', 'unittest.util', 'unittest.result', 'unittest.case', 'unittest.suite', 'unittest.loader', 'unittest.signals', 'unittest.runner', 'unittest.main', 'unittest', 'unittest.mock', 'distutils._msvccompiler', 'setuptools', 'distutils', 'distutils.version', 'ipykernel.eventloops', 'ipykernel.compiler', 'debugpy._version', 'debugpy.common', 'debugpy.common.json', 'debugpy.common.fmt', 'debugpy.common.compat', 'debugpy', 'debugpy._vendored._util', 'debugpy._vendored', '_pydevd_bundle', 'encodings.ascii', 'stringprep', 'encodings.idna', '_pydevd_bundle.pydevd_vm_type', '_pydev_imps', 'xmlrpc', 'gzip', 'xmlrpc.client', 'socketserver', 'http.server', 'xmlrpc.server', '_pydev_imps._pydev_saved_modules', '_pydevd_bundle.pydevd_constants', '_pydev_bundle', '_pydev_runfiles', '_pydevd_frame_eval', 'pydev_ipython', 'pydevd_concurrency_analyser', 'pydevd_plugins', '_pydev_bundle.pydev_log', '_pydev_bundle._pydev_filesystem_encoding', '_pydevd_bundle.pydevd_comm_constants', 'pydevd_file_utils', '_pydev_imps._pydev_execfile', '_pydevd_bundle.pydevd_exec2', '_pydev_bundle.pydev_imports', '_pydev_bundle.pydev_is_thread_alive', '_pydev_bundle.pydev_override', 'pydevd_plugins.extensions', '_pydevd_bundle.pydevd_extension_utils', '_pydevd_bundle.pydevd_frame_utils', '_pydevd_bundle.pydevd_filtering', '_pydevd_bundle.pydevd_io', '_pydevd_bundle.pydevd_utils', '_pydev_bundle._pydev_tipper_common', '_pydev_bundle._pydev_imports_tipper', '_pydev_bundle._pydev_calltip_util', '_pydevd_bundle.pydevd_safe_repr', '_pydevd_bundle.pydevd_resolver', '_pydevd_bundle.pydevd_extension_api', '_pydevd_bundle.pydevd_xml', '_pydevd_bundle.pydevd_dont_trace', '_pydevd_frame_eval.vendored', '_pydevd_frame_eval.vendored.bytecode.flags', '_pydevd_frame_eval.vendored.bytecode.instr', '_pydevd_frame_eval.vendored.bytecode.bytecode', '_pydevd_frame_eval.vendored.bytecode.concrete', '_pydevd_frame_eval.vendored.bytecode.cfg', '_pydevd_frame_eval.vendored.bytecode', '_pydevd_bundle.pydevd_bytecode_utils', '_pydevd_bundle.pydevd_cython', '_pydevd_bundle.pydevd_cython_wrapper', '_pydevd_bundle.pydevd_additional_thread_info', '_pydevd_bundle.pydevd_thread_lifecycle', '_pydevd_bundle.pydevd_save_locals', '_pydevd_bundle.pydevd_defaults', '_pydev_bundle.pydev_monkey', 'pydevd_tracing', '_pydevd_bundle.pydevd_daemon_thread', '_pydevd_bundle.pydevd_timeout', '_pydevd_bundle.pydevd_vars', '_pydev_bundle.pydev_console_utils', '_pydevd_bundle.pydevd_import_class', '_pydevd_bundle.pydevd_breakpoints', '_pydevd_bundle.pydevd_custom_frames', '_pydevd_bundle.pydevd_dont_trace_files', '_pydevd_bundle.pydevd_net_command', '_pydev_bundle.pydev_umd', 'pydevconsole', '_pydev_bundle._pydev_completer', '_pydevd_bundle.pydevd_net_command_factory_xml', '_pydevd_bundle.pydevd_frame', '_pydevd_bundle.pydevd_additional_thread_info_regular', '_pydevd_bundle.pydevd_trace_dispatch', '_pydevd_frame_eval.pydevd_frame_eval_main', '_pydevd_bundle.pydevd_source_mapping', 'pydevd_concurrency_analyser.pydevd_thread_wrappers', 'pydevd_concurrency_analyser.pydevd_concurrency_logger', '_pydevd_bundle._debug_adapter', '_pydevd_bundle._debug_adapter.pydevd_schema_log', '_pydevd_bundle._debug_adapter.pydevd_base_schema', '_pydevd_bundle._debug_adapter.pydevd_schema', '_pydevd_bundle.pydevd_reload', '_pydev_bundle.fsnotify', '_pydevd_bundle.pydevd_console', '_pydevd_bundle.pydevd_comm', '_pydevd_bundle.pydevd_net_command_factory_json', '_pydevd_bundle.pydevd_collect_bytecode_info', '_pydevd_bundle.pydevd_api', '_pydevd_bundle.pydevd_json_debug_options', '_pydevd_bundle.pydevd_process_net_command_json', '_pydevd_bundle.pydevd_traceproperty', '_pydevd_bundle.pydevd_process_net_command', '_pydevd_bundle.pydevd_suspended_frames', '_pydevd_bundle.pydevd_trace_api', 'pydevd_plugins.django_debug', 'pydevd_plugins.jinja2_debug', '_pydevd_bundle.pydevd_plugin_utils', 'pydevd_plugins.extensions.types', 'pydevd_plugins.extensions.types.pydevd_helpers', 'pydevd_plugins.extensions.types.pydevd_plugin_numpy_types', 'pydevd_plugins.extensions.types.pydevd_plugins_django_form_str', 'pydevd', 'debugpy._vendored.force_pydevd', 'debugpy.server', 'debugpy.adapter', 'debugpy.common.timestamp', 'debugpy.common.util', 'debugpy.common.log', 'debugpy.common.sockets', 'debugpy.server.api', 'ipykernel.debugger', 'ipykernel.ipkernel', 'ipykernel.parentpoller', 'ipykernel.kernelapp', 'win32security', 'ntsecuritycon', 'faulthandler', 'IPython.core.completerlib', 'logging.config', 'pythonjsonlogger', 'pythonjsonlogger.jsonlogger', 'daiquiri.types', 'daiquiri.formatter', 'daiquiri.handlers', 'daiquiri.output', 'daiquiri', 'jupyter_require.__about__', 'csscompressor', 'jupyter_require.core', 'jupyter_require.notebook', 'jupyter_require', 'jupyter_nbutils.__about__', 'jupyter_nbutils.config', 'jupyter_nbutils.utils', 'jupyter_nbutils', 'jupyter_require.magic', 'numpy._globals', 'numpy.__config__', 'numpy._distributor_init', 'numpy._version', 'numpy.version', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core._asarray', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core._machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.stride_tricks', 'numpy.lib.twodim_base', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', '_cython_0_29_30', 'numpy.random._common', 'secrets', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'pytz', 'pandas._typing', '_cython_0_29_28', 'pandas._libs.tslibs.dtypes', 'pandas._libs.tslibs.base', 'pandas._libs.tslibs.np_datetime', 'pandas._libs.tslibs.nattype', 'pandas._libs.tslibs.timezones', 'pandas._libs.tslibs.ccalendar', 'pandas._libs.tslibs.tzconversion', 'pandas._config.config', 'pandas._config.dates', 'pandas._config.display', 'pandas._config', 'pandas._config.localization', 'pandas._libs.tslibs.strptime', 'pandas._libs.tslibs.fields', 'pandas._libs.tslibs.timedeltas', 'pandas._libs.tslibs.timestamps', 'dateutil.easter', 'pandas._libs.properties', 'pandas._libs.tslibs.offsets', 'pandas._libs.tslibs.parsing', 'pandas._libs.tslibs.conversion', 'pandas._libs.tslibs.period', 'pandas._libs.tslibs.vectorized', 'pandas._libs.tslibs', 'pandas._libs.ops_dispatch', 'pandas._libs.missing', 'pandas._libs.hashtable', 'pandas._libs.algos', 'pandas._libs.interval', 'pandas._libs', 'pandas.util._decorators', 'pandas.core', 'pandas.core.util', 'pandas._libs.tslib', 'pandas._libs.lib', 'pandas._libs.hashing', 'pandas.core.dtypes', 'pandas.util._exceptions', 'pandas.errors', 'pandas.core.dtypes.generic', 'pandas.core.dtypes.base', 'pandas.core.dtypes.inference', 'pandas.core.dtypes.dtypes', 'pandas.core.dtypes.common', 'pandas.core.util.hashing', 'pandas.util', 'pandas.util.version', 'pandas.compat.numpy', 'pandas.compat.pyarrow', 'pandas.compat', 'pandas.core.config_init', 'pandas.core.dtypes.missing', 'pandas.util._validators', 'pandas.core.dtypes.cast', 'pandas.core.dtypes.concat', 'pandas.core.array_algos', 'pandas.core.common', 'pandas.core.construction', 'pandas.core.array_algos.take', 'pandas.core.indexers.utils', 'pandas.core.indexers', 'pandas.core.algorithms', 'pandas.compat.numpy.function', 'pandas.core.roperator', 'pandas._libs.ops', 'pandas.core.computation', 'pandas.compat._optional', 'numexpr.interpreter', 'packaging.__about__', 'packaging', 'packaging._structures', 'packaging.version', 'numexpr.expressions', 'numexpr.utils', 'numexpr.necompiler', 'numexpr.version', 'numexpr', 'pandas.core.computation.check', 'pandas.core.computation.expressions', 'pandas.core.ops.missing', 'pandas.core.ops.dispatch', 'pandas.core.ops.invalid', 'pandas.core.ops.array_ops', 'pandas.core.ops.common', 'pandas.core.ops.docstrings', 'pandas.core.ops.mask_ops', 'pandas.core.ops.methods', 'pandas.core.ops', 'pandas.core.arraylike', 'pandas.core.missing', 'pandas.core.array_algos.quantile', 'pandas.core.sorting', 'pandas.core.arrays.base', 'bottleneck.benchmark', 'bottleneck.benchmark.autotimeit', 'bottleneck.benchmark.bench', 'bottleneck.benchmark.bench_detailed', 'bottleneck.tests', 'bottleneck.tests.util', 'bottleneck.slow.reduce', 'bottleneck.slow.nonreduce', 'bottleneck.slow.nonreduce_axis', 'bottleneck.slow.move', 'bottleneck.slow', 'bottleneck._pytesttester', 'bottleneck.move', 'bottleneck.nonreduce', 'bottleneck.nonreduce_axis', 'bottleneck.reduce', 'bottleneck._version', 'bottleneck', 'pandas.core.nanops', 'pandas.core.array_algos.masked_reductions', 'pandas.core.arrays.masked', 'pandas.core.arrays.boolean', 'pandas._libs.arrays', 'pandas.core.accessor', 'pandas.core.array_algos.transforms', 'pandas.core.arrays._mixins', 'pandas.core.base', 'pandas.core.strings.accessor', 'pandas.core.strings.base', 'pandas.core.strings', 'pandas.core.strings.object_array', 'pandas.io', 'pandas.io.formats', 'pandas.io.formats.console', 'pandas.core.arrays.categorical', 'pandas.tseries', 'pandas.tseries.frequencies', 'pandas.core.arrays.datetimelike', 'pandas.core.arrays._ranges', 'pandas.core.arrays.numeric', 'pandas.core.tools', 'pandas.core.tools.numeric', 'pandas.core.arrays.integer', 'pandas.tseries.offsets', 'pandas.core.arrays.datetimes', 'pandas.core.arrays.floating', 'pandas.core.indexes', 'pandas._libs.index', 'pandas._libs.join', 'pandas.core.array_algos.putmask', 'pandas._libs.sparse', 'pandas.core.arrays.sparse.dtype', 'pandas.io.formats.printing', 'pandas.core.arrays.sparse.array', 'pandas.core.arrays.sparse.accessor', 'pandas.core.arrays.sparse', 'pandas.core.indexes.frozen', 'pandas.core.indexes.base', 'pandas.core.arrays.interval', 'pandas.core.arrays.numpy_', 'pandas.core.arrays.period', 'pandas.core.arrays.string_', 'pandas.core.arrays.string_arrow', 'pandas.core.arrays.timedeltas', 'pandas.core.arrays', 'pandas.core.flags', 'pandas._libs.reduction', 'pandas.core.apply', 'pandas._libs.indexing', 'pandas.core.indexes.extension', 'pandas.core.indexes.category', 'pandas.core.indexes.numeric', 'pandas.core.indexes.range', 'pandas.core.tools.timedeltas', 'pandas.core.indexes.datetimelike', 'pandas.core.tools.times', 'pandas.core.indexes.datetimes', 'pandas.core.indexes.multi', 'pandas.core.indexes.timedeltas', 'pandas.core.indexes.interval', 'pandas.core.indexes.period', 'pandas.core.indexes.api', 'pandas.core.indexing', 'pandas.core.array_algos.replace', 'pandas.core.reshape', 'pandas._libs.internals', 'pandas._libs.writers', 'pandas.core.internals.blocks', 'pandas.core.internals.api', 'pandas.core.internals.base', 'pandas.core.internals.array_manager', 'pandas.core.internals.ops', 'pandas.core.internals.managers', 'pandas.core.internals.concat', 'pandas.core.internals', 'pandas.core.reshape.concat', 'mmap', 'pandas.core.shared_docs', 'pandas.io.common', 'pandas.io.formats.format', 'pandas.core.describe', 'pandas.core.internals.construction', 'pandas.core.sample', 'pandas._libs.window', 'pandas._libs.window.aggregations', 'pandas._libs.window.indexers', 'pandas.core.indexers.objects', 'pandas.core.util.numba_', 'pandas.core.window.common', 'pandas.core.window.doc', 'pandas.core.window.numba_', 'pandas.core.window.online', 'pandas.core._numba', 'pandas.core._numba.executor', 'pandas.core.window.rolling', 'pandas.core.window.ewm', 'pandas.core.window.expanding', 'pandas.core.window', 'pandas.core.generic', 'pandas.core.reshape.util', 'pandas.core.reshape.melt', 'pandas._libs.reshape', 'pandas.core.indexes.accessors', 'pandas.arrays', 'pandas.core.tools.datetimes', 'pandas.io.formats.info', 'pandas.plotting._core', 'pandas.plotting._misc', 'pandas.plotting', 'pandas.core.series', 'pandas.core.frame', 'pandas.core.groupby.base', 'pandas._libs.groupby', 'pandas.core.groupby.numba_', 'pandas.core.groupby.categorical', 'pandas.core.groupby.grouper', 'pandas.core.groupby.ops', 'pandas.core.groupby.indexing', 'pandas.core.groupby.groupby', 'pandas.core.groupby.generic', 'pandas.core.groupby', 'pandas.core.api', 'pandas.tseries.api', 'pandas.core.computation.common', 'pandas.core.computation.align', 'pandas.compat.chainmap', 'pandas.core.computation.scope', 'pandas.core.computation.ops', 'pandas.core.computation.parsing', 'pandas.core.computation.expr', 'pandas.core.computation.engines', 'pandas.core.computation.eval', 'pandas.core.computation.api', 'pandas.core.reshape.merge', 'pandas.core.reshape.pivot', 'pandas.core.reshape.reshape', 'pandas.core.reshape.tile', 'pandas.core.reshape.api', 'pandas.api.extensions', 'pandas.api.indexers', 'pandas.core.dtypes.api', 'pandas.api.types', 'pandas.api', 'pandas._testing._random', 'pandas._testing.contexts', 'pandas._testing._io', 'pandas._testing._warnings', 'cmath', 'pandas._libs.testing', 'pandas._testing.asserters', 'pandas._testing.compat', 'pandas._testing', 'pandas.testing', 'pandas.util._print_versions', 'pandas.io.clipboards', 'pandas._libs.parsers', 'pandas.io.excel._util', 'pandas.io.date_converters', 'pandas.io.parsers.base_parser', 'pandas.io.parsers.arrow_parser_wrapper', 'pandas.io.parsers.c_parser_wrapper', 'pandas.io.parsers.python_parser', 'pandas.io.parsers.readers', 'pandas.io.parsers', 'pandas.io.excel._odfreader', 'pandas.io.excel._openpyxl', 'pandas.io.excel._pyxlsb', 'pandas.io.excel._xlrd', 'pandas.io.excel._base', 'pandas._libs.json', 'pandas.io.formats._color_data', 'pandas.io.formats.css', 'pandas.io.formats.excel', 'pandas.io.excel._odswriter', 'pandas.io.excel._xlsxwriter', 'pandas.io.excel._xlwt', 'pandas.io.excel', 'pandas.io.feather_format', 'pandas.io.gbq', 'pandas.io.html', 'pandas.io.json._normalize', 'pandas.io.json._table_schema', 'pandas.io.json._json', 'pandas.io.json', 'pandas.io.orc', 'pandas.io.parquet', 'pandas.compat.pickle_compat', 'pandas.io.pickle', 'pandas.core.computation.pytables', 'pandas.io.pytables', 'pandas.io.sas.sasreader', 'pandas.io.sas', 'pandas.io.spss', 'pandas.io.sql', 'pandas.io.stata', 'pandas.io.xml', 'pandas.io.api', 'pandas.util._tester', 'pandas._version', 'pandas', 'summarytools', 'summarytools.htmlwidgets', 'summarytools.summarytools', 'matplotlib', 'matplotlib._api.deprecation', 'matplotlib._api', 'matplotlib._version', 'matplotlib._c_internal_utils', 'matplotlib.cbook', 'matplotlib.docstring', 'PIL._version', 'PIL', 'defusedxml.common', 'defusedxml', 'xml.etree', 'xml.etree.ElementPath', '_elementtree', 'xml.etree.ElementTree', 'defusedxml.ElementTree', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._util', 'PIL._imaging', 'cffi.lock', 'cffi.error', 'cffi.model', 'cffi.api', 'cffi', 'PIL.Image', 'PIL.ImageChops', 'PIL.ImageFile', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'PIL.ImagePalette', 'PIL.ImageSequence', 'PIL.PngImagePlugin', 'matplotlib._path', 'matplotlib.bezier', 'matplotlib.path', 'matplotlib.transforms', 'matplotlib.ticker', 'matplotlib.scale', 'matplotlib._color_data', 'matplotlib.colors', 'pyparsing.util', 'pyparsing.unicode', 'pyparsing.exceptions', 'pyparsing.actions', 'pyparsing.results', 'pyparsing.core', 'pyparsing.helpers', 'pyparsing.testing', 'pyparsing.common', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib._enums', 'cycler', 'matplotlib.rcsetup', 'matplotlib.ft2font', 'kiwisolver']
2023-04-21 16:54:29,386 [17696] DEBUG    matplotlib:275: [JupyterRequire] CACHEDIR=C:\Users\adity\.matplotlib
2023-04-21 16:54:29,399 [17696] DEBUG    matplotlib.font_manager:1439: [JupyterRequire] Using fontManager instance from C:\Users\adity\.matplotlib\fontlist-v330.json
2023-04-21 16:54:30,011 [17696] DEBUG    matplotlib.pyplot:280: [JupyterRequire] Loaded backend module://matplotlib_inline.backend_inline version unknown.
2023-04-21 16:54:30,015 [17696] DEBUG    matplotlib.pyplot:280: [JupyterRequire] Loaded backend module://matplotlib_inline.backend_inline version unknown.
2023-04-21 16:54:41,387 [17696] DEBUG    matplotlib.font_manager:1329: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2023-04-21 16:54:41,388 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:54:41,388 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:54:41,389 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,389 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2023-04-21 16:54:41,390 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2023-04-21 16:54:41,390 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:54:41,390 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:54:41,391 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:54:41,391 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,391 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:54:41,392 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,392 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:54:41,393 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,393 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,393 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,394 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:54:41,394 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:54:41,394 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,395 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,395 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2023-04-21 16:54:41,396 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,396 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,396 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:54:41,397 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:54:41,397 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:54:41,397 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,398 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,398 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:54:41,398 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:54:41,399 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,399 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,399 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,401 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:54:41,401 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,401 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:54:41,401 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,402 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,402 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2023-04-21 16:54:41,402 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLSNECB.TTF', name='Gill Sans MT Ext Condensed Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-21 16:54:41,403 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanz.ttf', name='Constantia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:54:41,403 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LEELAWAD.TTF', name='Leelawadee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,404 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\monbaiti.ttf', name='Mongolian Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,404 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-MEDIUM.TTF', name='Dubai', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-04-21 16:54:41,404 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-04-21 16:54:41,405 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FTLTLT.TTF', name='Footlight MT Light', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-21 16:54:41,405 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibril.ttf', name='Calibri', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-21 16:54:41,406 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSI.TTF', name='Goudy Old Style', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:54:41,406 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisbi.ttf', name='Segoe UI', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-21 16:54:41,406 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCCB___.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-04-21 16:54:41,407 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXD.TTF', name='Lucida Fax', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-21 16:54:41,407 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2023-04-21 16:54:41,408 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BSSYM7.TTF', name='Bookshelf Symbol 7', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,408 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAMDCN.TTF', name='Franklin Gothic Medium Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-21 16:54:41,408 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framdit.ttf', name='Franklin Gothic Medium', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:54:41,409 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSB.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:54:41,409 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-LIGHT.TTF', name='Dubai', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-21 16:54:41,409 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCC____.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-21 16:54:41,411 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_B.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:54:41,411 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COOPBL.TTF', name='Cooper Black', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,411 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNI.TTF', name='Arial', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 7.613636363636363
2023-04-21 16:54:41,411 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\INFROMAN.TTF', name='Informal Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,411 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSB.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-21 16:54:41,412 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BERNHC.TTF', name='Bernard MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-21 16:54:41,412 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEB.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-21 16:54:41,412 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCEDSCR.TTF', name='Edwardian Script ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,412 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consola.ttf', name='Consolas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,413 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,413 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\holomdl2.ttf', name='HoloLens MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,413 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COLONNA.TTF', name='Colonna MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,414 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYR.TTF', name='Agency FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,414 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRITANIC.TTF', name='Britannic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,415 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiai.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:54:41,415 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:54:41,416 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaS.ttf', name='Nirmala UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2023-04-21 16:54:41,416 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CHILLER.TTF', name='Chiller', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,416 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,417 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAB.TTF', name='Book Antiqua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:54:41,417 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothM.ttc', name='Yu Gothic', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-04-21 16:54:41,417 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG2.TTF', name='Wingdings 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,417 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Nirmala.ttf', name='Nirmala UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,418 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelUIsl.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2023-04-21 16:54:41,418 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriai.ttf', name='Cambria', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:54:41,419 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariali.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
2023-04-21 16:54:41,419 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARA.TTF', name='Garamond', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,419 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSPCL.TTF', name='MS Reference Specialty', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,420 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-REGULAR.TTF', name='Dubai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,420 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LHANDW.TTF', name='Lucida Handwriting', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:54:41,420 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:54:41,421 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comici.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:54:41,421 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTAUR.TTF', name='Centaur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,421 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEBO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-21 16:54:41,421 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ONYX.TTF', name='Onyx', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,423 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrima.ttf', name='Ebrima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,423 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFI.TTF', name='Californian FB', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:54:41,424 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERBI___.TTF', name='Perpetua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:54:41,424 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbell.ttf', name='Corbel', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-21 16:54:41,424 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILI____.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:54:41,425 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segmdl2.ttf', name='Segoe MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,425 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-BOLD.TTF', name='Dubai', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:54:41,425 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FELIXTI.TTF', name='Felix Titling', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,426 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbd.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
2023-04-21 16:54:41,426 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taileb.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:54:41,426 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeprb.ttf', name='Segoe Print', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:54:41,427 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoescb.ttf', name='Segoe Script', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:54:41,427 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITE.TTF', name='Lucida Bright', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,428 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhbd.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:54:41,428 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\times.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,428 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisb.ttf', name='Segoe UI', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-21 16:54:41,429 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSDB.TTF', name='Berlin Sans FB Demi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:54:41,429 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbi.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
2023-04-21 16:54:41,429 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesi.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:54:41,430 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADM.TTF', name='Franklin Gothic Demi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,430 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERTI.TTF', name='High Tower Text', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:54:41,432 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF-Italic.ttf', name='Sitka', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:54:41,432 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsun.ttc', name='SimSun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,432 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTI.TTF', name='Calisto MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:54:41,433 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCMI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:54:41,433 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaral.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,433 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\lucon.ttf', name='Lucida Console', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,433 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_I.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:54:41,434 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mvboli.ttf', name='MV Boli', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,435 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiab.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:54:41,435 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\l_10646.ttf', name='Lucida Sans Unicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,435 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTIBD.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:54:41,436 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNT.TTF', name='Elephant', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,436 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASMD.TTF', name='Eras Medium ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,437 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MSUIGHUR.TTF', name='Microsoft Uighur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,437 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYB.TTF', name='Agency FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:54:41,437 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MSUIGHUB.TTF', name='Microsoft Uighur', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:54:41,438 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicbd.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:54:41,438 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMIT.TTF', name='Franklin Gothic Demi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:54:41,438 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKEB.TTF', name='Rockwell Extra Bold', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
2023-04-21 16:54:41,439 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PER_____.TTF', name='Perpetua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,439 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VINERITC.TTF', name='Viner Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,439 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\marlett.ttf', name='Marlett', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-04-21 16:54:41,440 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrili.ttf', name='Calibri', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-04-21 16:54:41,440 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICBI.TTF', name='Century Gothic', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:54:41,440 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ALGER.TTF', name='Algerian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,441 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOS.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,441 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelz.ttf', name='Corbel', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:54:41,441 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILB____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:54:41,442 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUABI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:54:41,442 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\sylfaen.ttf', name='Sylfaen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,442 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriaz.ttf', name='Cambria', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:54:41,443 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanaz.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
2023-04-21 16:54:41,443 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constan.ttf', name='Constantia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,443 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTILI.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-21 16:54:41,444 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCM_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,444 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhl.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2023-04-21 16:54:41,444 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOS.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-21 16:54:41,445 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HATTEN.TTF', name='Haettenschweiler', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,445 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JOKERMAN.TTF', name='Jokerman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,445 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ENGR.TTF', name='Engravers MT', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-04-21 16:54:41,445 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARAIT.TTF', name='Garamond', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:54:41,446 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,446 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelli.ttf', name='Corbel', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-04-21 16:54:41,447 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constani.ttf', name='Constantia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:54:41,447 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIST.TTF', name='Calisto MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,447 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PARCHM.TTF', name='Parchment', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,448 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\himalaya.ttf', name='Microsoft Himalaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,448 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRADHITC.TTF', name='Bradley Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,448 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\wingding.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,449 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtextb.ttf', name='Myanmar Text', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:54:41,449 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG3.TTF', name='Wingdings 3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,449 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGSOL.TTF', name='Niagara Solid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,450 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarali.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:54:41,450 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKI.TTF', name='Rockwell', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:54:41,451 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolab.ttf', name='Consolas', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:54:41,451 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXDI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-21 16:54:41,451 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BAUHS93.TTF', name='Bauhaus 93', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,452 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisli.ttf', name='Segoe UI', style='italic', variant='normal', weight=350, stretch='normal', size='scalable')) = 11.0975
2023-04-21 16:54:41,452 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELL.TTF', name='Bell MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,452 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2023-04-21 16:54:41,453 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyi.ttf', name='Microsoft Yi Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,453 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSR.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,453 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHVIT.TTF', name='Franklin Gothic Heavy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:54:41,454 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OLDENGL.TTF', name='Old English Text MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,454 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbel.ttf', name='Corbel', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,454 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLB.TTF', name='Bell MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:54:41,455 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelaUIb.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:54:41,455 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHV.TTF', name='Franklin Gothic Heavy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,455 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OUTLOOK.TTF', name='MS Outlook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,455 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PRISTINA.TTF', name='Pristina', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,456 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERI____.TTF', name='Perpetua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:54:41,456 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtext.ttf', name='Myanmar Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,456 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSAN.TTF', name='MS Reference Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,456 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERB____.TTF', name='Perpetua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:54:41,458 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTEXTRA.TTF', name='MT Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,458 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKB.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:54:41,458 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARABD.TTF', name='Garamond', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:54:41,458 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cour.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,459 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mingliub.ttc', name='MingLiU-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,459 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICB.TTF', name='Century Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:54:41,459 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspa.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,460 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VIVALDII.TTF', name='Vivaldi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:54:41,460 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAGE.TTF', name='Rage Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:54:41,460 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-21 16:54:41,461 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2023-04-21 16:54:41,461 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MATURASC.TTF', name='Matura MT Script Capitals', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,461 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comic.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,462 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbi.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:54:41,462 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothR.ttc', name='Yu Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,462 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palai.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:54:41,463 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MOD20.TTF', name='Modern No. 20', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,463 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMCN.TTF', name='Franklin Gothic Demi Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-21 16:54:41,463 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrimabd.ttf', name='Ebrima', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:54:41,463 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\javatext.ttf', name='Javanese Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,464 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CASTELAR.TTF', name='Castellar', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,464 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSDI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-21 16:54:41,464 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelawUI.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,465 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAX.TTF', name='Lucida Fax', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,465 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunbd.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:54:41,466 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF.ttf', name='Sitka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,466 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTL.TTF', name='Copperplate Gothic Light', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,467 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
2023-04-21 16:54:41,467 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeui.ttf', name='Segoe UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,467 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Gabriola.ttf', name='Gabriola', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,468 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTBI.TTF', name='Calisto MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:54:41,468 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicz.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:54:41,469 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALN.TTF', name='Arial', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 6.613636363636363
2023-04-21 16:54:41,469 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKBI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:54:41,469 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FREESCPT.TTF', name='Freestyle Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,469 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTURY.TTF', name='Century', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,471 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaB.ttf', name='Nirmala UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:54:41,471 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSB.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:54:41,471 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSD.TTF', name='Lucida Sans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-21 16:54:41,472 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuisl.ttf', name='Segoe UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2023-04-21 16:54:41,472 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:54:41,473 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:54:41,473 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguihis.ttf', name='Segoe UI Historic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,473 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCB____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-04-21 16:54:41,474 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambria.ttc', name='Cambria', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,474 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKBI.TTF', name='Rockwell', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:54:41,474 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGENG.TTF', name='Niagara Engraved', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,474 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisym.ttf', name='Segoe UI Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,475 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inkfree.ttf', name='Ink Free', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,475 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASBD.TTF', name='Eras Bold ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,476 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILC____.TTF', name='Gill Sans MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-21 16:54:41,476 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candara.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,477 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\bahnschrift.ttf', name='Bahnschrift', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,477 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BROADW.TTF', name='Broadway', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,477 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolaz.ttf', name='Consolas', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:54:41,479 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CBI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2023-04-21 16:54:41,479 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuii.ttf', name='Segoe UI', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:54:41,479 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibli.ttf', name='Segoe UI', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2023-04-21 16:54:41,480 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEDI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-21 16:54:41,480 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucit.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:54:41,480 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BKANT.TTF', name='Book Antiqua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,480 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothL.ttc', name='Yu Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-21 16:54:41,481 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrii.ttf', name='Calibri', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:54:41,481 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CURLZ___.TTF', name='Curlz MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,481 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelb.ttf', name='Corbel', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:54:41,481 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARLRDBD.TTF', name='Arial Rounded MT Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,483 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothB.ttc', name='Yu Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:54:41,483 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASDEMI.TTF', name='Eras Demi ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,484 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
2023-04-21 16:54:41,484 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANS.TTF', name='Lucida Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,484 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariblk.ttf', name='Arial', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 6.888636363636364
2023-04-21 16:54:41,485 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCKRIST.TTF', name='Kristen ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,485 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\KUNSTLER.TTF', name='Kunstler Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,485 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanb.ttf', name='Constantia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:54:41,486 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PAPYRUS.TTF', name='Papyrus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,486 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JUICE___.TTF', name='Juice ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,486 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguili.ttf', name='Segoe UI', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-04-21 16:54:41,486 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:54:41,486 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarab.ttf', name='Candara', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:54:41,487 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\IMPRISHA.TTF', name='Imprint MT Shadow', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,487 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailu.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,487 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbi.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:54:41,488 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuil.ttf', name='Segoe UI', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-21 16:54:41,488 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanai.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
2023-04-21 16:54:41,488 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoepr.ttf', name='Segoe Print', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,489 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaraz.ttf', name='Candara', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:54:41,489 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNB.TTF', name='Arial', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 6.8986363636363635
2023-04-21 16:54:41,489 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspab.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:54:41,490 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,490 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCM____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-21 16:54:41,490 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARNGTON.TTF', name='Harrington', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,490 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbd.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:54:41,492 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:54:41,492 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILSANUB.TTF', name='Gill Sans Ultra Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,492 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibri.ttf', name='Calibri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,493 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiaz.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:54:41,493 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegoeIcons.ttf', name='Segoe Fluent Icons', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,493 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAGNETOB.TTF', name='Magneto', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:54:41,493 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICI.TTF', name='Century Gothic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:54:41,494 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCBLKAD.TTF', name='Blackadder ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,494 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahomabd.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:54:41,494 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugi.ttf', name='Gadugi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,495 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LCALLIG.TTF', name='Lucida Calligraphy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:54:41,495 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyh.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,495 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsunb.ttf', name='SimSun-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,495 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgun.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,496 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIL_____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,496 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VLADIMIR.TTF', name='Vladimir Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,496 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,498 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msgothic.ttc', name='MS Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,498 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRSCRIPT.TTF', name='French Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,498 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILBI___.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:54:41,499 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASLGHT.TTF', name='Eras Light ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,499 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTB.TTF', name='Calisto MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:54:41,499 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunsl.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-21 16:54:41,500 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRUSHSCI.TTF', name='Brush Script MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:54:41,500 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SNAP____.TTF', name='Snap ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,500 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuib.ttf', name='Segoe UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:54:41,501 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCBI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:54:41,501 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailub.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:54:41,501 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framd.ttf', name='Franklin Gothic Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,502 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolai.ttf', name='Consolas', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:54:41,502 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCEB.TTF', name='Tw Cen MT Condensed Extra Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-21 16:54:41,502 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\POORICH.TTF', name='Poor Richard', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,503 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDYSTO.TTF', name='Goudy Stout', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,503 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKB.TTF', name='Rockwell', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:54:41,503 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PALSCRI.TTF', name='Palace Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,503 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarai.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:54:41,504 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\micross.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,504 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LEELAWDB.TTF', name='Leelawadee', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:54:41,504 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABK.TTF', name='Franklin Gothic Book', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,504 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjh.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,506 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palabi.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:54:41,506 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAVIE.TTF', name='Ravie', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,506 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCK.TTF', name='Rockwell', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,506 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\pala.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,507 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibriz.ttf', name='Calibri', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:54:41,507 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugib.ttf', name='Gadugi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:54:41,507 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_PSTC.TTF', name='Bodoni MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-21 16:54:41,507 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENSCBK.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,509 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanab.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
2023-04-21 16:54:41,509 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LATINWD.TTF', name='Wide Latin', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
2023-04-21 16:54:41,509 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbeli.ttf', name='Corbel', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:54:41,509 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIGI.TTF', name='Gigi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,510 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITED.TTF', name='Lucida Bright', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-21 16:54:41,510 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbi.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:54:41,510 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhl.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2023-04-21 16:54:41,510 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguiemj.ttf', name='Segoe UI Emoji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,511 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OCRAEXT.TTF', name='OCR A Extended', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
2023-04-21 16:54:41,511 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebuc.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,511 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SHOWG.TTF', name='Showcard Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,512 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BASKVILL.TTF', name='Baskerville Old Face', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,512 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriab.ttf', name='Cambria', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:54:41,512 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAIAN.TTF', name='Maiandra GD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,513 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCRIPTBL.TTF', name='Script MT Bold', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:54:41,513 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLECB.TTF', name='Gloucester MT Extra Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-21 16:54:41,513 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNTI.TTF', name='Elephant', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:54:41,513 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFR.TTF', name='Californian FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,514 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHIC.TTF', name='Century Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,514 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PLAYBILL.TTF', name='Playbill', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,514 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABKIT.TTF', name='Franklin Gothic Book', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:54:41,515 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARLOWSI.TTF', name='Harlow Solid Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:54:41,515 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPE.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,515 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taile.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,515 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibl.ttf', name='Segoe UI', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2023-04-21 16:54:41,517 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNBI.TTF', name='Arial', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 7.8986363636363635
2023-04-21 16:54:41,517 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuiz.ttf', name='Segoe UI', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:54:41,517 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSBI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-21 16:54:41,517 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palab.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:54:41,518 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLI.TTF', name='Bell MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:54:41,518 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILLUBCD.TTF', name='Gill Sans Ultra Bold Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-21 16:54:41,518 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbd.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:54:41,519 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhbd.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:54:41,519 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoesc.ttf', name='Segoe Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,519 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\couri.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:54:41,519 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegUIVar.ttf', name='Segoe UI Variable', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,520 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_R.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,520 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTB.TTF', name='Copperplate Gothic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,520 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:54:41,521 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCB_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:54:41,521 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TEMPSITC.TTF', name='Tempus Sans ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,521 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MISTRAL.TTF', name='Mistral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,521 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FORTE.TTF', name='Forte', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,522 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CB.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-04-21 16:54:41,522 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbd.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:54:41,522 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STENCIL.TTF', name='Stencil', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,522 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrib.ttf', name='Calibri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:54:41,523 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERT.TTF', name='High Tower Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,523 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTCORSVA.TTF', name='Monotype Corsiva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:54:41,523 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFB.TTF', name='Californian FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:54:41,524 [17696] DEBUG    matplotlib.font_manager:1367: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
2023-04-21 16:55:52,933 [17696] DEBUG    matplotlib.font_manager:1329: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
2023-04-21 16:55:52,934 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:55:52,934 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:55:52,935 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:52,935 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2023-04-21 16:55:52,935 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2023-04-21 16:55:52,936 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:55:52,936 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:55:52,936 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:55:52,937 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:52,937 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:55:52,938 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:52,938 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:55:52,938 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:52,938 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:52,939 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:52,939 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:55:52,939 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:55:52,940 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:52,940 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:52,940 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2023-04-21 16:55:52,942 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:52,942 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:52,943 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:55:52,943 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:55:52,944 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:55:52,944 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:52,945 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:52,945 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:55:52,945 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:55:52,946 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:52,946 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:52,947 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:52,947 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:55:52,947 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:52,948 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:55:52,948 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:52,949 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:52,949 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2023-04-21 16:55:52,949 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLSNECB.TTF', name='Gill Sans MT Ext Condensed Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-21 16:55:52,949 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanz.ttf', name='Constantia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:55:52,950 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LEELAWAD.TTF', name='Leelawadee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:52,950 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\monbaiti.ttf', name='Mongolian Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:52,950 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-MEDIUM.TTF', name='Dubai', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-04-21 16:55:52,950 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-04-21 16:55:52,952 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FTLTLT.TTF', name='Footlight MT Light', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-21 16:55:52,952 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibril.ttf', name='Calibri', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-21 16:55:52,952 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSI.TTF', name='Goudy Old Style', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:55:52,953 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisbi.ttf', name='Segoe UI', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-21 16:55:52,953 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCCB___.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-04-21 16:55:52,953 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXD.TTF', name='Lucida Fax', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-21 16:55:52,954 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2023-04-21 16:55:52,954 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BSSYM7.TTF', name='Bookshelf Symbol 7', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:52,955 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAMDCN.TTF', name='Franklin Gothic Medium Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-21 16:55:52,955 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framdit.ttf', name='Franklin Gothic Medium', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:55:52,955 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSB.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:55:52,956 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-LIGHT.TTF', name='Dubai', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-21 16:55:52,956 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCC____.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-21 16:55:52,956 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_B.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:55:52,957 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COOPBL.TTF', name='Cooper Black', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:52,957 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNI.TTF', name='Arial', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 7.613636363636363
2023-04-21 16:55:52,957 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\INFROMAN.TTF', name='Informal Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:52,957 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSB.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-21 16:55:52,959 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BERNHC.TTF', name='Bernard MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-21 16:55:52,959 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEB.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-21 16:55:52,959 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCEDSCR.TTF', name='Edwardian Script ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:52,959 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consola.ttf', name='Consolas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:52,960 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:52,960 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\holomdl2.ttf', name='HoloLens MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:52,960 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COLONNA.TTF', name='Colonna MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:52,961 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYR.TTF', name='Agency FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:52,961 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRITANIC.TTF', name='Britannic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:52,963 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiai.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:55:52,963 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:55:52,963 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaS.ttf', name='Nirmala UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2023-04-21 16:55:52,964 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CHILLER.TTF', name='Chiller', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:52,964 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:52,964 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAB.TTF', name='Book Antiqua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:55:52,965 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothM.ttc', name='Yu Gothic', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-04-21 16:55:52,965 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG2.TTF', name='Wingdings 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:52,966 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Nirmala.ttf', name='Nirmala UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:52,966 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelUIsl.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2023-04-21 16:55:52,967 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriai.ttf', name='Cambria', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:55:52,967 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariali.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
2023-04-21 16:55:52,967 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARA.TTF', name='Garamond', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:52,967 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSPCL.TTF', name='MS Reference Specialty', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:52,968 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-REGULAR.TTF', name='Dubai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:52,968 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LHANDW.TTF', name='Lucida Handwriting', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:55:52,969 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:55:52,969 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comici.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:55:52,969 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTAUR.TTF', name='Centaur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:52,971 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEBO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-21 16:55:52,971 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ONYX.TTF', name='Onyx', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:52,971 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrima.ttf', name='Ebrima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:52,972 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFI.TTF', name='Californian FB', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:55:52,972 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERBI___.TTF', name='Perpetua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:55:52,972 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbell.ttf', name='Corbel', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-21 16:55:52,972 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILI____.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:55:52,973 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segmdl2.ttf', name='Segoe MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:52,973 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-BOLD.TTF', name='Dubai', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:55:52,973 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FELIXTI.TTF', name='Felix Titling', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:52,973 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbd.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
2023-04-21 16:55:52,974 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taileb.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:55:52,974 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeprb.ttf', name='Segoe Print', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:55:52,975 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoescb.ttf', name='Segoe Script', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:55:52,976 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITE.TTF', name='Lucida Bright', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:52,976 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhbd.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:55:52,976 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\times.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:52,976 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisb.ttf', name='Segoe UI', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-21 16:55:52,977 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSDB.TTF', name='Berlin Sans FB Demi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:55:52,977 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbi.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
2023-04-21 16:55:52,977 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesi.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:55:52,979 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADM.TTF', name='Franklin Gothic Demi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:52,979 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERTI.TTF', name='High Tower Text', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:55:52,979 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF-Italic.ttf', name='Sitka', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:55:52,979 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsun.ttc', name='SimSun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:52,980 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTI.TTF', name='Calisto MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:55:52,980 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCMI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:55:52,980 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaral.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:52,980 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\lucon.ttf', name='Lucida Console', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:52,981 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_I.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:55:52,981 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mvboli.ttf', name='MV Boli', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:52,981 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiab.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:55:52,981 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\l_10646.ttf', name='Lucida Sans Unicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:52,983 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTIBD.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:55:52,983 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNT.TTF', name='Elephant', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:52,983 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASMD.TTF', name='Eras Medium ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:52,985 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MSUIGHUR.TTF', name='Microsoft Uighur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:52,985 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYB.TTF', name='Agency FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:55:52,985 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MSUIGHUB.TTF', name='Microsoft Uighur', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:55:52,986 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicbd.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:55:52,986 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMIT.TTF', name='Franklin Gothic Demi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:55:52,986 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKEB.TTF', name='Rockwell Extra Bold', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
2023-04-21 16:55:52,987 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PER_____.TTF', name='Perpetua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:52,987 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VINERITC.TTF', name='Viner Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:52,987 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\marlett.ttf', name='Marlett', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-04-21 16:55:52,987 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrili.ttf', name='Calibri', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-04-21 16:55:52,987 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICBI.TTF', name='Century Gothic', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:55:52,988 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ALGER.TTF', name='Algerian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:52,988 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOS.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:52,988 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelz.ttf', name='Corbel', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:55:52,990 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILB____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:55:52,990 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUABI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:55:52,990 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\sylfaen.ttf', name='Sylfaen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:52,991 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriaz.ttf', name='Cambria', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:55:52,991 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanaz.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
2023-04-21 16:55:52,991 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constan.ttf', name='Constantia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:52,991 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTILI.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-21 16:55:52,992 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCM_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:52,992 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhl.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2023-04-21 16:55:52,992 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOS.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-21 16:55:52,992 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HATTEN.TTF', name='Haettenschweiler', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:52,994 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JOKERMAN.TTF', name='Jokerman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:52,994 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ENGR.TTF', name='Engravers MT', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-04-21 16:55:52,994 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARAIT.TTF', name='Garamond', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:55:52,994 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:52,995 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelli.ttf', name='Corbel', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-04-21 16:55:52,995 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constani.ttf', name='Constantia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:55:52,995 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIST.TTF', name='Calisto MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:52,995 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PARCHM.TTF', name='Parchment', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:52,997 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\himalaya.ttf', name='Microsoft Himalaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:52,997 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRADHITC.TTF', name='Bradley Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:52,997 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\wingding.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:52,997 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtextb.ttf', name='Myanmar Text', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:55:52,997 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG3.TTF', name='Wingdings 3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:52,999 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGSOL.TTF', name='Niagara Solid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:52,999 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarali.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:55:52,999 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKI.TTF', name='Rockwell', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:55:53,000 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolab.ttf', name='Consolas', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:55:53,000 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXDI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-21 16:55:53,000 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BAUHS93.TTF', name='Bauhaus 93', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,001 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisli.ttf', name='Segoe UI', style='italic', variant='normal', weight=350, stretch='normal', size='scalable')) = 11.0975
2023-04-21 16:55:53,001 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELL.TTF', name='Bell MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,001 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2023-04-21 16:55:53,001 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyi.ttf', name='Microsoft Yi Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,002 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSR.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,002 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHVIT.TTF', name='Franklin Gothic Heavy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:55:53,004 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OLDENGL.TTF', name='Old English Text MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,004 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbel.ttf', name='Corbel', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,004 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLB.TTF', name='Bell MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:55:53,004 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelaUIb.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:55:53,005 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHV.TTF', name='Franklin Gothic Heavy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,005 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OUTLOOK.TTF', name='MS Outlook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,005 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PRISTINA.TTF', name='Pristina', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,005 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERI____.TTF', name='Perpetua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:55:53,006 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtext.ttf', name='Myanmar Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,006 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSAN.TTF', name='MS Reference Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,007 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERB____.TTF', name='Perpetua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:55:53,007 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTEXTRA.TTF', name='MT Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,007 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKB.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:55:53,008 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARABD.TTF', name='Garamond', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:55:53,008 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cour.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,008 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mingliub.ttc', name='MingLiU-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,009 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICB.TTF', name='Century Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:55:53,009 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspa.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,009 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VIVALDII.TTF', name='Vivaldi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:55:53,010 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAGE.TTF', name='Rage Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:55:53,010 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-21 16:55:53,010 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2023-04-21 16:55:53,010 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MATURASC.TTF', name='Matura MT Script Capitals', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,012 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comic.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,012 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbi.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:55:53,012 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothR.ttc', name='Yu Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,012 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palai.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:55:53,012 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MOD20.TTF', name='Modern No. 20', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,013 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMCN.TTF', name='Franklin Gothic Demi Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-21 16:55:53,013 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrimabd.ttf', name='Ebrima', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:55:53,013 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\javatext.ttf', name='Javanese Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,015 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CASTELAR.TTF', name='Castellar', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,015 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSDI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-21 16:55:53,015 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelawUI.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,016 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAX.TTF', name='Lucida Fax', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,016 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunbd.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:55:53,016 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF.ttf', name='Sitka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,016 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTL.TTF', name='Copperplate Gothic Light', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,017 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
2023-04-21 16:55:53,017 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeui.ttf', name='Segoe UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,017 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Gabriola.ttf', name='Gabriola', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,019 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTBI.TTF', name='Calisto MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:55:53,019 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicz.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:55:53,019 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALN.TTF', name='Arial', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 6.613636363636363
2023-04-21 16:55:53,019 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKBI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:55:53,020 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FREESCPT.TTF', name='Freestyle Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,020 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTURY.TTF', name='Century', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,020 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaB.ttf', name='Nirmala UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:55:53,020 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSB.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:55:53,022 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSD.TTF', name='Lucida Sans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-21 16:55:53,022 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuisl.ttf', name='Segoe UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2023-04-21 16:55:53,022 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:55:53,023 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:55:53,023 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguihis.ttf', name='Segoe UI Historic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,023 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCB____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-04-21 16:55:53,023 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambria.ttc', name='Cambria', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,024 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKBI.TTF', name='Rockwell', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:55:53,024 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGENG.TTF', name='Niagara Engraved', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,024 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisym.ttf', name='Segoe UI Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,025 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inkfree.ttf', name='Ink Free', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,025 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASBD.TTF', name='Eras Bold ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,025 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILC____.TTF', name='Gill Sans MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-21 16:55:53,027 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candara.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,027 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\bahnschrift.ttf', name='Bahnschrift', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,027 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BROADW.TTF', name='Broadway', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,028 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolaz.ttf', name='Consolas', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:55:53,028 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CBI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2023-04-21 16:55:53,028 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuii.ttf', name='Segoe UI', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:55:53,028 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibli.ttf', name='Segoe UI', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2023-04-21 16:55:53,029 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEDI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-21 16:55:53,029 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucit.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:55:53,029 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BKANT.TTF', name='Book Antiqua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,029 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothL.ttc', name='Yu Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-21 16:55:53,031 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrii.ttf', name='Calibri', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:55:53,031 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CURLZ___.TTF', name='Curlz MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,032 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelb.ttf', name='Corbel', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:55:53,032 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARLRDBD.TTF', name='Arial Rounded MT Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,033 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothB.ttc', name='Yu Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:55:53,033 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASDEMI.TTF', name='Eras Demi ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,033 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
2023-04-21 16:55:53,034 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANS.TTF', name='Lucida Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,034 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariblk.ttf', name='Arial', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 6.888636363636364
2023-04-21 16:55:53,034 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCKRIST.TTF', name='Kristen ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,035 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\KUNSTLER.TTF', name='Kunstler Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,035 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanb.ttf', name='Constantia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:55:53,036 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PAPYRUS.TTF', name='Papyrus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,036 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JUICE___.TTF', name='Juice ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,036 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguili.ttf', name='Segoe UI', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-04-21 16:55:53,037 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:55:53,037 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarab.ttf', name='Candara', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:55:53,037 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\IMPRISHA.TTF', name='Imprint MT Shadow', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,037 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailu.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,038 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbi.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:55:53,038 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuil.ttf', name='Segoe UI', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-21 16:55:53,038 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanai.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
2023-04-21 16:55:53,039 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoepr.ttf', name='Segoe Print', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,039 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaraz.ttf', name='Candara', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:55:53,040 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNB.TTF', name='Arial', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 6.8986363636363635
2023-04-21 16:55:53,040 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspab.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:55:53,040 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,041 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCM____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-21 16:55:53,041 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARNGTON.TTF', name='Harrington', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,042 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbd.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:55:53,042 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:55:53,042 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILSANUB.TTF', name='Gill Sans Ultra Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,043 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibri.ttf', name='Calibri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,043 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiaz.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:55:53,043 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegoeIcons.ttf', name='Segoe Fluent Icons', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,043 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAGNETOB.TTF', name='Magneto', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:55:53,045 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICI.TTF', name='Century Gothic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:55:53,045 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCBLKAD.TTF', name='Blackadder ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,045 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahomabd.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:55:53,046 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugi.ttf', name='Gadugi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,046 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LCALLIG.TTF', name='Lucida Calligraphy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:55:53,046 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyh.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,046 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsunb.ttf', name='SimSun-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,047 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgun.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,047 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIL_____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,048 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VLADIMIR.TTF', name='Vladimir Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,048 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,048 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msgothic.ttc', name='MS Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,049 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRSCRIPT.TTF', name='French Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,049 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILBI___.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:55:53,050 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASLGHT.TTF', name='Eras Light ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,050 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTB.TTF', name='Calisto MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:55:53,051 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunsl.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-21 16:55:53,051 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRUSHSCI.TTF', name='Brush Script MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:55:53,052 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SNAP____.TTF', name='Snap ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,052 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuib.ttf', name='Segoe UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:55:53,052 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCBI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:55:53,052 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailub.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:55:53,054 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framd.ttf', name='Franklin Gothic Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,054 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolai.ttf', name='Consolas', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:55:53,054 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCEB.TTF', name='Tw Cen MT Condensed Extra Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-21 16:55:53,054 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\POORICH.TTF', name='Poor Richard', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,056 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDYSTO.TTF', name='Goudy Stout', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,056 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKB.TTF', name='Rockwell', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:55:53,056 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PALSCRI.TTF', name='Palace Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,057 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarai.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:55:53,058 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\micross.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,058 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LEELAWDB.TTF', name='Leelawadee', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:55:53,058 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABK.TTF', name='Franklin Gothic Book', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,059 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjh.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,059 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palabi.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:55:53,060 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAVIE.TTF', name='Ravie', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,060 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCK.TTF', name='Rockwell', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,060 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\pala.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,060 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibriz.ttf', name='Calibri', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:55:53,060 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugib.ttf', name='Gadugi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:55:53,060 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_PSTC.TTF', name='Bodoni MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-21 16:55:53,060 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENSCBK.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,060 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanab.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
2023-04-21 16:55:53,060 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LATINWD.TTF', name='Wide Latin', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
2023-04-21 16:55:53,060 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbeli.ttf', name='Corbel', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:55:53,060 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIGI.TTF', name='Gigi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,064 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITED.TTF', name='Lucida Bright', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-21 16:55:53,064 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbi.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:55:53,065 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhl.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2023-04-21 16:55:53,065 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguiemj.ttf', name='Segoe UI Emoji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,065 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OCRAEXT.TTF', name='OCR A Extended', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
2023-04-21 16:55:53,066 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebuc.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,066 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SHOWG.TTF', name='Showcard Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,066 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BASKVILL.TTF', name='Baskerville Old Face', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,067 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriab.ttf', name='Cambria', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:55:53,067 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAIAN.TTF', name='Maiandra GD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,067 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCRIPTBL.TTF', name='Script MT Bold', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:55:53,068 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLECB.TTF', name='Gloucester MT Extra Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-21 16:55:53,068 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNTI.TTF', name='Elephant', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:55:53,070 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFR.TTF', name='Californian FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,070 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHIC.TTF', name='Century Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,070 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PLAYBILL.TTF', name='Playbill', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,071 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABKIT.TTF', name='Franklin Gothic Book', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:55:53,071 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARLOWSI.TTF', name='Harlow Solid Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:55:53,072 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPE.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,072 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taile.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,072 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibl.ttf', name='Segoe UI', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2023-04-21 16:55:53,073 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNBI.TTF', name='Arial', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 7.8986363636363635
2023-04-21 16:55:53,073 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuiz.ttf', name='Segoe UI', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:55:53,073 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSBI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-21 16:55:53,074 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palab.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:55:53,074 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLI.TTF', name='Bell MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:55:53,074 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILLUBCD.TTF', name='Gill Sans Ultra Bold Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-21 16:55:53,074 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbd.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:55:53,075 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhbd.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:55:53,075 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoesc.ttf', name='Segoe Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,075 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\couri.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:55:53,076 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegUIVar.ttf', name='Segoe UI Variable', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,076 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_R.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,076 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTB.TTF', name='Copperplate Gothic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,076 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:55:53,077 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCB_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:55:53,077 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TEMPSITC.TTF', name='Tempus Sans ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,077 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MISTRAL.TTF', name='Mistral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,078 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FORTE.TTF', name='Forte', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,078 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CB.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-04-21 16:55:53,078 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbd.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:55:53,078 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STENCIL.TTF', name='Stencil', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,078 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrib.ttf', name='Calibri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:55:53,080 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERT.TTF', name='High Tower Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,080 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTCORSVA.TTF', name='Monotype Corsiva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,080 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFB.TTF', name='Californian FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:55:53,080 [17696] DEBUG    matplotlib.font_manager:1367: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to DejaVu Sans ('C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
2023-04-21 16:55:53,091 [17696] DEBUG    matplotlib.font_manager:1329: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2023-04-21 16:55:53,092 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:55:53,092 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:55:53,092 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,093 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2023-04-21 16:55:53,093 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2023-04-21 16:55:53,093 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:55:53,094 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:55:53,094 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:55:53,094 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,095 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:55:53,095 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,096 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:55:53,096 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,096 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,096 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,098 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:55:53,098 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:55:53,099 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,099 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,099 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2023-04-21 16:55:53,100 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,100 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,100 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:55:53,101 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:55:53,101 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:55:53,101 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,102 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,102 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:55:53,102 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:55:53,103 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,103 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,104 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,104 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:55:53,104 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,105 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:55:53,105 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,105 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,106 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2023-04-21 16:55:53,106 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLSNECB.TTF', name='Gill Sans MT Ext Condensed Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-21 16:55:53,106 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanz.ttf', name='Constantia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:55:53,107 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LEELAWAD.TTF', name='Leelawadee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,107 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\monbaiti.ttf', name='Mongolian Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,107 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-MEDIUM.TTF', name='Dubai', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-04-21 16:55:53,107 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-04-21 16:55:53,109 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FTLTLT.TTF', name='Footlight MT Light', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-21 16:55:53,109 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibril.ttf', name='Calibri', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-21 16:55:53,109 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSI.TTF', name='Goudy Old Style', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:55:53,109 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisbi.ttf', name='Segoe UI', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-21 16:55:53,110 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCCB___.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-04-21 16:55:53,110 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXD.TTF', name='Lucida Fax', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-21 16:55:53,110 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2023-04-21 16:55:53,110 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BSSYM7.TTF', name='Bookshelf Symbol 7', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,111 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAMDCN.TTF', name='Franklin Gothic Medium Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-21 16:55:53,111 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framdit.ttf', name='Franklin Gothic Medium', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:55:53,111 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSB.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:55:53,111 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-LIGHT.TTF', name='Dubai', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-21 16:55:53,113 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCC____.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-21 16:55:53,113 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_B.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:55:53,113 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COOPBL.TTF', name='Cooper Black', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,114 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNI.TTF', name='Arial', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 7.613636363636363
2023-04-21 16:55:53,114 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\INFROMAN.TTF', name='Informal Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,115 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSB.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-21 16:55:53,115 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BERNHC.TTF', name='Bernard MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-21 16:55:53,117 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEB.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-21 16:55:53,117 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCEDSCR.TTF', name='Edwardian Script ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,117 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consola.ttf', name='Consolas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,117 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,118 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\holomdl2.ttf', name='HoloLens MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,118 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COLONNA.TTF', name='Colonna MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,119 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYR.TTF', name='Agency FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,119 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRITANIC.TTF', name='Britannic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,120 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiai.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:55:53,120 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:55:53,121 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaS.ttf', name='Nirmala UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2023-04-21 16:55:53,121 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CHILLER.TTF', name='Chiller', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,122 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,122 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAB.TTF', name='Book Antiqua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:55:53,123 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothM.ttc', name='Yu Gothic', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-04-21 16:55:53,123 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG2.TTF', name='Wingdings 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,123 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Nirmala.ttf', name='Nirmala UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,125 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelUIsl.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2023-04-21 16:55:53,125 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriai.ttf', name='Cambria', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:55:53,126 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariali.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
2023-04-21 16:55:53,126 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARA.TTF', name='Garamond', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,126 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSPCL.TTF', name='MS Reference Specialty', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,126 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-REGULAR.TTF', name='Dubai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,126 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LHANDW.TTF', name='Lucida Handwriting', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:55:53,127 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:55:53,127 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comici.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:55:53,127 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTAUR.TTF', name='Centaur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,127 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEBO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-21 16:55:53,129 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ONYX.TTF', name='Onyx', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,129 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrima.ttf', name='Ebrima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,129 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFI.TTF', name='Californian FB', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:55:53,130 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERBI___.TTF', name='Perpetua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:55:53,130 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbell.ttf', name='Corbel', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-21 16:55:53,131 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILI____.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:55:53,131 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segmdl2.ttf', name='Segoe MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,131 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-BOLD.TTF', name='Dubai', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:55:53,132 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FELIXTI.TTF', name='Felix Titling', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,132 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbd.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
2023-04-21 16:55:53,132 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taileb.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:55:53,133 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeprb.ttf', name='Segoe Print', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:55:53,133 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoescb.ttf', name='Segoe Script', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:55:53,133 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITE.TTF', name='Lucida Bright', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,134 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhbd.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:55:53,134 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\times.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,134 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisb.ttf', name='Segoe UI', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-21 16:55:53,135 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSDB.TTF', name='Berlin Sans FB Demi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:55:53,135 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbi.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
2023-04-21 16:55:53,135 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesi.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:55:53,136 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADM.TTF', name='Franklin Gothic Demi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,136 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERTI.TTF', name='High Tower Text', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:55:53,136 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF-Italic.ttf', name='Sitka', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:55:53,137 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsun.ttc', name='SimSun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,137 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTI.TTF', name='Calisto MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:55:53,138 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCMI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:55:53,138 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaral.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,138 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\lucon.ttf', name='Lucida Console', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,139 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_I.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:55:53,139 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mvboli.ttf', name='MV Boli', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,139 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiab.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:55:53,139 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\l_10646.ttf', name='Lucida Sans Unicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,140 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTIBD.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:55:53,140 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNT.TTF', name='Elephant', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,140 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASMD.TTF', name='Eras Medium ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,140 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MSUIGHUR.TTF', name='Microsoft Uighur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,142 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYB.TTF', name='Agency FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:55:53,142 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MSUIGHUB.TTF', name='Microsoft Uighur', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:55:53,142 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicbd.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:55:53,142 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMIT.TTF', name='Franklin Gothic Demi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:55:53,143 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKEB.TTF', name='Rockwell Extra Bold', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
2023-04-21 16:55:53,143 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PER_____.TTF', name='Perpetua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,144 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VINERITC.TTF', name='Viner Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,144 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\marlett.ttf', name='Marlett', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-04-21 16:55:53,144 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrili.ttf', name='Calibri', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-04-21 16:55:53,145 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICBI.TTF', name='Century Gothic', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:55:53,145 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ALGER.TTF', name='Algerian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,146 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOS.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,146 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelz.ttf', name='Corbel', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:55:53,146 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILB____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:55:53,147 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUABI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:55:53,147 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\sylfaen.ttf', name='Sylfaen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,147 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriaz.ttf', name='Cambria', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:55:53,148 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanaz.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
2023-04-21 16:55:53,148 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constan.ttf', name='Constantia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,149 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTILI.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-21 16:55:53,149 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCM_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,149 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhl.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2023-04-21 16:55:53,150 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOS.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-21 16:55:53,150 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HATTEN.TTF', name='Haettenschweiler', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,150 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JOKERMAN.TTF', name='Jokerman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,151 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ENGR.TTF', name='Engravers MT', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-04-21 16:55:53,151 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARAIT.TTF', name='Garamond', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:55:53,151 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,152 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelli.ttf', name='Corbel', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-04-21 16:55:53,152 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constani.ttf', name='Constantia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:55:53,152 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIST.TTF', name='Calisto MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,153 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PARCHM.TTF', name='Parchment', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,153 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\himalaya.ttf', name='Microsoft Himalaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,154 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRADHITC.TTF', name='Bradley Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,154 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\wingding.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,154 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtextb.ttf', name='Myanmar Text', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:55:53,155 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG3.TTF', name='Wingdings 3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,155 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGSOL.TTF', name='Niagara Solid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,155 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarali.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:55:53,156 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKI.TTF', name='Rockwell', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:55:53,156 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolab.ttf', name='Consolas', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:55:53,157 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXDI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-21 16:55:53,157 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BAUHS93.TTF', name='Bauhaus 93', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,158 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisli.ttf', name='Segoe UI', style='italic', variant='normal', weight=350, stretch='normal', size='scalable')) = 11.0975
2023-04-21 16:55:53,158 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELL.TTF', name='Bell MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,158 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2023-04-21 16:55:53,158 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyi.ttf', name='Microsoft Yi Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,160 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSR.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,160 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHVIT.TTF', name='Franklin Gothic Heavy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:55:53,160 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OLDENGL.TTF', name='Old English Text MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,161 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbel.ttf', name='Corbel', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,161 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLB.TTF', name='Bell MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:55:53,161 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelaUIb.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:55:53,161 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHV.TTF', name='Franklin Gothic Heavy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,162 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OUTLOOK.TTF', name='MS Outlook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,162 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PRISTINA.TTF', name='Pristina', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,162 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERI____.TTF', name='Perpetua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:55:53,163 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtext.ttf', name='Myanmar Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,163 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSAN.TTF', name='MS Reference Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,163 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERB____.TTF', name='Perpetua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:55:53,164 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTEXTRA.TTF', name='MT Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,164 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKB.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:55:53,164 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARABD.TTF', name='Garamond', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:55:53,164 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cour.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,165 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mingliub.ttc', name='MingLiU-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,165 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICB.TTF', name='Century Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:55:53,165 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspa.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,166 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VIVALDII.TTF', name='Vivaldi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:55:53,166 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAGE.TTF', name='Rage Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:55:53,166 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-21 16:55:53,167 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2023-04-21 16:55:53,167 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MATURASC.TTF', name='Matura MT Script Capitals', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,167 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comic.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,167 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbi.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:55:53,168 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothR.ttc', name='Yu Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,168 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palai.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:55:53,168 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MOD20.TTF', name='Modern No. 20', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,169 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMCN.TTF', name='Franklin Gothic Demi Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-21 16:55:53,169 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrimabd.ttf', name='Ebrima', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:55:53,169 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\javatext.ttf', name='Javanese Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,170 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CASTELAR.TTF', name='Castellar', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,170 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSDI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-21 16:55:53,170 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelawUI.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,171 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAX.TTF', name='Lucida Fax', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,171 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunbd.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:55:53,172 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF.ttf', name='Sitka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,172 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTL.TTF', name='Copperplate Gothic Light', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,173 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
2023-04-21 16:55:53,173 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeui.ttf', name='Segoe UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,173 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Gabriola.ttf', name='Gabriola', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,173 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTBI.TTF', name='Calisto MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:55:53,175 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicz.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:55:53,175 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALN.TTF', name='Arial', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 6.613636363636363
2023-04-21 16:55:53,175 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKBI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:55:53,176 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FREESCPT.TTF', name='Freestyle Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,176 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTURY.TTF', name='Century', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,176 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaB.ttf', name='Nirmala UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:55:53,176 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSB.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:55:53,176 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSD.TTF', name='Lucida Sans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-21 16:55:53,178 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuisl.ttf', name='Segoe UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2023-04-21 16:55:53,178 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:55:53,178 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:55:53,178 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguihis.ttf', name='Segoe UI Historic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,179 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCB____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-04-21 16:55:53,179 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambria.ttc', name='Cambria', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,179 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKBI.TTF', name='Rockwell', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:55:53,180 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGENG.TTF', name='Niagara Engraved', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,180 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisym.ttf', name='Segoe UI Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,180 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inkfree.ttf', name='Ink Free', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,181 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASBD.TTF', name='Eras Bold ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,181 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILC____.TTF', name='Gill Sans MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-21 16:55:53,181 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candara.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,182 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\bahnschrift.ttf', name='Bahnschrift', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,182 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BROADW.TTF', name='Broadway', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,182 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolaz.ttf', name='Consolas', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:55:53,183 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CBI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2023-04-21 16:55:53,183 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuii.ttf', name='Segoe UI', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:55:53,183 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibli.ttf', name='Segoe UI', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2023-04-21 16:55:53,185 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEDI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-21 16:55:53,185 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucit.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:55:53,185 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BKANT.TTF', name='Book Antiqua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,185 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothL.ttc', name='Yu Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-21 16:55:53,186 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrii.ttf', name='Calibri', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:55:53,186 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CURLZ___.TTF', name='Curlz MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,186 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelb.ttf', name='Corbel', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:55:53,187 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARLRDBD.TTF', name='Arial Rounded MT Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,187 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothB.ttc', name='Yu Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:55:53,187 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASDEMI.TTF', name='Eras Demi ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,188 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
2023-04-21 16:55:53,189 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANS.TTF', name='Lucida Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,189 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariblk.ttf', name='Arial', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 6.888636363636364
2023-04-21 16:55:53,189 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCKRIST.TTF', name='Kristen ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,189 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\KUNSTLER.TTF', name='Kunstler Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,190 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanb.ttf', name='Constantia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:55:53,190 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PAPYRUS.TTF', name='Papyrus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,190 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JUICE___.TTF', name='Juice ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,190 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguili.ttf', name='Segoe UI', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-04-21 16:55:53,191 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:55:53,191 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarab.ttf', name='Candara', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:55:53,191 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\IMPRISHA.TTF', name='Imprint MT Shadow', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,192 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailu.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,192 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbi.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:55:53,192 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuil.ttf', name='Segoe UI', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-21 16:55:53,192 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanai.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
2023-04-21 16:55:53,193 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoepr.ttf', name='Segoe Print', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,193 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaraz.ttf', name='Candara', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:55:53,193 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNB.TTF', name='Arial', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 6.8986363636363635
2023-04-21 16:55:53,193 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspab.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:55:53,194 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,194 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCM____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-21 16:55:53,194 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARNGTON.TTF', name='Harrington', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,195 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbd.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:55:53,195 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:55:53,195 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILSANUB.TTF', name='Gill Sans Ultra Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,195 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibri.ttf', name='Calibri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,196 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiaz.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:55:53,196 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegoeIcons.ttf', name='Segoe Fluent Icons', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,196 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAGNETOB.TTF', name='Magneto', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:55:53,197 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICI.TTF', name='Century Gothic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:55:53,197 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCBLKAD.TTF', name='Blackadder ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,197 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahomabd.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:55:53,197 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugi.ttf', name='Gadugi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,198 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LCALLIG.TTF', name='Lucida Calligraphy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:55:53,198 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyh.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,198 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsunb.ttf', name='SimSun-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,198 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgun.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,199 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIL_____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,199 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VLADIMIR.TTF', name='Vladimir Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,199 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,199 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msgothic.ttc', name='MS Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,200 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRSCRIPT.TTF', name='French Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,200 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILBI___.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:55:53,200 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASLGHT.TTF', name='Eras Light ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,200 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTB.TTF', name='Calisto MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:55:53,201 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunsl.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-21 16:55:53,201 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRUSHSCI.TTF', name='Brush Script MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:55:53,201 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SNAP____.TTF', name='Snap ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,201 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuib.ttf', name='Segoe UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:55:53,202 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCBI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:55:53,202 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailub.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:55:53,202 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framd.ttf', name='Franklin Gothic Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,203 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolai.ttf', name='Consolas', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:55:53,203 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCEB.TTF', name='Tw Cen MT Condensed Extra Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-21 16:55:53,203 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\POORICH.TTF', name='Poor Richard', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,204 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDYSTO.TTF', name='Goudy Stout', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,204 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKB.TTF', name='Rockwell', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:55:53,204 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PALSCRI.TTF', name='Palace Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,204 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarai.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:55:53,206 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\micross.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,206 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LEELAWDB.TTF', name='Leelawadee', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:55:53,206 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABK.TTF', name='Franklin Gothic Book', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,206 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjh.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,207 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palabi.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:55:53,207 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAVIE.TTF', name='Ravie', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,207 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCK.TTF', name='Rockwell', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,207 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\pala.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,207 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibriz.ttf', name='Calibri', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:55:53,208 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugib.ttf', name='Gadugi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:55:53,208 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_PSTC.TTF', name='Bodoni MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-21 16:55:53,208 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENSCBK.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,208 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanab.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
2023-04-21 16:55:53,209 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LATINWD.TTF', name='Wide Latin', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
2023-04-21 16:55:53,209 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbeli.ttf', name='Corbel', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:55:53,209 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIGI.TTF', name='Gigi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,209 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITED.TTF', name='Lucida Bright', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-21 16:55:53,210 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbi.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:55:53,210 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhl.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2023-04-21 16:55:53,210 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguiemj.ttf', name='Segoe UI Emoji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,210 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OCRAEXT.TTF', name='OCR A Extended', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
2023-04-21 16:55:53,212 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebuc.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,212 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SHOWG.TTF', name='Showcard Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,212 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BASKVILL.TTF', name='Baskerville Old Face', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,212 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriab.ttf', name='Cambria', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:55:53,213 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAIAN.TTF', name='Maiandra GD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,213 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCRIPTBL.TTF', name='Script MT Bold', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:55:53,213 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLECB.TTF', name='Gloucester MT Extra Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-21 16:55:53,213 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNTI.TTF', name='Elephant', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:55:53,214 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFR.TTF', name='Californian FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,214 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHIC.TTF', name='Century Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,214 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PLAYBILL.TTF', name='Playbill', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,215 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABKIT.TTF', name='Franklin Gothic Book', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:55:53,215 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARLOWSI.TTF', name='Harlow Solid Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:55:53,215 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPE.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,215 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taile.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,216 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibl.ttf', name='Segoe UI', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2023-04-21 16:55:53,216 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNBI.TTF', name='Arial', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 7.8986363636363635
2023-04-21 16:55:53,216 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuiz.ttf', name='Segoe UI', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-21 16:55:53,217 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSBI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-21 16:55:53,217 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palab.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:55:53,217 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLI.TTF', name='Bell MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:55:53,217 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILLUBCD.TTF', name='Gill Sans Ultra Bold Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-21 16:55:53,218 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbd.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:55:53,218 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhbd.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:55:53,218 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoesc.ttf', name='Segoe Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,218 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\couri.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:55:53,219 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegUIVar.ttf', name='Segoe UI Variable', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,219 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_R.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,219 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTB.TTF', name='Copperplate Gothic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,220 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-21 16:55:53,220 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCB_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:55:53,220 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TEMPSITC.TTF', name='Tempus Sans ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,221 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MISTRAL.TTF', name='Mistral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,221 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FORTE.TTF', name='Forte', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,221 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CB.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-04-21 16:55:53,222 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbd.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:55:53,222 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STENCIL.TTF', name='Stencil', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,222 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrib.ttf', name='Calibri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:55:53,223 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERT.TTF', name='High Tower Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,223 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTCORSVA.TTF', name='Monotype Corsiva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-21 16:55:53,223 [17696] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFB.TTF', name='Californian FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-21 16:55:53,224 [17696] DEBUG    matplotlib.font_manager:1367: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
2023-04-21 16:58:53,699 [9408] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-04-21 16:58:53,699 [9408] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-04-21 16:58:53,700 [9408] INFO     root:247: [JupyterRequire] Initializing comms.
2023-04-21 16:58:53,702 [9408] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-04-21 16:58:53,703 [9408] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-04-21 16:58:53,703 [9408] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-04-21 17:15:52,330 [5276] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-04-21 17:15:52,330 [5276] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-04-21 17:15:52,331 [5276] INFO     root:247: [JupyterRequire] Initializing comms.
2023-04-21 17:15:52,334 [5276] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-04-21 17:15:52,335 [5276] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-04-21 17:15:52,336 [5276] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-04-21 17:44:38,650 [16520] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-04-21 17:44:38,652 [16520] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-04-21 17:44:38,652 [16520] INFO     root:247: [JupyterRequire] Initializing comms.
2023-04-21 17:44:38,656 [16520] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-04-21 17:44:38,659 [16520] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-04-21 17:44:38,659 [16520] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-04-21 17:44:49,304 [24660] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-04-21 17:44:49,304 [24660] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-04-21 17:44:49,305 [24660] INFO     root:247: [JupyterRequire] Initializing comms.
2023-04-21 17:44:49,308 [24660] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-04-21 17:44:49,308 [24660] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-04-21 17:44:49,310 [24660] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-04-21 17:44:49,845 [24660] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-04-21 17:44:49,845 [24660] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-04-21 17:44:49,846 [24660] INFO     root:247: [JupyterRequire] Initializing comms.
2023-04-21 17:44:49,848 [24660] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-04-21 17:44:49,849 [24660] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-04-21 17:44:49,850 [24660] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-04-21 17:46:18,297 [24660] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-04-21 17:46:18,297 [24660] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-04-21 17:46:18,298 [24660] INFO     root:247: [JupyterRequire] Initializing comms.
2023-04-21 17:46:18,301 [24660] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-04-21 17:46:18,302 [24660] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-04-21 17:46:18,302 [24660] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-04-21 20:02:26,309 [24660] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-04-21 20:02:26,313 [24660] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-04-21 20:02:26,313 [24660] INFO     root:247: [JupyterRequire] Initializing comms.
2023-04-21 20:02:26,317 [24660] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-04-21 20:02:26,321 [24660] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-04-21 20:02:26,321 [24660] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-04-21 21:19:32,556 [24660] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-04-21 21:19:32,556 [24660] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-04-21 21:19:32,556 [24660] INFO     root:247: [JupyterRequire] Initializing comms.
2023-04-21 21:19:32,560 [24660] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-04-21 21:19:32,560 [24660] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-04-21 21:19:32,564 [24660] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-04-22 05:44:31,326 [24660] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-04-22 05:44:31,327 [24660] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-04-22 05:44:31,328 [24660] INFO     root:247: [JupyterRequire] Initializing comms.
2023-04-22 05:44:31,331 [24660] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-04-22 05:44:31,332 [24660] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-04-22 05:44:31,333 [24660] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-04-22 05:45:31,806 [24660] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-04-22 05:45:31,807 [24660] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-04-22 05:45:31,807 [24660] INFO     root:247: [JupyterRequire] Initializing comms.
2023-04-22 05:45:31,810 [24660] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-04-22 05:45:31,810 [24660] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-04-22 05:45:31,811 [24660] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-04-22 06:37:46,985 [20720] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-04-22 06:37:46,987 [20720] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-04-22 06:37:46,987 [20720] INFO     root:247: [JupyterRequire] Initializing comms.
2023-04-22 06:37:46,990 [20720] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-04-22 06:37:46,990 [20720] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-04-22 06:37:46,991 [20720] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-04-22 06:37:47,770 [20720] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-04-22 06:37:47,771 [20720] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-04-22 06:37:47,771 [20720] INFO     root:247: [JupyterRequire] Initializing comms.
2023-04-22 06:37:47,773 [20720] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-04-22 06:37:47,774 [20720] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-04-22 06:37:47,775 [20720] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-04-22 07:00:27,319 [1424] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-04-22 07:00:27,320 [1424] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-04-22 07:00:27,320 [1424] INFO     root:247: [JupyterRequire] Initializing comms.
2023-04-22 07:00:27,323 [1424] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-04-22 07:00:27,324 [1424] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-04-22 07:00:27,324 [1424] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-04-22 09:35:16,409 [1424] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-04-22 09:35:16,410 [1424] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-04-22 09:35:16,410 [1424] INFO     root:247: [JupyterRequire] Initializing comms.
2023-04-22 09:35:16,412 [1424] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-04-22 09:35:16,412 [1424] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-04-22 09:35:16,413 [1424] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-04-22 10:15:10,951 [16988] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-04-22 10:15:10,951 [16988] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-04-22 10:15:10,952 [16988] INFO     root:247: [JupyterRequire] Initializing comms.
2023-04-22 10:15:10,955 [16988] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-04-22 10:15:10,956 [16988] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-04-22 10:15:10,957 [16988] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-04-22 10:15:14,914 [16988] INFO     numexpr.utils:147: [JupyterRequire] Note: NumExpr detected 12 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
2023-04-22 10:15:14,915 [16988] INFO     numexpr.utils:159: [JupyterRequire] NumExpr defaulting to 8 threads.
2023-04-22 10:15:15,648 [16988] DEBUG    matplotlib:275: [JupyterRequire] matplotlib data path: C:\Users\adity\anaconda3\lib\site-packages\matplotlib\mpl-data
2023-04-22 10:15:15,656 [16988] DEBUG    matplotlib:275: [JupyterRequire] CONFIGDIR=C:\Users\adity\.matplotlib
2023-04-22 10:15:15,659 [16988] DEBUG    matplotlib:1445: [JupyterRequire] interactive is False
2023-04-22 10:15:15,660 [16988] DEBUG    matplotlib:1446: [JupyterRequire] platform is win32
2023-04-22 10:15:15,661 [16988] DEBUG    matplotlib:1447: [JupyterRequire] loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', '_io', 'marshal', 'nt', 'winreg', '_frozen_importlib_external', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', 'encodings.cp1252', '_signal', 'encodings.latin_1', '_abc', 'abc', 'io', '__main__', '_stat', 'stat', '_collections_abc', 'genericpath', 'ntpath', 'os.path', 'os', '_sitebuiltins', '_locale', '_bootlocale', '_distutils_hack', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib.machinery', '_heapq', 'heapq', 'itertools', 'keyword', '_operator', 'operator', 'reprlib', '_collections', 'collections', 'collections.abc', '_functools', 'functools', 'contextlib', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', 'copyreg', 're', 'typing.io', 'typing.re', 'typing', 'importlib.abc', 'importlib.util', 'google', 'google.cloud', 'google.logging', 'mpl_toolkits', 'sphinxcontrib', 'zope', 'site', '_weakrefset', 'weakref', 'pkgutil', 'runpy', 'ipykernel._version', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'errno', 'signal', 'threading', 'msvcrt', '_winapi', 'subprocess', 'jupyter_client._version', 'posixpath', 'fnmatch', 'glob', '_socket', 'math', 'select', 'selectors', 'socket', 'zlib', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', '_bisect', 'bisect', '_random', '_sha512', 'random', 'tempfile', 'getpass', 'platform', 'zmq.libzmq', 'zmq.backend.select', 'cython_runtime', 'zmq.backend.cython.constants', '_cython_0_29_24', 'zmq.backend.cython.error', 'zmq.error', 'zmq.backend.cython.message', 'zmq.backend.cython.context', 'copy', '_struct', 'struct', '_compat_pickle', '_pickle', 'pickle', 'zmq.backend.cython.socket', 'zmq.backend.cython.utils', 'zmq.backend.cython._poll', 'zmq.backend.cython._version', 'zmq.backend.cython._device', 'zmq.backend.cython._proxy_steerable', 'zmq.backend.cython', 'zmq.backend', 'zmq.utils', 'zmq.utils.constant_names', 'zmq.sugar.constants', 'atexit', 'zmq.sugar.attrsettr', 'zmq.sugar.poll', 'zmq.utils.jsonapi', 'zmq.utils.strtypes', 'zmq.sugar.socket', 'zmq.sugar.context', 'zmq.sugar.frame', 'zmq.sugar.tracker', 'zmq.sugar.version', 'zmq.sugar.stopwatch', 'zmq.sugar', 'zmq', '_ast', 'ast', '_opcode', 'opcode', 'dis', 'token', 'tokenize', 'linecache', 'inspect', 'traitlets.utils', 'traitlets.utils.getargspec', 'traitlets.utils.importstring', 'traitlets.utils.sentinel', 'traitlets.utils.bunch', 'traitlets.utils.descriptions', 'traitlets.traitlets', 'traitlets.utils.decorators', 'traitlets._version', 'traitlets', 'traceback', '_string', 'string', 'logging', 'pprint', 'gettext', 'argparse', 'traitlets.config.loader', 'textwrap', 'traitlets.utils.text', 'traitlets.config.configurable', 'traitlets.config.application', 'traitlets.config', 'jupyter_client.localinterfaces', 'jupyter_core.version', 'jupyter_core', 'urllib', 'urllib.parse', 'pathlib', 'jupyter_core.paths', 'jupyter_client.utils', 'jupyter_client.connect', 'traitlets.log', 'jupyter_client.launcher', 'concurrent', 'concurrent.futures._base', 'concurrent.futures', '_ssl', 'binascii', 'base64', 'ssl', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', '_contextvars', 'contextvars', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.threads', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'asyncio.windows_events', 'asyncio', 'jupyter_client.channelsabc', 'jupyter_client.channels', 'jupyter_client.clientabc', 'jupyter_client.client', 'jupyter_client.kernelspec', 'jupyter_client.managerabc', 'jupyter_client.manager', '_queue', 'queue', 'jupyter_client.blocking.channels', 'jupyter_client.blocking.client', 'jupyter_client.blocking', 'zmq._future', 'zmq.asyncio', 'jupyter_client.asynchronous.channels', 'jupyter_client.asynchronous.client', 'jupyter_client.asynchronous', '_uuid', 'uuid', 'jupyter_client.multikernelmanager', 'jupyter_client', 'ipykernel.connect', 'ipykernel', 'tornado', '_datetime', 'datetime', 'numbers', 'logging.handlers', 'html.entities', 'html', 'array', 'tornado.speedups', 'tornado.util', 'tornado.escape', 'colorama.ansi', '_ctypes', 'ctypes._endian', 'ctypes', 'ctypes.wintypes', 'colorama.win32', 'colorama.winterm', 'colorama.ansitowin32', 'colorama.initialise', 'colorama', 'tornado.log', 'tornado.concurrent', 'tornado.ioloop', '__future__', 'tornado.platform', 'tornado.gen', 'tornado.platform.asyncio', 'zmq.eventloop.ioloop', 'zmq.eventloop', 'zmq.eventloop.zmqstream', 'IPython.core', 'IPython.core.getipython', 'IPython.core.release', 'sysconfig', 'pydoc', 'executing.executing', 'executing.version', 'executing', 'asttokens.line_numbers', 'six', 'six.moves', 'asttokens.util', 'asttokens.mark_tokens', 'asttokens.asttokens', 'asttokens', '_decimal', 'decimal', 'fractions', 'pure_eval.utils', 'pure_eval.my_getattr_static', 'pure_eval.core', 'pure_eval.version', 'pure_eval', 'stack_data.utils', 'stack_data.core', 'stack_data.formatting', 'stack_data.version', 'stack_data', 'pygments', 'pygments.formatters._mapping', 'pygments.plugin', 'pygments.util', 'pygments.formatters', 'pygments.styles', 'pygments.formatter', 'pygments.console', 'pygments.token', 'pygments.style', 'pygments.formatters.terminal256', 'bdb', 'IPython.utils', 'IPython.utils.ipstruct', 'IPython.utils.coloransi', 'IPython.utils.colorable', 'IPython.utils.PyColorize', 'locale', 'IPython.utils.encoding', 'IPython.utils.py3compat', 'IPython.core.excolors', 'cmd', 'codeop', 'code', 'pdb', 'IPython.core.debugger', 'IPython.core.display_trap', 'shlex', 'IPython.utils._process_common', 'IPython.utils._process_win32', 'IPython.utils.process', 'IPython.utils.decorators', 'IPython.utils.path', 'IPython.utils.terminal', 'IPython.core.ultratb', 'IPython.utils._sysinfo', 'IPython.utils.sysinfo', 'IPython.core.crashhandler', 'IPython.utils.importstring', 'IPython.paths', 'IPython.core.profiledir', 'IPython.core.application', 'IPython.terminal', '_hashlib', '_blake2', 'hashlib', 'IPython.core.compilerop', 'IPython.core.error', 'IPython.utils.text', 'IPython.core.magic_arguments', 'getopt', 'IPython.core.display_functions', 'mimetypes', 'IPython.testing', 'IPython.testing.skipdoctest', 'IPython.core.display', 'IPython.lib', 'IPython.lib.display', 'IPython.display', 'IPython.utils.data', 'IPython.core.page', 'IPython.lib.pretty', 'IPython.utils.openpy', 'IPython.utils.dir2', 'IPython.utils.wildcard', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.lexers', 'pygments.filter', 'pygments.filters', 'pygments.regexopt', 'pygments.lexer', 'pygments.unistring', 'pygments.lexers.python', 'pygments.formatters.html', 'IPython.core.oinspect', 'IPython.core.inputtransformer2', 'IPython.core.magic', 'pickleshare', 'IPython.core.hooks', 'IPython.core.autocall', 'IPython.core.macro', 'IPython.core.splitinput', 'IPython.core.prefilter', 'IPython.core.alias', 'IPython.core.builtin_trap', 'IPython.core.displayhook', 'IPython.core.displaypub', 'backcall.backcall', 'backcall', 'IPython.core.events', 'IPython.core.extensions', 'decorator', 'IPython.utils.sentinel', 'IPython.core.formatters', '_sqlite3', 'sqlite3.dbapi2', 'sqlite3', 'IPython.core.history', 'IPython.core.logger', 'IPython.core.payload', 'IPython.core.usage', 'IPython.utils.capture', 'IPython.utils.io', 'IPython.utils.strdispatch', 'IPython.utils.syspathcontext', 'IPython.core.async_helpers', 'IPython.core.interactiveshell', 'prompt_toolkit.application.current', 'prompt_toolkit.eventloop.utils', 'prompt_toolkit.eventloop.async_generator', 'wcwidth.table_wide', 'wcwidth.table_zero', 'wcwidth.unicode_versions', 'wcwidth.wcwidth', 'wcwidth', 'prompt_toolkit.utils', 'prompt_toolkit.eventloop.inputhook', 'prompt_toolkit.eventloop', 'prompt_toolkit.application.run_in_terminal', 'prompt_toolkit.selection', 'prompt_toolkit.clipboard.base', 'prompt_toolkit.clipboard.in_memory', 'prompt_toolkit.clipboard', 'prompt_toolkit.cache', 'prompt_toolkit.enums', 'prompt_toolkit.filters.base', 'prompt_toolkit.filters.app', 'prompt_toolkit.filters.cli', 'prompt_toolkit.filters.utils', 'prompt_toolkit.filters', 'prompt_toolkit.document', 'prompt_toolkit.auto_suggest', 'prompt_toolkit.data_structures', 'prompt_toolkit.styles.base', 'prompt_toolkit.styles.named_colors', 'prompt_toolkit.styles.style', 'prompt_toolkit.styles.defaults', 'prompt_toolkit.styles.pygments', 'colorsys', 'prompt_toolkit.styles.style_transformation', 'prompt_toolkit.styles', 'prompt_toolkit.output.color_depth', 'prompt_toolkit.output.base', 'prompt_toolkit.output.defaults', 'prompt_toolkit.output', 'prompt_toolkit.output.vt100', 'prompt_toolkit.mouse_events', 'prompt_toolkit.formatted_text.base', 'prompt_toolkit.formatted_text.ansi', 'xml', 'xml.dom.domreg', 'xml.dom', 'xml.dom.minicompat', 'xml.dom.NodeFilter', 'xml.dom.xmlbuilder', 'xml.dom.minidom', 'prompt_toolkit.formatted_text.html', 'prompt_toolkit.formatted_text.pygments', 'prompt_toolkit.formatted_text.utils', 'prompt_toolkit.formatted_text', 'prompt_toolkit.completion.base', 'prompt_toolkit.completion.deduplicate', 'prompt_toolkit.completion.filesystem', 'prompt_toolkit.completion.word_completer', 'prompt_toolkit.completion.fuzzy_completer', 'prompt_toolkit.completion.nested', 'prompt_toolkit.completion', 'prompt_toolkit.history', 'prompt_toolkit.keys', 'prompt_toolkit.key_binding.key_bindings', 'prompt_toolkit.key_binding.key_processor', 'prompt_toolkit.key_binding', 'prompt_toolkit.key_binding.vi_state', 'prompt_toolkit.search', 'prompt_toolkit.validation', 'prompt_toolkit.buffer', 'prompt_toolkit.input.base', 'prompt_toolkit.input.defaults', 'prompt_toolkit.input', 'prompt_toolkit.input.typeahead', 'prompt_toolkit.key_binding.bindings', 'prompt_toolkit.key_binding.bindings.scroll', 'prompt_toolkit.key_binding.bindings.page_navigation', 'prompt_toolkit.lexers.base', 'prompt_toolkit.lexers.pygments', 'prompt_toolkit.lexers', 'prompt_toolkit.layout.utils', 'prompt_toolkit.layout.processors', 'prompt_toolkit.layout.controls', 'prompt_toolkit.layout.dimension', 'prompt_toolkit.layout.margins', 'prompt_toolkit.layout.mouse_handlers', 'prompt_toolkit.layout.screen', 'prompt_toolkit.layout.containers', 'prompt_toolkit.layout.layout', 'prompt_toolkit.layout.menus', 'prompt_toolkit.layout.scrollable_pane', 'prompt_toolkit.layout', 'prompt_toolkit.key_binding.bindings.completion', 'prompt_toolkit.key_binding.bindings.named_commands', 'prompt_toolkit.key_binding.bindings.basic', 'prompt_toolkit.key_binding.bindings.cpr', 'prompt_toolkit.key_binding.bindings.emacs', 'prompt_toolkit.key_binding.bindings.mouse', 'prompt_toolkit.input.ansi_escape_sequences', 'prompt_toolkit.input.vt100_parser', 'prompt_toolkit.key_binding.digraphs', 'prompt_toolkit.key_binding.bindings.vi', 'prompt_toolkit.key_binding.defaults', 'prompt_toolkit.key_binding.emacs_state', 'prompt_toolkit.layout.dummy', 'prompt_toolkit.renderer', 'prompt_toolkit.application.application', 'prompt_toolkit.application.dummy', 'prompt_toolkit.application', 'prompt_toolkit.key_binding.bindings.focus', 'prompt_toolkit.widgets.toolbars', 'prompt_toolkit.widgets.base', 'prompt_toolkit.widgets.dialogs', 'prompt_toolkit.widgets.menus', 'prompt_toolkit.widgets', 'prompt_toolkit.shortcuts.dialogs', 'prompt_toolkit.shortcuts.progress_bar.formatters', 'prompt_toolkit.shortcuts.progress_bar.base', 'prompt_toolkit.shortcuts.progress_bar', 'prompt_toolkit.key_binding.bindings.auto_suggest', 'prompt_toolkit.key_binding.bindings.open_in_editor', 'prompt_toolkit.shortcuts.prompt', 'prompt_toolkit.shortcuts.utils', 'prompt_toolkit.shortcuts', 'prompt_toolkit', 'prompt_toolkit.patch_stdout', 'unicodedata', 'IPython.core.latex_symbols', 'IPython.utils.generics', 'parso.utils', 'parso.tree', 'parso.python', 'parso.python.token', 'parso.python.tokenize', 'parso.pgen2.grammar_parser', 'parso.pgen2.generator', 'parso.pgen2', 'parso.parser', 'parso._compatibility', 'difflib', 'parso.python.prefix', 'parso.python.tree', 'parso.python.parser', 'parso.python.diff', 'gc', 'parso.cache', 'parso.normalizer', 'parso.python.errors', 'parso.python.pep8', 'parso.file_io', 'parso.grammar', 'parso', 'jedi.parser_utils', 'jedi.debug', 'jedi.settings', 'jedi.cache', 'jedi.file_io', 'jedi.inference.cache', 'jedi.inference.helpers', 'jedi.inference.utils', 'jedi.inference.base_value', 'jedi.inference.sys_path', 'jedi.inference.recursion', 'jedi.inference.flow_analysis', 'jedi.common', 'jedi.inference.lazy_value', 'jedi.inference.docstrings', 'jedi.plugins', 'jedi.inference.names', 'jedi.inference.filters', 'jedi.inference.compiled.getattr_static', 'jedi.inference.compiled.access', 'jedi.inference.signature', 'jedi.inference.context', 'jedi.inference.compiled.value', 'jedi.inference.compiled', 'jedi.inference.analysis', 'jedi.inference.gradual', 'jedi.inference.value.module', 'jedi.inference.value.dynamic_arrays', 'jedi.inference.value.iterable', 'jedi.inference.arguments', 'jedi.inference.parser_cache', 'jedi.inference.gradual.generics', 'jedi.inference.value.function', 'jedi.inference.value.klass', 'jedi.inference.value.instance', 'jedi.inference.value', 'jedi.inference.gradual.base', 'jedi.inference.gradual.type_var', 'jedi.inference.gradual.typing', 'jedi.inference.gradual.stub_value', 'jedi.inference.gradual.typeshed', 'jedi._compatibility', 'zipfile', 'jedi.inference.compiled.subprocess.functions', 'jedi.api.exceptions', 'jedi.inference.compiled.subprocess', 'jedi.inference.imports', 'jedi.inference.param', 'jedi.inference.gradual.annotation', 'jedi.inference.value.decorator', 'jedi.inference.syntax_tree', 'jedi.inference', 'jedi.inference.gradual.conversion', 'jedi.inference.compiled.mixed', 'pydoc_data', 'pydoc_data.topics', 'jedi.api.keywords', 'jedi.api.completion_cache', 'jedi.api.helpers', 'jedi.api.classes', 'jedi.api.interpreter', 'jedi.api.strings', 'jedi.api.file_name', 'jedi.inference.docstring_utils', 'jedi.api.completion', 'filecmp', 'jedi.api.environment', 'jedi.inference.references', 'jedi.api.project', 'jedi.api.errors', 'jedi.api.refactoring', 'jedi.api.refactoring.extract', 'jedi.inference.gradual.utils', 'jedi.api', 'jedi.plugins.stdlib', 'jedi.plugins.flask', 'jedi.plugins.pytest', 'jedi.plugins.django', 'jedi.plugins.registry', 'jedi', 'IPython.core.completer', 'IPython.terminal.ptutils', 'IPython.lib.clipboard', 'IPython.terminal.shortcuts', 'concurrent.futures.thread', 'IPython.terminal.debugger', 'IPython.terminal.magics', 'IPython.terminal.pt_inputhooks', 'IPython.terminal.prompts', 'IPython.terminal.interactiveshell', 'IPython.core.magics.auto', 'IPython.core.magics.basic', 'email', 'http', 'email.errors', 'email.quoprimime', 'email.base64mime', 'quopri', 'email.encoders', 'email.charset', 'email.header', 'calendar', 'email._parseaddr', 'email.utils', 'email._policybase', 'email.feedparser', 'email.parser', 'uu', 'email._encoded_words', 'email.iterators', 'email.message', 'http.client', 'urllib.response', 'urllib.error', 'nturl2path', 'urllib.request', 'IPython.utils.contexts', 'IPython.core.magics.code', 'IPython.core.magics.config', 'IPython.core.magics.display', '_lsprof', 'profile', 'cProfile', 'dataclasses', 'pstats', 'timeit', 'IPython.utils.module_paths', 'IPython.utils.timing', 'IPython.core.magics.execution', 'IPython.core.magics.extension', 'IPython.core.magics.history', 'IPython.core.magics.logging', 'IPython.core.magics.namespace', 'IPython.core.magics.osm', 'IPython.core.magics.packaging', 'IPython.core.pylabtools', 'IPython.core.magics.pylab', 'IPython.core.magics.script', 'IPython.core.magics', 'IPython.core.shellapp', 'IPython.extensions', 'IPython.extensions.storemagic', 'IPython.terminal.ipapp', 'IPython.terminal.embed', 'IPython.utils.frame', 'IPython', 'imp', 'hmac', 'dateutil._version', 'dateutil', 'dateutil._common', 'dateutil.relativedelta', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.win', 'dateutil.tz.tz', 'dateutil.tz', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', '_strptime', 'jupyter_client.jsonutil', 'jupyter_client.adapter', 'jupyter_client.session', 'ipykernel.iostream', 'ipykernel.control', 'ipykernel.heartbeat', 'IPython.utils.tokenutil', 'psutil._common', 'psutil._compat', 'psutil._psutil_windows', 'psutil._pswindows', 'psutil', 'tornado.locks', 'tornado.queues', 'ipykernel.jsonutil', 'ipykernel.kernelbase', 'ipykernel.comm.comm', 'ipykernel.comm.manager', 'ipykernel.comm', 'IPython.core.payloadpage', 'ipykernel.displayhook', 'ipykernel.zmqshell', 'setuptools._distutils', 'distutils.debug', 'distutils.errors', 'distutils.fancy_getopt', 'distutils.dep_util', 'distutils.log', 'distutils.spawn', 'distutils.py35compat', 'distutils.util', 'distutils.dist', 'distutils.dir_util', 'distutils.file_util', 'distutils.archive_util', 'distutils.cmd', 'configparser', 'distutils.config', 'distutils.extension', 'distutils.core', '_distutils_hack.override', 'setuptools._deprecation_warning', 'xml.parsers', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'xml.parsers.expat', 'plistlib', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources._vendor.jaraco', 'pkg_resources.extern.jaraco', 'importlib._common', 'importlib.resources', 'pkg_resources._vendor.more_itertools.recipes', 'pkg_resources._vendor.more_itertools.more', 'pkg_resources._vendor.more_itertools', 'pkg_resources.extern.more_itertools', 'pkg_resources.extern.jaraco.functools', 'pkg_resources.extern.jaraco.context', 'pkg_resources.extern.jaraco.text', 'win32api', '_win32sysloader', 'pywintypes', 'pythoncom', 'win32com.gen_py', 'win32com', 'win32com.shell', 'pkg_resources._vendor.appdirs', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources._vendor.packaging', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.version', 'pkg_resources._vendor.packaging._manylinux', 'pkg_resources._vendor.packaging._musllinux', 'pkg_resources.extern.packaging.tags', 'pkg_resources.extern.packaging.utils', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources._vendor.pyparsing', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.packaging.markers', 'pkg_resources.extern.packaging.requirements', 'pkg_resources', 'setuptools.version', 'distutils.filelist', 'setuptools.monkey', 'setuptools.extension', 'distutils.command', 'setuptools.extern', 'setuptools._vendor', 'setuptools._vendor.packaging.__about__', 'setuptools._vendor.packaging', 'setuptools.extern.packaging', 'setuptools._vendor.ordered_set', 'setuptools.extern.ordered_set', 'setuptools._vendor.more_itertools.recipes', 'setuptools._vendor.more_itertools.more', 'setuptools._vendor.more_itertools', 'setuptools.extern.more_itertools', 'setuptools._vendor.pyparsing', 'setuptools.extern.pyparsing', 'setuptools._vendor.packaging._manylinux', 'setuptools._vendor.packaging._musllinux', 'setuptools.extern.packaging.tags', 'setuptools.extern.packaging._structures', 'setuptools.extern.packaging.version', 'setuptools.extern.packaging.utils', 'setuptools.extern.packaging.specifiers', 'setuptools.extern.packaging.markers', 'setuptools.extern.packaging.requirements', 'setuptools._vendor.jaraco', 'setuptools.extern.jaraco', 'setuptools.extern.jaraco.context', 'setuptools.extern.jaraco.functools', '_csv', 'csv', 'setuptools._vendor.zipp', 'setuptools._vendor.importlib_metadata._functools', 'setuptools._vendor.importlib_metadata._text', 'setuptools._vendor.importlib_metadata._adapters', 'setuptools._vendor.importlib_metadata._compat', 'setuptools._vendor.importlib_metadata._meta', 'setuptools._vendor.importlib_metadata._collections', 'setuptools._vendor.importlib_metadata._itertools', 'setuptools._vendor.importlib_metadata', 'setuptools.extern.importlib_metadata', 'setuptools._vendor.nspektr._compat', 'setuptools._vendor.nspektr', 'setuptools.extern.nspektr', 'zipp', 'importlib_metadata._functools', 'importlib_metadata._text', 'importlib_metadata._adapters', 'importlib_metadata._compat', 'importlib_metadata._meta', 'importlib_metadata._collections', 'importlib_metadata._itertools', 'importlib_metadata', 'setuptools._importlib', 'distutils.command.bdist', 'setuptools.command', 'setuptools.windows_support', 'setuptools.config.expand', 'setuptools.config.setupcfg', 'setuptools.config', 'setuptools.errors', 'email._header_value_parser', 'email.headerregistry', 'setuptools.config._apply_pyprojecttoml', 'setuptools.config.pyprojecttoml', 'setuptools.discovery', 'setuptools.extern.jaraco.text', 'setuptools._reqs', 'setuptools._itertools', 'setuptools._entry_points', 'setuptools.dist', 'setuptools.py34compat', 'setuptools._imp', 'setuptools.depends', 'setuptools.logging', 'distutils.ccompiler', 'distutils.msvc9compiler', 'setuptools.msvc', 'unittest.util', 'unittest.result', 'unittest.case', 'unittest.suite', 'unittest.loader', 'unittest.signals', 'unittest.runner', 'unittest.main', 'unittest', 'unittest.mock', 'distutils._msvccompiler', 'setuptools', 'distutils', 'distutils.version', 'ipykernel.eventloops', 'ipykernel.compiler', 'debugpy._version', 'debugpy.common', 'debugpy.common.json', 'debugpy.common.fmt', 'debugpy.common.compat', 'debugpy', 'debugpy._vendored._util', 'debugpy._vendored', '_pydevd_bundle', 'encodings.ascii', 'stringprep', 'encodings.idna', '_pydevd_bundle.pydevd_vm_type', '_pydev_imps', 'xmlrpc', 'gzip', 'xmlrpc.client', 'socketserver', 'http.server', 'xmlrpc.server', '_pydev_imps._pydev_saved_modules', '_pydevd_bundle.pydevd_constants', '_pydev_bundle', '_pydev_runfiles', '_pydevd_frame_eval', 'pydev_ipython', 'pydevd_concurrency_analyser', 'pydevd_plugins', '_pydev_bundle.pydev_log', '_pydev_bundle._pydev_filesystem_encoding', '_pydevd_bundle.pydevd_comm_constants', 'pydevd_file_utils', '_pydev_imps._pydev_execfile', '_pydevd_bundle.pydevd_exec2', '_pydev_bundle.pydev_imports', '_pydev_bundle.pydev_is_thread_alive', '_pydev_bundle.pydev_override', 'pydevd_plugins.extensions', '_pydevd_bundle.pydevd_extension_utils', '_pydevd_bundle.pydevd_frame_utils', '_pydevd_bundle.pydevd_filtering', '_pydevd_bundle.pydevd_io', '_pydevd_bundle.pydevd_utils', '_pydev_bundle._pydev_tipper_common', '_pydev_bundle._pydev_imports_tipper', '_pydev_bundle._pydev_calltip_util', '_pydevd_bundle.pydevd_safe_repr', '_pydevd_bundle.pydevd_resolver', '_pydevd_bundle.pydevd_extension_api', '_pydevd_bundle.pydevd_xml', '_pydevd_bundle.pydevd_dont_trace', '_pydevd_frame_eval.vendored', '_pydevd_frame_eval.vendored.bytecode.flags', '_pydevd_frame_eval.vendored.bytecode.instr', '_pydevd_frame_eval.vendored.bytecode.bytecode', '_pydevd_frame_eval.vendored.bytecode.concrete', '_pydevd_frame_eval.vendored.bytecode.cfg', '_pydevd_frame_eval.vendored.bytecode', '_pydevd_bundle.pydevd_bytecode_utils', '_pydevd_bundle.pydevd_cython', '_pydevd_bundle.pydevd_cython_wrapper', '_pydevd_bundle.pydevd_additional_thread_info', '_pydevd_bundle.pydevd_thread_lifecycle', '_pydevd_bundle.pydevd_save_locals', '_pydevd_bundle.pydevd_defaults', '_pydev_bundle.pydev_monkey', 'pydevd_tracing', '_pydevd_bundle.pydevd_daemon_thread', '_pydevd_bundle.pydevd_timeout', '_pydevd_bundle.pydevd_vars', '_pydev_bundle.pydev_console_utils', '_pydevd_bundle.pydevd_import_class', '_pydevd_bundle.pydevd_breakpoints', '_pydevd_bundle.pydevd_custom_frames', '_pydevd_bundle.pydevd_dont_trace_files', '_pydevd_bundle.pydevd_net_command', '_pydev_bundle.pydev_umd', 'pydevconsole', '_pydev_bundle._pydev_completer', '_pydevd_bundle.pydevd_net_command_factory_xml', '_pydevd_bundle.pydevd_frame', '_pydevd_bundle.pydevd_additional_thread_info_regular', '_pydevd_bundle.pydevd_trace_dispatch', '_pydevd_frame_eval.pydevd_frame_eval_main', '_pydevd_bundle.pydevd_source_mapping', 'pydevd_concurrency_analyser.pydevd_thread_wrappers', 'pydevd_concurrency_analyser.pydevd_concurrency_logger', '_pydevd_bundle._debug_adapter', '_pydevd_bundle._debug_adapter.pydevd_schema_log', '_pydevd_bundle._debug_adapter.pydevd_base_schema', '_pydevd_bundle._debug_adapter.pydevd_schema', '_pydevd_bundle.pydevd_reload', '_pydev_bundle.fsnotify', '_pydevd_bundle.pydevd_console', '_pydevd_bundle.pydevd_comm', '_pydevd_bundle.pydevd_net_command_factory_json', '_pydevd_bundle.pydevd_collect_bytecode_info', '_pydevd_bundle.pydevd_api', '_pydevd_bundle.pydevd_json_debug_options', '_pydevd_bundle.pydevd_process_net_command_json', '_pydevd_bundle.pydevd_traceproperty', '_pydevd_bundle.pydevd_process_net_command', '_pydevd_bundle.pydevd_suspended_frames', '_pydevd_bundle.pydevd_trace_api', 'pydevd_plugins.django_debug', 'pydevd_plugins.jinja2_debug', '_pydevd_bundle.pydevd_plugin_utils', 'pydevd_plugins.extensions.types', 'pydevd_plugins.extensions.types.pydevd_helpers', 'pydevd_plugins.extensions.types.pydevd_plugin_numpy_types', 'pydevd_plugins.extensions.types.pydevd_plugins_django_form_str', 'pydevd', 'debugpy._vendored.force_pydevd', 'debugpy.server', 'debugpy.adapter', 'debugpy.common.timestamp', 'debugpy.common.util', 'debugpy.common.log', 'debugpy.common.sockets', 'debugpy.server.api', 'ipykernel.debugger', 'ipykernel.ipkernel', 'ipykernel.parentpoller', 'ipykernel.kernelapp', 'win32security', 'ntsecuritycon', 'faulthandler', 'IPython.core.completerlib', 'logging.config', 'pythonjsonlogger', 'pythonjsonlogger.jsonlogger', 'daiquiri.types', 'daiquiri.formatter', 'daiquiri.handlers', 'daiquiri.output', 'daiquiri', 'jupyter_require.__about__', 'csscompressor', 'jupyter_require.core', 'jupyter_require.notebook', 'jupyter_require', 'jupyter_nbutils.__about__', 'jupyter_nbutils.config', 'jupyter_nbutils.utils', 'jupyter_nbutils', 'jupyter_require.magic', 'numpy._globals', 'numpy.__config__', 'numpy._distributor_init', 'numpy._version', 'numpy.version', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core._asarray', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core._machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.stride_tricks', 'numpy.lib.twodim_base', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', '_cython_0_29_30', 'numpy.random._common', 'secrets', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'pytz', 'pandas._typing', '_cython_0_29_28', 'pandas._libs.tslibs.dtypes', 'pandas._libs.tslibs.base', 'pandas._libs.tslibs.np_datetime', 'pandas._libs.tslibs.nattype', 'pandas._libs.tslibs.timezones', 'pandas._libs.tslibs.ccalendar', 'pandas._libs.tslibs.tzconversion', 'pandas._config.config', 'pandas._config.dates', 'pandas._config.display', 'pandas._config', 'pandas._config.localization', 'pandas._libs.tslibs.strptime', 'pandas._libs.tslibs.fields', 'pandas._libs.tslibs.timedeltas', 'pandas._libs.tslibs.timestamps', 'dateutil.easter', 'pandas._libs.properties', 'pandas._libs.tslibs.offsets', 'pandas._libs.tslibs.parsing', 'pandas._libs.tslibs.conversion', 'pandas._libs.tslibs.period', 'pandas._libs.tslibs.vectorized', 'pandas._libs.tslibs', 'pandas._libs.ops_dispatch', 'pandas._libs.missing', 'pandas._libs.hashtable', 'pandas._libs.algos', 'pandas._libs.interval', 'pandas._libs', 'pandas.util._decorators', 'pandas.core', 'pandas.core.util', 'pandas._libs.tslib', 'pandas._libs.lib', 'pandas._libs.hashing', 'pandas.core.dtypes', 'pandas.util._exceptions', 'pandas.errors', 'pandas.core.dtypes.generic', 'pandas.core.dtypes.base', 'pandas.core.dtypes.inference', 'pandas.core.dtypes.dtypes', 'pandas.core.dtypes.common', 'pandas.core.util.hashing', 'pandas.util', 'pandas.util.version', 'pandas.compat.numpy', 'pandas.compat.pyarrow', 'pandas.compat', 'pandas.core.config_init', 'pandas.core.dtypes.missing', 'pandas.util._validators', 'pandas.core.dtypes.cast', 'pandas.core.dtypes.concat', 'pandas.core.array_algos', 'pandas.core.common', 'pandas.core.construction', 'pandas.core.array_algos.take', 'pandas.core.indexers.utils', 'pandas.core.indexers', 'pandas.core.algorithms', 'pandas.compat.numpy.function', 'pandas.core.roperator', 'pandas._libs.ops', 'pandas.core.computation', 'pandas.compat._optional', 'numexpr.interpreter', 'packaging.__about__', 'packaging', 'packaging._structures', 'packaging.version', 'numexpr.expressions', 'numexpr.utils', 'numexpr.necompiler', 'numexpr.version', 'numexpr', 'pandas.core.computation.check', 'pandas.core.computation.expressions', 'pandas.core.ops.missing', 'pandas.core.ops.dispatch', 'pandas.core.ops.invalid', 'pandas.core.ops.array_ops', 'pandas.core.ops.common', 'pandas.core.ops.docstrings', 'pandas.core.ops.mask_ops', 'pandas.core.ops.methods', 'pandas.core.ops', 'pandas.core.arraylike', 'pandas.core.missing', 'pandas.core.array_algos.quantile', 'pandas.core.sorting', 'pandas.core.arrays.base', 'bottleneck.benchmark', 'bottleneck.benchmark.autotimeit', 'bottleneck.benchmark.bench', 'bottleneck.benchmark.bench_detailed', 'bottleneck.tests', 'bottleneck.tests.util', 'bottleneck.slow.reduce', 'bottleneck.slow.nonreduce', 'bottleneck.slow.nonreduce_axis', 'bottleneck.slow.move', 'bottleneck.slow', 'bottleneck._pytesttester', 'bottleneck.move', 'bottleneck.nonreduce', 'bottleneck.nonreduce_axis', 'bottleneck.reduce', 'bottleneck._version', 'bottleneck', 'pandas.core.nanops', 'pandas.core.array_algos.masked_reductions', 'pandas.core.arrays.masked', 'pandas.core.arrays.boolean', 'pandas._libs.arrays', 'pandas.core.accessor', 'pandas.core.array_algos.transforms', 'pandas.core.arrays._mixins', 'pandas.core.base', 'pandas.core.strings.accessor', 'pandas.core.strings.base', 'pandas.core.strings', 'pandas.core.strings.object_array', 'pandas.io', 'pandas.io.formats', 'pandas.io.formats.console', 'pandas.core.arrays.categorical', 'pandas.tseries', 'pandas.tseries.frequencies', 'pandas.core.arrays.datetimelike', 'pandas.core.arrays._ranges', 'pandas.core.arrays.numeric', 'pandas.core.tools', 'pandas.core.tools.numeric', 'pandas.core.arrays.integer', 'pandas.tseries.offsets', 'pandas.core.arrays.datetimes', 'pandas.core.arrays.floating', 'pandas.core.indexes', 'pandas._libs.index', 'pandas._libs.join', 'pandas.core.array_algos.putmask', 'pandas._libs.sparse', 'pandas.core.arrays.sparse.dtype', 'pandas.io.formats.printing', 'pandas.core.arrays.sparse.array', 'pandas.core.arrays.sparse.accessor', 'pandas.core.arrays.sparse', 'pandas.core.indexes.frozen', 'pandas.core.indexes.base', 'pandas.core.arrays.interval', 'pandas.core.arrays.numpy_', 'pandas.core.arrays.period', 'pandas.core.arrays.string_', 'pandas.core.arrays.string_arrow', 'pandas.core.arrays.timedeltas', 'pandas.core.arrays', 'pandas.core.flags', 'pandas._libs.reduction', 'pandas.core.apply', 'pandas._libs.indexing', 'pandas.core.indexes.extension', 'pandas.core.indexes.category', 'pandas.core.indexes.numeric', 'pandas.core.indexes.range', 'pandas.core.tools.timedeltas', 'pandas.core.indexes.datetimelike', 'pandas.core.tools.times', 'pandas.core.indexes.datetimes', 'pandas.core.indexes.multi', 'pandas.core.indexes.timedeltas', 'pandas.core.indexes.interval', 'pandas.core.indexes.period', 'pandas.core.indexes.api', 'pandas.core.indexing', 'pandas.core.array_algos.replace', 'pandas.core.reshape', 'pandas._libs.internals', 'pandas._libs.writers', 'pandas.core.internals.blocks', 'pandas.core.internals.api', 'pandas.core.internals.base', 'pandas.core.internals.array_manager', 'pandas.core.internals.ops', 'pandas.core.internals.managers', 'pandas.core.internals.concat', 'pandas.core.internals', 'pandas.core.reshape.concat', 'mmap', 'pandas.core.shared_docs', 'pandas.io.common', 'pandas.io.formats.format', 'pandas.core.describe', 'pandas.core.internals.construction', 'pandas.core.sample', 'pandas._libs.window', 'pandas._libs.window.aggregations', 'pandas._libs.window.indexers', 'pandas.core.indexers.objects', 'pandas.core.util.numba_', 'pandas.core.window.common', 'pandas.core.window.doc', 'pandas.core.window.numba_', 'pandas.core.window.online', 'pandas.core._numba', 'pandas.core._numba.executor', 'pandas.core.window.rolling', 'pandas.core.window.ewm', 'pandas.core.window.expanding', 'pandas.core.window', 'pandas.core.generic', 'pandas.core.reshape.util', 'pandas.core.reshape.melt', 'pandas._libs.reshape', 'pandas.core.indexes.accessors', 'pandas.arrays', 'pandas.core.tools.datetimes', 'pandas.io.formats.info', 'pandas.plotting._core', 'pandas.plotting._misc', 'pandas.plotting', 'pandas.core.series', 'pandas.core.frame', 'pandas.core.groupby.base', 'pandas._libs.groupby', 'pandas.core.groupby.numba_', 'pandas.core.groupby.categorical', 'pandas.core.groupby.grouper', 'pandas.core.groupby.ops', 'pandas.core.groupby.indexing', 'pandas.core.groupby.groupby', 'pandas.core.groupby.generic', 'pandas.core.groupby', 'pandas.core.api', 'pandas.tseries.api', 'pandas.core.computation.common', 'pandas.core.computation.align', 'pandas.compat.chainmap', 'pandas.core.computation.scope', 'pandas.core.computation.ops', 'pandas.core.computation.parsing', 'pandas.core.computation.expr', 'pandas.core.computation.engines', 'pandas.core.computation.eval', 'pandas.core.computation.api', 'pandas.core.reshape.merge', 'pandas.core.reshape.pivot', 'pandas.core.reshape.reshape', 'pandas.core.reshape.tile', 'pandas.core.reshape.api', 'pandas.api.extensions', 'pandas.api.indexers', 'pandas.core.dtypes.api', 'pandas.api.types', 'pandas.api', 'pandas._testing._random', 'pandas._testing.contexts', 'pandas._testing._io', 'pandas._testing._warnings', 'cmath', 'pandas._libs.testing', 'pandas._testing.asserters', 'pandas._testing.compat', 'pandas._testing', 'pandas.testing', 'pandas.util._print_versions', 'pandas.io.clipboards', 'pandas._libs.parsers', 'pandas.io.excel._util', 'pandas.io.date_converters', 'pandas.io.parsers.base_parser', 'pandas.io.parsers.arrow_parser_wrapper', 'pandas.io.parsers.c_parser_wrapper', 'pandas.io.parsers.python_parser', 'pandas.io.parsers.readers', 'pandas.io.parsers', 'pandas.io.excel._odfreader', 'pandas.io.excel._openpyxl', 'pandas.io.excel._pyxlsb', 'pandas.io.excel._xlrd', 'pandas.io.excel._base', 'pandas._libs.json', 'pandas.io.formats._color_data', 'pandas.io.formats.css', 'pandas.io.formats.excel', 'pandas.io.excel._odswriter', 'pandas.io.excel._xlsxwriter', 'pandas.io.excel._xlwt', 'pandas.io.excel', 'pandas.io.feather_format', 'pandas.io.gbq', 'pandas.io.html', 'pandas.io.json._normalize', 'pandas.io.json._table_schema', 'pandas.io.json._json', 'pandas.io.json', 'pandas.io.orc', 'pandas.io.parquet', 'pandas.compat.pickle_compat', 'pandas.io.pickle', 'pandas.core.computation.pytables', 'pandas.io.pytables', 'pandas.io.sas.sasreader', 'pandas.io.sas', 'pandas.io.spss', 'pandas.io.sql', 'pandas.io.stata', 'pandas.io.xml', 'pandas.io.api', 'pandas.util._tester', 'pandas._version', 'pandas', 'summarytools', 'summarytools.htmlwidgets', 'summarytools.summarytools', 'matplotlib', 'matplotlib._api.deprecation', 'matplotlib._api', 'matplotlib._version', 'matplotlib._c_internal_utils', 'matplotlib.cbook', 'matplotlib.docstring', 'PIL._version', 'PIL', 'defusedxml.common', 'defusedxml', 'xml.etree', 'xml.etree.ElementPath', '_elementtree', 'xml.etree.ElementTree', 'defusedxml.ElementTree', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._util', 'PIL._imaging', 'cffi.lock', 'cffi.error', 'cffi.model', 'cffi.api', 'cffi', 'PIL.Image', 'PIL.ImageChops', 'PIL.ImageFile', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'PIL.ImagePalette', 'PIL.ImageSequence', 'PIL.PngImagePlugin', 'matplotlib._path', 'matplotlib.bezier', 'matplotlib.path', 'matplotlib.transforms', 'matplotlib.ticker', 'matplotlib.scale', 'matplotlib._color_data', 'matplotlib.colors', 'pyparsing.util', 'pyparsing.unicode', 'pyparsing.exceptions', 'pyparsing.actions', 'pyparsing.results', 'pyparsing.core', 'pyparsing.helpers', 'pyparsing.testing', 'pyparsing.common', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib._enums', 'cycler', 'matplotlib.rcsetup', 'matplotlib.ft2font', 'kiwisolver']
2023-04-22 10:15:15,829 [16988] DEBUG    matplotlib:275: [JupyterRequire] CACHEDIR=C:\Users\adity\.matplotlib
2023-04-22 10:15:15,836 [16988] DEBUG    matplotlib.font_manager:1439: [JupyterRequire] Using fontManager instance from C:\Users\adity\.matplotlib\fontlist-v330.json
2023-04-22 10:15:16,557 [16988] DEBUG    matplotlib.pyplot:280: [JupyterRequire] Loaded backend module://matplotlib_inline.backend_inline version unknown.
2023-04-22 10:15:16,563 [16988] DEBUG    matplotlib.pyplot:280: [JupyterRequire] Loaded backend module://matplotlib_inline.backend_inline version unknown.
2023-04-22 10:16:47,727 [16988] DEBUG    matplotlib.font_manager:1329: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2023-04-22 10:16:47,729 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 10:16:47,731 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 10:16:47,731 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,731 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2023-04-22 10:16:47,732 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2023-04-22 10:16:47,732 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:16:47,733 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:16:47,733 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:16:47,734 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,734 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 10:16:47,735 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,735 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:16:47,735 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,736 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,736 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,737 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:16:47,737 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:16:47,738 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,738 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,738 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2023-04-22 10:16:47,739 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,739 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,739 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 10:16:47,740 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:16:47,740 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:16:47,741 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,741 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,742 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:16:47,742 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:16:47,742 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,743 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,743 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,744 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:16:47,744 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,745 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:16:47,745 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,746 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,746 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2023-04-22 10:16:47,746 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLSNECB.TTF', name='Gill Sans MT Ext Condensed Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-22 10:16:47,747 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanz.ttf', name='Constantia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 10:16:47,747 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LEELAWAD.TTF', name='Leelawadee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,747 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\monbaiti.ttf', name='Mongolian Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,748 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-MEDIUM.TTF', name='Dubai', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-04-22 10:16:47,748 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-04-22 10:16:47,748 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FTLTLT.TTF', name='Footlight MT Light', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-22 10:16:47,749 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibril.ttf', name='Calibri', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-22 10:16:47,749 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSI.TTF', name='Goudy Old Style', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:16:47,750 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisbi.ttf', name='Segoe UI', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-22 10:16:47,750 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCCB___.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-04-22 10:16:47,750 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXD.TTF', name='Lucida Fax', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-22 10:16:47,751 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2023-04-22 10:16:47,751 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BSSYM7.TTF', name='Bookshelf Symbol 7', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,752 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAMDCN.TTF', name='Franklin Gothic Medium Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-22 10:16:47,752 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framdit.ttf', name='Franklin Gothic Medium', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:16:47,752 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSB.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:16:47,752 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-LIGHT.TTF', name='Dubai', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-22 10:16:47,754 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCC____.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-22 10:16:47,754 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_B.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:16:47,755 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COOPBL.TTF', name='Cooper Black', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,755 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNI.TTF', name='Arial', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 7.613636363636363
2023-04-22 10:16:47,755 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\INFROMAN.TTF', name='Informal Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,756 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSB.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-22 10:16:47,756 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BERNHC.TTF', name='Bernard MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-22 10:16:47,757 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEB.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-22 10:16:47,757 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCEDSCR.TTF', name='Edwardian Script ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,757 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consola.ttf', name='Consolas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,758 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,758 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\holomdl2.ttf', name='HoloLens MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,759 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COLONNA.TTF', name='Colonna MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,759 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYR.TTF', name='Agency FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,760 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRITANIC.TTF', name='Britannic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,760 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiai.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:16:47,761 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:16:47,761 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaS.ttf', name='Nirmala UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2023-04-22 10:16:47,762 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CHILLER.TTF', name='Chiller', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,762 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,762 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAB.TTF', name='Book Antiqua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:16:47,763 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothM.ttc', name='Yu Gothic', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-04-22 10:16:47,763 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG2.TTF', name='Wingdings 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,763 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Nirmala.ttf', name='Nirmala UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,764 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelUIsl.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2023-04-22 10:16:47,764 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriai.ttf', name='Cambria', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:16:47,764 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariali.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
2023-04-22 10:16:47,765 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARA.TTF', name='Garamond', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,765 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSPCL.TTF', name='MS Reference Specialty', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,765 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-REGULAR.TTF', name='Dubai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,765 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LHANDW.TTF', name='Lucida Handwriting', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:16:47,767 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:16:47,767 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comici.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:16:47,768 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTAUR.TTF', name='Centaur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,768 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEBO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-22 10:16:47,768 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ONYX.TTF', name='Onyx', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,769 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrima.ttf', name='Ebrima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,769 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFI.TTF', name='Californian FB', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:16:47,770 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERBI___.TTF', name='Perpetua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 10:16:47,770 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbell.ttf', name='Corbel', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-22 10:16:47,770 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILI____.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:16:47,770 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segmdl2.ttf', name='Segoe MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,771 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-BOLD.TTF', name='Dubai', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:16:47,771 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FELIXTI.TTF', name='Felix Titling', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,772 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbd.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
2023-04-22 10:16:47,772 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taileb.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:16:47,772 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeprb.ttf', name='Segoe Print', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:16:47,773 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoescb.ttf', name='Segoe Script', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:16:47,773 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITE.TTF', name='Lucida Bright', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,774 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhbd.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:16:47,774 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\times.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,774 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisb.ttf', name='Segoe UI', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-22 10:16:47,774 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSDB.TTF', name='Berlin Sans FB Demi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:16:47,776 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbi.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
2023-04-22 10:16:47,776 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesi.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:16:47,777 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADM.TTF', name='Franklin Gothic Demi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,777 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERTI.TTF', name='High Tower Text', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:16:47,778 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF-Italic.ttf', name='Sitka', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:16:47,778 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsun.ttc', name='SimSun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,778 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTI.TTF', name='Calisto MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:16:47,779 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCMI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:16:47,779 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaral.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,780 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\lucon.ttf', name='Lucida Console', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,780 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_I.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:16:47,781 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mvboli.ttf', name='MV Boli', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,781 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiab.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:16:47,781 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\l_10646.ttf', name='Lucida Sans Unicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,781 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTIBD.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:16:47,781 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNT.TTF', name='Elephant', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,782 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASMD.TTF', name='Eras Medium ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,782 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MSUIGHUR.TTF', name='Microsoft Uighur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,783 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYB.TTF', name='Agency FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:16:47,783 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MSUIGHUB.TTF', name='Microsoft Uighur', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:16:47,783 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicbd.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:16:47,783 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMIT.TTF', name='Franklin Gothic Demi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:16:47,784 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKEB.TTF', name='Rockwell Extra Bold', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
2023-04-22 10:16:47,784 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PER_____.TTF', name='Perpetua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,784 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VINERITC.TTF', name='Viner Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,785 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\marlett.ttf', name='Marlett', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-04-22 10:16:47,785 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrili.ttf', name='Calibri', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-04-22 10:16:47,785 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICBI.TTF', name='Century Gothic', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 10:16:47,786 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ALGER.TTF', name='Algerian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,786 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOS.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,787 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelz.ttf', name='Corbel', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 10:16:47,787 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILB____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:16:47,787 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUABI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 10:16:47,789 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\sylfaen.ttf', name='Sylfaen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,789 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriaz.ttf', name='Cambria', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 10:16:47,789 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanaz.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
2023-04-22 10:16:47,789 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constan.ttf', name='Constantia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,790 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTILI.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-22 10:16:47,790 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCM_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,790 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhl.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2023-04-22 10:16:47,792 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOS.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-22 10:16:47,793 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HATTEN.TTF', name='Haettenschweiler', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,793 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JOKERMAN.TTF', name='Jokerman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,793 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ENGR.TTF', name='Engravers MT', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-04-22 10:16:47,794 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARAIT.TTF', name='Garamond', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:16:47,794 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,794 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelli.ttf', name='Corbel', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-04-22 10:16:47,795 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constani.ttf', name='Constantia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:16:47,795 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIST.TTF', name='Calisto MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,796 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PARCHM.TTF', name='Parchment', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,796 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\himalaya.ttf', name='Microsoft Himalaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,802 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRADHITC.TTF', name='Bradley Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,802 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\wingding.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,802 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtextb.ttf', name='Myanmar Text', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:16:47,804 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG3.TTF', name='Wingdings 3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,804 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGSOL.TTF', name='Niagara Solid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,804 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarali.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:16:47,804 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKI.TTF', name='Rockwell', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:16:47,805 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolab.ttf', name='Consolas', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:16:47,805 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXDI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-22 10:16:47,805 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BAUHS93.TTF', name='Bauhaus 93', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,806 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisli.ttf', name='Segoe UI', style='italic', variant='normal', weight=350, stretch='normal', size='scalable')) = 11.0975
2023-04-22 10:16:47,806 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELL.TTF', name='Bell MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,806 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2023-04-22 10:16:47,807 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyi.ttf', name='Microsoft Yi Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,807 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSR.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,808 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHVIT.TTF', name='Franklin Gothic Heavy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:16:47,808 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OLDENGL.TTF', name='Old English Text MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,809 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbel.ttf', name='Corbel', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,809 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLB.TTF', name='Bell MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:16:47,809 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelaUIb.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:16:47,810 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHV.TTF', name='Franklin Gothic Heavy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,810 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OUTLOOK.TTF', name='MS Outlook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,811 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PRISTINA.TTF', name='Pristina', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,811 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERI____.TTF', name='Perpetua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:16:47,812 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtext.ttf', name='Myanmar Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,812 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSAN.TTF', name='MS Reference Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,812 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERB____.TTF', name='Perpetua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:16:47,813 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTEXTRA.TTF', name='MT Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,813 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKB.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:16:47,814 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARABD.TTF', name='Garamond', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:16:47,814 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cour.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,814 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mingliub.ttc', name='MingLiU-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,815 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICB.TTF', name='Century Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:16:47,815 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspa.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,815 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VIVALDII.TTF', name='Vivaldi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:16:47,816 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAGE.TTF', name='Rage Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:16:47,816 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-22 10:16:47,816 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2023-04-22 10:16:47,818 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MATURASC.TTF', name='Matura MT Script Capitals', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,818 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comic.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,818 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbi.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 10:16:47,818 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothR.ttc', name='Yu Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,819 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palai.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:16:47,819 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MOD20.TTF', name='Modern No. 20', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,820 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMCN.TTF', name='Franklin Gothic Demi Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-22 10:16:47,820 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrimabd.ttf', name='Ebrima', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:16:47,820 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\javatext.ttf', name='Javanese Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,821 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CASTELAR.TTF', name='Castellar', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,821 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSDI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-22 10:16:47,821 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelawUI.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,821 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAX.TTF', name='Lucida Fax', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,822 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunbd.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:16:47,822 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF.ttf', name='Sitka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,823 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTL.TTF', name='Copperplate Gothic Light', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,823 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
2023-04-22 10:16:47,823 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeui.ttf', name='Segoe UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,825 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Gabriola.ttf', name='Gabriola', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,825 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTBI.TTF', name='Calisto MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 10:16:47,825 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicz.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 10:16:47,826 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALN.TTF', name='Arial', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 6.613636363636363
2023-04-22 10:16:47,826 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKBI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 10:16:47,827 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FREESCPT.TTF', name='Freestyle Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,827 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTURY.TTF', name='Century', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,827 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaB.ttf', name='Nirmala UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:16:47,827 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSB.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:16:47,828 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSD.TTF', name='Lucida Sans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-22 10:16:47,828 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuisl.ttf', name='Segoe UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2023-04-22 10:16:47,830 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:16:47,830 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 10:16:47,830 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguihis.ttf', name='Segoe UI Historic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,831 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCB____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-04-22 10:16:47,831 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambria.ttc', name='Cambria', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,831 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKBI.TTF', name='Rockwell', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 10:16:47,832 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGENG.TTF', name='Niagara Engraved', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,832 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisym.ttf', name='Segoe UI Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,832 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inkfree.ttf', name='Ink Free', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,832 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASBD.TTF', name='Eras Bold ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,834 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILC____.TTF', name='Gill Sans MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-22 10:16:47,834 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candara.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,834 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\bahnschrift.ttf', name='Bahnschrift', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,835 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BROADW.TTF', name='Broadway', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,835 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolaz.ttf', name='Consolas', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 10:16:47,836 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CBI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2023-04-22 10:16:47,836 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuii.ttf', name='Segoe UI', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:16:47,837 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibli.ttf', name='Segoe UI', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2023-04-22 10:16:47,837 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEDI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-22 10:16:47,838 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucit.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:16:47,838 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BKANT.TTF', name='Book Antiqua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,838 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothL.ttc', name='Yu Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-22 10:16:47,838 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrii.ttf', name='Calibri', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:16:47,839 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CURLZ___.TTF', name='Curlz MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,839 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelb.ttf', name='Corbel', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:16:47,840 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARLRDBD.TTF', name='Arial Rounded MT Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,840 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothB.ttc', name='Yu Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:16:47,840 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASDEMI.TTF', name='Eras Demi ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,841 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
2023-04-22 10:16:47,841 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANS.TTF', name='Lucida Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,842 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariblk.ttf', name='Arial', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 6.888636363636364
2023-04-22 10:16:47,842 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCKRIST.TTF', name='Kristen ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,842 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\KUNSTLER.TTF', name='Kunstler Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,843 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanb.ttf', name='Constantia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:16:47,843 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PAPYRUS.TTF', name='Papyrus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,844 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JUICE___.TTF', name='Juice ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,844 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguili.ttf', name='Segoe UI', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-04-22 10:16:47,845 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:16:47,845 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarab.ttf', name='Candara', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:16:47,846 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\IMPRISHA.TTF', name='Imprint MT Shadow', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,846 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailu.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,847 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbi.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 10:16:47,847 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuil.ttf', name='Segoe UI', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-22 10:16:47,847 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanai.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
2023-04-22 10:16:47,848 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoepr.ttf', name='Segoe Print', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,848 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaraz.ttf', name='Candara', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 10:16:47,848 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNB.TTF', name='Arial', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 6.8986363636363635
2023-04-22 10:16:47,849 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspab.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:16:47,849 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,850 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCM____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-22 10:16:47,850 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARNGTON.TTF', name='Harrington', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,850 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbd.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:16:47,851 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:16:47,851 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILSANUB.TTF', name='Gill Sans Ultra Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,851 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibri.ttf', name='Calibri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,853 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiaz.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 10:16:47,853 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegoeIcons.ttf', name='Segoe Fluent Icons', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,853 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAGNETOB.TTF', name='Magneto', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:16:47,854 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICI.TTF', name='Century Gothic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:16:47,854 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCBLKAD.TTF', name='Blackadder ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,854 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahomabd.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:16:47,855 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugi.ttf', name='Gadugi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,855 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LCALLIG.TTF', name='Lucida Calligraphy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:16:47,855 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyh.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,855 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsunb.ttf', name='SimSun-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,856 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgun.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,856 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIL_____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,856 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VLADIMIR.TTF', name='Vladimir Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,857 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,857 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msgothic.ttc', name='MS Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,857 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRSCRIPT.TTF', name='French Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,857 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILBI___.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 10:16:47,859 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASLGHT.TTF', name='Eras Light ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,859 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTB.TTF', name='Calisto MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:16:47,859 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunsl.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-22 10:16:47,860 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRUSHSCI.TTF', name='Brush Script MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:16:47,860 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SNAP____.TTF', name='Snap ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,860 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuib.ttf', name='Segoe UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:16:47,860 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCBI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 10:16:47,861 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailub.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:16:47,861 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framd.ttf', name='Franklin Gothic Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,861 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolai.ttf', name='Consolas', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:16:47,862 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCEB.TTF', name='Tw Cen MT Condensed Extra Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-22 10:16:47,862 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\POORICH.TTF', name='Poor Richard', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,862 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDYSTO.TTF', name='Goudy Stout', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,863 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKB.TTF', name='Rockwell', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:16:47,863 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PALSCRI.TTF', name='Palace Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,864 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarai.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:16:47,864 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\micross.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,864 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LEELAWDB.TTF', name='Leelawadee', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:16:47,865 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABK.TTF', name='Franklin Gothic Book', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,865 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjh.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,865 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palabi.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 10:16:47,866 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAVIE.TTF', name='Ravie', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,866 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCK.TTF', name='Rockwell', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,866 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\pala.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,867 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibriz.ttf', name='Calibri', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 10:16:47,867 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugib.ttf', name='Gadugi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:16:47,867 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_PSTC.TTF', name='Bodoni MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-22 10:16:47,868 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENSCBK.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,868 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanab.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
2023-04-22 10:16:47,868 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LATINWD.TTF', name='Wide Latin', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
2023-04-22 10:16:47,869 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbeli.ttf', name='Corbel', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:16:47,869 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIGI.TTF', name='Gigi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,870 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITED.TTF', name='Lucida Bright', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-22 10:16:47,870 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbi.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 10:16:47,870 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhl.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2023-04-22 10:16:47,871 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguiemj.ttf', name='Segoe UI Emoji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,871 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OCRAEXT.TTF', name='OCR A Extended', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
2023-04-22 10:16:47,871 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebuc.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,871 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SHOWG.TTF', name='Showcard Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,872 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BASKVILL.TTF', name='Baskerville Old Face', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,872 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriab.ttf', name='Cambria', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:16:47,872 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAIAN.TTF', name='Maiandra GD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,872 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCRIPTBL.TTF', name='Script MT Bold', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:16:47,874 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLECB.TTF', name='Gloucester MT Extra Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-22 10:16:47,874 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNTI.TTF', name='Elephant', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:16:47,874 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFR.TTF', name='Californian FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,874 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHIC.TTF', name='Century Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,874 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PLAYBILL.TTF', name='Playbill', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,875 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABKIT.TTF', name='Franklin Gothic Book', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:16:47,875 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARLOWSI.TTF', name='Harlow Solid Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:16:47,875 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPE.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,876 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taile.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,876 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibl.ttf', name='Segoe UI', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2023-04-22 10:16:47,876 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNBI.TTF', name='Arial', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 7.8986363636363635
2023-04-22 10:16:47,877 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuiz.ttf', name='Segoe UI', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 10:16:47,877 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSBI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-22 10:16:47,877 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palab.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:16:47,878 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLI.TTF', name='Bell MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:16:47,878 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILLUBCD.TTF', name='Gill Sans Ultra Bold Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-22 10:16:47,878 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbd.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:16:47,878 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhbd.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:16:47,880 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoesc.ttf', name='Segoe Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,880 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\couri.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:16:47,880 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegUIVar.ttf', name='Segoe UI Variable', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,880 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_R.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,880 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTB.TTF', name='Copperplate Gothic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,881 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:16:47,881 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCB_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:16:47,881 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TEMPSITC.TTF', name='Tempus Sans ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,882 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MISTRAL.TTF', name='Mistral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,882 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FORTE.TTF', name='Forte', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,882 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CB.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-04-22 10:16:47,883 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbd.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:16:47,883 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STENCIL.TTF', name='Stencil', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,883 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrib.ttf', name='Calibri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:16:47,884 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERT.TTF', name='High Tower Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,884 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTCORSVA.TTF', name='Monotype Corsiva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:16:47,884 [16988] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFB.TTF', name='Californian FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:16:47,885 [16988] DEBUG    matplotlib.font_manager:1367: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
2023-04-22 10:20:33,451 [12652] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-04-22 10:20:33,452 [12652] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-04-22 10:20:33,453 [12652] INFO     root:247: [JupyterRequire] Initializing comms.
2023-04-22 10:20:33,456 [12652] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-04-22 10:20:33,457 [12652] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-04-22 10:20:33,457 [12652] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-04-22 10:20:37,263 [12652] INFO     numexpr.utils:147: [JupyterRequire] Note: NumExpr detected 12 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
2023-04-22 10:20:37,264 [12652] INFO     numexpr.utils:159: [JupyterRequire] NumExpr defaulting to 8 threads.
2023-04-22 10:20:37,979 [12652] DEBUG    matplotlib:275: [JupyterRequire] matplotlib data path: C:\Users\adity\anaconda3\lib\site-packages\matplotlib\mpl-data
2023-04-22 10:20:37,985 [12652] DEBUG    matplotlib:275: [JupyterRequire] CONFIGDIR=C:\Users\adity\.matplotlib
2023-04-22 10:20:37,989 [12652] DEBUG    matplotlib:1445: [JupyterRequire] interactive is False
2023-04-22 10:20:37,990 [12652] DEBUG    matplotlib:1446: [JupyterRequire] platform is win32
2023-04-22 10:20:37,991 [12652] DEBUG    matplotlib:1447: [JupyterRequire] loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', '_io', 'marshal', 'nt', 'winreg', '_frozen_importlib_external', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', 'encodings.cp1252', '_signal', 'encodings.latin_1', '_abc', 'abc', 'io', '__main__', '_stat', 'stat', '_collections_abc', 'genericpath', 'ntpath', 'os.path', 'os', '_sitebuiltins', '_locale', '_bootlocale', '_distutils_hack', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib.machinery', '_heapq', 'heapq', 'itertools', 'keyword', '_operator', 'operator', 'reprlib', '_collections', 'collections', 'collections.abc', '_functools', 'functools', 'contextlib', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', 'copyreg', 're', 'typing.io', 'typing.re', 'typing', 'importlib.abc', 'importlib.util', 'google', 'google.cloud', 'google.logging', 'mpl_toolkits', 'sphinxcontrib', 'zope', 'site', '_weakrefset', 'weakref', 'pkgutil', 'runpy', 'ipykernel._version', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'errno', 'signal', 'threading', 'msvcrt', '_winapi', 'subprocess', 'jupyter_client._version', 'posixpath', 'fnmatch', 'glob', '_socket', 'math', 'select', 'selectors', 'socket', 'zlib', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', '_bisect', 'bisect', '_random', '_sha512', 'random', 'tempfile', 'getpass', 'platform', 'zmq.libzmq', 'zmq.backend.select', 'cython_runtime', 'zmq.backend.cython.constants', '_cython_0_29_24', 'zmq.backend.cython.error', 'zmq.error', 'zmq.backend.cython.message', 'zmq.backend.cython.context', 'copy', '_struct', 'struct', '_compat_pickle', '_pickle', 'pickle', 'zmq.backend.cython.socket', 'zmq.backend.cython.utils', 'zmq.backend.cython._poll', 'zmq.backend.cython._version', 'zmq.backend.cython._device', 'zmq.backend.cython._proxy_steerable', 'zmq.backend.cython', 'zmq.backend', 'zmq.utils', 'zmq.utils.constant_names', 'zmq.sugar.constants', 'atexit', 'zmq.sugar.attrsettr', 'zmq.sugar.poll', 'zmq.utils.jsonapi', 'zmq.utils.strtypes', 'zmq.sugar.socket', 'zmq.sugar.context', 'zmq.sugar.frame', 'zmq.sugar.tracker', 'zmq.sugar.version', 'zmq.sugar.stopwatch', 'zmq.sugar', 'zmq', '_ast', 'ast', '_opcode', 'opcode', 'dis', 'token', 'tokenize', 'linecache', 'inspect', 'traitlets.utils', 'traitlets.utils.getargspec', 'traitlets.utils.importstring', 'traitlets.utils.sentinel', 'traitlets.utils.bunch', 'traitlets.utils.descriptions', 'traitlets.traitlets', 'traitlets.utils.decorators', 'traitlets._version', 'traitlets', 'traceback', '_string', 'string', 'logging', 'pprint', 'gettext', 'argparse', 'traitlets.config.loader', 'textwrap', 'traitlets.utils.text', 'traitlets.config.configurable', 'traitlets.config.application', 'traitlets.config', 'jupyter_client.localinterfaces', 'jupyter_core.version', 'jupyter_core', 'urllib', 'urllib.parse', 'pathlib', 'jupyter_core.paths', 'jupyter_client.utils', 'jupyter_client.connect', 'traitlets.log', 'jupyter_client.launcher', 'concurrent', 'concurrent.futures._base', 'concurrent.futures', '_ssl', 'binascii', 'base64', 'ssl', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', '_contextvars', 'contextvars', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.threads', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'asyncio.windows_events', 'asyncio', 'jupyter_client.channelsabc', 'jupyter_client.channels', 'jupyter_client.clientabc', 'jupyter_client.client', 'jupyter_client.kernelspec', 'jupyter_client.managerabc', 'jupyter_client.manager', '_queue', 'queue', 'jupyter_client.blocking.channels', 'jupyter_client.blocking.client', 'jupyter_client.blocking', 'zmq._future', 'zmq.asyncio', 'jupyter_client.asynchronous.channels', 'jupyter_client.asynchronous.client', 'jupyter_client.asynchronous', '_uuid', 'uuid', 'jupyter_client.multikernelmanager', 'jupyter_client', 'ipykernel.connect', 'ipykernel', 'tornado', '_datetime', 'datetime', 'numbers', 'logging.handlers', 'html.entities', 'html', 'array', 'tornado.speedups', 'tornado.util', 'tornado.escape', 'colorama.ansi', '_ctypes', 'ctypes._endian', 'ctypes', 'ctypes.wintypes', 'colorama.win32', 'colorama.winterm', 'colorama.ansitowin32', 'colorama.initialise', 'colorama', 'tornado.log', 'tornado.concurrent', 'tornado.ioloop', '__future__', 'tornado.platform', 'tornado.gen', 'tornado.platform.asyncio', 'zmq.eventloop.ioloop', 'zmq.eventloop', 'zmq.eventloop.zmqstream', 'IPython.core', 'IPython.core.getipython', 'IPython.core.release', 'sysconfig', 'pydoc', 'executing.executing', 'executing.version', 'executing', 'asttokens.line_numbers', 'six', 'six.moves', 'asttokens.util', 'asttokens.mark_tokens', 'asttokens.asttokens', 'asttokens', '_decimal', 'decimal', 'fractions', 'pure_eval.utils', 'pure_eval.my_getattr_static', 'pure_eval.core', 'pure_eval.version', 'pure_eval', 'stack_data.utils', 'stack_data.core', 'stack_data.formatting', 'stack_data.version', 'stack_data', 'pygments', 'pygments.formatters._mapping', 'pygments.plugin', 'pygments.util', 'pygments.formatters', 'pygments.styles', 'pygments.formatter', 'pygments.console', 'pygments.token', 'pygments.style', 'pygments.formatters.terminal256', 'bdb', 'IPython.utils', 'IPython.utils.ipstruct', 'IPython.utils.coloransi', 'IPython.utils.colorable', 'IPython.utils.PyColorize', 'locale', 'IPython.utils.encoding', 'IPython.utils.py3compat', 'IPython.core.excolors', 'cmd', 'codeop', 'code', 'pdb', 'IPython.core.debugger', 'IPython.core.display_trap', 'shlex', 'IPython.utils._process_common', 'IPython.utils._process_win32', 'IPython.utils.process', 'IPython.utils.decorators', 'IPython.utils.path', 'IPython.utils.terminal', 'IPython.core.ultratb', 'IPython.utils._sysinfo', 'IPython.utils.sysinfo', 'IPython.core.crashhandler', 'IPython.utils.importstring', 'IPython.paths', 'IPython.core.profiledir', 'IPython.core.application', 'IPython.terminal', '_hashlib', '_blake2', 'hashlib', 'IPython.core.compilerop', 'IPython.core.error', 'IPython.utils.text', 'IPython.core.magic_arguments', 'getopt', 'IPython.core.display_functions', 'mimetypes', 'IPython.testing', 'IPython.testing.skipdoctest', 'IPython.core.display', 'IPython.lib', 'IPython.lib.display', 'IPython.display', 'IPython.utils.data', 'IPython.core.page', 'IPython.lib.pretty', 'IPython.utils.openpy', 'IPython.utils.dir2', 'IPython.utils.wildcard', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.lexers', 'pygments.filter', 'pygments.filters', 'pygments.regexopt', 'pygments.lexer', 'pygments.unistring', 'pygments.lexers.python', 'pygments.formatters.html', 'IPython.core.oinspect', 'IPython.core.inputtransformer2', 'IPython.core.magic', 'pickleshare', 'IPython.core.hooks', 'IPython.core.autocall', 'IPython.core.macro', 'IPython.core.splitinput', 'IPython.core.prefilter', 'IPython.core.alias', 'IPython.core.builtin_trap', 'IPython.core.displayhook', 'IPython.core.displaypub', 'backcall.backcall', 'backcall', 'IPython.core.events', 'IPython.core.extensions', 'decorator', 'IPython.utils.sentinel', 'IPython.core.formatters', '_sqlite3', 'sqlite3.dbapi2', 'sqlite3', 'IPython.core.history', 'IPython.core.logger', 'IPython.core.payload', 'IPython.core.usage', 'IPython.utils.capture', 'IPython.utils.io', 'IPython.utils.strdispatch', 'IPython.utils.syspathcontext', 'IPython.core.async_helpers', 'IPython.core.interactiveshell', 'prompt_toolkit.application.current', 'prompt_toolkit.eventloop.utils', 'prompt_toolkit.eventloop.async_generator', 'wcwidth.table_wide', 'wcwidth.table_zero', 'wcwidth.unicode_versions', 'wcwidth.wcwidth', 'wcwidth', 'prompt_toolkit.utils', 'prompt_toolkit.eventloop.inputhook', 'prompt_toolkit.eventloop', 'prompt_toolkit.application.run_in_terminal', 'prompt_toolkit.selection', 'prompt_toolkit.clipboard.base', 'prompt_toolkit.clipboard.in_memory', 'prompt_toolkit.clipboard', 'prompt_toolkit.cache', 'prompt_toolkit.enums', 'prompt_toolkit.filters.base', 'prompt_toolkit.filters.app', 'prompt_toolkit.filters.cli', 'prompt_toolkit.filters.utils', 'prompt_toolkit.filters', 'prompt_toolkit.document', 'prompt_toolkit.auto_suggest', 'prompt_toolkit.data_structures', 'prompt_toolkit.styles.base', 'prompt_toolkit.styles.named_colors', 'prompt_toolkit.styles.style', 'prompt_toolkit.styles.defaults', 'prompt_toolkit.styles.pygments', 'colorsys', 'prompt_toolkit.styles.style_transformation', 'prompt_toolkit.styles', 'prompt_toolkit.output.color_depth', 'prompt_toolkit.output.base', 'prompt_toolkit.output.defaults', 'prompt_toolkit.output', 'prompt_toolkit.output.vt100', 'prompt_toolkit.mouse_events', 'prompt_toolkit.formatted_text.base', 'prompt_toolkit.formatted_text.ansi', 'xml', 'xml.dom.domreg', 'xml.dom', 'xml.dom.minicompat', 'xml.dom.NodeFilter', 'xml.dom.xmlbuilder', 'xml.dom.minidom', 'prompt_toolkit.formatted_text.html', 'prompt_toolkit.formatted_text.pygments', 'prompt_toolkit.formatted_text.utils', 'prompt_toolkit.formatted_text', 'prompt_toolkit.completion.base', 'prompt_toolkit.completion.deduplicate', 'prompt_toolkit.completion.filesystem', 'prompt_toolkit.completion.word_completer', 'prompt_toolkit.completion.fuzzy_completer', 'prompt_toolkit.completion.nested', 'prompt_toolkit.completion', 'prompt_toolkit.history', 'prompt_toolkit.keys', 'prompt_toolkit.key_binding.key_bindings', 'prompt_toolkit.key_binding.key_processor', 'prompt_toolkit.key_binding', 'prompt_toolkit.key_binding.vi_state', 'prompt_toolkit.search', 'prompt_toolkit.validation', 'prompt_toolkit.buffer', 'prompt_toolkit.input.base', 'prompt_toolkit.input.defaults', 'prompt_toolkit.input', 'prompt_toolkit.input.typeahead', 'prompt_toolkit.key_binding.bindings', 'prompt_toolkit.key_binding.bindings.scroll', 'prompt_toolkit.key_binding.bindings.page_navigation', 'prompt_toolkit.lexers.base', 'prompt_toolkit.lexers.pygments', 'prompt_toolkit.lexers', 'prompt_toolkit.layout.utils', 'prompt_toolkit.layout.processors', 'prompt_toolkit.layout.controls', 'prompt_toolkit.layout.dimension', 'prompt_toolkit.layout.margins', 'prompt_toolkit.layout.mouse_handlers', 'prompt_toolkit.layout.screen', 'prompt_toolkit.layout.containers', 'prompt_toolkit.layout.layout', 'prompt_toolkit.layout.menus', 'prompt_toolkit.layout.scrollable_pane', 'prompt_toolkit.layout', 'prompt_toolkit.key_binding.bindings.completion', 'prompt_toolkit.key_binding.bindings.named_commands', 'prompt_toolkit.key_binding.bindings.basic', 'prompt_toolkit.key_binding.bindings.cpr', 'prompt_toolkit.key_binding.bindings.emacs', 'prompt_toolkit.key_binding.bindings.mouse', 'prompt_toolkit.input.ansi_escape_sequences', 'prompt_toolkit.input.vt100_parser', 'prompt_toolkit.key_binding.digraphs', 'prompt_toolkit.key_binding.bindings.vi', 'prompt_toolkit.key_binding.defaults', 'prompt_toolkit.key_binding.emacs_state', 'prompt_toolkit.layout.dummy', 'prompt_toolkit.renderer', 'prompt_toolkit.application.application', 'prompt_toolkit.application.dummy', 'prompt_toolkit.application', 'prompt_toolkit.key_binding.bindings.focus', 'prompt_toolkit.widgets.toolbars', 'prompt_toolkit.widgets.base', 'prompt_toolkit.widgets.dialogs', 'prompt_toolkit.widgets.menus', 'prompt_toolkit.widgets', 'prompt_toolkit.shortcuts.dialogs', 'prompt_toolkit.shortcuts.progress_bar.formatters', 'prompt_toolkit.shortcuts.progress_bar.base', 'prompt_toolkit.shortcuts.progress_bar', 'prompt_toolkit.key_binding.bindings.auto_suggest', 'prompt_toolkit.key_binding.bindings.open_in_editor', 'prompt_toolkit.shortcuts.prompt', 'prompt_toolkit.shortcuts.utils', 'prompt_toolkit.shortcuts', 'prompt_toolkit', 'prompt_toolkit.patch_stdout', 'unicodedata', 'IPython.core.latex_symbols', 'IPython.utils.generics', 'parso.utils', 'parso.tree', 'parso.python', 'parso.python.token', 'parso.python.tokenize', 'parso.pgen2.grammar_parser', 'parso.pgen2.generator', 'parso.pgen2', 'parso.parser', 'parso._compatibility', 'difflib', 'parso.python.prefix', 'parso.python.tree', 'parso.python.parser', 'parso.python.diff', 'gc', 'parso.cache', 'parso.normalizer', 'parso.python.errors', 'parso.python.pep8', 'parso.file_io', 'parso.grammar', 'parso', 'jedi.parser_utils', 'jedi.debug', 'jedi.settings', 'jedi.cache', 'jedi.file_io', 'jedi.inference.cache', 'jedi.inference.helpers', 'jedi.inference.utils', 'jedi.inference.base_value', 'jedi.inference.sys_path', 'jedi.inference.recursion', 'jedi.inference.flow_analysis', 'jedi.common', 'jedi.inference.lazy_value', 'jedi.inference.docstrings', 'jedi.plugins', 'jedi.inference.names', 'jedi.inference.filters', 'jedi.inference.compiled.getattr_static', 'jedi.inference.compiled.access', 'jedi.inference.signature', 'jedi.inference.context', 'jedi.inference.compiled.value', 'jedi.inference.compiled', 'jedi.inference.analysis', 'jedi.inference.gradual', 'jedi.inference.value.module', 'jedi.inference.value.dynamic_arrays', 'jedi.inference.value.iterable', 'jedi.inference.arguments', 'jedi.inference.parser_cache', 'jedi.inference.gradual.generics', 'jedi.inference.value.function', 'jedi.inference.value.klass', 'jedi.inference.value.instance', 'jedi.inference.value', 'jedi.inference.gradual.base', 'jedi.inference.gradual.type_var', 'jedi.inference.gradual.typing', 'jedi.inference.gradual.stub_value', 'jedi.inference.gradual.typeshed', 'jedi._compatibility', 'zipfile', 'jedi.inference.compiled.subprocess.functions', 'jedi.api.exceptions', 'jedi.inference.compiled.subprocess', 'jedi.inference.imports', 'jedi.inference.param', 'jedi.inference.gradual.annotation', 'jedi.inference.value.decorator', 'jedi.inference.syntax_tree', 'jedi.inference', 'jedi.inference.gradual.conversion', 'jedi.inference.compiled.mixed', 'pydoc_data', 'pydoc_data.topics', 'jedi.api.keywords', 'jedi.api.completion_cache', 'jedi.api.helpers', 'jedi.api.classes', 'jedi.api.interpreter', 'jedi.api.strings', 'jedi.api.file_name', 'jedi.inference.docstring_utils', 'jedi.api.completion', 'filecmp', 'jedi.api.environment', 'jedi.inference.references', 'jedi.api.project', 'jedi.api.errors', 'jedi.api.refactoring', 'jedi.api.refactoring.extract', 'jedi.inference.gradual.utils', 'jedi.api', 'jedi.plugins.stdlib', 'jedi.plugins.flask', 'jedi.plugins.pytest', 'jedi.plugins.django', 'jedi.plugins.registry', 'jedi', 'IPython.core.completer', 'IPython.terminal.ptutils', 'IPython.lib.clipboard', 'IPython.terminal.shortcuts', 'concurrent.futures.thread', 'IPython.terminal.debugger', 'IPython.terminal.magics', 'IPython.terminal.pt_inputhooks', 'IPython.terminal.prompts', 'IPython.terminal.interactiveshell', 'IPython.core.magics.auto', 'IPython.core.magics.basic', 'email', 'http', 'email.errors', 'email.quoprimime', 'email.base64mime', 'quopri', 'email.encoders', 'email.charset', 'email.header', 'calendar', 'email._parseaddr', 'email.utils', 'email._policybase', 'email.feedparser', 'email.parser', 'uu', 'email._encoded_words', 'email.iterators', 'email.message', 'http.client', 'urllib.response', 'urllib.error', 'nturl2path', 'urllib.request', 'IPython.utils.contexts', 'IPython.core.magics.code', 'IPython.core.magics.config', 'IPython.core.magics.display', '_lsprof', 'profile', 'cProfile', 'dataclasses', 'pstats', 'timeit', 'IPython.utils.module_paths', 'IPython.utils.timing', 'IPython.core.magics.execution', 'IPython.core.magics.extension', 'IPython.core.magics.history', 'IPython.core.magics.logging', 'IPython.core.magics.namespace', 'IPython.core.magics.osm', 'IPython.core.magics.packaging', 'IPython.core.pylabtools', 'IPython.core.magics.pylab', 'IPython.core.magics.script', 'IPython.core.magics', 'IPython.core.shellapp', 'IPython.extensions', 'IPython.extensions.storemagic', 'IPython.terminal.ipapp', 'IPython.terminal.embed', 'IPython.utils.frame', 'IPython', 'imp', 'hmac', 'dateutil._version', 'dateutil', 'dateutil._common', 'dateutil.relativedelta', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.win', 'dateutil.tz.tz', 'dateutil.tz', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', '_strptime', 'jupyter_client.jsonutil', 'jupyter_client.adapter', 'jupyter_client.session', 'ipykernel.iostream', 'ipykernel.control', 'ipykernel.heartbeat', 'IPython.utils.tokenutil', 'psutil._common', 'psutil._compat', 'psutil._psutil_windows', 'psutil._pswindows', 'psutil', 'tornado.locks', 'tornado.queues', 'ipykernel.jsonutil', 'ipykernel.kernelbase', 'ipykernel.comm.comm', 'ipykernel.comm.manager', 'ipykernel.comm', 'IPython.core.payloadpage', 'ipykernel.displayhook', 'ipykernel.zmqshell', 'setuptools._distutils', 'distutils.debug', 'distutils.errors', 'distutils.fancy_getopt', 'distutils.dep_util', 'distutils.log', 'distutils.spawn', 'distutils.py35compat', 'distutils.util', 'distutils.dist', 'distutils.dir_util', 'distutils.file_util', 'distutils.archive_util', 'distutils.cmd', 'configparser', 'distutils.config', 'distutils.extension', 'distutils.core', '_distutils_hack.override', 'setuptools._deprecation_warning', 'xml.parsers', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'xml.parsers.expat', 'plistlib', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources._vendor.jaraco', 'pkg_resources.extern.jaraco', 'importlib._common', 'importlib.resources', 'pkg_resources._vendor.more_itertools.recipes', 'pkg_resources._vendor.more_itertools.more', 'pkg_resources._vendor.more_itertools', 'pkg_resources.extern.more_itertools', 'pkg_resources.extern.jaraco.functools', 'pkg_resources.extern.jaraco.context', 'pkg_resources.extern.jaraco.text', 'win32api', '_win32sysloader', 'pywintypes', 'pythoncom', 'win32com.gen_py', 'win32com', 'win32com.shell', 'pkg_resources._vendor.appdirs', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources._vendor.packaging', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.version', 'pkg_resources._vendor.packaging._manylinux', 'pkg_resources._vendor.packaging._musllinux', 'pkg_resources.extern.packaging.tags', 'pkg_resources.extern.packaging.utils', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources._vendor.pyparsing', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.packaging.markers', 'pkg_resources.extern.packaging.requirements', 'pkg_resources', 'setuptools.version', 'distutils.filelist', 'setuptools.monkey', 'setuptools.extension', 'distutils.command', 'setuptools.extern', 'setuptools._vendor', 'setuptools._vendor.packaging.__about__', 'setuptools._vendor.packaging', 'setuptools.extern.packaging', 'setuptools._vendor.ordered_set', 'setuptools.extern.ordered_set', 'setuptools._vendor.more_itertools.recipes', 'setuptools._vendor.more_itertools.more', 'setuptools._vendor.more_itertools', 'setuptools.extern.more_itertools', 'setuptools._vendor.pyparsing', 'setuptools.extern.pyparsing', 'setuptools._vendor.packaging._manylinux', 'setuptools._vendor.packaging._musllinux', 'setuptools.extern.packaging.tags', 'setuptools.extern.packaging._structures', 'setuptools.extern.packaging.version', 'setuptools.extern.packaging.utils', 'setuptools.extern.packaging.specifiers', 'setuptools.extern.packaging.markers', 'setuptools.extern.packaging.requirements', 'setuptools._vendor.jaraco', 'setuptools.extern.jaraco', 'setuptools.extern.jaraco.context', 'setuptools.extern.jaraco.functools', '_csv', 'csv', 'setuptools._vendor.zipp', 'setuptools._vendor.importlib_metadata._functools', 'setuptools._vendor.importlib_metadata._text', 'setuptools._vendor.importlib_metadata._adapters', 'setuptools._vendor.importlib_metadata._compat', 'setuptools._vendor.importlib_metadata._meta', 'setuptools._vendor.importlib_metadata._collections', 'setuptools._vendor.importlib_metadata._itertools', 'setuptools._vendor.importlib_metadata', 'setuptools.extern.importlib_metadata', 'setuptools._vendor.nspektr._compat', 'setuptools._vendor.nspektr', 'setuptools.extern.nspektr', 'zipp', 'importlib_metadata._functools', 'importlib_metadata._text', 'importlib_metadata._adapters', 'importlib_metadata._compat', 'importlib_metadata._meta', 'importlib_metadata._collections', 'importlib_metadata._itertools', 'importlib_metadata', 'setuptools._importlib', 'distutils.command.bdist', 'setuptools.command', 'setuptools.windows_support', 'setuptools.config.expand', 'setuptools.config.setupcfg', 'setuptools.config', 'setuptools.errors', 'email._header_value_parser', 'email.headerregistry', 'setuptools.config._apply_pyprojecttoml', 'setuptools.config.pyprojecttoml', 'setuptools.discovery', 'setuptools.extern.jaraco.text', 'setuptools._reqs', 'setuptools._itertools', 'setuptools._entry_points', 'setuptools.dist', 'setuptools.py34compat', 'setuptools._imp', 'setuptools.depends', 'setuptools.logging', 'distutils.ccompiler', 'distutils.msvc9compiler', 'setuptools.msvc', 'unittest.util', 'unittest.result', 'unittest.case', 'unittest.suite', 'unittest.loader', 'unittest.signals', 'unittest.runner', 'unittest.main', 'unittest', 'unittest.mock', 'distutils._msvccompiler', 'setuptools', 'distutils', 'distutils.version', 'ipykernel.eventloops', 'ipykernel.compiler', 'debugpy._version', 'debugpy.common', 'debugpy.common.json', 'debugpy.common.fmt', 'debugpy.common.compat', 'debugpy', 'debugpy._vendored._util', 'debugpy._vendored', '_pydevd_bundle', 'encodings.ascii', 'stringprep', 'encodings.idna', '_pydevd_bundle.pydevd_vm_type', '_pydev_imps', 'xmlrpc', 'gzip', 'xmlrpc.client', 'socketserver', 'http.server', 'xmlrpc.server', '_pydev_imps._pydev_saved_modules', '_pydevd_bundle.pydevd_constants', '_pydev_bundle', '_pydev_runfiles', '_pydevd_frame_eval', 'pydev_ipython', 'pydevd_concurrency_analyser', 'pydevd_plugins', '_pydev_bundle.pydev_log', '_pydev_bundle._pydev_filesystem_encoding', '_pydevd_bundle.pydevd_comm_constants', 'pydevd_file_utils', '_pydev_imps._pydev_execfile', '_pydevd_bundle.pydevd_exec2', '_pydev_bundle.pydev_imports', '_pydev_bundle.pydev_is_thread_alive', '_pydev_bundle.pydev_override', 'pydevd_plugins.extensions', '_pydevd_bundle.pydevd_extension_utils', '_pydevd_bundle.pydevd_frame_utils', '_pydevd_bundle.pydevd_filtering', '_pydevd_bundle.pydevd_io', '_pydevd_bundle.pydevd_utils', '_pydev_bundle._pydev_tipper_common', '_pydev_bundle._pydev_imports_tipper', '_pydev_bundle._pydev_calltip_util', '_pydevd_bundle.pydevd_safe_repr', '_pydevd_bundle.pydevd_resolver', '_pydevd_bundle.pydevd_extension_api', '_pydevd_bundle.pydevd_xml', '_pydevd_bundle.pydevd_dont_trace', '_pydevd_frame_eval.vendored', '_pydevd_frame_eval.vendored.bytecode.flags', '_pydevd_frame_eval.vendored.bytecode.instr', '_pydevd_frame_eval.vendored.bytecode.bytecode', '_pydevd_frame_eval.vendored.bytecode.concrete', '_pydevd_frame_eval.vendored.bytecode.cfg', '_pydevd_frame_eval.vendored.bytecode', '_pydevd_bundle.pydevd_bytecode_utils', '_pydevd_bundle.pydevd_cython', '_pydevd_bundle.pydevd_cython_wrapper', '_pydevd_bundle.pydevd_additional_thread_info', '_pydevd_bundle.pydevd_thread_lifecycle', '_pydevd_bundle.pydevd_save_locals', '_pydevd_bundle.pydevd_defaults', '_pydev_bundle.pydev_monkey', 'pydevd_tracing', '_pydevd_bundle.pydevd_daemon_thread', '_pydevd_bundle.pydevd_timeout', '_pydevd_bundle.pydevd_vars', '_pydev_bundle.pydev_console_utils', '_pydevd_bundle.pydevd_import_class', '_pydevd_bundle.pydevd_breakpoints', '_pydevd_bundle.pydevd_custom_frames', '_pydevd_bundle.pydevd_dont_trace_files', '_pydevd_bundle.pydevd_net_command', '_pydev_bundle.pydev_umd', 'pydevconsole', '_pydev_bundle._pydev_completer', '_pydevd_bundle.pydevd_net_command_factory_xml', '_pydevd_bundle.pydevd_frame', '_pydevd_bundle.pydevd_additional_thread_info_regular', '_pydevd_bundle.pydevd_trace_dispatch', '_pydevd_frame_eval.pydevd_frame_eval_main', '_pydevd_bundle.pydevd_source_mapping', 'pydevd_concurrency_analyser.pydevd_thread_wrappers', 'pydevd_concurrency_analyser.pydevd_concurrency_logger', '_pydevd_bundle._debug_adapter', '_pydevd_bundle._debug_adapter.pydevd_schema_log', '_pydevd_bundle._debug_adapter.pydevd_base_schema', '_pydevd_bundle._debug_adapter.pydevd_schema', '_pydevd_bundle.pydevd_reload', '_pydev_bundle.fsnotify', '_pydevd_bundle.pydevd_console', '_pydevd_bundle.pydevd_comm', '_pydevd_bundle.pydevd_net_command_factory_json', '_pydevd_bundle.pydevd_collect_bytecode_info', '_pydevd_bundle.pydevd_api', '_pydevd_bundle.pydevd_json_debug_options', '_pydevd_bundle.pydevd_process_net_command_json', '_pydevd_bundle.pydevd_traceproperty', '_pydevd_bundle.pydevd_process_net_command', '_pydevd_bundle.pydevd_suspended_frames', '_pydevd_bundle.pydevd_trace_api', 'pydevd_plugins.django_debug', 'pydevd_plugins.jinja2_debug', '_pydevd_bundle.pydevd_plugin_utils', 'pydevd_plugins.extensions.types', 'pydevd_plugins.extensions.types.pydevd_helpers', 'pydevd_plugins.extensions.types.pydevd_plugin_numpy_types', 'pydevd_plugins.extensions.types.pydevd_plugins_django_form_str', 'pydevd', 'debugpy._vendored.force_pydevd', 'debugpy.server', 'debugpy.adapter', 'debugpy.common.timestamp', 'debugpy.common.util', 'debugpy.common.log', 'debugpy.common.sockets', 'debugpy.server.api', 'ipykernel.debugger', 'ipykernel.ipkernel', 'ipykernel.parentpoller', 'ipykernel.kernelapp', 'win32security', 'ntsecuritycon', 'faulthandler', 'IPython.core.completerlib', 'logging.config', 'pythonjsonlogger', 'pythonjsonlogger.jsonlogger', 'daiquiri.types', 'daiquiri.formatter', 'daiquiri.handlers', 'daiquiri.output', 'daiquiri', 'jupyter_require.__about__', 'csscompressor', 'jupyter_require.core', 'jupyter_require.notebook', 'jupyter_require', 'jupyter_nbutils.__about__', 'jupyter_nbutils.config', 'jupyter_nbutils.utils', 'jupyter_nbutils', 'jupyter_require.magic', 'numpy._globals', 'numpy.__config__', 'numpy._distributor_init', 'numpy._version', 'numpy.version', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core._asarray', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core._machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.stride_tricks', 'numpy.lib.twodim_base', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', '_cython_0_29_30', 'numpy.random._common', 'secrets', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'pytz', 'pandas._typing', '_cython_0_29_28', 'pandas._libs.tslibs.dtypes', 'pandas._libs.tslibs.base', 'pandas._libs.tslibs.np_datetime', 'pandas._libs.tslibs.nattype', 'pandas._libs.tslibs.timezones', 'pandas._libs.tslibs.ccalendar', 'pandas._libs.tslibs.tzconversion', 'pandas._config.config', 'pandas._config.dates', 'pandas._config.display', 'pandas._config', 'pandas._config.localization', 'pandas._libs.tslibs.strptime', 'pandas._libs.tslibs.fields', 'pandas._libs.tslibs.timedeltas', 'pandas._libs.tslibs.timestamps', 'dateutil.easter', 'pandas._libs.properties', 'pandas._libs.tslibs.offsets', 'pandas._libs.tslibs.parsing', 'pandas._libs.tslibs.conversion', 'pandas._libs.tslibs.period', 'pandas._libs.tslibs.vectorized', 'pandas._libs.tslibs', 'pandas._libs.ops_dispatch', 'pandas._libs.missing', 'pandas._libs.hashtable', 'pandas._libs.algos', 'pandas._libs.interval', 'pandas._libs', 'pandas.util._decorators', 'pandas.core', 'pandas.core.util', 'pandas._libs.tslib', 'pandas._libs.lib', 'pandas._libs.hashing', 'pandas.core.dtypes', 'pandas.util._exceptions', 'pandas.errors', 'pandas.core.dtypes.generic', 'pandas.core.dtypes.base', 'pandas.core.dtypes.inference', 'pandas.core.dtypes.dtypes', 'pandas.core.dtypes.common', 'pandas.core.util.hashing', 'pandas.util', 'pandas.util.version', 'pandas.compat.numpy', 'pandas.compat.pyarrow', 'pandas.compat', 'pandas.core.config_init', 'pandas.core.dtypes.missing', 'pandas.util._validators', 'pandas.core.dtypes.cast', 'pandas.core.dtypes.concat', 'pandas.core.array_algos', 'pandas.core.common', 'pandas.core.construction', 'pandas.core.array_algos.take', 'pandas.core.indexers.utils', 'pandas.core.indexers', 'pandas.core.algorithms', 'pandas.compat.numpy.function', 'pandas.core.roperator', 'pandas._libs.ops', 'pandas.core.computation', 'pandas.compat._optional', 'numexpr.interpreter', 'packaging.__about__', 'packaging', 'packaging._structures', 'packaging.version', 'numexpr.expressions', 'numexpr.utils', 'numexpr.necompiler', 'numexpr.version', 'numexpr', 'pandas.core.computation.check', 'pandas.core.computation.expressions', 'pandas.core.ops.missing', 'pandas.core.ops.dispatch', 'pandas.core.ops.invalid', 'pandas.core.ops.array_ops', 'pandas.core.ops.common', 'pandas.core.ops.docstrings', 'pandas.core.ops.mask_ops', 'pandas.core.ops.methods', 'pandas.core.ops', 'pandas.core.arraylike', 'pandas.core.missing', 'pandas.core.array_algos.quantile', 'pandas.core.sorting', 'pandas.core.arrays.base', 'bottleneck.benchmark', 'bottleneck.benchmark.autotimeit', 'bottleneck.benchmark.bench', 'bottleneck.benchmark.bench_detailed', 'bottleneck.tests', 'bottleneck.tests.util', 'bottleneck.slow.reduce', 'bottleneck.slow.nonreduce', 'bottleneck.slow.nonreduce_axis', 'bottleneck.slow.move', 'bottleneck.slow', 'bottleneck._pytesttester', 'bottleneck.move', 'bottleneck.nonreduce', 'bottleneck.nonreduce_axis', 'bottleneck.reduce', 'bottleneck._version', 'bottleneck', 'pandas.core.nanops', 'pandas.core.array_algos.masked_reductions', 'pandas.core.arrays.masked', 'pandas.core.arrays.boolean', 'pandas._libs.arrays', 'pandas.core.accessor', 'pandas.core.array_algos.transforms', 'pandas.core.arrays._mixins', 'pandas.core.base', 'pandas.core.strings.accessor', 'pandas.core.strings.base', 'pandas.core.strings', 'pandas.core.strings.object_array', 'pandas.io', 'pandas.io.formats', 'pandas.io.formats.console', 'pandas.core.arrays.categorical', 'pandas.tseries', 'pandas.tseries.frequencies', 'pandas.core.arrays.datetimelike', 'pandas.core.arrays._ranges', 'pandas.core.arrays.numeric', 'pandas.core.tools', 'pandas.core.tools.numeric', 'pandas.core.arrays.integer', 'pandas.tseries.offsets', 'pandas.core.arrays.datetimes', 'pandas.core.arrays.floating', 'pandas.core.indexes', 'pandas._libs.index', 'pandas._libs.join', 'pandas.core.array_algos.putmask', 'pandas._libs.sparse', 'pandas.core.arrays.sparse.dtype', 'pandas.io.formats.printing', 'pandas.core.arrays.sparse.array', 'pandas.core.arrays.sparse.accessor', 'pandas.core.arrays.sparse', 'pandas.core.indexes.frozen', 'pandas.core.indexes.base', 'pandas.core.arrays.interval', 'pandas.core.arrays.numpy_', 'pandas.core.arrays.period', 'pandas.core.arrays.string_', 'pandas.core.arrays.string_arrow', 'pandas.core.arrays.timedeltas', 'pandas.core.arrays', 'pandas.core.flags', 'pandas._libs.reduction', 'pandas.core.apply', 'pandas._libs.indexing', 'pandas.core.indexes.extension', 'pandas.core.indexes.category', 'pandas.core.indexes.numeric', 'pandas.core.indexes.range', 'pandas.core.tools.timedeltas', 'pandas.core.indexes.datetimelike', 'pandas.core.tools.times', 'pandas.core.indexes.datetimes', 'pandas.core.indexes.multi', 'pandas.core.indexes.timedeltas', 'pandas.core.indexes.interval', 'pandas.core.indexes.period', 'pandas.core.indexes.api', 'pandas.core.indexing', 'pandas.core.array_algos.replace', 'pandas.core.reshape', 'pandas._libs.internals', 'pandas._libs.writers', 'pandas.core.internals.blocks', 'pandas.core.internals.api', 'pandas.core.internals.base', 'pandas.core.internals.array_manager', 'pandas.core.internals.ops', 'pandas.core.internals.managers', 'pandas.core.internals.concat', 'pandas.core.internals', 'pandas.core.reshape.concat', 'mmap', 'pandas.core.shared_docs', 'pandas.io.common', 'pandas.io.formats.format', 'pandas.core.describe', 'pandas.core.internals.construction', 'pandas.core.sample', 'pandas._libs.window', 'pandas._libs.window.aggregations', 'pandas._libs.window.indexers', 'pandas.core.indexers.objects', 'pandas.core.util.numba_', 'pandas.core.window.common', 'pandas.core.window.doc', 'pandas.core.window.numba_', 'pandas.core.window.online', 'pandas.core._numba', 'pandas.core._numba.executor', 'pandas.core.window.rolling', 'pandas.core.window.ewm', 'pandas.core.window.expanding', 'pandas.core.window', 'pandas.core.generic', 'pandas.core.reshape.util', 'pandas.core.reshape.melt', 'pandas._libs.reshape', 'pandas.core.indexes.accessors', 'pandas.arrays', 'pandas.core.tools.datetimes', 'pandas.io.formats.info', 'pandas.plotting._core', 'pandas.plotting._misc', 'pandas.plotting', 'pandas.core.series', 'pandas.core.frame', 'pandas.core.groupby.base', 'pandas._libs.groupby', 'pandas.core.groupby.numba_', 'pandas.core.groupby.categorical', 'pandas.core.groupby.grouper', 'pandas.core.groupby.ops', 'pandas.core.groupby.indexing', 'pandas.core.groupby.groupby', 'pandas.core.groupby.generic', 'pandas.core.groupby', 'pandas.core.api', 'pandas.tseries.api', 'pandas.core.computation.common', 'pandas.core.computation.align', 'pandas.compat.chainmap', 'pandas.core.computation.scope', 'pandas.core.computation.ops', 'pandas.core.computation.parsing', 'pandas.core.computation.expr', 'pandas.core.computation.engines', 'pandas.core.computation.eval', 'pandas.core.computation.api', 'pandas.core.reshape.merge', 'pandas.core.reshape.pivot', 'pandas.core.reshape.reshape', 'pandas.core.reshape.tile', 'pandas.core.reshape.api', 'pandas.api.extensions', 'pandas.api.indexers', 'pandas.core.dtypes.api', 'pandas.api.types', 'pandas.api', 'pandas._testing._random', 'pandas._testing.contexts', 'pandas._testing._io', 'pandas._testing._warnings', 'cmath', 'pandas._libs.testing', 'pandas._testing.asserters', 'pandas._testing.compat', 'pandas._testing', 'pandas.testing', 'pandas.util._print_versions', 'pandas.io.clipboards', 'pandas._libs.parsers', 'pandas.io.excel._util', 'pandas.io.date_converters', 'pandas.io.parsers.base_parser', 'pandas.io.parsers.arrow_parser_wrapper', 'pandas.io.parsers.c_parser_wrapper', 'pandas.io.parsers.python_parser', 'pandas.io.parsers.readers', 'pandas.io.parsers', 'pandas.io.excel._odfreader', 'pandas.io.excel._openpyxl', 'pandas.io.excel._pyxlsb', 'pandas.io.excel._xlrd', 'pandas.io.excel._base', 'pandas._libs.json', 'pandas.io.formats._color_data', 'pandas.io.formats.css', 'pandas.io.formats.excel', 'pandas.io.excel._odswriter', 'pandas.io.excel._xlsxwriter', 'pandas.io.excel._xlwt', 'pandas.io.excel', 'pandas.io.feather_format', 'pandas.io.gbq', 'pandas.io.html', 'pandas.io.json._normalize', 'pandas.io.json._table_schema', 'pandas.io.json._json', 'pandas.io.json', 'pandas.io.orc', 'pandas.io.parquet', 'pandas.compat.pickle_compat', 'pandas.io.pickle', 'pandas.core.computation.pytables', 'pandas.io.pytables', 'pandas.io.sas.sasreader', 'pandas.io.sas', 'pandas.io.spss', 'pandas.io.sql', 'pandas.io.stata', 'pandas.io.xml', 'pandas.io.api', 'pandas.util._tester', 'pandas._version', 'pandas', 'summarytools', 'summarytools.htmlwidgets', 'summarytools.summarytools', 'matplotlib', 'matplotlib._api.deprecation', 'matplotlib._api', 'matplotlib._version', 'matplotlib._c_internal_utils', 'matplotlib.cbook', 'matplotlib.docstring', 'PIL._version', 'PIL', 'defusedxml.common', 'defusedxml', 'xml.etree', 'xml.etree.ElementPath', '_elementtree', 'xml.etree.ElementTree', 'defusedxml.ElementTree', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._util', 'PIL._imaging', 'cffi.lock', 'cffi.error', 'cffi.model', 'cffi.api', 'cffi', 'PIL.Image', 'PIL.ImageChops', 'PIL.ImageFile', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'PIL.ImagePalette', 'PIL.ImageSequence', 'PIL.PngImagePlugin', 'matplotlib._path', 'matplotlib.bezier', 'matplotlib.path', 'matplotlib.transforms', 'matplotlib.ticker', 'matplotlib.scale', 'matplotlib._color_data', 'matplotlib.colors', 'pyparsing.util', 'pyparsing.unicode', 'pyparsing.exceptions', 'pyparsing.actions', 'pyparsing.results', 'pyparsing.core', 'pyparsing.helpers', 'pyparsing.testing', 'pyparsing.common', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib._enums', 'cycler', 'matplotlib.rcsetup', 'matplotlib.ft2font', 'kiwisolver']
2023-04-22 10:20:38,168 [12652] DEBUG    matplotlib:275: [JupyterRequire] CACHEDIR=C:\Users\adity\.matplotlib
2023-04-22 10:20:38,173 [12652] DEBUG    matplotlib.font_manager:1439: [JupyterRequire] Using fontManager instance from C:\Users\adity\.matplotlib\fontlist-v330.json
2023-04-22 10:20:38,894 [12652] DEBUG    matplotlib.pyplot:280: [JupyterRequire] Loaded backend module://matplotlib_inline.backend_inline version unknown.
2023-04-22 10:20:38,903 [12652] DEBUG    matplotlib.pyplot:280: [JupyterRequire] Loaded backend module://matplotlib_inline.backend_inline version unknown.
2023-04-22 10:20:46,764 [12652] DEBUG    matplotlib.font_manager:1329: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2023-04-22 10:20:46,765 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 10:20:46,766 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 10:20:46,766 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,766 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2023-04-22 10:20:46,767 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2023-04-22 10:20:46,767 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:20:46,768 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:20:46,768 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:20:46,769 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,769 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 10:20:46,769 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,770 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:20:46,770 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,771 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,771 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,771 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:20:46,772 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:20:46,772 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,773 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,773 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2023-04-22 10:20:46,773 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,774 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,774 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 10:20:46,775 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:20:46,775 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:20:46,775 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,776 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,776 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:20:46,777 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:20:46,777 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,777 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,778 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,778 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:20:46,778 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,778 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:20:46,779 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,779 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,779 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2023-04-22 10:20:46,780 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLSNECB.TTF', name='Gill Sans MT Ext Condensed Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-22 10:20:46,780 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanz.ttf', name='Constantia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 10:20:46,780 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LEELAWAD.TTF', name='Leelawadee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,782 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\monbaiti.ttf', name='Mongolian Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,782 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-MEDIUM.TTF', name='Dubai', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-04-22 10:20:46,782 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-04-22 10:20:46,783 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FTLTLT.TTF', name='Footlight MT Light', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-22 10:20:46,783 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibril.ttf', name='Calibri', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-22 10:20:46,784 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSI.TTF', name='Goudy Old Style', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:20:46,784 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisbi.ttf', name='Segoe UI', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-22 10:20:46,784 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCCB___.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-04-22 10:20:46,785 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXD.TTF', name='Lucida Fax', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-22 10:20:46,785 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2023-04-22 10:20:46,785 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BSSYM7.TTF', name='Bookshelf Symbol 7', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,786 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAMDCN.TTF', name='Franklin Gothic Medium Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-22 10:20:46,786 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framdit.ttf', name='Franklin Gothic Medium', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:20:46,786 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSB.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:20:46,787 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-LIGHT.TTF', name='Dubai', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-22 10:20:46,787 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCC____.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-22 10:20:46,788 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_B.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:20:46,788 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COOPBL.TTF', name='Cooper Black', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,788 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNI.TTF', name='Arial', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 7.613636363636363
2023-04-22 10:20:46,789 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\INFROMAN.TTF', name='Informal Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,789 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSB.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-22 10:20:46,790 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BERNHC.TTF', name='Bernard MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-22 10:20:46,790 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEB.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-22 10:20:46,790 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCEDSCR.TTF', name='Edwardian Script ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,790 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consola.ttf', name='Consolas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,791 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,791 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\holomdl2.ttf', name='HoloLens MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,791 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COLONNA.TTF', name='Colonna MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,792 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYR.TTF', name='Agency FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,792 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRITANIC.TTF', name='Britannic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,792 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiai.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:20:46,792 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:20:46,793 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaS.ttf', name='Nirmala UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2023-04-22 10:20:46,793 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CHILLER.TTF', name='Chiller', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,793 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,795 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAB.TTF', name='Book Antiqua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:20:46,795 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothM.ttc', name='Yu Gothic', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-04-22 10:20:46,796 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG2.TTF', name='Wingdings 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,796 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Nirmala.ttf', name='Nirmala UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,797 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelUIsl.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2023-04-22 10:20:46,798 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriai.ttf', name='Cambria', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:20:46,798 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariali.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
2023-04-22 10:20:46,798 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARA.TTF', name='Garamond', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,798 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSPCL.TTF', name='MS Reference Specialty', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,799 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-REGULAR.TTF', name='Dubai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,799 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LHANDW.TTF', name='Lucida Handwriting', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:20:46,799 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:20:46,801 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comici.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:20:46,801 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTAUR.TTF', name='Centaur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,801 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEBO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-22 10:20:46,802 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ONYX.TTF', name='Onyx', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,802 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrima.ttf', name='Ebrima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,803 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFI.TTF', name='Californian FB', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:20:46,804 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERBI___.TTF', name='Perpetua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 10:20:46,804 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbell.ttf', name='Corbel', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-22 10:20:46,804 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILI____.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:20:46,804 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segmdl2.ttf', name='Segoe MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,805 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-BOLD.TTF', name='Dubai', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:20:46,805 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FELIXTI.TTF', name='Felix Titling', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,805 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbd.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
2023-04-22 10:20:46,806 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taileb.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:20:46,806 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeprb.ttf', name='Segoe Print', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:20:46,806 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoescb.ttf', name='Segoe Script', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:20:46,806 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITE.TTF', name='Lucida Bright', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,808 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhbd.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:20:46,808 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\times.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,808 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisb.ttf', name='Segoe UI', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-22 10:20:46,808 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSDB.TTF', name='Berlin Sans FB Demi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:20:46,809 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbi.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
2023-04-22 10:20:46,809 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesi.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:20:46,810 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADM.TTF', name='Franklin Gothic Demi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,810 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERTI.TTF', name='High Tower Text', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:20:46,810 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF-Italic.ttf', name='Sitka', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:20:46,811 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsun.ttc', name='SimSun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,811 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTI.TTF', name='Calisto MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:20:46,811 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCMI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:20:46,811 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaral.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,813 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\lucon.ttf', name='Lucida Console', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,813 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_I.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:20:46,814 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mvboli.ttf', name='MV Boli', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,814 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiab.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:20:46,814 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\l_10646.ttf', name='Lucida Sans Unicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,814 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTIBD.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:20:46,815 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNT.TTF', name='Elephant', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,815 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASMD.TTF', name='Eras Medium ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,816 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MSUIGHUR.TTF', name='Microsoft Uighur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,816 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYB.TTF', name='Agency FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:20:46,817 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MSUIGHUB.TTF', name='Microsoft Uighur', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:20:46,817 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicbd.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:20:46,817 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMIT.TTF', name='Franklin Gothic Demi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:20:46,818 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKEB.TTF', name='Rockwell Extra Bold', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
2023-04-22 10:20:46,818 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PER_____.TTF', name='Perpetua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,818 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VINERITC.TTF', name='Viner Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,818 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\marlett.ttf', name='Marlett', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-04-22 10:20:46,820 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrili.ttf', name='Calibri', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-04-22 10:20:46,820 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICBI.TTF', name='Century Gothic', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 10:20:46,820 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ALGER.TTF', name='Algerian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,820 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOS.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,821 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelz.ttf', name='Corbel', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 10:20:46,821 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILB____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:20:46,821 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUABI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 10:20:46,822 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\sylfaen.ttf', name='Sylfaen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,822 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriaz.ttf', name='Cambria', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 10:20:46,822 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanaz.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
2023-04-22 10:20:46,823 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constan.ttf', name='Constantia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,823 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTILI.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-22 10:20:46,823 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCM_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,823 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhl.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2023-04-22 10:20:46,824 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOS.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-22 10:20:46,824 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HATTEN.TTF', name='Haettenschweiler', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,824 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JOKERMAN.TTF', name='Jokerman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,824 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ENGR.TTF', name='Engravers MT', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-04-22 10:20:46,825 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARAIT.TTF', name='Garamond', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:20:46,825 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,825 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelli.ttf', name='Corbel', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-04-22 10:20:46,825 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constani.ttf', name='Constantia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:20:46,825 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIST.TTF', name='Calisto MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,826 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PARCHM.TTF', name='Parchment', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,826 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\himalaya.ttf', name='Microsoft Himalaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,826 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRADHITC.TTF', name='Bradley Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,828 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\wingding.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,828 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtextb.ttf', name='Myanmar Text', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:20:46,829 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG3.TTF', name='Wingdings 3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,829 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGSOL.TTF', name='Niagara Solid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,829 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarali.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:20:46,829 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKI.TTF', name='Rockwell', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:20:46,830 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolab.ttf', name='Consolas', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:20:46,830 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXDI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-22 10:20:46,830 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BAUHS93.TTF', name='Bauhaus 93', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,831 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisli.ttf', name='Segoe UI', style='italic', variant='normal', weight=350, stretch='normal', size='scalable')) = 11.0975
2023-04-22 10:20:46,831 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELL.TTF', name='Bell MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,831 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2023-04-22 10:20:46,831 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyi.ttf', name='Microsoft Yi Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,831 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSR.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,832 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHVIT.TTF', name='Franklin Gothic Heavy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:20:46,833 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OLDENGL.TTF', name='Old English Text MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,833 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbel.ttf', name='Corbel', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,833 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLB.TTF', name='Bell MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:20:46,833 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelaUIb.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:20:46,833 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHV.TTF', name='Franklin Gothic Heavy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,834 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OUTLOOK.TTF', name='MS Outlook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,834 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PRISTINA.TTF', name='Pristina', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,834 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERI____.TTF', name='Perpetua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:20:46,836 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtext.ttf', name='Myanmar Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,836 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSAN.TTF', name='MS Reference Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,836 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERB____.TTF', name='Perpetua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:20:46,836 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTEXTRA.TTF', name='MT Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,837 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKB.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:20:46,837 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARABD.TTF', name='Garamond', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:20:46,837 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cour.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,838 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mingliub.ttc', name='MingLiU-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,838 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICB.TTF', name='Century Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:20:46,838 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspa.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,839 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VIVALDII.TTF', name='Vivaldi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:20:46,839 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAGE.TTF', name='Rage Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:20:46,840 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-22 10:20:46,840 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2023-04-22 10:20:46,840 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MATURASC.TTF', name='Matura MT Script Capitals', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,841 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comic.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,841 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbi.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 10:20:46,841 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothR.ttc', name='Yu Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,841 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palai.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:20:46,842 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MOD20.TTF', name='Modern No. 20', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,842 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMCN.TTF', name='Franklin Gothic Demi Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-22 10:20:46,842 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrimabd.ttf', name='Ebrima', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:20:46,843 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\javatext.ttf', name='Javanese Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,843 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CASTELAR.TTF', name='Castellar', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,843 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSDI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-22 10:20:46,843 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelawUI.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,845 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAX.TTF', name='Lucida Fax', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,845 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunbd.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:20:46,845 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF.ttf', name='Sitka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,846 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTL.TTF', name='Copperplate Gothic Light', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,846 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
2023-04-22 10:20:46,846 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeui.ttf', name='Segoe UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,847 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Gabriola.ttf', name='Gabriola', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,847 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTBI.TTF', name='Calisto MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 10:20:46,847 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicz.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 10:20:46,848 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALN.TTF', name='Arial', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 6.613636363636363
2023-04-22 10:20:46,848 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKBI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 10:20:46,848 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FREESCPT.TTF', name='Freestyle Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,849 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTURY.TTF', name='Century', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,849 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaB.ttf', name='Nirmala UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:20:46,850 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSB.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:20:46,850 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSD.TTF', name='Lucida Sans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-22 10:20:46,850 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuisl.ttf', name='Segoe UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2023-04-22 10:20:46,850 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:20:46,852 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 10:20:46,852 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguihis.ttf', name='Segoe UI Historic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,852 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCB____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-04-22 10:20:46,853 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambria.ttc', name='Cambria', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,853 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKBI.TTF', name='Rockwell', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 10:20:46,853 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGENG.TTF', name='Niagara Engraved', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,854 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisym.ttf', name='Segoe UI Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,854 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inkfree.ttf', name='Ink Free', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,854 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASBD.TTF', name='Eras Bold ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,855 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILC____.TTF', name='Gill Sans MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-22 10:20:46,855 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candara.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,855 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\bahnschrift.ttf', name='Bahnschrift', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,856 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BROADW.TTF', name='Broadway', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,856 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolaz.ttf', name='Consolas', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 10:20:46,856 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CBI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2023-04-22 10:20:46,857 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuii.ttf', name='Segoe UI', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:20:46,857 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibli.ttf', name='Segoe UI', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2023-04-22 10:20:46,857 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEDI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-22 10:20:46,858 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucit.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:20:46,858 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BKANT.TTF', name='Book Antiqua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,858 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothL.ttc', name='Yu Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-22 10:20:46,859 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrii.ttf', name='Calibri', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:20:46,859 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CURLZ___.TTF', name='Curlz MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,860 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelb.ttf', name='Corbel', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:20:46,860 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARLRDBD.TTF', name='Arial Rounded MT Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,860 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothB.ttc', name='Yu Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:20:46,861 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASDEMI.TTF', name='Eras Demi ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,861 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
2023-04-22 10:20:46,861 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANS.TTF', name='Lucida Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,862 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariblk.ttf', name='Arial', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 6.888636363636364
2023-04-22 10:20:46,862 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCKRIST.TTF', name='Kristen ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,862 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\KUNSTLER.TTF', name='Kunstler Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,863 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanb.ttf', name='Constantia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:20:46,863 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PAPYRUS.TTF', name='Papyrus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,863 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JUICE___.TTF', name='Juice ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,863 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguili.ttf', name='Segoe UI', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-04-22 10:20:46,865 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:20:46,865 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarab.ttf', name='Candara', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:20:46,866 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\IMPRISHA.TTF', name='Imprint MT Shadow', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,866 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailu.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,866 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbi.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 10:20:46,867 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuil.ttf', name='Segoe UI', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-22 10:20:46,867 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanai.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
2023-04-22 10:20:46,867 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoepr.ttf', name='Segoe Print', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,868 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaraz.ttf', name='Candara', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 10:20:46,868 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNB.TTF', name='Arial', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 6.8986363636363635
2023-04-22 10:20:46,868 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspab.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:20:46,869 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,869 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCM____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-22 10:20:46,869 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARNGTON.TTF', name='Harrington', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,870 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbd.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:20:46,870 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:20:46,870 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILSANUB.TTF', name='Gill Sans Ultra Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,870 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibri.ttf', name='Calibri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,871 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiaz.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 10:20:46,871 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegoeIcons.ttf', name='Segoe Fluent Icons', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,872 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAGNETOB.TTF', name='Magneto', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:20:46,872 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICI.TTF', name='Century Gothic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:20:46,872 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCBLKAD.TTF', name='Blackadder ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,873 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahomabd.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:20:46,873 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugi.ttf', name='Gadugi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,873 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LCALLIG.TTF', name='Lucida Calligraphy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:20:46,874 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyh.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,874 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsunb.ttf', name='SimSun-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,874 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgun.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,875 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIL_____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,875 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VLADIMIR.TTF', name='Vladimir Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,875 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,876 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msgothic.ttc', name='MS Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,876 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRSCRIPT.TTF', name='French Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,876 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILBI___.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 10:20:46,877 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASLGHT.TTF', name='Eras Light ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,877 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTB.TTF', name='Calisto MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:20:46,877 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunsl.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-22 10:20:46,879 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRUSHSCI.TTF', name='Brush Script MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:20:46,879 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SNAP____.TTF', name='Snap ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,879 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuib.ttf', name='Segoe UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:20:46,880 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCBI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 10:20:46,880 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailub.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:20:46,880 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framd.ttf', name='Franklin Gothic Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,880 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolai.ttf', name='Consolas', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:20:46,881 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCEB.TTF', name='Tw Cen MT Condensed Extra Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-22 10:20:46,881 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\POORICH.TTF', name='Poor Richard', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,882 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDYSTO.TTF', name='Goudy Stout', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,882 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKB.TTF', name='Rockwell', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:20:46,882 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PALSCRI.TTF', name='Palace Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,883 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarai.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:20:46,883 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\micross.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,884 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LEELAWDB.TTF', name='Leelawadee', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:20:46,884 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABK.TTF', name='Franklin Gothic Book', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,884 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjh.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,885 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palabi.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 10:20:46,885 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAVIE.TTF', name='Ravie', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,885 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCK.TTF', name='Rockwell', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,886 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\pala.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,886 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibriz.ttf', name='Calibri', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 10:20:46,887 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugib.ttf', name='Gadugi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:20:46,887 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_PSTC.TTF', name='Bodoni MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-22 10:20:46,887 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENSCBK.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,888 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanab.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
2023-04-22 10:20:46,888 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LATINWD.TTF', name='Wide Latin', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
2023-04-22 10:20:46,888 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbeli.ttf', name='Corbel', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:20:46,889 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIGI.TTF', name='Gigi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,889 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITED.TTF', name='Lucida Bright', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-22 10:20:46,890 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbi.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 10:20:46,890 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhl.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2023-04-22 10:20:46,891 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguiemj.ttf', name='Segoe UI Emoji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,891 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OCRAEXT.TTF', name='OCR A Extended', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
2023-04-22 10:20:46,891 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebuc.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,891 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SHOWG.TTF', name='Showcard Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,893 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BASKVILL.TTF', name='Baskerville Old Face', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,893 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriab.ttf', name='Cambria', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:20:46,893 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAIAN.TTF', name='Maiandra GD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,894 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCRIPTBL.TTF', name='Script MT Bold', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:20:46,894 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLECB.TTF', name='Gloucester MT Extra Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-22 10:20:46,894 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNTI.TTF', name='Elephant', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:20:46,894 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFR.TTF', name='Californian FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,895 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHIC.TTF', name='Century Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,895 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PLAYBILL.TTF', name='Playbill', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,895 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABKIT.TTF', name='Franklin Gothic Book', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:20:46,896 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARLOWSI.TTF', name='Harlow Solid Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:20:46,896 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPE.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,896 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taile.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,897 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibl.ttf', name='Segoe UI', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2023-04-22 10:20:46,897 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNBI.TTF', name='Arial', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 7.8986363636363635
2023-04-22 10:20:46,898 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuiz.ttf', name='Segoe UI', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 10:20:46,898 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSBI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-22 10:20:46,898 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palab.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:20:46,899 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLI.TTF', name='Bell MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:20:46,899 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILLUBCD.TTF', name='Gill Sans Ultra Bold Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-22 10:20:46,899 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbd.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:20:46,900 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhbd.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:20:46,900 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoesc.ttf', name='Segoe Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,900 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\couri.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:20:46,901 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegUIVar.ttf', name='Segoe UI Variable', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,901 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_R.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,901 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTB.TTF', name='Copperplate Gothic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,902 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:20:46,902 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCB_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:20:46,902 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TEMPSITC.TTF', name='Tempus Sans ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,903 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MISTRAL.TTF', name='Mistral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,903 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FORTE.TTF', name='Forte', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,903 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CB.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-04-22 10:20:46,904 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbd.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:20:46,904 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STENCIL.TTF', name='Stencil', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,904 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrib.ttf', name='Calibri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:20:46,905 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERT.TTF', name='High Tower Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,905 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTCORSVA.TTF', name='Monotype Corsiva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:20:46,906 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFB.TTF', name='Californian FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:20:46,906 [12652] DEBUG    matplotlib.font_manager:1367: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
2023-04-22 10:21:51,063 [12652] DEBUG    matplotlib.font_manager:1329: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
2023-04-22 10:21:51,064 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 10:21:51,064 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 10:21:51,064 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,064 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2023-04-22 10:21:51,066 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2023-04-22 10:21:51,066 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:21:51,067 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:21:51,067 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:21:51,067 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,068 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 10:21:51,068 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,068 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:21:51,069 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,069 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,069 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,070 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:21:51,070 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:21:51,070 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,070 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,071 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2023-04-22 10:21:51,071 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,071 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,072 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 10:21:51,072 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:21:51,072 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:21:51,073 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,073 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,073 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:21:51,073 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:21:51,075 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,075 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,075 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,076 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:21:51,076 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,076 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:21:51,077 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,077 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,077 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2023-04-22 10:21:51,078 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLSNECB.TTF', name='Gill Sans MT Ext Condensed Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-22 10:21:51,078 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanz.ttf', name='Constantia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 10:21:51,078 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LEELAWAD.TTF', name='Leelawadee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,079 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\monbaiti.ttf', name='Mongolian Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,079 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-MEDIUM.TTF', name='Dubai', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-04-22 10:21:51,079 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-04-22 10:21:51,080 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FTLTLT.TTF', name='Footlight MT Light', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-22 10:21:51,080 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibril.ttf', name='Calibri', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-22 10:21:51,080 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSI.TTF', name='Goudy Old Style', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:21:51,081 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisbi.ttf', name='Segoe UI', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-22 10:21:51,081 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCCB___.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-04-22 10:21:51,081 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXD.TTF', name='Lucida Fax', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-22 10:21:51,082 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2023-04-22 10:21:51,082 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BSSYM7.TTF', name='Bookshelf Symbol 7', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,083 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAMDCN.TTF', name='Franklin Gothic Medium Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-22 10:21:51,083 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framdit.ttf', name='Franklin Gothic Medium', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:21:51,083 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSB.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:21:51,084 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-LIGHT.TTF', name='Dubai', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-22 10:21:51,084 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCC____.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-22 10:21:51,086 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_B.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:21:51,086 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COOPBL.TTF', name='Cooper Black', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,087 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNI.TTF', name='Arial', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 7.613636363636363
2023-04-22 10:21:51,087 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\INFROMAN.TTF', name='Informal Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,088 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSB.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-22 10:21:51,088 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BERNHC.TTF', name='Bernard MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-22 10:21:51,088 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEB.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-22 10:21:51,089 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCEDSCR.TTF', name='Edwardian Script ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,089 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consola.ttf', name='Consolas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,089 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,089 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\holomdl2.ttf', name='HoloLens MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,091 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COLONNA.TTF', name='Colonna MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,091 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYR.TTF', name='Agency FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,092 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRITANIC.TTF', name='Britannic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,092 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiai.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:21:51,092 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:21:51,093 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaS.ttf', name='Nirmala UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2023-04-22 10:21:51,093 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CHILLER.TTF', name='Chiller', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,094 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,094 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAB.TTF', name='Book Antiqua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:21:51,095 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothM.ttc', name='Yu Gothic', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-04-22 10:21:51,095 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG2.TTF', name='Wingdings 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,096 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Nirmala.ttf', name='Nirmala UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,096 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelUIsl.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2023-04-22 10:21:51,096 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriai.ttf', name='Cambria', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:21:51,096 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariali.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
2023-04-22 10:21:51,097 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARA.TTF', name='Garamond', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,097 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSPCL.TTF', name='MS Reference Specialty', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,098 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-REGULAR.TTF', name='Dubai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,098 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LHANDW.TTF', name='Lucida Handwriting', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:21:51,098 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:21:51,099 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comici.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:21:51,099 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTAUR.TTF', name='Centaur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,100 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEBO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-22 10:21:51,100 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ONYX.TTF', name='Onyx', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,101 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrima.ttf', name='Ebrima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,101 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFI.TTF', name='Californian FB', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:21:51,101 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERBI___.TTF', name='Perpetua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 10:21:51,102 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbell.ttf', name='Corbel', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-22 10:21:51,102 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILI____.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:21:51,102 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segmdl2.ttf', name='Segoe MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,103 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-BOLD.TTF', name='Dubai', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:21:51,103 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FELIXTI.TTF', name='Felix Titling', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,104 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbd.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
2023-04-22 10:21:51,104 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taileb.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:21:51,104 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeprb.ttf', name='Segoe Print', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:21:51,105 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoescb.ttf', name='Segoe Script', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:21:51,105 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITE.TTF', name='Lucida Bright', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,106 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhbd.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:21:51,106 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\times.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,106 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisb.ttf', name='Segoe UI', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-22 10:21:51,107 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSDB.TTF', name='Berlin Sans FB Demi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:21:51,107 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbi.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
2023-04-22 10:21:51,107 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesi.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:21:51,108 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADM.TTF', name='Franklin Gothic Demi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,109 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERTI.TTF', name='High Tower Text', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:21:51,109 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF-Italic.ttf', name='Sitka', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:21:51,110 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsun.ttc', name='SimSun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,110 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTI.TTF', name='Calisto MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:21:51,110 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCMI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:21:51,112 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaral.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,112 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\lucon.ttf', name='Lucida Console', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,112 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_I.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:21:51,112 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mvboli.ttf', name='MV Boli', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,113 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiab.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:21:51,113 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\l_10646.ttf', name='Lucida Sans Unicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,113 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTIBD.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:21:51,114 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNT.TTF', name='Elephant', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,114 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASMD.TTF', name='Eras Medium ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,114 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MSUIGHUR.TTF', name='Microsoft Uighur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,116 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYB.TTF', name='Agency FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:21:51,116 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MSUIGHUB.TTF', name='Microsoft Uighur', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:21:51,117 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicbd.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:21:51,117 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMIT.TTF', name='Franklin Gothic Demi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:21:51,118 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKEB.TTF', name='Rockwell Extra Bold', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
2023-04-22 10:21:51,118 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PER_____.TTF', name='Perpetua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,118 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VINERITC.TTF', name='Viner Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,119 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\marlett.ttf', name='Marlett', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-04-22 10:21:51,119 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrili.ttf', name='Calibri', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-04-22 10:21:51,119 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICBI.TTF', name='Century Gothic', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 10:21:51,120 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ALGER.TTF', name='Algerian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,120 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOS.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,120 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelz.ttf', name='Corbel', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 10:21:51,120 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILB____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:21:51,122 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUABI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 10:21:51,122 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\sylfaen.ttf', name='Sylfaen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,122 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriaz.ttf', name='Cambria', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 10:21:51,122 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanaz.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
2023-04-22 10:21:51,123 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constan.ttf', name='Constantia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,123 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTILI.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-22 10:21:51,123 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCM_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,124 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhl.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2023-04-22 10:21:51,124 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOS.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-22 10:21:51,124 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HATTEN.TTF', name='Haettenschweiler', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,125 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JOKERMAN.TTF', name='Jokerman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,125 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ENGR.TTF', name='Engravers MT', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-04-22 10:21:51,125 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARAIT.TTF', name='Garamond', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:21:51,126 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,126 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelli.ttf', name='Corbel', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-04-22 10:21:51,126 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constani.ttf', name='Constantia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:21:51,127 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIST.TTF', name='Calisto MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,127 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PARCHM.TTF', name='Parchment', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,128 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\himalaya.ttf', name='Microsoft Himalaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,128 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRADHITC.TTF', name='Bradley Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,128 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\wingding.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,129 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtextb.ttf', name='Myanmar Text', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:21:51,129 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG3.TTF', name='Wingdings 3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,129 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGSOL.TTF', name='Niagara Solid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,130 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarali.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:21:51,130 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKI.TTF', name='Rockwell', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:21:51,130 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolab.ttf', name='Consolas', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:21:51,131 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXDI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-22 10:21:51,132 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BAUHS93.TTF', name='Bauhaus 93', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,132 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisli.ttf', name='Segoe UI', style='italic', variant='normal', weight=350, stretch='normal', size='scalable')) = 11.0975
2023-04-22 10:21:51,132 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELL.TTF', name='Bell MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,134 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2023-04-22 10:21:51,134 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyi.ttf', name='Microsoft Yi Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,134 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSR.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,134 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHVIT.TTF', name='Franklin Gothic Heavy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:21:51,135 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OLDENGL.TTF', name='Old English Text MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,135 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbel.ttf', name='Corbel', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,135 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLB.TTF', name='Bell MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:21:51,136 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelaUIb.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:21:51,136 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHV.TTF', name='Franklin Gothic Heavy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,136 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OUTLOOK.TTF', name='MS Outlook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,136 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PRISTINA.TTF', name='Pristina', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,137 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERI____.TTF', name='Perpetua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:21:51,137 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtext.ttf', name='Myanmar Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,137 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSAN.TTF', name='MS Reference Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,137 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERB____.TTF', name='Perpetua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:21:51,139 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTEXTRA.TTF', name='MT Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,139 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKB.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:21:51,139 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARABD.TTF', name='Garamond', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:21:51,139 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cour.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,139 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mingliub.ttc', name='MingLiU-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,140 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICB.TTF', name='Century Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:21:51,140 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspa.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,140 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VIVALDII.TTF', name='Vivaldi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:21:51,140 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAGE.TTF', name='Rage Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:21:51,141 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-22 10:21:51,141 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2023-04-22 10:21:51,141 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MATURASC.TTF', name='Matura MT Script Capitals', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,141 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comic.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,142 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbi.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 10:21:51,142 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothR.ttc', name='Yu Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,142 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palai.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:21:51,142 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MOD20.TTF', name='Modern No. 20', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,143 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMCN.TTF', name='Franklin Gothic Demi Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-22 10:21:51,143 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrimabd.ttf', name='Ebrima', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:21:51,143 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\javatext.ttf', name='Javanese Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,143 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CASTELAR.TTF', name='Castellar', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,145 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSDI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-22 10:21:51,145 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelawUI.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,145 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAX.TTF', name='Lucida Fax', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,145 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunbd.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:21:51,146 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF.ttf', name='Sitka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,146 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTL.TTF', name='Copperplate Gothic Light', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,146 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
2023-04-22 10:21:51,146 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeui.ttf', name='Segoe UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,147 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Gabriola.ttf', name='Gabriola', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,147 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTBI.TTF', name='Calisto MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 10:21:51,148 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicz.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 10:21:51,148 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALN.TTF', name='Arial', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 6.613636363636363
2023-04-22 10:21:51,148 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKBI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 10:21:51,148 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FREESCPT.TTF', name='Freestyle Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,149 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTURY.TTF', name='Century', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,149 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaB.ttf', name='Nirmala UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:21:51,149 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSB.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:21:51,150 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSD.TTF', name='Lucida Sans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-22 10:21:51,150 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuisl.ttf', name='Segoe UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2023-04-22 10:21:51,150 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:21:51,151 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 10:21:51,151 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguihis.ttf', name='Segoe UI Historic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,151 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCB____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-04-22 10:21:51,153 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambria.ttc', name='Cambria', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,153 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKBI.TTF', name='Rockwell', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 10:21:51,153 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGENG.TTF', name='Niagara Engraved', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,153 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisym.ttf', name='Segoe UI Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,154 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inkfree.ttf', name='Ink Free', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,154 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASBD.TTF', name='Eras Bold ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,154 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILC____.TTF', name='Gill Sans MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-22 10:21:51,154 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candara.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,155 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\bahnschrift.ttf', name='Bahnschrift', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,155 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BROADW.TTF', name='Broadway', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,155 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolaz.ttf', name='Consolas', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 10:21:51,155 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CBI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2023-04-22 10:21:51,155 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuii.ttf', name='Segoe UI', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:21:51,157 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibli.ttf', name='Segoe UI', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2023-04-22 10:21:51,157 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEDI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-22 10:21:51,157 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucit.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:21:51,158 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BKANT.TTF', name='Book Antiqua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,158 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothL.ttc', name='Yu Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-22 10:21:51,158 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrii.ttf', name='Calibri', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:21:51,158 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CURLZ___.TTF', name='Curlz MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,159 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelb.ttf', name='Corbel', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:21:51,159 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARLRDBD.TTF', name='Arial Rounded MT Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,159 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothB.ttc', name='Yu Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:21:51,160 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASDEMI.TTF', name='Eras Demi ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,160 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
2023-04-22 10:21:51,161 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANS.TTF', name='Lucida Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,161 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariblk.ttf', name='Arial', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 6.888636363636364
2023-04-22 10:21:51,161 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCKRIST.TTF', name='Kristen ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,162 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\KUNSTLER.TTF', name='Kunstler Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,162 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanb.ttf', name='Constantia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:21:51,162 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PAPYRUS.TTF', name='Papyrus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,162 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JUICE___.TTF', name='Juice ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,163 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguili.ttf', name='Segoe UI', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-04-22 10:21:51,164 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:21:51,164 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarab.ttf', name='Candara', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:21:51,164 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\IMPRISHA.TTF', name='Imprint MT Shadow', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,165 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailu.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,165 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbi.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 10:21:51,166 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuil.ttf', name='Segoe UI', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-22 10:21:51,166 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanai.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
2023-04-22 10:21:51,166 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoepr.ttf', name='Segoe Print', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,167 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaraz.ttf', name='Candara', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 10:21:51,167 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNB.TTF', name='Arial', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 6.8986363636363635
2023-04-22 10:21:51,167 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspab.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:21:51,168 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,168 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCM____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-22 10:21:51,168 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARNGTON.TTF', name='Harrington', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,169 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbd.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:21:51,169 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:21:51,170 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILSANUB.TTF', name='Gill Sans Ultra Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,170 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibri.ttf', name='Calibri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,170 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiaz.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 10:21:51,171 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegoeIcons.ttf', name='Segoe Fluent Icons', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,171 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAGNETOB.TTF', name='Magneto', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:21:51,171 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICI.TTF', name='Century Gothic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:21:51,172 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCBLKAD.TTF', name='Blackadder ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,172 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahomabd.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:21:51,172 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugi.ttf', name='Gadugi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,173 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LCALLIG.TTF', name='Lucida Calligraphy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:21:51,173 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyh.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,174 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsunb.ttf', name='SimSun-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,174 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgun.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,174 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIL_____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,175 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VLADIMIR.TTF', name='Vladimir Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,175 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,175 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msgothic.ttc', name='MS Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,175 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRSCRIPT.TTF', name='French Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,176 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILBI___.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 10:21:51,176 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASLGHT.TTF', name='Eras Light ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,176 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTB.TTF', name='Calisto MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:21:51,177 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunsl.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-22 10:21:51,177 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRUSHSCI.TTF', name='Brush Script MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:21:51,177 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SNAP____.TTF', name='Snap ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,178 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuib.ttf', name='Segoe UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:21:51,178 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCBI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 10:21:51,179 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailub.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:21:51,179 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framd.ttf', name='Franklin Gothic Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,179 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolai.ttf', name='Consolas', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:21:51,180 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCEB.TTF', name='Tw Cen MT Condensed Extra Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-22 10:21:51,180 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\POORICH.TTF', name='Poor Richard', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,180 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDYSTO.TTF', name='Goudy Stout', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,181 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKB.TTF', name='Rockwell', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:21:51,181 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PALSCRI.TTF', name='Palace Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,181 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarai.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:21:51,181 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\micross.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,183 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LEELAWDB.TTF', name='Leelawadee', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:21:51,183 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABK.TTF', name='Franklin Gothic Book', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,183 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjh.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,184 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palabi.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 10:21:51,184 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAVIE.TTF', name='Ravie', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,184 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCK.TTF', name='Rockwell', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,185 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\pala.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,185 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibriz.ttf', name='Calibri', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 10:21:51,185 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugib.ttf', name='Gadugi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:21:51,186 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_PSTC.TTF', name='Bodoni MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-22 10:21:51,186 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENSCBK.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,186 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanab.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
2023-04-22 10:21:51,187 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LATINWD.TTF', name='Wide Latin', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
2023-04-22 10:21:51,187 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbeli.ttf', name='Corbel', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:21:51,187 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIGI.TTF', name='Gigi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,188 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITED.TTF', name='Lucida Bright', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-22 10:21:51,188 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbi.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 10:21:51,189 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhl.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2023-04-22 10:21:51,189 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguiemj.ttf', name='Segoe UI Emoji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,189 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OCRAEXT.TTF', name='OCR A Extended', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
2023-04-22 10:21:51,189 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebuc.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,190 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SHOWG.TTF', name='Showcard Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,190 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BASKVILL.TTF', name='Baskerville Old Face', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,190 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriab.ttf', name='Cambria', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:21:51,191 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAIAN.TTF', name='Maiandra GD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,191 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCRIPTBL.TTF', name='Script MT Bold', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:21:51,191 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLECB.TTF', name='Gloucester MT Extra Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-22 10:21:51,191 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNTI.TTF', name='Elephant', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:21:51,193 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFR.TTF', name='Californian FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,193 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHIC.TTF', name='Century Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,193 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PLAYBILL.TTF', name='Playbill', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,194 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABKIT.TTF', name='Franklin Gothic Book', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:21:51,194 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARLOWSI.TTF', name='Harlow Solid Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:21:51,195 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPE.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,195 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taile.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,195 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibl.ttf', name='Segoe UI', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2023-04-22 10:21:51,196 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNBI.TTF', name='Arial', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 7.8986363636363635
2023-04-22 10:21:51,196 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuiz.ttf', name='Segoe UI', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 10:21:51,197 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSBI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-22 10:21:51,197 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palab.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:21:51,197 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLI.TTF', name='Bell MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:21:51,198 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILLUBCD.TTF', name='Gill Sans Ultra Bold Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-22 10:21:51,198 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbd.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:21:51,198 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhbd.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:21:51,199 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoesc.ttf', name='Segoe Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,199 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\couri.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:21:51,200 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegUIVar.ttf', name='Segoe UI Variable', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,200 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_R.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,200 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTB.TTF', name='Copperplate Gothic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,201 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:21:51,201 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCB_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:21:51,201 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TEMPSITC.TTF', name='Tempus Sans ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,202 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MISTRAL.TTF', name='Mistral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,202 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FORTE.TTF', name='Forte', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,203 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CB.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-04-22 10:21:51,203 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbd.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:21:51,203 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STENCIL.TTF', name='Stencil', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,204 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrib.ttf', name='Calibri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:21:51,204 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERT.TTF', name='High Tower Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,204 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTCORSVA.TTF', name='Monotype Corsiva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,205 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFB.TTF', name='Californian FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:21:51,205 [12652] DEBUG    matplotlib.font_manager:1367: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to DejaVu Sans ('C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
2023-04-22 10:21:51,213 [12652] DEBUG    matplotlib.font_manager:1329: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2023-04-22 10:21:51,214 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 10:21:51,214 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 10:21:51,215 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,215 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2023-04-22 10:21:51,215 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2023-04-22 10:21:51,216 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:21:51,216 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:21:51,216 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:21:51,217 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,217 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 10:21:51,217 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,218 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:21:51,218 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,218 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,219 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,219 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:21:51,220 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:21:51,220 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,220 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,220 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2023-04-22 10:21:51,220 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,222 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,222 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 10:21:51,223 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:21:51,223 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:21:51,223 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,224 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,224 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:21:51,224 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:21:51,225 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,225 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,226 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,226 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:21:51,227 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,227 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:21:51,227 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,228 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,228 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2023-04-22 10:21:51,228 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLSNECB.TTF', name='Gill Sans MT Ext Condensed Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-22 10:21:51,228 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanz.ttf', name='Constantia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 10:21:51,229 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LEELAWAD.TTF', name='Leelawadee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,229 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\monbaiti.ttf', name='Mongolian Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,229 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-MEDIUM.TTF', name='Dubai', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-04-22 10:21:51,229 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-04-22 10:21:51,231 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FTLTLT.TTF', name='Footlight MT Light', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-22 10:21:51,231 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibril.ttf', name='Calibri', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-22 10:21:51,231 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSI.TTF', name='Goudy Old Style', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:21:51,231 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisbi.ttf', name='Segoe UI', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-22 10:21:51,232 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCCB___.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-04-22 10:21:51,232 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXD.TTF', name='Lucida Fax', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-22 10:21:51,232 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2023-04-22 10:21:51,232 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BSSYM7.TTF', name='Bookshelf Symbol 7', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,234 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAMDCN.TTF', name='Franklin Gothic Medium Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-22 10:21:51,234 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framdit.ttf', name='Franklin Gothic Medium', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:21:51,234 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSB.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:21:51,235 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-LIGHT.TTF', name='Dubai', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-22 10:21:51,235 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCC____.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-22 10:21:51,235 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_B.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:21:51,235 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COOPBL.TTF', name='Cooper Black', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,236 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNI.TTF', name='Arial', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 7.613636363636363
2023-04-22 10:21:51,236 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\INFROMAN.TTF', name='Informal Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,236 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSB.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-22 10:21:51,236 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BERNHC.TTF', name='Bernard MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-22 10:21:51,237 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEB.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-22 10:21:51,237 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCEDSCR.TTF', name='Edwardian Script ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,237 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consola.ttf', name='Consolas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,237 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,239 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\holomdl2.ttf', name='HoloLens MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,239 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COLONNA.TTF', name='Colonna MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,239 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYR.TTF', name='Agency FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,239 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRITANIC.TTF', name='Britannic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,240 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiai.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:21:51,240 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:21:51,241 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaS.ttf', name='Nirmala UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2023-04-22 10:21:51,241 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CHILLER.TTF', name='Chiller', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,242 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,242 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAB.TTF', name='Book Antiqua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:21:51,242 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothM.ttc', name='Yu Gothic', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-04-22 10:21:51,243 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG2.TTF', name='Wingdings 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,243 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Nirmala.ttf', name='Nirmala UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,243 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelUIsl.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2023-04-22 10:21:51,244 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriai.ttf', name='Cambria', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:21:51,244 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariali.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
2023-04-22 10:21:51,245 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARA.TTF', name='Garamond', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,245 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSPCL.TTF', name='MS Reference Specialty', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,245 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-REGULAR.TTF', name='Dubai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,246 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LHANDW.TTF', name='Lucida Handwriting', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:21:51,246 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:21:51,246 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comici.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:21:51,247 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTAUR.TTF', name='Centaur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,247 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEBO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-22 10:21:51,247 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ONYX.TTF', name='Onyx', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,248 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrima.ttf', name='Ebrima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,248 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFI.TTF', name='Californian FB', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:21:51,248 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERBI___.TTF', name='Perpetua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 10:21:51,249 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbell.ttf', name='Corbel', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-22 10:21:51,249 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILI____.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:21:51,250 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segmdl2.ttf', name='Segoe MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,250 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-BOLD.TTF', name='Dubai', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:21:51,250 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FELIXTI.TTF', name='Felix Titling', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,251 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbd.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
2023-04-22 10:21:51,251 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taileb.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:21:51,251 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeprb.ttf', name='Segoe Print', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:21:51,252 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoescb.ttf', name='Segoe Script', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:21:51,252 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITE.TTF', name='Lucida Bright', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,252 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhbd.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:21:51,253 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\times.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,253 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisb.ttf', name='Segoe UI', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-22 10:21:51,253 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSDB.TTF', name='Berlin Sans FB Demi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:21:51,254 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbi.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
2023-04-22 10:21:51,254 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesi.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:21:51,254 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADM.TTF', name='Franklin Gothic Demi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,255 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERTI.TTF', name='High Tower Text', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:21:51,255 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF-Italic.ttf', name='Sitka', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:21:51,255 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsun.ttc', name='SimSun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,256 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTI.TTF', name='Calisto MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:21:51,257 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCMI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:21:51,257 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaral.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,257 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\lucon.ttf', name='Lucida Console', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,257 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_I.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:21:51,259 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mvboli.ttf', name='MV Boli', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,259 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiab.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:21:51,259 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\l_10646.ttf', name='Lucida Sans Unicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,260 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTIBD.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:21:51,260 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNT.TTF', name='Elephant', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,260 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASMD.TTF', name='Eras Medium ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,260 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MSUIGHUR.TTF', name='Microsoft Uighur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,261 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYB.TTF', name='Agency FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:21:51,261 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MSUIGHUB.TTF', name='Microsoft Uighur', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:21:51,261 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicbd.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:21:51,263 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMIT.TTF', name='Franklin Gothic Demi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:21:51,263 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKEB.TTF', name='Rockwell Extra Bold', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
2023-04-22 10:21:51,263 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PER_____.TTF', name='Perpetua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,263 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VINERITC.TTF', name='Viner Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,263 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\marlett.ttf', name='Marlett', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-04-22 10:21:51,264 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrili.ttf', name='Calibri', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-04-22 10:21:51,264 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICBI.TTF', name='Century Gothic', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 10:21:51,264 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ALGER.TTF', name='Algerian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,264 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOS.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,266 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelz.ttf', name='Corbel', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 10:21:51,266 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILB____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:21:51,266 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUABI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 10:21:51,266 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\sylfaen.ttf', name='Sylfaen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,267 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriaz.ttf', name='Cambria', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 10:21:51,267 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanaz.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
2023-04-22 10:21:51,267 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constan.ttf', name='Constantia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,268 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTILI.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-22 10:21:51,268 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCM_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,268 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhl.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2023-04-22 10:21:51,269 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOS.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-22 10:21:51,269 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HATTEN.TTF', name='Haettenschweiler', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,269 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JOKERMAN.TTF', name='Jokerman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,270 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ENGR.TTF', name='Engravers MT', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-04-22 10:21:51,270 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARAIT.TTF', name='Garamond', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:21:51,270 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,272 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelli.ttf', name='Corbel', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-04-22 10:21:51,273 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constani.ttf', name='Constantia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:21:51,273 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIST.TTF', name='Calisto MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,273 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PARCHM.TTF', name='Parchment', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,274 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\himalaya.ttf', name='Microsoft Himalaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,274 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRADHITC.TTF', name='Bradley Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,274 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\wingding.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,275 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtextb.ttf', name='Myanmar Text', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:21:51,275 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG3.TTF', name='Wingdings 3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,275 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGSOL.TTF', name='Niagara Solid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,275 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarali.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:21:51,276 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKI.TTF', name='Rockwell', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:21:51,276 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolab.ttf', name='Consolas', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:21:51,276 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXDI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-22 10:21:51,277 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BAUHS93.TTF', name='Bauhaus 93', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,277 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisli.ttf', name='Segoe UI', style='italic', variant='normal', weight=350, stretch='normal', size='scalable')) = 11.0975
2023-04-22 10:21:51,278 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELL.TTF', name='Bell MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,278 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2023-04-22 10:21:51,278 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyi.ttf', name='Microsoft Yi Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,279 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSR.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,279 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHVIT.TTF', name='Franklin Gothic Heavy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:21:51,279 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OLDENGL.TTF', name='Old English Text MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,281 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbel.ttf', name='Corbel', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,281 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLB.TTF', name='Bell MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:21:51,281 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelaUIb.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:21:51,282 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHV.TTF', name='Franklin Gothic Heavy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,282 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OUTLOOK.TTF', name='MS Outlook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,282 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PRISTINA.TTF', name='Pristina', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,283 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERI____.TTF', name='Perpetua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:21:51,283 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtext.ttf', name='Myanmar Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,283 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSAN.TTF', name='MS Reference Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,284 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERB____.TTF', name='Perpetua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:21:51,284 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTEXTRA.TTF', name='MT Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,284 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKB.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:21:51,285 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARABD.TTF', name='Garamond', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:21:51,285 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cour.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,285 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mingliub.ttc', name='MingLiU-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,286 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICB.TTF', name='Century Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:21:51,286 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspa.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,287 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VIVALDII.TTF', name='Vivaldi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:21:51,287 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAGE.TTF', name='Rage Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:21:51,287 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-22 10:21:51,288 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2023-04-22 10:21:51,289 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MATURASC.TTF', name='Matura MT Script Capitals', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,289 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comic.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,289 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbi.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 10:21:51,290 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothR.ttc', name='Yu Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,290 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palai.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:21:51,291 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MOD20.TTF', name='Modern No. 20', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,291 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMCN.TTF', name='Franklin Gothic Demi Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-22 10:21:51,291 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrimabd.ttf', name='Ebrima', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:21:51,291 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\javatext.ttf', name='Javanese Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,292 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CASTELAR.TTF', name='Castellar', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,292 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSDI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-22 10:21:51,293 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelawUI.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,293 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAX.TTF', name='Lucida Fax', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,293 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunbd.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:21:51,294 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF.ttf', name='Sitka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,294 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTL.TTF', name='Copperplate Gothic Light', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,294 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
2023-04-22 10:21:51,295 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeui.ttf', name='Segoe UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,295 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Gabriola.ttf', name='Gabriola', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,296 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTBI.TTF', name='Calisto MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 10:21:51,296 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicz.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 10:21:51,296 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALN.TTF', name='Arial', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 6.613636363636363
2023-04-22 10:21:51,297 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKBI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 10:21:51,297 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FREESCPT.TTF', name='Freestyle Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,297 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTURY.TTF', name='Century', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,297 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaB.ttf', name='Nirmala UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:21:51,298 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSB.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:21:51,298 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSD.TTF', name='Lucida Sans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-22 10:21:51,298 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuisl.ttf', name='Segoe UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2023-04-22 10:21:51,298 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:21:51,300 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 10:21:51,300 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguihis.ttf', name='Segoe UI Historic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,300 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCB____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-04-22 10:21:51,301 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambria.ttc', name='Cambria', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,301 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKBI.TTF', name='Rockwell', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 10:21:51,302 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGENG.TTF', name='Niagara Engraved', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,302 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisym.ttf', name='Segoe UI Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,302 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inkfree.ttf', name='Ink Free', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,302 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASBD.TTF', name='Eras Bold ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,303 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILC____.TTF', name='Gill Sans MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-22 10:21:51,304 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candara.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,304 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\bahnschrift.ttf', name='Bahnschrift', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,304 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BROADW.TTF', name='Broadway', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,305 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolaz.ttf', name='Consolas', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 10:21:51,305 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CBI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2023-04-22 10:21:51,305 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuii.ttf', name='Segoe UI', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:21:51,305 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibli.ttf', name='Segoe UI', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2023-04-22 10:21:51,305 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEDI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-22 10:21:51,307 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucit.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:21:51,307 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BKANT.TTF', name='Book Antiqua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,307 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothL.ttc', name='Yu Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-22 10:21:51,308 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrii.ttf', name='Calibri', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:21:51,308 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CURLZ___.TTF', name='Curlz MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,308 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelb.ttf', name='Corbel', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:21:51,309 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARLRDBD.TTF', name='Arial Rounded MT Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,309 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothB.ttc', name='Yu Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:21:51,309 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASDEMI.TTF', name='Eras Demi ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,310 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
2023-04-22 10:21:51,310 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANS.TTF', name='Lucida Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,310 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariblk.ttf', name='Arial', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 6.888636363636364
2023-04-22 10:21:51,310 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCKRIST.TTF', name='Kristen ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,311 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\KUNSTLER.TTF', name='Kunstler Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,311 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanb.ttf', name='Constantia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:21:51,311 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PAPYRUS.TTF', name='Papyrus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,312 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JUICE___.TTF', name='Juice ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,312 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguili.ttf', name='Segoe UI', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-04-22 10:21:51,312 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:21:51,312 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarab.ttf', name='Candara', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:21:51,313 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\IMPRISHA.TTF', name='Imprint MT Shadow', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,313 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailu.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,313 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbi.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 10:21:51,314 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuil.ttf', name='Segoe UI', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-22 10:21:51,314 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanai.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
2023-04-22 10:21:51,314 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoepr.ttf', name='Segoe Print', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,314 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaraz.ttf', name='Candara', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 10:21:51,315 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNB.TTF', name='Arial', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 6.8986363636363635
2023-04-22 10:21:51,315 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspab.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:21:51,315 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,315 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCM____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-22 10:21:51,316 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARNGTON.TTF', name='Harrington', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,316 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbd.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:21:51,316 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:21:51,317 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILSANUB.TTF', name='Gill Sans Ultra Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,317 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibri.ttf', name='Calibri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,317 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiaz.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 10:21:51,318 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegoeIcons.ttf', name='Segoe Fluent Icons', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,318 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAGNETOB.TTF', name='Magneto', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:21:51,318 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICI.TTF', name='Century Gothic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:21:51,318 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCBLKAD.TTF', name='Blackadder ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,319 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahomabd.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:21:51,319 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugi.ttf', name='Gadugi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,320 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LCALLIG.TTF', name='Lucida Calligraphy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:21:51,320 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyh.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,320 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsunb.ttf', name='SimSun-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,320 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgun.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,322 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIL_____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,322 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VLADIMIR.TTF', name='Vladimir Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,322 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,323 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msgothic.ttc', name='MS Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,323 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRSCRIPT.TTF', name='French Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,324 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILBI___.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 10:21:51,324 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASLGHT.TTF', name='Eras Light ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,324 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTB.TTF', name='Calisto MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:21:51,325 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunsl.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-22 10:21:51,325 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRUSHSCI.TTF', name='Brush Script MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:21:51,327 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SNAP____.TTF', name='Snap ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,327 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuib.ttf', name='Segoe UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:21:51,328 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCBI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 10:21:51,328 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailub.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:21:51,329 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framd.ttf', name='Franklin Gothic Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,329 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolai.ttf', name='Consolas', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:21:51,329 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCEB.TTF', name='Tw Cen MT Condensed Extra Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-22 10:21:51,329 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\POORICH.TTF', name='Poor Richard', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,330 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDYSTO.TTF', name='Goudy Stout', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,330 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKB.TTF', name='Rockwell', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:21:51,330 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PALSCRI.TTF', name='Palace Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,331 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarai.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:21:51,331 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\micross.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,331 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LEELAWDB.TTF', name='Leelawadee', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:21:51,333 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABK.TTF', name='Franklin Gothic Book', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,333 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjh.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,333 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palabi.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 10:21:51,333 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAVIE.TTF', name='Ravie', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,334 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCK.TTF', name='Rockwell', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,334 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\pala.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,334 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibriz.ttf', name='Calibri', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 10:21:51,334 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugib.ttf', name='Gadugi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:21:51,336 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_PSTC.TTF', name='Bodoni MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-22 10:21:51,336 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENSCBK.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,336 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanab.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
2023-04-22 10:21:51,337 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LATINWD.TTF', name='Wide Latin', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
2023-04-22 10:21:51,337 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbeli.ttf', name='Corbel', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:21:51,337 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIGI.TTF', name='Gigi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,338 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITED.TTF', name='Lucida Bright', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-22 10:21:51,338 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbi.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 10:21:51,338 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhl.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2023-04-22 10:21:51,339 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguiemj.ttf', name='Segoe UI Emoji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,339 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OCRAEXT.TTF', name='OCR A Extended', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
2023-04-22 10:21:51,339 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebuc.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,340 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SHOWG.TTF', name='Showcard Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,340 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BASKVILL.TTF', name='Baskerville Old Face', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,340 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriab.ttf', name='Cambria', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:21:51,340 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAIAN.TTF', name='Maiandra GD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,341 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCRIPTBL.TTF', name='Script MT Bold', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:21:51,341 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLECB.TTF', name='Gloucester MT Extra Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-22 10:21:51,341 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNTI.TTF', name='Elephant', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:21:51,342 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFR.TTF', name='Californian FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,342 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHIC.TTF', name='Century Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,342 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PLAYBILL.TTF', name='Playbill', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,342 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABKIT.TTF', name='Franklin Gothic Book', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:21:51,344 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARLOWSI.TTF', name='Harlow Solid Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:21:51,344 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPE.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,344 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taile.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,345 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibl.ttf', name='Segoe UI', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2023-04-22 10:21:51,345 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNBI.TTF', name='Arial', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 7.8986363636363635
2023-04-22 10:21:51,345 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuiz.ttf', name='Segoe UI', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 10:21:51,345 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSBI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-22 10:21:51,346 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palab.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:21:51,346 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLI.TTF', name='Bell MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:21:51,346 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILLUBCD.TTF', name='Gill Sans Ultra Bold Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-22 10:21:51,347 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbd.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:21:51,347 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhbd.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:21:51,347 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoesc.ttf', name='Segoe Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,347 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\couri.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:21:51,349 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegUIVar.ttf', name='Segoe UI Variable', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,349 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_R.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,349 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTB.TTF', name='Copperplate Gothic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,350 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 10:21:51,350 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCB_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:21:51,351 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TEMPSITC.TTF', name='Tempus Sans ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,351 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MISTRAL.TTF', name='Mistral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,351 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FORTE.TTF', name='Forte', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,352 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CB.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-04-22 10:21:51,352 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbd.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:21:51,352 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STENCIL.TTF', name='Stencil', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,353 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrib.ttf', name='Calibri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:21:51,353 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERT.TTF', name='High Tower Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,354 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTCORSVA.TTF', name='Monotype Corsiva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 10:21:51,354 [12652] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFB.TTF', name='Californian FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 10:21:51,354 [12652] DEBUG    matplotlib.font_manager:1367: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
2023-04-22 11:02:16,894 [12652] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-04-22 11:02:16,894 [12652] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-04-22 11:02:16,894 [12652] INFO     root:247: [JupyterRequire] Initializing comms.
2023-04-22 11:02:16,898 [12652] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-04-22 11:02:16,902 [12652] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-04-22 11:02:16,902 [12652] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-04-22 11:49:24,571 [12652] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-04-22 11:49:24,571 [12652] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-04-22 11:49:24,571 [12652] INFO     root:247: [JupyterRequire] Initializing comms.
2023-04-22 11:49:24,575 [12652] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-04-22 11:49:24,575 [12652] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-04-22 11:49:24,579 [12652] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-04-22 12:18:48,199 [28752] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-04-22 12:18:48,199 [28752] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-04-22 12:18:48,200 [28752] INFO     root:247: [JupyterRequire] Initializing comms.
2023-04-22 12:18:48,202 [28752] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-04-22 12:18:48,202 [28752] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-04-22 12:18:48,203 [28752] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-04-22 12:18:48,986 [28752] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-04-22 12:18:48,987 [28752] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-04-22 12:18:48,987 [28752] INFO     root:247: [JupyterRequire] Initializing comms.
2023-04-22 12:18:48,988 [28752] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-04-22 12:18:48,989 [28752] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-04-22 12:18:48,989 [28752] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-04-22 12:34:29,671 [18232] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-04-22 12:34:29,671 [18232] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-04-22 12:34:29,672 [18232] INFO     root:247: [JupyterRequire] Initializing comms.
2023-04-22 12:34:29,674 [18232] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-04-22 12:34:29,674 [18232] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-04-22 12:34:29,675 [18232] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-04-22 12:34:34,469 [18232] INFO     numexpr.utils:147: [JupyterRequire] Note: NumExpr detected 12 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
2023-04-22 12:34:34,470 [18232] INFO     numexpr.utils:159: [JupyterRequire] NumExpr defaulting to 8 threads.
2023-04-22 12:34:34,844 [18232] DEBUG    matplotlib:275: [JupyterRequire] matplotlib data path: C:\Users\adity\anaconda3\lib\site-packages\matplotlib\mpl-data
2023-04-22 12:34:34,847 [18232] DEBUG    matplotlib:275: [JupyterRequire] CONFIGDIR=C:\Users\adity\.matplotlib
2023-04-22 12:34:34,849 [18232] DEBUG    matplotlib:1445: [JupyterRequire] interactive is False
2023-04-22 12:34:34,850 [18232] DEBUG    matplotlib:1446: [JupyterRequire] platform is win32
2023-04-22 12:34:34,850 [18232] DEBUG    matplotlib:1447: [JupyterRequire] loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', '_io', 'marshal', 'nt', 'winreg', '_frozen_importlib_external', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', 'encodings.cp1252', '_signal', 'encodings.latin_1', '_abc', 'abc', 'io', '__main__', '_stat', 'stat', '_collections_abc', 'genericpath', 'ntpath', 'os.path', 'os', '_sitebuiltins', '_locale', '_bootlocale', '_distutils_hack', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib.machinery', '_heapq', 'heapq', 'itertools', 'keyword', '_operator', 'operator', 'reprlib', '_collections', 'collections', 'collections.abc', '_functools', 'functools', 'contextlib', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', 'copyreg', 're', 'typing.io', 'typing.re', 'typing', 'importlib.abc', 'importlib.util', 'google', 'google.cloud', 'google.logging', 'mpl_toolkits', 'sphinxcontrib', 'zope', 'site', '_weakrefset', 'weakref', 'pkgutil', 'runpy', 'ipykernel._version', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'errno', 'signal', 'threading', 'msvcrt', '_winapi', 'subprocess', 'jupyter_client._version', 'posixpath', 'fnmatch', 'glob', '_socket', 'math', 'select', 'selectors', 'socket', 'zlib', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', '_bisect', 'bisect', '_random', '_sha512', 'random', 'tempfile', 'getpass', 'platform', 'zmq.libzmq', 'zmq.backend.select', 'cython_runtime', 'zmq.backend.cython.constants', '_cython_0_29_24', 'zmq.backend.cython.error', 'zmq.error', 'zmq.backend.cython.message', 'zmq.backend.cython.context', 'copy', '_struct', 'struct', '_compat_pickle', '_pickle', 'pickle', 'zmq.backend.cython.socket', 'zmq.backend.cython.utils', 'zmq.backend.cython._poll', 'zmq.backend.cython._version', 'zmq.backend.cython._device', 'zmq.backend.cython._proxy_steerable', 'zmq.backend.cython', 'zmq.backend', 'zmq.utils', 'zmq.utils.constant_names', 'zmq.sugar.constants', 'atexit', 'zmq.sugar.attrsettr', 'zmq.sugar.poll', 'zmq.utils.jsonapi', 'zmq.utils.strtypes', 'zmq.sugar.socket', 'zmq.sugar.context', 'zmq.sugar.frame', 'zmq.sugar.tracker', 'zmq.sugar.version', 'zmq.sugar.stopwatch', 'zmq.sugar', 'zmq', '_ast', 'ast', '_opcode', 'opcode', 'dis', 'token', 'tokenize', 'linecache', 'inspect', 'traitlets.utils', 'traitlets.utils.getargspec', 'traitlets.utils.importstring', 'traitlets.utils.sentinel', 'traitlets.utils.bunch', 'traitlets.utils.descriptions', 'traitlets.traitlets', 'traitlets.utils.decorators', 'traitlets._version', 'traitlets', 'traceback', '_string', 'string', 'logging', 'pprint', 'gettext', 'argparse', 'traitlets.config.loader', 'textwrap', 'traitlets.utils.text', 'traitlets.config.configurable', 'traitlets.config.application', 'traitlets.config', 'jupyter_client.localinterfaces', 'jupyter_core.version', 'jupyter_core', 'urllib', 'urllib.parse', 'pathlib', 'jupyter_core.paths', 'jupyter_client.utils', 'jupyter_client.connect', 'traitlets.log', 'jupyter_client.launcher', 'concurrent', 'concurrent.futures._base', 'concurrent.futures', '_ssl', 'binascii', 'base64', 'ssl', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', '_contextvars', 'contextvars', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.threads', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'asyncio.windows_events', 'asyncio', 'jupyter_client.channelsabc', 'jupyter_client.channels', 'jupyter_client.clientabc', 'jupyter_client.client', 'jupyter_client.kernelspec', 'jupyter_client.managerabc', 'jupyter_client.manager', '_queue', 'queue', 'jupyter_client.blocking.channels', 'jupyter_client.blocking.client', 'jupyter_client.blocking', 'zmq._future', 'zmq.asyncio', 'jupyter_client.asynchronous.channels', 'jupyter_client.asynchronous.client', 'jupyter_client.asynchronous', '_uuid', 'uuid', 'jupyter_client.multikernelmanager', 'jupyter_client', 'ipykernel.connect', 'ipykernel', 'tornado', '_datetime', 'datetime', 'numbers', 'logging.handlers', 'html.entities', 'html', 'array', 'tornado.speedups', 'tornado.util', 'tornado.escape', 'colorama.ansi', '_ctypes', 'ctypes._endian', 'ctypes', 'ctypes.wintypes', 'colorama.win32', 'colorama.winterm', 'colorama.ansitowin32', 'colorama.initialise', 'colorama', 'tornado.log', 'tornado.concurrent', 'tornado.ioloop', '__future__', 'tornado.platform', 'tornado.gen', 'tornado.platform.asyncio', 'zmq.eventloop.ioloop', 'zmq.eventloop', 'zmq.eventloop.zmqstream', 'IPython.core', 'IPython.core.getipython', 'IPython.core.release', 'sysconfig', 'pydoc', 'executing.executing', 'executing.version', 'executing', 'asttokens.line_numbers', 'six', 'six.moves', 'asttokens.util', 'asttokens.mark_tokens', 'asttokens.asttokens', 'asttokens', '_decimal', 'decimal', 'fractions', 'pure_eval.utils', 'pure_eval.my_getattr_static', 'pure_eval.core', 'pure_eval.version', 'pure_eval', 'stack_data.utils', 'stack_data.core', 'stack_data.formatting', 'stack_data.version', 'stack_data', 'pygments', 'pygments.formatters._mapping', 'pygments.plugin', 'pygments.util', 'pygments.formatters', 'pygments.styles', 'pygments.formatter', 'pygments.console', 'pygments.token', 'pygments.style', 'pygments.formatters.terminal256', 'bdb', 'IPython.utils', 'IPython.utils.ipstruct', 'IPython.utils.coloransi', 'IPython.utils.colorable', 'IPython.utils.PyColorize', 'locale', 'IPython.utils.encoding', 'IPython.utils.py3compat', 'IPython.core.excolors', 'cmd', 'codeop', 'code', 'pdb', 'IPython.core.debugger', 'IPython.core.display_trap', 'shlex', 'IPython.utils._process_common', 'IPython.utils._process_win32', 'IPython.utils.process', 'IPython.utils.decorators', 'IPython.utils.path', 'IPython.utils.terminal', 'IPython.core.ultratb', 'IPython.utils._sysinfo', 'IPython.utils.sysinfo', 'IPython.core.crashhandler', 'IPython.utils.importstring', 'IPython.paths', 'IPython.core.profiledir', 'IPython.core.application', 'IPython.terminal', '_hashlib', '_blake2', 'hashlib', 'IPython.core.compilerop', 'IPython.core.error', 'IPython.utils.text', 'IPython.core.magic_arguments', 'getopt', 'IPython.core.display_functions', 'mimetypes', 'IPython.testing', 'IPython.testing.skipdoctest', 'IPython.core.display', 'IPython.lib', 'IPython.lib.display', 'IPython.display', 'IPython.utils.data', 'IPython.core.page', 'IPython.lib.pretty', 'IPython.utils.openpy', 'IPython.utils.dir2', 'IPython.utils.wildcard', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.lexers', 'pygments.filter', 'pygments.filters', 'pygments.regexopt', 'pygments.lexer', 'pygments.unistring', 'pygments.lexers.python', 'pygments.formatters.html', 'IPython.core.oinspect', 'IPython.core.inputtransformer2', 'IPython.core.magic', 'pickleshare', 'IPython.core.hooks', 'IPython.core.autocall', 'IPython.core.macro', 'IPython.core.splitinput', 'IPython.core.prefilter', 'IPython.core.alias', 'IPython.core.builtin_trap', 'IPython.core.displayhook', 'IPython.core.displaypub', 'backcall.backcall', 'backcall', 'IPython.core.events', 'IPython.core.extensions', 'decorator', 'IPython.utils.sentinel', 'IPython.core.formatters', '_sqlite3', 'sqlite3.dbapi2', 'sqlite3', 'IPython.core.history', 'IPython.core.logger', 'IPython.core.payload', 'IPython.core.usage', 'IPython.utils.capture', 'IPython.utils.io', 'IPython.utils.strdispatch', 'IPython.utils.syspathcontext', 'IPython.core.async_helpers', 'IPython.core.interactiveshell', 'prompt_toolkit.application.current', 'prompt_toolkit.eventloop.utils', 'prompt_toolkit.eventloop.async_generator', 'wcwidth.table_wide', 'wcwidth.table_zero', 'wcwidth.unicode_versions', 'wcwidth.wcwidth', 'wcwidth', 'prompt_toolkit.utils', 'prompt_toolkit.eventloop.inputhook', 'prompt_toolkit.eventloop', 'prompt_toolkit.application.run_in_terminal', 'prompt_toolkit.selection', 'prompt_toolkit.clipboard.base', 'prompt_toolkit.clipboard.in_memory', 'prompt_toolkit.clipboard', 'prompt_toolkit.cache', 'prompt_toolkit.enums', 'prompt_toolkit.filters.base', 'prompt_toolkit.filters.app', 'prompt_toolkit.filters.cli', 'prompt_toolkit.filters.utils', 'prompt_toolkit.filters', 'prompt_toolkit.document', 'prompt_toolkit.auto_suggest', 'prompt_toolkit.data_structures', 'prompt_toolkit.styles.base', 'prompt_toolkit.styles.named_colors', 'prompt_toolkit.styles.style', 'prompt_toolkit.styles.defaults', 'prompt_toolkit.styles.pygments', 'colorsys', 'prompt_toolkit.styles.style_transformation', 'prompt_toolkit.styles', 'prompt_toolkit.output.color_depth', 'prompt_toolkit.output.base', 'prompt_toolkit.output.defaults', 'prompt_toolkit.output', 'prompt_toolkit.output.vt100', 'prompt_toolkit.mouse_events', 'prompt_toolkit.formatted_text.base', 'prompt_toolkit.formatted_text.ansi', 'xml', 'xml.dom.domreg', 'xml.dom', 'xml.dom.minicompat', 'xml.dom.NodeFilter', 'xml.dom.xmlbuilder', 'xml.dom.minidom', 'prompt_toolkit.formatted_text.html', 'prompt_toolkit.formatted_text.pygments', 'prompt_toolkit.formatted_text.utils', 'prompt_toolkit.formatted_text', 'prompt_toolkit.completion.base', 'prompt_toolkit.completion.deduplicate', 'prompt_toolkit.completion.filesystem', 'prompt_toolkit.completion.word_completer', 'prompt_toolkit.completion.fuzzy_completer', 'prompt_toolkit.completion.nested', 'prompt_toolkit.completion', 'prompt_toolkit.history', 'prompt_toolkit.keys', 'prompt_toolkit.key_binding.key_bindings', 'prompt_toolkit.key_binding.key_processor', 'prompt_toolkit.key_binding', 'prompt_toolkit.key_binding.vi_state', 'prompt_toolkit.search', 'prompt_toolkit.validation', 'prompt_toolkit.buffer', 'prompt_toolkit.input.base', 'prompt_toolkit.input.defaults', 'prompt_toolkit.input', 'prompt_toolkit.input.typeahead', 'prompt_toolkit.key_binding.bindings', 'prompt_toolkit.key_binding.bindings.scroll', 'prompt_toolkit.key_binding.bindings.page_navigation', 'prompt_toolkit.lexers.base', 'prompt_toolkit.lexers.pygments', 'prompt_toolkit.lexers', 'prompt_toolkit.layout.utils', 'prompt_toolkit.layout.processors', 'prompt_toolkit.layout.controls', 'prompt_toolkit.layout.dimension', 'prompt_toolkit.layout.margins', 'prompt_toolkit.layout.mouse_handlers', 'prompt_toolkit.layout.screen', 'prompt_toolkit.layout.containers', 'prompt_toolkit.layout.layout', 'prompt_toolkit.layout.menus', 'prompt_toolkit.layout.scrollable_pane', 'prompt_toolkit.layout', 'prompt_toolkit.key_binding.bindings.completion', 'prompt_toolkit.key_binding.bindings.named_commands', 'prompt_toolkit.key_binding.bindings.basic', 'prompt_toolkit.key_binding.bindings.cpr', 'prompt_toolkit.key_binding.bindings.emacs', 'prompt_toolkit.key_binding.bindings.mouse', 'prompt_toolkit.input.ansi_escape_sequences', 'prompt_toolkit.input.vt100_parser', 'prompt_toolkit.key_binding.digraphs', 'prompt_toolkit.key_binding.bindings.vi', 'prompt_toolkit.key_binding.defaults', 'prompt_toolkit.key_binding.emacs_state', 'prompt_toolkit.layout.dummy', 'prompt_toolkit.renderer', 'prompt_toolkit.application.application', 'prompt_toolkit.application.dummy', 'prompt_toolkit.application', 'prompt_toolkit.key_binding.bindings.focus', 'prompt_toolkit.widgets.toolbars', 'prompt_toolkit.widgets.base', 'prompt_toolkit.widgets.dialogs', 'prompt_toolkit.widgets.menus', 'prompt_toolkit.widgets', 'prompt_toolkit.shortcuts.dialogs', 'prompt_toolkit.shortcuts.progress_bar.formatters', 'prompt_toolkit.shortcuts.progress_bar.base', 'prompt_toolkit.shortcuts.progress_bar', 'prompt_toolkit.key_binding.bindings.auto_suggest', 'prompt_toolkit.key_binding.bindings.open_in_editor', 'prompt_toolkit.shortcuts.prompt', 'prompt_toolkit.shortcuts.utils', 'prompt_toolkit.shortcuts', 'prompt_toolkit', 'prompt_toolkit.patch_stdout', 'unicodedata', 'IPython.core.latex_symbols', 'IPython.utils.generics', 'parso.utils', 'parso.tree', 'parso.python', 'parso.python.token', 'parso.python.tokenize', 'parso.pgen2.grammar_parser', 'parso.pgen2.generator', 'parso.pgen2', 'parso.parser', 'parso._compatibility', 'difflib', 'parso.python.prefix', 'parso.python.tree', 'parso.python.parser', 'parso.python.diff', 'gc', 'parso.cache', 'parso.normalizer', 'parso.python.errors', 'parso.python.pep8', 'parso.file_io', 'parso.grammar', 'parso', 'jedi.parser_utils', 'jedi.debug', 'jedi.settings', 'jedi.cache', 'jedi.file_io', 'jedi.inference.cache', 'jedi.inference.helpers', 'jedi.inference.utils', 'jedi.inference.base_value', 'jedi.inference.sys_path', 'jedi.inference.recursion', 'jedi.inference.flow_analysis', 'jedi.common', 'jedi.inference.lazy_value', 'jedi.inference.docstrings', 'jedi.plugins', 'jedi.inference.names', 'jedi.inference.filters', 'jedi.inference.compiled.getattr_static', 'jedi.inference.compiled.access', 'jedi.inference.signature', 'jedi.inference.context', 'jedi.inference.compiled.value', 'jedi.inference.compiled', 'jedi.inference.analysis', 'jedi.inference.gradual', 'jedi.inference.value.module', 'jedi.inference.value.dynamic_arrays', 'jedi.inference.value.iterable', 'jedi.inference.arguments', 'jedi.inference.parser_cache', 'jedi.inference.gradual.generics', 'jedi.inference.value.function', 'jedi.inference.value.klass', 'jedi.inference.value.instance', 'jedi.inference.value', 'jedi.inference.gradual.base', 'jedi.inference.gradual.type_var', 'jedi.inference.gradual.typing', 'jedi.inference.gradual.stub_value', 'jedi.inference.gradual.typeshed', 'jedi._compatibility', 'zipfile', 'jedi.inference.compiled.subprocess.functions', 'jedi.api.exceptions', 'jedi.inference.compiled.subprocess', 'jedi.inference.imports', 'jedi.inference.param', 'jedi.inference.gradual.annotation', 'jedi.inference.value.decorator', 'jedi.inference.syntax_tree', 'jedi.inference', 'jedi.inference.gradual.conversion', 'jedi.inference.compiled.mixed', 'pydoc_data', 'pydoc_data.topics', 'jedi.api.keywords', 'jedi.api.completion_cache', 'jedi.api.helpers', 'jedi.api.classes', 'jedi.api.interpreter', 'jedi.api.strings', 'jedi.api.file_name', 'jedi.inference.docstring_utils', 'jedi.api.completion', 'filecmp', 'jedi.api.environment', 'jedi.inference.references', 'jedi.api.project', 'jedi.api.errors', 'jedi.api.refactoring', 'jedi.api.refactoring.extract', 'jedi.inference.gradual.utils', 'jedi.api', 'jedi.plugins.stdlib', 'jedi.plugins.flask', 'jedi.plugins.pytest', 'jedi.plugins.django', 'jedi.plugins.registry', 'jedi', 'IPython.core.completer', 'IPython.terminal.ptutils', 'IPython.lib.clipboard', 'IPython.terminal.shortcuts', 'concurrent.futures.thread', 'IPython.terminal.debugger', 'IPython.terminal.magics', 'IPython.terminal.pt_inputhooks', 'IPython.terminal.prompts', 'IPython.terminal.interactiveshell', 'IPython.core.magics.auto', 'IPython.core.magics.basic', 'email', 'http', 'email.errors', 'email.quoprimime', 'email.base64mime', 'quopri', 'email.encoders', 'email.charset', 'email.header', 'calendar', 'email._parseaddr', 'email.utils', 'email._policybase', 'email.feedparser', 'email.parser', 'uu', 'email._encoded_words', 'email.iterators', 'email.message', 'http.client', 'urllib.response', 'urllib.error', 'nturl2path', 'urllib.request', 'IPython.utils.contexts', 'IPython.core.magics.code', 'IPython.core.magics.config', 'IPython.core.magics.display', '_lsprof', 'profile', 'cProfile', 'dataclasses', 'pstats', 'timeit', 'IPython.utils.module_paths', 'IPython.utils.timing', 'IPython.core.magics.execution', 'IPython.core.magics.extension', 'IPython.core.magics.history', 'IPython.core.magics.logging', 'IPython.core.magics.namespace', 'IPython.core.magics.osm', 'IPython.core.magics.packaging', 'IPython.core.pylabtools', 'IPython.core.magics.pylab', 'IPython.core.magics.script', 'IPython.core.magics', 'IPython.core.shellapp', 'IPython.extensions', 'IPython.extensions.storemagic', 'IPython.terminal.ipapp', 'IPython.terminal.embed', 'IPython.utils.frame', 'IPython', 'imp', 'hmac', 'dateutil._version', 'dateutil', 'dateutil._common', 'dateutil.relativedelta', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.win', 'dateutil.tz.tz', 'dateutil.tz', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', '_strptime', 'jupyter_client.jsonutil', 'jupyter_client.adapter', 'jupyter_client.session', 'ipykernel.iostream', 'ipykernel.control', 'ipykernel.heartbeat', 'IPython.utils.tokenutil', 'psutil._common', 'psutil._compat', 'psutil._psutil_windows', 'psutil._pswindows', 'psutil', 'tornado.locks', 'tornado.queues', 'ipykernel.jsonutil', 'ipykernel.kernelbase', 'ipykernel.comm.comm', 'ipykernel.comm.manager', 'ipykernel.comm', 'IPython.core.payloadpage', 'ipykernel.displayhook', 'ipykernel.zmqshell', 'setuptools._distutils', 'distutils.debug', 'distutils.errors', 'distutils.fancy_getopt', 'distutils.dep_util', 'distutils.log', 'distutils.spawn', 'distutils.py35compat', 'distutils.util', 'distutils.dist', 'distutils.dir_util', 'distutils.file_util', 'distutils.archive_util', 'distutils.cmd', 'configparser', 'distutils.config', 'distutils.extension', 'distutils.core', '_distutils_hack.override', 'setuptools._deprecation_warning', 'xml.parsers', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'xml.parsers.expat', 'plistlib', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources._vendor.jaraco', 'pkg_resources.extern.jaraco', 'importlib._common', 'importlib.resources', 'pkg_resources._vendor.more_itertools.recipes', 'pkg_resources._vendor.more_itertools.more', 'pkg_resources._vendor.more_itertools', 'pkg_resources.extern.more_itertools', 'pkg_resources.extern.jaraco.functools', 'pkg_resources.extern.jaraco.context', 'pkg_resources.extern.jaraco.text', 'win32api', '_win32sysloader', 'pywintypes', 'pythoncom', 'win32com.gen_py', 'win32com', 'win32com.shell', 'pkg_resources._vendor.appdirs', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources._vendor.packaging', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.version', 'pkg_resources._vendor.packaging._manylinux', 'pkg_resources._vendor.packaging._musllinux', 'pkg_resources.extern.packaging.tags', 'pkg_resources.extern.packaging.utils', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources._vendor.pyparsing', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.packaging.markers', 'pkg_resources.extern.packaging.requirements', 'pkg_resources', 'setuptools.version', 'distutils.filelist', 'setuptools.monkey', 'setuptools.extension', 'distutils.command', 'setuptools.extern', 'setuptools._vendor', 'setuptools._vendor.packaging.__about__', 'setuptools._vendor.packaging', 'setuptools.extern.packaging', 'setuptools._vendor.ordered_set', 'setuptools.extern.ordered_set', 'setuptools._vendor.more_itertools.recipes', 'setuptools._vendor.more_itertools.more', 'setuptools._vendor.more_itertools', 'setuptools.extern.more_itertools', 'setuptools._vendor.pyparsing', 'setuptools.extern.pyparsing', 'setuptools._vendor.packaging._manylinux', 'setuptools._vendor.packaging._musllinux', 'setuptools.extern.packaging.tags', 'setuptools.extern.packaging._structures', 'setuptools.extern.packaging.version', 'setuptools.extern.packaging.utils', 'setuptools.extern.packaging.specifiers', 'setuptools.extern.packaging.markers', 'setuptools.extern.packaging.requirements', 'setuptools._vendor.jaraco', 'setuptools.extern.jaraco', 'setuptools.extern.jaraco.context', 'setuptools.extern.jaraco.functools', '_csv', 'csv', 'setuptools._vendor.zipp', 'setuptools._vendor.importlib_metadata._functools', 'setuptools._vendor.importlib_metadata._text', 'setuptools._vendor.importlib_metadata._adapters', 'setuptools._vendor.importlib_metadata._compat', 'setuptools._vendor.importlib_metadata._meta', 'setuptools._vendor.importlib_metadata._collections', 'setuptools._vendor.importlib_metadata._itertools', 'setuptools._vendor.importlib_metadata', 'setuptools.extern.importlib_metadata', 'setuptools._vendor.nspektr._compat', 'setuptools._vendor.nspektr', 'setuptools.extern.nspektr', 'zipp', 'importlib_metadata._functools', 'importlib_metadata._text', 'importlib_metadata._adapters', 'importlib_metadata._compat', 'importlib_metadata._meta', 'importlib_metadata._collections', 'importlib_metadata._itertools', 'importlib_metadata', 'setuptools._importlib', 'distutils.command.bdist', 'setuptools.command', 'setuptools.windows_support', 'setuptools.config.expand', 'setuptools.config.setupcfg', 'setuptools.config', 'setuptools.errors', 'email._header_value_parser', 'email.headerregistry', 'setuptools.config._apply_pyprojecttoml', 'setuptools.config.pyprojecttoml', 'setuptools.discovery', 'setuptools.extern.jaraco.text', 'setuptools._reqs', 'setuptools._itertools', 'setuptools._entry_points', 'setuptools.dist', 'setuptools.py34compat', 'setuptools._imp', 'setuptools.depends', 'setuptools.logging', 'distutils.ccompiler', 'distutils.msvc9compiler', 'setuptools.msvc', 'unittest.util', 'unittest.result', 'unittest.case', 'unittest.suite', 'unittest.loader', 'unittest.signals', 'unittest.runner', 'unittest.main', 'unittest', 'unittest.mock', 'distutils._msvccompiler', 'setuptools', 'distutils', 'distutils.version', 'ipykernel.eventloops', 'ipykernel.compiler', 'debugpy._version', 'debugpy.common', 'debugpy.common.json', 'debugpy.common.fmt', 'debugpy.common.compat', 'debugpy', 'debugpy._vendored._util', 'debugpy._vendored', '_pydevd_bundle', 'encodings.ascii', 'stringprep', 'encodings.idna', '_pydevd_bundle.pydevd_vm_type', '_pydev_imps', 'xmlrpc', 'gzip', 'xmlrpc.client', 'socketserver', 'http.server', 'xmlrpc.server', '_pydev_imps._pydev_saved_modules', '_pydevd_bundle.pydevd_constants', '_pydev_bundle', '_pydev_runfiles', '_pydevd_frame_eval', 'pydev_ipython', 'pydevd_concurrency_analyser', 'pydevd_plugins', '_pydev_bundle.pydev_log', '_pydev_bundle._pydev_filesystem_encoding', '_pydevd_bundle.pydevd_comm_constants', 'pydevd_file_utils', '_pydev_imps._pydev_execfile', '_pydevd_bundle.pydevd_exec2', '_pydev_bundle.pydev_imports', '_pydev_bundle.pydev_is_thread_alive', '_pydev_bundle.pydev_override', 'pydevd_plugins.extensions', '_pydevd_bundle.pydevd_extension_utils', '_pydevd_bundle.pydevd_frame_utils', '_pydevd_bundle.pydevd_filtering', '_pydevd_bundle.pydevd_io', '_pydevd_bundle.pydevd_utils', '_pydev_bundle._pydev_tipper_common', '_pydev_bundle._pydev_imports_tipper', '_pydev_bundle._pydev_calltip_util', '_pydevd_bundle.pydevd_safe_repr', '_pydevd_bundle.pydevd_resolver', '_pydevd_bundle.pydevd_extension_api', '_pydevd_bundle.pydevd_xml', '_pydevd_bundle.pydevd_dont_trace', '_pydevd_frame_eval.vendored', '_pydevd_frame_eval.vendored.bytecode.flags', '_pydevd_frame_eval.vendored.bytecode.instr', '_pydevd_frame_eval.vendored.bytecode.bytecode', '_pydevd_frame_eval.vendored.bytecode.concrete', '_pydevd_frame_eval.vendored.bytecode.cfg', '_pydevd_frame_eval.vendored.bytecode', '_pydevd_bundle.pydevd_bytecode_utils', '_pydevd_bundle.pydevd_cython', '_pydevd_bundle.pydevd_cython_wrapper', '_pydevd_bundle.pydevd_additional_thread_info', '_pydevd_bundle.pydevd_thread_lifecycle', '_pydevd_bundle.pydevd_save_locals', '_pydevd_bundle.pydevd_defaults', '_pydev_bundle.pydev_monkey', 'pydevd_tracing', '_pydevd_bundle.pydevd_daemon_thread', '_pydevd_bundle.pydevd_timeout', '_pydevd_bundle.pydevd_vars', '_pydev_bundle.pydev_console_utils', '_pydevd_bundle.pydevd_import_class', '_pydevd_bundle.pydevd_breakpoints', '_pydevd_bundle.pydevd_custom_frames', '_pydevd_bundle.pydevd_dont_trace_files', '_pydevd_bundle.pydevd_net_command', '_pydev_bundle.pydev_umd', 'pydevconsole', '_pydev_bundle._pydev_completer', '_pydevd_bundle.pydevd_net_command_factory_xml', '_pydevd_bundle.pydevd_frame', '_pydevd_bundle.pydevd_additional_thread_info_regular', '_pydevd_bundle.pydevd_trace_dispatch', '_pydevd_frame_eval.pydevd_frame_eval_main', '_pydevd_bundle.pydevd_source_mapping', 'pydevd_concurrency_analyser.pydevd_thread_wrappers', 'pydevd_concurrency_analyser.pydevd_concurrency_logger', '_pydevd_bundle._debug_adapter', '_pydevd_bundle._debug_adapter.pydevd_schema_log', '_pydevd_bundle._debug_adapter.pydevd_base_schema', '_pydevd_bundle._debug_adapter.pydevd_schema', '_pydevd_bundle.pydevd_reload', '_pydev_bundle.fsnotify', '_pydevd_bundle.pydevd_console', '_pydevd_bundle.pydevd_comm', '_pydevd_bundle.pydevd_net_command_factory_json', '_pydevd_bundle.pydevd_collect_bytecode_info', '_pydevd_bundle.pydevd_api', '_pydevd_bundle.pydevd_json_debug_options', '_pydevd_bundle.pydevd_process_net_command_json', '_pydevd_bundle.pydevd_traceproperty', '_pydevd_bundle.pydevd_process_net_command', '_pydevd_bundle.pydevd_suspended_frames', '_pydevd_bundle.pydevd_trace_api', 'pydevd_plugins.django_debug', 'pydevd_plugins.jinja2_debug', '_pydevd_bundle.pydevd_plugin_utils', 'pydevd_plugins.extensions.types', 'pydevd_plugins.extensions.types.pydevd_helpers', 'pydevd_plugins.extensions.types.pydevd_plugin_numpy_types', 'pydevd_plugins.extensions.types.pydevd_plugins_django_form_str', 'pydevd', 'debugpy._vendored.force_pydevd', 'debugpy.server', 'debugpy.adapter', 'debugpy.common.timestamp', 'debugpy.common.util', 'debugpy.common.log', 'debugpy.common.sockets', 'debugpy.server.api', 'ipykernel.debugger', 'ipykernel.ipkernel', 'ipykernel.parentpoller', 'ipykernel.kernelapp', 'win32security', 'ntsecuritycon', 'faulthandler', 'IPython.core.completerlib', 'logging.config', 'pythonjsonlogger', 'pythonjsonlogger.jsonlogger', 'daiquiri.types', 'daiquiri.formatter', 'daiquiri.handlers', 'daiquiri.output', 'daiquiri', 'jupyter_require.__about__', 'csscompressor', 'jupyter_require.core', 'jupyter_require.notebook', 'jupyter_require', 'jupyter_nbutils.__about__', 'jupyter_nbutils.config', 'jupyter_nbutils.utils', 'jupyter_nbutils', 'jupyter_require.magic', 'numpy._globals', 'numpy.__config__', 'numpy._distributor_init', 'numpy._version', 'numpy.version', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core._asarray', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core._machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.stride_tricks', 'numpy.lib.twodim_base', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', '_cython_0_29_30', 'numpy.random._common', 'secrets', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'pytz', 'pandas._typing', '_cython_0_29_28', 'pandas._libs.tslibs.dtypes', 'pandas._libs.tslibs.base', 'pandas._libs.tslibs.np_datetime', 'pandas._libs.tslibs.nattype', 'pandas._libs.tslibs.timezones', 'pandas._libs.tslibs.ccalendar', 'pandas._libs.tslibs.tzconversion', 'pandas._config.config', 'pandas._config.dates', 'pandas._config.display', 'pandas._config', 'pandas._config.localization', 'pandas._libs.tslibs.strptime', 'pandas._libs.tslibs.fields', 'pandas._libs.tslibs.timedeltas', 'pandas._libs.tslibs.timestamps', 'dateutil.easter', 'pandas._libs.properties', 'pandas._libs.tslibs.offsets', 'pandas._libs.tslibs.parsing', 'pandas._libs.tslibs.conversion', 'pandas._libs.tslibs.period', 'pandas._libs.tslibs.vectorized', 'pandas._libs.tslibs', 'pandas._libs.ops_dispatch', 'pandas._libs.missing', 'pandas._libs.hashtable', 'pandas._libs.algos', 'pandas._libs.interval', 'pandas._libs', 'pandas.util._decorators', 'pandas.core', 'pandas.core.util', 'pandas._libs.tslib', 'pandas._libs.lib', 'pandas._libs.hashing', 'pandas.core.dtypes', 'pandas.util._exceptions', 'pandas.errors', 'pandas.core.dtypes.generic', 'pandas.core.dtypes.base', 'pandas.core.dtypes.inference', 'pandas.core.dtypes.dtypes', 'pandas.core.dtypes.common', 'pandas.core.util.hashing', 'pandas.util', 'pandas.util.version', 'pandas.compat.numpy', 'pandas.compat.pyarrow', 'pandas.compat', 'pandas.core.config_init', 'pandas.core.dtypes.missing', 'pandas.util._validators', 'pandas.core.dtypes.cast', 'pandas.core.dtypes.concat', 'pandas.core.array_algos', 'pandas.core.common', 'pandas.core.construction', 'pandas.core.array_algos.take', 'pandas.core.indexers.utils', 'pandas.core.indexers', 'pandas.core.algorithms', 'pandas.compat.numpy.function', 'pandas.core.roperator', 'pandas._libs.ops', 'pandas.core.computation', 'pandas.compat._optional', 'numexpr.interpreter', 'packaging.__about__', 'packaging', 'packaging._structures', 'packaging.version', 'numexpr.expressions', 'numexpr.utils', 'numexpr.necompiler', 'numexpr.version', 'numexpr', 'pandas.core.computation.check', 'pandas.core.computation.expressions', 'pandas.core.ops.missing', 'pandas.core.ops.dispatch', 'pandas.core.ops.invalid', 'pandas.core.ops.array_ops', 'pandas.core.ops.common', 'pandas.core.ops.docstrings', 'pandas.core.ops.mask_ops', 'pandas.core.ops.methods', 'pandas.core.ops', 'pandas.core.arraylike', 'pandas.core.missing', 'pandas.core.array_algos.quantile', 'pandas.core.sorting', 'pandas.core.arrays.base', 'bottleneck.benchmark', 'bottleneck.benchmark.autotimeit', 'bottleneck.benchmark.bench', 'bottleneck.benchmark.bench_detailed', 'bottleneck.tests', 'bottleneck.tests.util', 'bottleneck.slow.reduce', 'bottleneck.slow.nonreduce', 'bottleneck.slow.nonreduce_axis', 'bottleneck.slow.move', 'bottleneck.slow', 'bottleneck._pytesttester', 'bottleneck.move', 'bottleneck.nonreduce', 'bottleneck.nonreduce_axis', 'bottleneck.reduce', 'bottleneck._version', 'bottleneck', 'pandas.core.nanops', 'pandas.core.array_algos.masked_reductions', 'pandas.core.arrays.masked', 'pandas.core.arrays.boolean', 'pandas._libs.arrays', 'pandas.core.accessor', 'pandas.core.array_algos.transforms', 'pandas.core.arrays._mixins', 'pandas.core.base', 'pandas.core.strings.accessor', 'pandas.core.strings.base', 'pandas.core.strings', 'pandas.core.strings.object_array', 'pandas.io', 'pandas.io.formats', 'pandas.io.formats.console', 'pandas.core.arrays.categorical', 'pandas.tseries', 'pandas.tseries.frequencies', 'pandas.core.arrays.datetimelike', 'pandas.core.arrays._ranges', 'pandas.core.arrays.numeric', 'pandas.core.tools', 'pandas.core.tools.numeric', 'pandas.core.arrays.integer', 'pandas.tseries.offsets', 'pandas.core.arrays.datetimes', 'pandas.core.arrays.floating', 'pandas.core.indexes', 'pandas._libs.index', 'pandas._libs.join', 'pandas.core.array_algos.putmask', 'pandas._libs.sparse', 'pandas.core.arrays.sparse.dtype', 'pandas.io.formats.printing', 'pandas.core.arrays.sparse.array', 'pandas.core.arrays.sparse.accessor', 'pandas.core.arrays.sparse', 'pandas.core.indexes.frozen', 'pandas.core.indexes.base', 'pandas.core.arrays.interval', 'pandas.core.arrays.numpy_', 'pandas.core.arrays.period', 'pandas.core.arrays.string_', 'pandas.core.arrays.string_arrow', 'pandas.core.arrays.timedeltas', 'pandas.core.arrays', 'pandas.core.flags', 'pandas._libs.reduction', 'pandas.core.apply', 'pandas._libs.indexing', 'pandas.core.indexes.extension', 'pandas.core.indexes.category', 'pandas.core.indexes.numeric', 'pandas.core.indexes.range', 'pandas.core.tools.timedeltas', 'pandas.core.indexes.datetimelike', 'pandas.core.tools.times', 'pandas.core.indexes.datetimes', 'pandas.core.indexes.multi', 'pandas.core.indexes.timedeltas', 'pandas.core.indexes.interval', 'pandas.core.indexes.period', 'pandas.core.indexes.api', 'pandas.core.indexing', 'pandas.core.array_algos.replace', 'pandas.core.reshape', 'pandas._libs.internals', 'pandas._libs.writers', 'pandas.core.internals.blocks', 'pandas.core.internals.api', 'pandas.core.internals.base', 'pandas.core.internals.array_manager', 'pandas.core.internals.ops', 'pandas.core.internals.managers', 'pandas.core.internals.concat', 'pandas.core.internals', 'pandas.core.reshape.concat', 'mmap', 'pandas.core.shared_docs', 'pandas.io.common', 'pandas.io.formats.format', 'pandas.core.describe', 'pandas.core.internals.construction', 'pandas.core.sample', 'pandas._libs.window', 'pandas._libs.window.aggregations', 'pandas._libs.window.indexers', 'pandas.core.indexers.objects', 'pandas.core.util.numba_', 'pandas.core.window.common', 'pandas.core.window.doc', 'pandas.core.window.numba_', 'pandas.core.window.online', 'pandas.core._numba', 'pandas.core._numba.executor', 'pandas.core.window.rolling', 'pandas.core.window.ewm', 'pandas.core.window.expanding', 'pandas.core.window', 'pandas.core.generic', 'pandas.core.reshape.util', 'pandas.core.reshape.melt', 'pandas._libs.reshape', 'pandas.core.indexes.accessors', 'pandas.arrays', 'pandas.core.tools.datetimes', 'pandas.io.formats.info', 'pandas.plotting._core', 'pandas.plotting._misc', 'pandas.plotting', 'pandas.core.series', 'pandas.core.frame', 'pandas.core.groupby.base', 'pandas._libs.groupby', 'pandas.core.groupby.numba_', 'pandas.core.groupby.categorical', 'pandas.core.groupby.grouper', 'pandas.core.groupby.ops', 'pandas.core.groupby.indexing', 'pandas.core.groupby.groupby', 'pandas.core.groupby.generic', 'pandas.core.groupby', 'pandas.core.api', 'pandas.tseries.api', 'pandas.core.computation.common', 'pandas.core.computation.align', 'pandas.compat.chainmap', 'pandas.core.computation.scope', 'pandas.core.computation.ops', 'pandas.core.computation.parsing', 'pandas.core.computation.expr', 'pandas.core.computation.engines', 'pandas.core.computation.eval', 'pandas.core.computation.api', 'pandas.core.reshape.merge', 'pandas.core.reshape.pivot', 'pandas.core.reshape.reshape', 'pandas.core.reshape.tile', 'pandas.core.reshape.api', 'pandas.api.extensions', 'pandas.api.indexers', 'pandas.core.dtypes.api', 'pandas.api.types', 'pandas.api', 'pandas._testing._random', 'pandas._testing.contexts', 'pandas._testing._io', 'pandas._testing._warnings', 'cmath', 'pandas._libs.testing', 'pandas._testing.asserters', 'pandas._testing.compat', 'pandas._testing', 'pandas.testing', 'pandas.util._print_versions', 'pandas.io.clipboards', 'pandas._libs.parsers', 'pandas.io.excel._util', 'pandas.io.date_converters', 'pandas.io.parsers.base_parser', 'pandas.io.parsers.arrow_parser_wrapper', 'pandas.io.parsers.c_parser_wrapper', 'pandas.io.parsers.python_parser', 'pandas.io.parsers.readers', 'pandas.io.parsers', 'pandas.io.excel._odfreader', 'pandas.io.excel._openpyxl', 'pandas.io.excel._pyxlsb', 'pandas.io.excel._xlrd', 'pandas.io.excel._base', 'pandas._libs.json', 'pandas.io.formats._color_data', 'pandas.io.formats.css', 'pandas.io.formats.excel', 'pandas.io.excel._odswriter', 'pandas.io.excel._xlsxwriter', 'pandas.io.excel._xlwt', 'pandas.io.excel', 'pandas.io.feather_format', 'pandas.io.gbq', 'pandas.io.html', 'pandas.io.json._normalize', 'pandas.io.json._table_schema', 'pandas.io.json._json', 'pandas.io.json', 'pandas.io.orc', 'pandas.io.parquet', 'pandas.compat.pickle_compat', 'pandas.io.pickle', 'pandas.core.computation.pytables', 'pandas.io.pytables', 'pandas.io.sas.sasreader', 'pandas.io.sas', 'pandas.io.spss', 'pandas.io.sql', 'pandas.io.stata', 'pandas.io.xml', 'pandas.io.api', 'pandas.util._tester', 'pandas._version', 'pandas', 'summarytools', 'summarytools.htmlwidgets', 'summarytools.summarytools', 'matplotlib', 'matplotlib._api.deprecation', 'matplotlib._api', 'matplotlib._version', 'matplotlib._c_internal_utils', 'matplotlib.cbook', 'matplotlib.docstring', 'PIL._version', 'PIL', 'defusedxml.common', 'defusedxml', 'xml.etree', 'xml.etree.ElementPath', '_elementtree', 'xml.etree.ElementTree', 'defusedxml.ElementTree', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._util', 'PIL._imaging', 'cffi.lock', 'cffi.error', 'cffi.model', 'cffi.api', 'cffi', 'PIL.Image', 'PIL.ImageChops', 'PIL.ImageFile', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'PIL.ImagePalette', 'PIL.ImageSequence', 'PIL.PngImagePlugin', 'matplotlib._path', 'matplotlib.bezier', 'matplotlib.path', 'matplotlib.transforms', 'matplotlib.ticker', 'matplotlib.scale', 'matplotlib._color_data', 'matplotlib.colors', 'pyparsing.util', 'pyparsing.unicode', 'pyparsing.exceptions', 'pyparsing.actions', 'pyparsing.results', 'pyparsing.core', 'pyparsing.helpers', 'pyparsing.testing', 'pyparsing.common', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib._enums', 'cycler', 'matplotlib.rcsetup', 'matplotlib.ft2font', 'kiwisolver']
2023-04-22 12:34:34,932 [18232] DEBUG    matplotlib:275: [JupyterRequire] CACHEDIR=C:\Users\adity\.matplotlib
2023-04-22 12:34:34,938 [18232] DEBUG    matplotlib.font_manager:1439: [JupyterRequire] Using fontManager instance from C:\Users\adity\.matplotlib\fontlist-v330.json
2023-04-22 12:34:35,263 [18232] DEBUG    matplotlib.pyplot:280: [JupyterRequire] Loaded backend module://matplotlib_inline.backend_inline version unknown.
2023-04-22 12:34:35,266 [18232] DEBUG    matplotlib.pyplot:280: [JupyterRequire] Loaded backend module://matplotlib_inline.backend_inline version unknown.
2023-04-22 12:41:17,292 [18232] DEBUG    matplotlib.font_manager:1329: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2023-04-22 12:41:17,293 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 12:41:17,294 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 12:41:17,294 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,294 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2023-04-22 12:41:17,295 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2023-04-22 12:41:17,295 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:41:17,295 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:41:17,295 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:41:17,295 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,295 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 12:41:17,296 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,296 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:41:17,296 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,297 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,297 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,297 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:41:17,297 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:41:17,297 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,298 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,298 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2023-04-22 12:41:17,298 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,298 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,298 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 12:41:17,299 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:41:17,299 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:41:17,299 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,299 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,299 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:41:17,299 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:41:17,300 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,300 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,300 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,300 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:41:17,300 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,301 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:41:17,301 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,301 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,301 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2023-04-22 12:41:17,301 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLSNECB.TTF', name='Gill Sans MT Ext Condensed Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-22 12:41:17,302 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanz.ttf', name='Constantia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 12:41:17,302 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LEELAWAD.TTF', name='Leelawadee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,302 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\monbaiti.ttf', name='Mongolian Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,302 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-MEDIUM.TTF', name='Dubai', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-04-22 12:41:17,302 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-04-22 12:41:17,302 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FTLTLT.TTF', name='Footlight MT Light', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-22 12:41:17,302 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibril.ttf', name='Calibri', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-22 12:41:17,303 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSI.TTF', name='Goudy Old Style', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:41:17,303 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisbi.ttf', name='Segoe UI', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-22 12:41:17,303 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCCB___.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-04-22 12:41:17,303 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXD.TTF', name='Lucida Fax', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-22 12:41:17,303 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2023-04-22 12:41:17,303 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BSSYM7.TTF', name='Bookshelf Symbol 7', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,304 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAMDCN.TTF', name='Franklin Gothic Medium Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-22 12:41:17,304 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framdit.ttf', name='Franklin Gothic Medium', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:41:17,304 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSB.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:41:17,304 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-LIGHT.TTF', name='Dubai', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-22 12:41:17,304 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCC____.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-22 12:41:17,306 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_B.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:41:17,306 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COOPBL.TTF', name='Cooper Black', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,306 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNI.TTF', name='Arial', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 7.613636363636363
2023-04-22 12:41:17,306 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\INFROMAN.TTF', name='Informal Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,306 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSB.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-22 12:41:17,306 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BERNHC.TTF', name='Bernard MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-22 12:41:17,307 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEB.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-22 12:41:17,307 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCEDSCR.TTF', name='Edwardian Script ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,307 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consola.ttf', name='Consolas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,307 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,307 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\holomdl2.ttf', name='HoloLens MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,308 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COLONNA.TTF', name='Colonna MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,308 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYR.TTF', name='Agency FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,308 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRITANIC.TTF', name='Britannic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,308 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiai.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:41:17,308 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:41:17,309 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaS.ttf', name='Nirmala UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2023-04-22 12:41:17,309 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CHILLER.TTF', name='Chiller', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,309 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,309 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAB.TTF', name='Book Antiqua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:41:17,309 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothM.ttc', name='Yu Gothic', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-04-22 12:41:17,309 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG2.TTF', name='Wingdings 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,310 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Nirmala.ttf', name='Nirmala UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,310 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelUIsl.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2023-04-22 12:41:17,310 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriai.ttf', name='Cambria', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:41:17,310 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariali.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
2023-04-22 12:41:17,311 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARA.TTF', name='Garamond', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,311 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSPCL.TTF', name='MS Reference Specialty', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,311 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-REGULAR.TTF', name='Dubai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,311 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LHANDW.TTF', name='Lucida Handwriting', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:41:17,311 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:41:17,311 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comici.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:41:17,313 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTAUR.TTF', name='Centaur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,313 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEBO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-22 12:41:17,313 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ONYX.TTF', name='Onyx', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,313 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrima.ttf', name='Ebrima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,314 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFI.TTF', name='Californian FB', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:41:17,314 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERBI___.TTF', name='Perpetua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 12:41:17,314 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbell.ttf', name='Corbel', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-22 12:41:17,314 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILI____.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:41:17,315 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segmdl2.ttf', name='Segoe MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,315 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-BOLD.TTF', name='Dubai', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:41:17,315 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FELIXTI.TTF', name='Felix Titling', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,315 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbd.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
2023-04-22 12:41:17,315 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taileb.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:41:17,315 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeprb.ttf', name='Segoe Print', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:41:17,316 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoescb.ttf', name='Segoe Script', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:41:17,316 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITE.TTF', name='Lucida Bright', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,316 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhbd.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:41:17,316 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\times.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,316 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisb.ttf', name='Segoe UI', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-22 12:41:17,316 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSDB.TTF', name='Berlin Sans FB Demi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:41:17,318 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbi.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
2023-04-22 12:41:17,318 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesi.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:41:17,318 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADM.TTF', name='Franklin Gothic Demi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,318 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERTI.TTF', name='High Tower Text', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:41:17,319 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF-Italic.ttf', name='Sitka', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:41:17,319 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsun.ttc', name='SimSun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,319 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTI.TTF', name='Calisto MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:41:17,319 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCMI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:41:17,319 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaral.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,320 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\lucon.ttf', name='Lucida Console', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,320 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_I.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:41:17,320 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mvboli.ttf', name='MV Boli', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,320 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiab.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:41:17,320 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\l_10646.ttf', name='Lucida Sans Unicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,321 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTIBD.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:41:17,321 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNT.TTF', name='Elephant', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,321 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASMD.TTF', name='Eras Medium ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,321 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MSUIGHUR.TTF', name='Microsoft Uighur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,322 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYB.TTF', name='Agency FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:41:17,322 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MSUIGHUB.TTF', name='Microsoft Uighur', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:41:17,322 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicbd.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:41:17,322 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMIT.TTF', name='Franklin Gothic Demi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:41:17,323 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKEB.TTF', name='Rockwell Extra Bold', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
2023-04-22 12:41:17,323 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PER_____.TTF', name='Perpetua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,323 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VINERITC.TTF', name='Viner Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,323 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\marlett.ttf', name='Marlett', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-04-22 12:41:17,324 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrili.ttf', name='Calibri', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-04-22 12:41:17,324 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICBI.TTF', name='Century Gothic', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 12:41:17,324 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ALGER.TTF', name='Algerian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,324 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOS.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,324 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelz.ttf', name='Corbel', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 12:41:17,325 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILB____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:41:17,325 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUABI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 12:41:17,325 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\sylfaen.ttf', name='Sylfaen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,325 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriaz.ttf', name='Cambria', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 12:41:17,325 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanaz.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
2023-04-22 12:41:17,327 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constan.ttf', name='Constantia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,327 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTILI.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-22 12:41:17,327 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCM_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,327 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhl.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2023-04-22 12:41:17,327 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOS.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-22 12:41:17,327 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HATTEN.TTF', name='Haettenschweiler', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,328 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JOKERMAN.TTF', name='Jokerman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,328 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ENGR.TTF', name='Engravers MT', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-04-22 12:41:17,328 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARAIT.TTF', name='Garamond', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:41:17,328 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,328 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelli.ttf', name='Corbel', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-04-22 12:41:17,328 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constani.ttf', name='Constantia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:41:17,329 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIST.TTF', name='Calisto MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,329 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PARCHM.TTF', name='Parchment', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,329 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\himalaya.ttf', name='Microsoft Himalaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,329 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRADHITC.TTF', name='Bradley Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,329 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\wingding.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,329 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtextb.ttf', name='Myanmar Text', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:41:17,331 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG3.TTF', name='Wingdings 3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,331 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGSOL.TTF', name='Niagara Solid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,331 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarali.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:41:17,331 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKI.TTF', name='Rockwell', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:41:17,331 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolab.ttf', name='Consolas', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:41:17,332 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXDI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-22 12:41:17,332 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BAUHS93.TTF', name='Bauhaus 93', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,332 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisli.ttf', name='Segoe UI', style='italic', variant='normal', weight=350, stretch='normal', size='scalable')) = 11.0975
2023-04-22 12:41:17,332 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELL.TTF', name='Bell MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,332 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2023-04-22 12:41:17,333 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyi.ttf', name='Microsoft Yi Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,333 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSR.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,333 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHVIT.TTF', name='Franklin Gothic Heavy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:41:17,333 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OLDENGL.TTF', name='Old English Text MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,334 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbel.ttf', name='Corbel', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,334 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLB.TTF', name='Bell MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:41:17,334 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelaUIb.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:41:17,334 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHV.TTF', name='Franklin Gothic Heavy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,334 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OUTLOOK.TTF', name='MS Outlook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,335 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PRISTINA.TTF', name='Pristina', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,335 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERI____.TTF', name='Perpetua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:41:17,335 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtext.ttf', name='Myanmar Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,335 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSAN.TTF', name='MS Reference Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,335 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERB____.TTF', name='Perpetua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:41:17,336 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTEXTRA.TTF', name='MT Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,336 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKB.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:41:17,336 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARABD.TTF', name='Garamond', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:41:17,336 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cour.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,336 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mingliub.ttc', name='MingLiU-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,336 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICB.TTF', name='Century Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:41:17,336 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspa.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,338 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VIVALDII.TTF', name='Vivaldi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:41:17,338 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAGE.TTF', name='Rage Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:41:17,338 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-22 12:41:17,338 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2023-04-22 12:41:17,338 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MATURASC.TTF', name='Matura MT Script Capitals', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,338 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comic.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,339 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbi.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 12:41:17,339 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothR.ttc', name='Yu Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,339 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palai.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:41:17,339 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MOD20.TTF', name='Modern No. 20', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,340 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMCN.TTF', name='Franklin Gothic Demi Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-22 12:41:17,340 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrimabd.ttf', name='Ebrima', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:41:17,340 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\javatext.ttf', name='Javanese Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,340 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CASTELAR.TTF', name='Castellar', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,340 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSDI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-22 12:41:17,341 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelawUI.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,341 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAX.TTF', name='Lucida Fax', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,341 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunbd.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:41:17,341 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF.ttf', name='Sitka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,342 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTL.TTF', name='Copperplate Gothic Light', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,342 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
2023-04-22 12:41:17,342 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeui.ttf', name='Segoe UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,342 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Gabriola.ttf', name='Gabriola', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,342 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTBI.TTF', name='Calisto MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 12:41:17,343 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicz.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 12:41:17,343 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALN.TTF', name='Arial', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 6.613636363636363
2023-04-22 12:41:17,343 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKBI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 12:41:17,343 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FREESCPT.TTF', name='Freestyle Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,344 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTURY.TTF', name='Century', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,344 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaB.ttf', name='Nirmala UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:41:17,344 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSB.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:41:17,344 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSD.TTF', name='Lucida Sans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-22 12:41:17,344 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuisl.ttf', name='Segoe UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2023-04-22 12:41:17,345 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:41:17,345 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 12:41:17,345 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguihis.ttf', name='Segoe UI Historic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,345 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCB____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-04-22 12:41:17,345 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambria.ttc', name='Cambria', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,346 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKBI.TTF', name='Rockwell', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 12:41:17,346 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGENG.TTF', name='Niagara Engraved', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,346 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisym.ttf', name='Segoe UI Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,346 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inkfree.ttf', name='Ink Free', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,346 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASBD.TTF', name='Eras Bold ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,347 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILC____.TTF', name='Gill Sans MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-22 12:41:17,347 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candara.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,347 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\bahnschrift.ttf', name='Bahnschrift', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,347 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BROADW.TTF', name='Broadway', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,347 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolaz.ttf', name='Consolas', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 12:41:17,348 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CBI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2023-04-22 12:41:17,348 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuii.ttf', name='Segoe UI', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:41:17,348 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibli.ttf', name='Segoe UI', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2023-04-22 12:41:17,348 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEDI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-22 12:41:17,348 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucit.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:41:17,350 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BKANT.TTF', name='Book Antiqua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,350 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothL.ttc', name='Yu Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-22 12:41:17,350 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrii.ttf', name='Calibri', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:41:17,350 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CURLZ___.TTF', name='Curlz MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,350 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelb.ttf', name='Corbel', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:41:17,350 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARLRDBD.TTF', name='Arial Rounded MT Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,351 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothB.ttc', name='Yu Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:41:17,351 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASDEMI.TTF', name='Eras Demi ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,351 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
2023-04-22 12:41:17,351 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANS.TTF', name='Lucida Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,352 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariblk.ttf', name='Arial', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 6.888636363636364
2023-04-22 12:41:17,352 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCKRIST.TTF', name='Kristen ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,352 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\KUNSTLER.TTF', name='Kunstler Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,352 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanb.ttf', name='Constantia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:41:17,353 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PAPYRUS.TTF', name='Papyrus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,353 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JUICE___.TTF', name='Juice ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,353 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguili.ttf', name='Segoe UI', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-04-22 12:41:17,353 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:41:17,353 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarab.ttf', name='Candara', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:41:17,355 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\IMPRISHA.TTF', name='Imprint MT Shadow', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,355 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailu.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,355 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbi.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 12:41:17,355 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuil.ttf', name='Segoe UI', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-22 12:41:17,355 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanai.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
2023-04-22 12:41:17,356 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoepr.ttf', name='Segoe Print', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,356 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaraz.ttf', name='Candara', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 12:41:17,356 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNB.TTF', name='Arial', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 6.8986363636363635
2023-04-22 12:41:17,356 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspab.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:41:17,357 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,357 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCM____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-22 12:41:17,357 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARNGTON.TTF', name='Harrington', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,357 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbd.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:41:17,357 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:41:17,357 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILSANUB.TTF', name='Gill Sans Ultra Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,358 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibri.ttf', name='Calibri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,358 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiaz.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 12:41:17,358 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegoeIcons.ttf', name='Segoe Fluent Icons', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,358 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAGNETOB.TTF', name='Magneto', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:41:17,358 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICI.TTF', name='Century Gothic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:41:17,358 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCBLKAD.TTF', name='Blackadder ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,359 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahomabd.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:41:17,359 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugi.ttf', name='Gadugi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,359 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LCALLIG.TTF', name='Lucida Calligraphy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:41:17,359 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyh.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,359 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsunb.ttf', name='SimSun-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,359 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgun.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,361 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIL_____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,361 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VLADIMIR.TTF', name='Vladimir Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,361 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,361 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msgothic.ttc', name='MS Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,362 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRSCRIPT.TTF', name='French Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,362 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILBI___.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 12:41:17,362 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASLGHT.TTF', name='Eras Light ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,362 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTB.TTF', name='Calisto MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:41:17,362 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunsl.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-22 12:41:17,362 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRUSHSCI.TTF', name='Brush Script MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:41:17,362 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SNAP____.TTF', name='Snap ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,363 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuib.ttf', name='Segoe UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:41:17,363 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCBI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 12:41:17,363 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailub.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:41:17,363 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framd.ttf', name='Franklin Gothic Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,363 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolai.ttf', name='Consolas', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:41:17,363 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCEB.TTF', name='Tw Cen MT Condensed Extra Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-22 12:41:17,364 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\POORICH.TTF', name='Poor Richard', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,364 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDYSTO.TTF', name='Goudy Stout', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,364 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKB.TTF', name='Rockwell', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:41:17,364 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PALSCRI.TTF', name='Palace Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,364 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarai.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:41:17,366 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\micross.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,366 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LEELAWDB.TTF', name='Leelawadee', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:41:17,366 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABK.TTF', name='Franklin Gothic Book', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,366 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjh.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,366 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palabi.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 12:41:17,366 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAVIE.TTF', name='Ravie', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,366 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCK.TTF', name='Rockwell', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,367 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\pala.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,367 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibriz.ttf', name='Calibri', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 12:41:17,367 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugib.ttf', name='Gadugi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:41:17,367 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_PSTC.TTF', name='Bodoni MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-22 12:41:17,367 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENSCBK.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,367 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanab.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
2023-04-22 12:41:17,368 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LATINWD.TTF', name='Wide Latin', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
2023-04-22 12:41:17,368 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbeli.ttf', name='Corbel', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:41:17,368 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIGI.TTF', name='Gigi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,368 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITED.TTF', name='Lucida Bright', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-22 12:41:17,368 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbi.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 12:41:17,369 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhl.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2023-04-22 12:41:17,369 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguiemj.ttf', name='Segoe UI Emoji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,369 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OCRAEXT.TTF', name='OCR A Extended', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
2023-04-22 12:41:17,369 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebuc.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,369 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SHOWG.TTF', name='Showcard Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,369 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BASKVILL.TTF', name='Baskerville Old Face', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,369 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriab.ttf', name='Cambria', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:41:17,370 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAIAN.TTF', name='Maiandra GD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,370 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCRIPTBL.TTF', name='Script MT Bold', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:41:17,370 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLECB.TTF', name='Gloucester MT Extra Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-22 12:41:17,370 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNTI.TTF', name='Elephant', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:41:17,370 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFR.TTF', name='Californian FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,370 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHIC.TTF', name='Century Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,370 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PLAYBILL.TTF', name='Playbill', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,372 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABKIT.TTF', name='Franklin Gothic Book', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:41:17,372 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARLOWSI.TTF', name='Harlow Solid Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:41:17,372 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPE.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,372 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taile.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,372 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibl.ttf', name='Segoe UI', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2023-04-22 12:41:17,372 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNBI.TTF', name='Arial', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 7.8986363636363635
2023-04-22 12:41:17,373 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuiz.ttf', name='Segoe UI', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 12:41:17,373 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSBI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-22 12:41:17,373 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palab.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:41:17,373 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLI.TTF', name='Bell MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:41:17,373 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILLUBCD.TTF', name='Gill Sans Ultra Bold Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-22 12:41:17,373 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbd.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:41:17,374 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhbd.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:41:17,374 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoesc.ttf', name='Segoe Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,374 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\couri.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:41:17,374 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegUIVar.ttf', name='Segoe UI Variable', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,374 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_R.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,375 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTB.TTF', name='Copperplate Gothic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,375 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:41:17,375 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCB_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:41:17,375 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TEMPSITC.TTF', name='Tempus Sans ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,375 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MISTRAL.TTF', name='Mistral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,375 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FORTE.TTF', name='Forte', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,375 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CB.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-04-22 12:41:17,376 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbd.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:41:17,376 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STENCIL.TTF', name='Stencil', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,376 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrib.ttf', name='Calibri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:41:17,376 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERT.TTF', name='High Tower Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,376 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTCORSVA.TTF', name='Monotype Corsiva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:41:17,376 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFB.TTF', name='Californian FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:41:17,377 [18232] DEBUG    matplotlib.font_manager:1367: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
2023-04-22 12:43:41,864 [18232] DEBUG    matplotlib.font_manager:1329: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
2023-04-22 12:43:41,865 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 12:43:41,865 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 12:43:41,866 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,866 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2023-04-22 12:43:41,866 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2023-04-22 12:43:41,866 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:43:41,866 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:43:41,868 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:43:41,868 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,868 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 12:43:41,869 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,869 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:43:41,869 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,869 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,870 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,870 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:43:41,870 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:43:41,870 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,870 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,871 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2023-04-22 12:43:41,871 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,871 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,871 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 12:43:41,871 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:43:41,872 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:43:41,872 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,872 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,872 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:43:41,872 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:43:41,873 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,873 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,873 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,873 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:43:41,874 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,874 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:43:41,874 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,874 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,874 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2023-04-22 12:43:41,875 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLSNECB.TTF', name='Gill Sans MT Ext Condensed Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-22 12:43:41,875 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanz.ttf', name='Constantia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 12:43:41,875 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LEELAWAD.TTF', name='Leelawadee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,875 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\monbaiti.ttf', name='Mongolian Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,875 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-MEDIUM.TTF', name='Dubai', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-04-22 12:43:41,876 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-04-22 12:43:41,876 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FTLTLT.TTF', name='Footlight MT Light', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-22 12:43:41,876 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibril.ttf', name='Calibri', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-22 12:43:41,876 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSI.TTF', name='Goudy Old Style', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:43:41,876 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisbi.ttf', name='Segoe UI', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-22 12:43:41,876 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCCB___.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-04-22 12:43:41,878 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXD.TTF', name='Lucida Fax', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-22 12:43:41,878 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2023-04-22 12:43:41,878 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BSSYM7.TTF', name='Bookshelf Symbol 7', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,878 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAMDCN.TTF', name='Franklin Gothic Medium Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-22 12:43:41,879 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framdit.ttf', name='Franklin Gothic Medium', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:43:41,879 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSB.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:43:41,879 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-LIGHT.TTF', name='Dubai', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-22 12:43:41,879 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCC____.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-22 12:43:41,879 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_B.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:43:41,879 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COOPBL.TTF', name='Cooper Black', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,880 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNI.TTF', name='Arial', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 7.613636363636363
2023-04-22 12:43:41,880 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\INFROMAN.TTF', name='Informal Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,880 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSB.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-22 12:43:41,880 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BERNHC.TTF', name='Bernard MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-22 12:43:41,880 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEB.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-22 12:43:41,881 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCEDSCR.TTF', name='Edwardian Script ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,881 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consola.ttf', name='Consolas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,881 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,881 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\holomdl2.ttf', name='HoloLens MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,882 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COLONNA.TTF', name='Colonna MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,882 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYR.TTF', name='Agency FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,882 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRITANIC.TTF', name='Britannic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,882 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiai.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:43:41,882 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:43:41,883 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaS.ttf', name='Nirmala UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2023-04-22 12:43:41,883 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CHILLER.TTF', name='Chiller', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,883 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,883 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAB.TTF', name='Book Antiqua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:43:41,884 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothM.ttc', name='Yu Gothic', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-04-22 12:43:41,884 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG2.TTF', name='Wingdings 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,884 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Nirmala.ttf', name='Nirmala UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,884 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelUIsl.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2023-04-22 12:43:41,884 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriai.ttf', name='Cambria', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:43:41,885 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariali.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
2023-04-22 12:43:41,885 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARA.TTF', name='Garamond', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,885 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSPCL.TTF', name='MS Reference Specialty', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,885 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-REGULAR.TTF', name='Dubai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,885 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LHANDW.TTF', name='Lucida Handwriting', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:43:41,885 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:43:41,885 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comici.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:43:41,886 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTAUR.TTF', name='Centaur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,886 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEBO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-22 12:43:41,887 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ONYX.TTF', name='Onyx', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,887 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrima.ttf', name='Ebrima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,887 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFI.TTF', name='Californian FB', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:43:41,887 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERBI___.TTF', name='Perpetua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 12:43:41,887 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbell.ttf', name='Corbel', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-22 12:43:41,888 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILI____.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:43:41,888 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segmdl2.ttf', name='Segoe MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,888 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-BOLD.TTF', name='Dubai', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:43:41,888 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FELIXTI.TTF', name='Felix Titling', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,889 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbd.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
2023-04-22 12:43:41,889 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taileb.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:43:41,889 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeprb.ttf', name='Segoe Print', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:43:41,889 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoescb.ttf', name='Segoe Script', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:43:41,889 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITE.TTF', name='Lucida Bright', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,890 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhbd.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:43:41,890 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\times.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,890 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisb.ttf', name='Segoe UI', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-22 12:43:41,890 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSDB.TTF', name='Berlin Sans FB Demi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:43:41,890 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbi.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
2023-04-22 12:43:41,891 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesi.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:43:41,891 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADM.TTF', name='Franklin Gothic Demi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,891 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERTI.TTF', name='High Tower Text', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:43:41,891 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF-Italic.ttf', name='Sitka', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:43:41,892 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsun.ttc', name='SimSun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,892 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTI.TTF', name='Calisto MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:43:41,892 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCMI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:43:41,892 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaral.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,892 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\lucon.ttf', name='Lucida Console', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,893 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_I.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:43:41,893 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mvboli.ttf', name='MV Boli', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,893 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiab.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:43:41,893 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\l_10646.ttf', name='Lucida Sans Unicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,893 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTIBD.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:43:41,894 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNT.TTF', name='Elephant', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,894 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASMD.TTF', name='Eras Medium ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,894 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MSUIGHUR.TTF', name='Microsoft Uighur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,894 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYB.TTF', name='Agency FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:43:41,895 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MSUIGHUB.TTF', name='Microsoft Uighur', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:43:41,895 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicbd.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:43:41,895 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMIT.TTF', name='Franklin Gothic Demi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:43:41,895 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKEB.TTF', name='Rockwell Extra Bold', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
2023-04-22 12:43:41,895 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PER_____.TTF', name='Perpetua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,895 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VINERITC.TTF', name='Viner Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,896 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\marlett.ttf', name='Marlett', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-04-22 12:43:41,896 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrili.ttf', name='Calibri', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-04-22 12:43:41,896 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICBI.TTF', name='Century Gothic', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 12:43:41,896 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ALGER.TTF', name='Algerian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,896 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOS.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,896 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelz.ttf', name='Corbel', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 12:43:41,896 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILB____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:43:41,898 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUABI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 12:43:41,898 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\sylfaen.ttf', name='Sylfaen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,898 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriaz.ttf', name='Cambria', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 12:43:41,898 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanaz.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
2023-04-22 12:43:41,898 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constan.ttf', name='Constantia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,898 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTILI.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-22 12:43:41,899 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCM_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,899 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhl.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2023-04-22 12:43:41,899 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOS.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-22 12:43:41,899 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HATTEN.TTF', name='Haettenschweiler', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,899 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JOKERMAN.TTF', name='Jokerman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,899 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ENGR.TTF', name='Engravers MT', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-04-22 12:43:41,900 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARAIT.TTF', name='Garamond', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:43:41,900 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,900 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelli.ttf', name='Corbel', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-04-22 12:43:41,900 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constani.ttf', name='Constantia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:43:41,900 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIST.TTF', name='Calisto MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,900 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PARCHM.TTF', name='Parchment', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,900 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\himalaya.ttf', name='Microsoft Himalaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,900 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRADHITC.TTF', name='Bradley Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,901 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\wingding.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,901 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtextb.ttf', name='Myanmar Text', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:43:41,901 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG3.TTF', name='Wingdings 3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,901 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGSOL.TTF', name='Niagara Solid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,901 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarali.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:43:41,901 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKI.TTF', name='Rockwell', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:43:41,901 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolab.ttf', name='Consolas', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:43:41,903 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXDI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-22 12:43:41,903 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BAUHS93.TTF', name='Bauhaus 93', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,903 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisli.ttf', name='Segoe UI', style='italic', variant='normal', weight=350, stretch='normal', size='scalable')) = 11.0975
2023-04-22 12:43:41,903 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELL.TTF', name='Bell MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,903 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2023-04-22 12:43:41,903 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyi.ttf', name='Microsoft Yi Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,904 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSR.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,904 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHVIT.TTF', name='Franklin Gothic Heavy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:43:41,904 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OLDENGL.TTF', name='Old English Text MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,904 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbel.ttf', name='Corbel', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,904 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLB.TTF', name='Bell MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:43:41,904 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelaUIb.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:43:41,904 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHV.TTF', name='Franklin Gothic Heavy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,905 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OUTLOOK.TTF', name='MS Outlook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,905 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PRISTINA.TTF', name='Pristina', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,905 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERI____.TTF', name='Perpetua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:43:41,905 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtext.ttf', name='Myanmar Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,905 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSAN.TTF', name='MS Reference Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,905 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERB____.TTF', name='Perpetua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:43:41,906 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTEXTRA.TTF', name='MT Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,906 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKB.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:43:41,906 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARABD.TTF', name='Garamond', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:43:41,906 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cour.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,906 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mingliub.ttc', name='MingLiU-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,906 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICB.TTF', name='Century Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:43:41,906 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspa.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,906 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VIVALDII.TTF', name='Vivaldi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:43:41,908 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAGE.TTF', name='Rage Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:43:41,908 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-22 12:43:41,908 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2023-04-22 12:43:41,908 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MATURASC.TTF', name='Matura MT Script Capitals', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,908 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comic.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,908 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbi.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 12:43:41,908 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothR.ttc', name='Yu Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,908 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palai.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:43:41,909 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MOD20.TTF', name='Modern No. 20', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,909 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMCN.TTF', name='Franklin Gothic Demi Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-22 12:43:41,909 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrimabd.ttf', name='Ebrima', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:43:41,909 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\javatext.ttf', name='Javanese Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,909 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CASTELAR.TTF', name='Castellar', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,910 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSDI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-22 12:43:41,910 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelawUI.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,910 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAX.TTF', name='Lucida Fax', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,910 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunbd.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:43:41,910 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF.ttf', name='Sitka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,910 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTL.TTF', name='Copperplate Gothic Light', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,911 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
2023-04-22 12:43:41,911 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeui.ttf', name='Segoe UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,911 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Gabriola.ttf', name='Gabriola', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,911 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTBI.TTF', name='Calisto MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 12:43:41,911 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicz.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 12:43:41,912 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALN.TTF', name='Arial', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 6.613636363636363
2023-04-22 12:43:41,912 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKBI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 12:43:41,912 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FREESCPT.TTF', name='Freestyle Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,912 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTURY.TTF', name='Century', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,912 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaB.ttf', name='Nirmala UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:43:41,913 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSB.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:43:41,913 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSD.TTF', name='Lucida Sans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-22 12:43:41,913 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuisl.ttf', name='Segoe UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2023-04-22 12:43:41,913 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:43:41,913 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 12:43:41,913 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguihis.ttf', name='Segoe UI Historic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,913 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCB____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-04-22 12:43:41,913 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambria.ttc', name='Cambria', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,915 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKBI.TTF', name='Rockwell', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 12:43:41,915 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGENG.TTF', name='Niagara Engraved', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,915 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisym.ttf', name='Segoe UI Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,915 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inkfree.ttf', name='Ink Free', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,915 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASBD.TTF', name='Eras Bold ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,915 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILC____.TTF', name='Gill Sans MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-22 12:43:41,916 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candara.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,916 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\bahnschrift.ttf', name='Bahnschrift', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,916 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BROADW.TTF', name='Broadway', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,916 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolaz.ttf', name='Consolas', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 12:43:41,916 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CBI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2023-04-22 12:43:41,916 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuii.ttf', name='Segoe UI', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:43:41,917 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibli.ttf', name='Segoe UI', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2023-04-22 12:43:41,917 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEDI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-22 12:43:41,917 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucit.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:43:41,917 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BKANT.TTF', name='Book Antiqua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,917 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothL.ttc', name='Yu Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-22 12:43:41,917 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrii.ttf', name='Calibri', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:43:41,918 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CURLZ___.TTF', name='Curlz MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,918 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelb.ttf', name='Corbel', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:43:41,918 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARLRDBD.TTF', name='Arial Rounded MT Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,918 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothB.ttc', name='Yu Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:43:41,918 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASDEMI.TTF', name='Eras Demi ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,919 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
2023-04-22 12:43:41,919 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANS.TTF', name='Lucida Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,919 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariblk.ttf', name='Arial', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 6.888636363636364
2023-04-22 12:43:41,919 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCKRIST.TTF', name='Kristen ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,919 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\KUNSTLER.TTF', name='Kunstler Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,919 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanb.ttf', name='Constantia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:43:41,919 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PAPYRUS.TTF', name='Papyrus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,921 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JUICE___.TTF', name='Juice ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,921 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguili.ttf', name='Segoe UI', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-04-22 12:43:41,921 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:43:41,921 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarab.ttf', name='Candara', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:43:41,921 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\IMPRISHA.TTF', name='Imprint MT Shadow', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,922 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailu.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,922 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbi.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 12:43:41,922 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuil.ttf', name='Segoe UI', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-22 12:43:41,922 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanai.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
2023-04-22 12:43:41,922 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoepr.ttf', name='Segoe Print', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,922 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaraz.ttf', name='Candara', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 12:43:41,923 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNB.TTF', name='Arial', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 6.8986363636363635
2023-04-22 12:43:41,923 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspab.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:43:41,923 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,923 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCM____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-22 12:43:41,923 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARNGTON.TTF', name='Harrington', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,924 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbd.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:43:41,924 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:43:41,924 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILSANUB.TTF', name='Gill Sans Ultra Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,924 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibri.ttf', name='Calibri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,924 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiaz.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 12:43:41,924 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegoeIcons.ttf', name='Segoe Fluent Icons', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,925 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAGNETOB.TTF', name='Magneto', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:43:41,925 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICI.TTF', name='Century Gothic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:43:41,925 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCBLKAD.TTF', name='Blackadder ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,925 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahomabd.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:43:41,925 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugi.ttf', name='Gadugi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,926 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LCALLIG.TTF', name='Lucida Calligraphy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:43:41,926 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyh.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,926 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsunb.ttf', name='SimSun-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,926 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgun.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,926 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIL_____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,927 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VLADIMIR.TTF', name='Vladimir Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,927 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,927 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msgothic.ttc', name='MS Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,927 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRSCRIPT.TTF', name='French Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,927 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILBI___.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 12:43:41,927 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASLGHT.TTF', name='Eras Light ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,928 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTB.TTF', name='Calisto MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:43:41,928 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunsl.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-22 12:43:41,928 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRUSHSCI.TTF', name='Brush Script MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:43:41,928 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SNAP____.TTF', name='Snap ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,928 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuib.ttf', name='Segoe UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:43:41,929 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCBI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 12:43:41,929 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailub.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:43:41,929 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framd.ttf', name='Franklin Gothic Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,929 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolai.ttf', name='Consolas', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:43:41,929 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCEB.TTF', name='Tw Cen MT Condensed Extra Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-22 12:43:41,930 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\POORICH.TTF', name='Poor Richard', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,930 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDYSTO.TTF', name='Goudy Stout', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,930 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKB.TTF', name='Rockwell', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:43:41,930 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PALSCRI.TTF', name='Palace Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,930 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarai.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:43:41,930 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\micross.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,931 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LEELAWDB.TTF', name='Leelawadee', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:43:41,931 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABK.TTF', name='Franklin Gothic Book', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,931 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjh.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,931 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palabi.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 12:43:41,931 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAVIE.TTF', name='Ravie', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,931 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCK.TTF', name='Rockwell', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,932 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\pala.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,932 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibriz.ttf', name='Calibri', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 12:43:41,932 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugib.ttf', name='Gadugi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:43:41,932 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_PSTC.TTF', name='Bodoni MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-22 12:43:41,932 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENSCBK.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,933 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanab.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
2023-04-22 12:43:41,933 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LATINWD.TTF', name='Wide Latin', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
2023-04-22 12:43:41,933 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbeli.ttf', name='Corbel', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:43:41,933 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIGI.TTF', name='Gigi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,933 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITED.TTF', name='Lucida Bright', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-22 12:43:41,933 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbi.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 12:43:41,934 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhl.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2023-04-22 12:43:41,934 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguiemj.ttf', name='Segoe UI Emoji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,934 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OCRAEXT.TTF', name='OCR A Extended', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
2023-04-22 12:43:41,934 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebuc.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,934 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SHOWG.TTF', name='Showcard Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,934 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BASKVILL.TTF', name='Baskerville Old Face', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,935 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriab.ttf', name='Cambria', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:43:41,935 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAIAN.TTF', name='Maiandra GD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,935 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCRIPTBL.TTF', name='Script MT Bold', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:43:41,935 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLECB.TTF', name='Gloucester MT Extra Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-22 12:43:41,935 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNTI.TTF', name='Elephant', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:43:41,935 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFR.TTF', name='Californian FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,935 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHIC.TTF', name='Century Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,935 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PLAYBILL.TTF', name='Playbill', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,937 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABKIT.TTF', name='Franklin Gothic Book', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:43:41,937 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARLOWSI.TTF', name='Harlow Solid Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:43:41,937 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPE.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,937 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taile.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,937 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibl.ttf', name='Segoe UI', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2023-04-22 12:43:41,938 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNBI.TTF', name='Arial', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 7.8986363636363635
2023-04-22 12:43:41,938 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuiz.ttf', name='Segoe UI', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 12:43:41,938 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSBI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-22 12:43:41,938 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palab.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:43:41,938 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLI.TTF', name='Bell MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:43:41,939 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILLUBCD.TTF', name='Gill Sans Ultra Bold Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-22 12:43:41,939 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbd.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:43:41,939 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhbd.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:43:41,939 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoesc.ttf', name='Segoe Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,939 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\couri.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:43:41,939 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegUIVar.ttf', name='Segoe UI Variable', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,939 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_R.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,940 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTB.TTF', name='Copperplate Gothic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,940 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:43:41,940 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCB_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:43:41,940 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TEMPSITC.TTF', name='Tempus Sans ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,940 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MISTRAL.TTF', name='Mistral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,940 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FORTE.TTF', name='Forte', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,940 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CB.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-04-22 12:43:41,940 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbd.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:43:41,940 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STENCIL.TTF', name='Stencil', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,940 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrib.ttf', name='Calibri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:43:41,940 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERT.TTF', name='High Tower Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,942 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTCORSVA.TTF', name='Monotype Corsiva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,942 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFB.TTF', name='Californian FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:43:41,942 [18232] DEBUG    matplotlib.font_manager:1367: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to DejaVu Sans ('C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
2023-04-22 12:43:41,946 [18232] DEBUG    matplotlib.font_manager:1329: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2023-04-22 12:43:41,947 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 12:43:41,947 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 12:43:41,947 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,947 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2023-04-22 12:43:41,948 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2023-04-22 12:43:41,948 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:43:41,948 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:43:41,948 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:43:41,948 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,948 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 12:43:41,949 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,949 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:43:41,949 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,949 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,949 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,950 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:43:41,950 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:43:41,950 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,950 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,950 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2023-04-22 12:43:41,951 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,951 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,951 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 12:43:41,951 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:43:41,951 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:43:41,951 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,951 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,953 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:43:41,953 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:43:41,953 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,953 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,953 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,954 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:43:41,954 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,954 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:43:41,954 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,954 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,954 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2023-04-22 12:43:41,955 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLSNECB.TTF', name='Gill Sans MT Ext Condensed Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-22 12:43:41,955 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanz.ttf', name='Constantia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 12:43:41,955 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LEELAWAD.TTF', name='Leelawadee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,955 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\monbaiti.ttf', name='Mongolian Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,955 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-MEDIUM.TTF', name='Dubai', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-04-22 12:43:41,956 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-04-22 12:43:41,956 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FTLTLT.TTF', name='Footlight MT Light', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-22 12:43:41,956 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibril.ttf', name='Calibri', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-22 12:43:41,956 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSI.TTF', name='Goudy Old Style', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:43:41,956 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisbi.ttf', name='Segoe UI', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-22 12:43:41,957 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCCB___.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-04-22 12:43:41,957 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXD.TTF', name='Lucida Fax', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-22 12:43:41,957 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2023-04-22 12:43:41,957 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BSSYM7.TTF', name='Bookshelf Symbol 7', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,957 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAMDCN.TTF', name='Franklin Gothic Medium Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-22 12:43:41,957 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framdit.ttf', name='Franklin Gothic Medium', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:43:41,958 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSB.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:43:41,958 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-LIGHT.TTF', name='Dubai', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-22 12:43:41,958 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCC____.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-22 12:43:41,958 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_B.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:43:41,958 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COOPBL.TTF', name='Cooper Black', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,959 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNI.TTF', name='Arial', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 7.613636363636363
2023-04-22 12:43:41,959 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\INFROMAN.TTF', name='Informal Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,959 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSB.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-22 12:43:41,959 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BERNHC.TTF', name='Bernard MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-22 12:43:41,959 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEB.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-22 12:43:41,960 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCEDSCR.TTF', name='Edwardian Script ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,960 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consola.ttf', name='Consolas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,960 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,960 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\holomdl2.ttf', name='HoloLens MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,960 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COLONNA.TTF', name='Colonna MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,961 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYR.TTF', name='Agency FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,961 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRITANIC.TTF', name='Britannic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,961 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiai.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:43:41,961 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:43:41,961 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaS.ttf', name='Nirmala UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2023-04-22 12:43:41,961 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CHILLER.TTF', name='Chiller', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,961 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,961 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAB.TTF', name='Book Antiqua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:43:41,962 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothM.ttc', name='Yu Gothic', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-04-22 12:43:41,962 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG2.TTF', name='Wingdings 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,962 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Nirmala.ttf', name='Nirmala UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,962 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelUIsl.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2023-04-22 12:43:41,962 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriai.ttf', name='Cambria', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:43:41,962 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariali.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
2023-04-22 12:43:41,962 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARA.TTF', name='Garamond', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,963 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSPCL.TTF', name='MS Reference Specialty', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,963 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-REGULAR.TTF', name='Dubai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,963 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LHANDW.TTF', name='Lucida Handwriting', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:43:41,963 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:43:41,963 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comici.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:43:41,964 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTAUR.TTF', name='Centaur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,964 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEBO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-22 12:43:41,964 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ONYX.TTF', name='Onyx', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,964 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrima.ttf', name='Ebrima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,964 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFI.TTF', name='Californian FB', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:43:41,965 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERBI___.TTF', name='Perpetua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 12:43:41,965 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbell.ttf', name='Corbel', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-22 12:43:41,965 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILI____.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:43:41,965 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segmdl2.ttf', name='Segoe MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,965 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-BOLD.TTF', name='Dubai', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:43:41,966 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FELIXTI.TTF', name='Felix Titling', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,966 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbd.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
2023-04-22 12:43:41,966 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taileb.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:43:41,966 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeprb.ttf', name='Segoe Print', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:43:41,966 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoescb.ttf', name='Segoe Script', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:43:41,966 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITE.TTF', name='Lucida Bright', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,966 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhbd.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:43:41,966 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\times.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,968 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisb.ttf', name='Segoe UI', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-22 12:43:41,968 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSDB.TTF', name='Berlin Sans FB Demi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:43:41,968 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbi.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
2023-04-22 12:43:41,968 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesi.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:43:41,968 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADM.TTF', name='Franklin Gothic Demi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,968 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERTI.TTF', name='High Tower Text', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:43:41,969 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF-Italic.ttf', name='Sitka', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:43:41,969 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsun.ttc', name='SimSun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,969 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTI.TTF', name='Calisto MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:43:41,969 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCMI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:43:41,969 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaral.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,970 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\lucon.ttf', name='Lucida Console', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,970 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_I.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:43:41,970 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mvboli.ttf', name='MV Boli', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,970 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiab.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:43:41,970 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\l_10646.ttf', name='Lucida Sans Unicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,971 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTIBD.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:43:41,971 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNT.TTF', name='Elephant', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,971 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASMD.TTF', name='Eras Medium ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,971 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MSUIGHUR.TTF', name='Microsoft Uighur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,971 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYB.TTF', name='Agency FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:43:41,971 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MSUIGHUB.TTF', name='Microsoft Uighur', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:43:41,972 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicbd.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:43:41,972 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMIT.TTF', name='Franklin Gothic Demi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:43:41,972 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKEB.TTF', name='Rockwell Extra Bold', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
2023-04-22 12:43:41,972 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PER_____.TTF', name='Perpetua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,972 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VINERITC.TTF', name='Viner Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,972 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\marlett.ttf', name='Marlett', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-04-22 12:43:41,972 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrili.ttf', name='Calibri', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-04-22 12:43:41,973 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICBI.TTF', name='Century Gothic', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 12:43:41,973 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ALGER.TTF', name='Algerian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,973 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOS.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,973 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelz.ttf', name='Corbel', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 12:43:41,973 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILB____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:43:41,973 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUABI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 12:43:41,974 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\sylfaen.ttf', name='Sylfaen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,974 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriaz.ttf', name='Cambria', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 12:43:41,974 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanaz.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
2023-04-22 12:43:41,974 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constan.ttf', name='Constantia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,974 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTILI.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-22 12:43:41,975 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCM_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,975 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhl.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2023-04-22 12:43:41,975 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOS.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-22 12:43:41,975 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HATTEN.TTF', name='Haettenschweiler', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,975 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JOKERMAN.TTF', name='Jokerman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,975 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ENGR.TTF', name='Engravers MT', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-04-22 12:43:41,976 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARAIT.TTF', name='Garamond', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:43:41,976 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,976 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelli.ttf', name='Corbel', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-04-22 12:43:41,976 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constani.ttf', name='Constantia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:43:41,976 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIST.TTF', name='Calisto MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,977 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PARCHM.TTF', name='Parchment', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,977 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\himalaya.ttf', name='Microsoft Himalaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,977 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRADHITC.TTF', name='Bradley Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,977 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\wingding.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,977 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtextb.ttf', name='Myanmar Text', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:43:41,977 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG3.TTF', name='Wingdings 3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,979 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGSOL.TTF', name='Niagara Solid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,979 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarali.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:43:41,979 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKI.TTF', name='Rockwell', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:43:41,979 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolab.ttf', name='Consolas', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:43:41,979 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXDI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-22 12:43:41,979 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BAUHS93.TTF', name='Bauhaus 93', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,979 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisli.ttf', name='Segoe UI', style='italic', variant='normal', weight=350, stretch='normal', size='scalable')) = 11.0975
2023-04-22 12:43:41,979 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELL.TTF', name='Bell MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,980 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2023-04-22 12:43:41,980 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyi.ttf', name='Microsoft Yi Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,980 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSR.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,980 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHVIT.TTF', name='Franklin Gothic Heavy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:43:41,980 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OLDENGL.TTF', name='Old English Text MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,981 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbel.ttf', name='Corbel', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,981 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLB.TTF', name='Bell MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:43:41,981 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelaUIb.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:43:41,981 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHV.TTF', name='Franklin Gothic Heavy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,981 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OUTLOOK.TTF', name='MS Outlook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,982 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PRISTINA.TTF', name='Pristina', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,982 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERI____.TTF', name='Perpetua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:43:41,982 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtext.ttf', name='Myanmar Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,982 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSAN.TTF', name='MS Reference Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,982 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERB____.TTF', name='Perpetua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:43:41,983 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTEXTRA.TTF', name='MT Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,983 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKB.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:43:41,983 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARABD.TTF', name='Garamond', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:43:41,983 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cour.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,983 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mingliub.ttc', name='MingLiU-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,983 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICB.TTF', name='Century Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:43:41,984 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspa.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,984 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VIVALDII.TTF', name='Vivaldi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:43:41,984 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAGE.TTF', name='Rage Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:43:41,984 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-22 12:43:41,984 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2023-04-22 12:43:41,985 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MATURASC.TTF', name='Matura MT Script Capitals', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,985 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comic.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,985 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbi.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 12:43:41,986 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothR.ttc', name='Yu Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,986 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palai.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:43:41,986 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MOD20.TTF', name='Modern No. 20', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,986 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMCN.TTF', name='Franklin Gothic Demi Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-22 12:43:41,986 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrimabd.ttf', name='Ebrima', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:43:41,987 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\javatext.ttf', name='Javanese Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,987 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CASTELAR.TTF', name='Castellar', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,987 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSDI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-22 12:43:41,987 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelawUI.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,987 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAX.TTF', name='Lucida Fax', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,987 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunbd.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:43:41,988 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF.ttf', name='Sitka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,988 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTL.TTF', name='Copperplate Gothic Light', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,988 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
2023-04-22 12:43:41,988 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeui.ttf', name='Segoe UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,988 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Gabriola.ttf', name='Gabriola', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,989 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTBI.TTF', name='Calisto MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 12:43:41,989 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicz.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 12:43:41,989 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALN.TTF', name='Arial', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 6.613636363636363
2023-04-22 12:43:41,989 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKBI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 12:43:41,989 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FREESCPT.TTF', name='Freestyle Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,990 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTURY.TTF', name='Century', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,990 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaB.ttf', name='Nirmala UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:43:41,990 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSB.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:43:41,990 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSD.TTF', name='Lucida Sans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-22 12:43:41,990 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuisl.ttf', name='Segoe UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2023-04-22 12:43:41,990 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:43:41,990 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 12:43:41,990 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguihis.ttf', name='Segoe UI Historic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,991 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCB____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-04-22 12:43:41,991 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambria.ttc', name='Cambria', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,991 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKBI.TTF', name='Rockwell', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 12:43:41,992 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGENG.TTF', name='Niagara Engraved', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,992 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisym.ttf', name='Segoe UI Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,992 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inkfree.ttf', name='Ink Free', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,992 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASBD.TTF', name='Eras Bold ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,992 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILC____.TTF', name='Gill Sans MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-22 12:43:41,992 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candara.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,992 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\bahnschrift.ttf', name='Bahnschrift', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,992 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BROADW.TTF', name='Broadway', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,993 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolaz.ttf', name='Consolas', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 12:43:41,994 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CBI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2023-04-22 12:43:41,994 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuii.ttf', name='Segoe UI', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:43:41,994 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibli.ttf', name='Segoe UI', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2023-04-22 12:43:41,994 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEDI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-22 12:43:41,994 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucit.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:43:41,994 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BKANT.TTF', name='Book Antiqua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,995 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothL.ttc', name='Yu Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-22 12:43:41,995 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrii.ttf', name='Calibri', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:43:41,995 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CURLZ___.TTF', name='Curlz MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,995 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelb.ttf', name='Corbel', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:43:41,995 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARLRDBD.TTF', name='Arial Rounded MT Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,995 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothB.ttc', name='Yu Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:43:41,996 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASDEMI.TTF', name='Eras Demi ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,996 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
2023-04-22 12:43:41,996 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANS.TTF', name='Lucida Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,996 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariblk.ttf', name='Arial', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 6.888636363636364
2023-04-22 12:43:41,996 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCKRIST.TTF', name='Kristen ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,996 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\KUNSTLER.TTF', name='Kunstler Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,996 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanb.ttf', name='Constantia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:43:41,996 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PAPYRUS.TTF', name='Papyrus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,997 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JUICE___.TTF', name='Juice ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,997 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguili.ttf', name='Segoe UI', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-04-22 12:43:41,997 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:43:41,997 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarab.ttf', name='Candara', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:43:41,997 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\IMPRISHA.TTF', name='Imprint MT Shadow', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,997 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailu.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,997 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbi.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 12:43:41,997 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuil.ttf', name='Segoe UI', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-22 12:43:41,999 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanai.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
2023-04-22 12:43:41,999 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoepr.ttf', name='Segoe Print', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:41,999 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaraz.ttf', name='Candara', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 12:43:41,999 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNB.TTF', name='Arial', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 6.8986363636363635
2023-04-22 12:43:41,999 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspab.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:43:41,999 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:42,000 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCM____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-22 12:43:42,000 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARNGTON.TTF', name='Harrington', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:42,000 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbd.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:43:42,000 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:43:42,000 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILSANUB.TTF', name='Gill Sans Ultra Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:42,000 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibri.ttf', name='Calibri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:42,001 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiaz.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 12:43:42,001 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegoeIcons.ttf', name='Segoe Fluent Icons', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:42,001 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAGNETOB.TTF', name='Magneto', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:43:42,001 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICI.TTF', name='Century Gothic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:43:42,001 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCBLKAD.TTF', name='Blackadder ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:42,001 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahomabd.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:43:42,001 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugi.ttf', name='Gadugi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:42,002 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LCALLIG.TTF', name='Lucida Calligraphy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:43:42,002 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyh.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:42,002 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsunb.ttf', name='SimSun-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:42,002 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgun.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:42,002 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIL_____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:42,002 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VLADIMIR.TTF', name='Vladimir Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:42,003 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:42,003 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msgothic.ttc', name='MS Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:42,003 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRSCRIPT.TTF', name='French Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:42,003 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILBI___.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 12:43:42,003 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASLGHT.TTF', name='Eras Light ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:42,003 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTB.TTF', name='Calisto MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:43:42,003 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunsl.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-22 12:43:42,003 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRUSHSCI.TTF', name='Brush Script MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:43:42,005 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SNAP____.TTF', name='Snap ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:42,005 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuib.ttf', name='Segoe UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:43:42,005 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCBI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 12:43:42,005 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailub.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:43:42,005 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framd.ttf', name='Franklin Gothic Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:42,006 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolai.ttf', name='Consolas', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:43:42,006 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCEB.TTF', name='Tw Cen MT Condensed Extra Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-22 12:43:42,006 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\POORICH.TTF', name='Poor Richard', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:42,006 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDYSTO.TTF', name='Goudy Stout', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:42,006 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKB.TTF', name='Rockwell', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:43:42,006 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PALSCRI.TTF', name='Palace Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:42,006 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarai.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:43:42,007 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\micross.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:42,007 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LEELAWDB.TTF', name='Leelawadee', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:43:42,007 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABK.TTF', name='Franklin Gothic Book', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:42,007 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjh.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:42,007 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palabi.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 12:43:42,007 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAVIE.TTF', name='Ravie', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:42,008 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCK.TTF', name='Rockwell', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:42,008 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\pala.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:42,008 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibriz.ttf', name='Calibri', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 12:43:42,008 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugib.ttf', name='Gadugi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:43:42,008 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_PSTC.TTF', name='Bodoni MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-04-22 12:43:42,008 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENSCBK.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:42,009 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanab.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
2023-04-22 12:43:42,010 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LATINWD.TTF', name='Wide Latin', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
2023-04-22 12:43:42,010 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbeli.ttf', name='Corbel', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:43:42,010 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIGI.TTF', name='Gigi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:42,010 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITED.TTF', name='Lucida Bright', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-04-22 12:43:42,010 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbi.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 12:43:42,010 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhl.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2023-04-22 12:43:42,011 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguiemj.ttf', name='Segoe UI Emoji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:42,011 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OCRAEXT.TTF', name='OCR A Extended', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
2023-04-22 12:43:42,011 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebuc.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:42,011 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SHOWG.TTF', name='Showcard Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:42,011 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BASKVILL.TTF', name='Baskerville Old Face', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:42,011 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriab.ttf', name='Cambria', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:43:42,011 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAIAN.TTF', name='Maiandra GD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:42,012 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCRIPTBL.TTF', name='Script MT Bold', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:43:42,012 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLECB.TTF', name='Gloucester MT Extra Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-22 12:43:42,012 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNTI.TTF', name='Elephant', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:43:42,012 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFR.TTF', name='Californian FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:42,012 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHIC.TTF', name='Century Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:42,012 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PLAYBILL.TTF', name='Playbill', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:42,012 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABKIT.TTF', name='Franklin Gothic Book', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:43:42,013 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARLOWSI.TTF', name='Harlow Solid Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:43:42,013 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPE.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:42,013 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taile.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:42,013 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibl.ttf', name='Segoe UI', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2023-04-22 12:43:42,013 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNBI.TTF', name='Arial', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 7.8986363636363635
2023-04-22 12:43:42,013 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuiz.ttf', name='Segoe UI', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-04-22 12:43:42,013 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSBI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-04-22 12:43:42,013 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palab.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:43:42,013 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLI.TTF', name='Bell MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:43:42,015 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILLUBCD.TTF', name='Gill Sans Ultra Bold Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-04-22 12:43:42,015 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbd.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:43:42,015 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhbd.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:43:42,015 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoesc.ttf', name='Segoe Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:42,015 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\couri.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:43:42,015 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegUIVar.ttf', name='Segoe UI Variable', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:42,015 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_R.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:42,015 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTB.TTF', name='Copperplate Gothic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:42,016 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-04-22 12:43:42,016 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCB_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:43:42,016 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TEMPSITC.TTF', name='Tempus Sans ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:42,016 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MISTRAL.TTF', name='Mistral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:42,016 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FORTE.TTF', name='Forte', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:42,016 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CB.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-04-22 12:43:42,017 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbd.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:43:42,017 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STENCIL.TTF', name='Stencil', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:42,017 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrib.ttf', name='Calibri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:43:42,017 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERT.TTF', name='High Tower Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:42,017 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTCORSVA.TTF', name='Monotype Corsiva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-04-22 12:43:42,017 [18232] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFB.TTF', name='Californian FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-04-22 12:43:42,019 [18232] DEBUG    matplotlib.font_manager:1367: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('C:\\Users\\adity\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
2023-04-22 12:43:46,941 [18232] DEBUG    matplotlib.colorbar:847: [JupyterRequire] locator: <matplotlib.ticker.AutoLocator object at 0x0000025A0D5D8D00>
2023-04-22 12:45:20,936 [20716] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-04-22 12:45:20,936 [20716] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-04-22 12:45:20,937 [20716] INFO     root:247: [JupyterRequire] Initializing comms.
2023-04-22 12:45:20,939 [20716] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-04-22 12:45:20,940 [20716] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-04-22 12:45:20,940 [20716] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-04-22 12:46:17,554 [22288] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-04-22 12:46:17,555 [22288] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-04-22 12:46:17,555 [22288] INFO     root:247: [JupyterRequire] Initializing comms.
2023-04-22 12:46:17,557 [22288] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-04-22 12:46:17,558 [22288] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-04-22 12:46:17,558 [22288] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-04-22 12:51:36,715 [5960] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-04-22 12:51:36,715 [5960] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-04-22 12:51:36,715 [5960] INFO     root:247: [JupyterRequire] Initializing comms.
2023-04-22 12:51:36,717 [5960] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-04-22 12:51:36,718 [5960] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-04-22 12:51:36,718 [5960] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-04-22 13:17:27,953 [5960] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-04-22 13:17:27,954 [5960] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-04-22 13:17:27,954 [5960] INFO     root:247: [JupyterRequire] Initializing comms.
2023-04-22 13:17:27,957 [5960] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-04-22 13:17:27,957 [5960] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-04-22 13:17:27,958 [5960] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-04-22 13:51:42,485 [5960] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-04-22 13:51:42,486 [5960] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-04-22 13:51:42,486 [5960] INFO     root:247: [JupyterRequire] Initializing comms.
2023-04-22 13:51:42,491 [5960] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-04-22 13:51:42,492 [5960] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-04-22 13:51:42,493 [5960] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-04-22 14:38:33,570 [5960] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-04-22 14:38:33,570 [5960] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-04-22 14:38:33,570 [5960] INFO     root:247: [JupyterRequire] Initializing comms.
2023-04-22 14:38:33,574 [5960] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-04-22 14:38:33,574 [5960] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-04-22 14:38:33,574 [5960] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-04-22 15:36:24,544 [5960] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-04-22 15:36:24,545 [5960] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-04-22 15:36:24,546 [5960] INFO     root:247: [JupyterRequire] Initializing comms.
2023-04-22 15:36:24,550 [5960] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-04-22 15:36:24,551 [5960] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-04-22 15:36:24,552 [5960] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-04-22 18:44:22,607 [5960] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-04-22 18:44:22,609 [5960] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-04-22 18:44:22,609 [5960] INFO     root:247: [JupyterRequire] Initializing comms.
2023-04-22 18:44:22,614 [5960] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-04-22 18:44:22,616 [5960] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-04-22 18:44:22,617 [5960] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-04-24 15:43:53,833 [9564] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-04-24 15:43:53,834 [9564] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-04-24 15:43:53,835 [9564] INFO     root:247: [JupyterRequire] Initializing comms.
2023-04-24 15:43:53,840 [9564] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-04-24 15:43:53,841 [9564] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-04-24 15:43:53,841 [9564] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-04-24 15:43:54,639 [9564] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-04-24 15:43:54,639 [9564] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-04-24 15:43:54,640 [9564] INFO     root:247: [JupyterRequire] Initializing comms.
2023-04-24 15:43:54,641 [9564] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-04-24 15:43:54,643 [9564] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-04-24 15:43:54,643 [9564] DEBUG    root:97: [JupyterRequire] Registering comm targets.
